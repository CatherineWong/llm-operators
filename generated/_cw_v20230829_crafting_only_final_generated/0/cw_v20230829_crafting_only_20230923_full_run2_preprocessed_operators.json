{"craft-beetroot-soup_0": "(:action craft-beetroot-soup_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Beetroot)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Bowl)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target BeetrootSoup)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Beetroot))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Bowl))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "craft-paper_0": "(:action craft-paper_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 SugarCane)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Paper)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 SugarCane))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)", "craft-paper_1": "(:action craft-paper_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Sheep)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Paper)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Sheep))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)", "craft-paper_2": "(:action craft-paper_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 SugarCanePlant)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Paper)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 SugarCanePlant))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)", "craft-shears1_0": "(:action craft-shears1_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station ToolStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 IronIngot)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 IronIngot)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Shears)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 IronIngot))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 IronIngot))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "craft-shears1_1": "(:action craft-shears1_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station ToolStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 IronIngot)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Cobblestone)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Shears)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 IronIngot))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Cobblestone))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "craft-shears1_2": "(:action craft-shears1_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station ToolStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Cobblestone)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Cobblestone)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Shears)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Cobblestone))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Cobblestone))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "craft-shears2_0": "(:action craft-shears2_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station ToolStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 IronIngot)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 IronIngot)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Shears)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 IronIngot))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 IronIngot))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "craft-shears2_1": "(:action craft-shears2_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station ToolStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 IronIngot)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Shears)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 IronIngot))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)", "craft-shears2_2": "(:action craft-shears2_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station ToolStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 GoldIngot)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Shears)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 GoldIngot))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)", "craft-stick1_0": "(:action craft-stick1_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Stick)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)", "craft-stick1_1": "(:action craft-stick1_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Wood)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Stick)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Wood))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "craft-stick1_2": "(:action craft-stick1_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Wood)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Axe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Stick)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Wood))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Axe))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "craft-bowl_0": "(:action craft-bowl_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bowl)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)", "craft-bowl_1": "(:action craft-bowl_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bowl)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 WoodPlank))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "craft-bowl_2": "(:action craft-bowl_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bowl)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "craft-sword1_0": "(:action craft-sword1_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?ingredientinv3 - inventory ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WeaponStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Stick)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 IronIngot)\n\t\t(inventory-holding ?ingredientinv3 ?ingredient2)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Sword)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (inventory-holding ?ingredientinv3 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv3)\n\t\t)\n)", "craft-sword1_1": "(:action craft-sword1_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredientinv3 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WeaponStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Stick)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient1)\n\t\t(inventory-holding ?ingredientinv3 ?ingredient2)\n\t\t(object-of-type ?ingredient2 IronIngot)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Sword)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (inventory-holding ?ingredientinv3 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv3)\n\t\t)\n)", "craft-sword1_2": "(:action craft-sword1_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredientinv3 - inventory ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WeaponStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Stick)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient1)\n\t\t(inventory-holding ?ingredientinv3 ?ingredient1)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Sword)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (inventory-holding ?ingredientinv3 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv3)\n\t\t)\n)", "craft-bed1_0": "(:action craft-bed1_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BedStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bed)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)", "craft-bed1_1": "(:action craft-bed1_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BedStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Wood)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Wood)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bed)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Wood))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Wood))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "craft-bed1_2": "(:action craft-bed1_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BedStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bed)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 WoodPlank))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "craft-boat_0": "(:action craft-boat_0\n        :parameters (?t - tile ?station - object ?ingredientinv - inventory ?ingredient - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BoatStation)\n\t\t(inventory-holding ?ingredientinv ?ingredient)\n\t\t(object-of-type ?ingredient WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Boat)\n\t\t(not (inventory-holding ?ingredientinv ?ingredient))\n\t\t(inventory-empty ?ingredientinv)\n\t\t(not (object-of-type ?ingredient WoodPlank))\n\t\t(object-of-type ?ingredient Hypothetical)\n\t\t)\n)", "craft-boat_1": "(:action craft-boat_1\n        :parameters (?t - tile ?station - object ?ingredientinv - inventory ?ingredient - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BoatStation)\n\t\t(inventory-holding ?ingredientinv ?ingredient)\n\t\t(object-of-type ?ingredient Wood)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Boat)\n\t\t(not (inventory-holding ?ingredientinv ?ingredient))\n\t\t(inventory-empty ?ingredientinv)\n\t\t(not (object-of-type ?ingredient Wood))\n\t\t(object-of-type ?ingredient Hypothetical)\n\t\t)\n)", "craft-boat_2": "(:action craft-boat_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BoatStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Wood)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Boat)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Wood))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "craft-bowl1_0": "(:action craft-bowl1_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bowl)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 WoodPlank))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "craft-bowl1_1": "(:action craft-bowl1_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Wood)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Stick)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bowl)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Wood))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Stick))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "craft-bowl1_2": "(:action craft-bowl1_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Wood)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Cobblestone)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bowl)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Wood))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Cobblestone))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "cook_0": "(:action cook_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Potato)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target CookedPotato)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Potato))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)", "cook_1": "(:action cook_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Potato)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Potato)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target CookedPotato)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Potato))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Potato))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "cook_2": "(:action cook_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Potato)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target CookedPotato)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Potato))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "craft-cooked-potato_0": "(:action craft-cooked-potato_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Potato)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target CookedPotato)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Potato))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)", "craft-cooked-potato_1": "(:action craft-cooked-potato_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Potato)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target CookedPotato)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Potato))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "craft-cooked-potato_2": "(:action craft-cooked-potato_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Potato)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Potato)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target CookedPotato)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Potato))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Potato))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "craft-iron-ingot_0": "(:action craft-iron-ingot_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 IronOre)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 IronOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "craft-iron-ingot_1": "(:action craft-iron-ingot_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 IronOre)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 IronOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)", "craft-iron-ingot_2": "(:action craft-iron-ingot_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 IronOre)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 IronOre)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 IronOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 IronOre))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "smelt-iron-ore_0": "(:action smelt-iron-ore_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station Furnace)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Coal))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)", "smelt-iron-ore_1": "(:action smelt-iron-ore_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station Furnace)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Coal)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 GoldOre)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Coal))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 GoldOre))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "smelt-iron-ore_2": "(:action smelt-iron-ore_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station Furnace)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Coal)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Coal))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "craft-gold-ingot_0": "(:action craft-gold-ingot_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 GoldOre)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target GoldIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 GoldOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)", "craft-gold-ingot_1": "(:action craft-gold-ingot_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 GoldOre)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target GoldIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 GoldOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "craft-gold-ingot_2": "(:action craft-gold-ingot_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 GoldOre)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 GoldOre)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target GoldIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 GoldOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 GoldOre))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "craft-stick_0": "(:action craft-stick_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Stick)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)", "craft-stick_1": "(:action craft-stick_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Stick)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 WoodPlank))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "craft-stick_2": "(:action craft-stick_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Cobblestone)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Stick)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Cobblestone))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)", "furnace_0": "(:action furnace_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?resultinv - inventory ?result - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station Furnace)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Coal)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 IronIngot)\n\t\t(inventory-empty ?resultinv)\n\t\t(object-of-type ?result Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?resultinv))\n\t\t(inventory-holding ?resultinv ?result)\n\t\t(not (object-of-type ?result Hypothetical))\n\t\t(object-of-type ?result GoldIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Coal))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 IronIngot))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}