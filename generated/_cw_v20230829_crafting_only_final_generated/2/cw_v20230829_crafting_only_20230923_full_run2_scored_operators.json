{"('craft-beetroot-soup_0', '(:action craft-beetroot-soup_0\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station FoodStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Beetroot)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 Bowl)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target BeetrootSoup)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 Beetroot))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 Bowl))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [10.1, 10.1], "('craft-paper_0', '(:action craft-paper_0\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WorkStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 SugarCane)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Paper)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 SugarCane))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t)\\n)')": [13.1, 13.1], "('craft-paper_1', '(:action craft-paper_1\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WorkStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Sheep)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Paper)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 Sheep))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-paper_2', '(:action craft-paper_2\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WorkStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 SugarCanePlant)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Paper)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 SugarCanePlant))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-shears1_0', '(:action craft-shears1_0\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station ToolStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 IronIngot)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 IronIngot)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Shears)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 IronIngot))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 IronIngot))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-shears1_1', '(:action craft-shears1_1\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station ToolStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 IronIngot)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 Cobblestone)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Shears)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 IronIngot))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 Cobblestone))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-shears1_2', '(:action craft-shears1_2\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station ToolStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Cobblestone)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 Cobblestone)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Shears)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 Cobblestone))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 Cobblestone))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-shears2_0', '(:action craft-shears2_0\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station ToolStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 IronIngot)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 IronIngot)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Shears)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 IronIngot))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 IronIngot))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-shears2_1', '(:action craft-shears2_1\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station ToolStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 IronIngot)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Shears)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 IronIngot))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-shears2_2', '(:action craft-shears2_2\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station ToolStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 GoldIngot)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Shears)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 GoldIngot))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t)\\n)')": [4.1, 4.1], "('craft-stick1_0', '(:action craft-stick1_0\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WorkStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 WoodPlank)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Stick)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 WoodPlank))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-stick1_1', '(:action craft-stick1_1\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WorkStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Wood)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Stick)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 Wood))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-stick1_2', '(:action craft-stick1_2\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WorkStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Wood)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 Axe)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Stick)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 Wood))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 Axe))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-bowl_0', '(:action craft-bowl_0\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WorkStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 WoodPlank)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Bowl)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 WoodPlank))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-bowl_1', '(:action craft-bowl_1\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WorkStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 WoodPlank)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 WoodPlank)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Bowl)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 WoodPlank))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 WoodPlank))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [9.1, 9.1], "('craft-bowl_2', '(:action craft-bowl_2\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WorkStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 WoodPlank)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Bowl)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 WoodPlank))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-sword1_0', '(:action craft-sword1_0\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?ingredientinv3 - inventory ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WeaponStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Stick)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 IronIngot)\\n\\t\\t(inventory-holding ?ingredientinv3 ?ingredient2)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Sword)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (inventory-holding ?ingredientinv3 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv3)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-sword1_1', '(:action craft-sword1_1\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredientinv3 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WeaponStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Stick)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient1)\\n\\t\\t(inventory-holding ?ingredientinv3 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 IronIngot)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Sword)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (inventory-holding ?ingredientinv3 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv3)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-sword1_2', '(:action craft-sword1_2\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredientinv3 - inventory ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WeaponStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Stick)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient1)\\n\\t\\t(inventory-holding ?ingredientinv3 ?ingredient1)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Sword)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (inventory-holding ?ingredientinv3 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv3)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-boat_0', '(:action craft-boat_0\\n        :parameters (?t - tile ?station - object ?ingredientinv - inventory ?ingredient - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station BoatStation)\\n\\t\\t(inventory-holding ?ingredientinv ?ingredient)\\n\\t\\t(object-of-type ?ingredient WoodPlank)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Boat)\\n\\t\\t(not (inventory-holding ?ingredientinv ?ingredient))\\n\\t\\t(inventory-empty ?ingredientinv)\\n\\t\\t(not (object-of-type ?ingredient WoodPlank))\\n\\t\\t(object-of-type ?ingredient Hypothetical)\\n\\t\\t)\\n)')": [7.1, 7.1], "('craft-boat_1', '(:action craft-boat_1\\n        :parameters (?t - tile ?station - object ?ingredientinv - inventory ?ingredient - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station BoatStation)\\n\\t\\t(inventory-holding ?ingredientinv ?ingredient)\\n\\t\\t(object-of-type ?ingredient Wood)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Boat)\\n\\t\\t(not (inventory-holding ?ingredientinv ?ingredient))\\n\\t\\t(inventory-empty ?ingredientinv)\\n\\t\\t(not (object-of-type ?ingredient Wood))\\n\\t\\t(object-of-type ?ingredient Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-boat_2', '(:action craft-boat_2\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station BoatStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 WoodPlank)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 Wood)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Boat)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 WoodPlank))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 Wood))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-bowl1_0', '(:action craft-bowl1_0\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WorkStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 WoodPlank)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 WoodPlank)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Bowl)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 WoodPlank))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 WoodPlank))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-bowl1_1', '(:action craft-bowl1_1\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WorkStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Wood)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 Stick)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Bowl)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 Wood))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 Stick))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-bowl1_2', '(:action craft-bowl1_2\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WorkStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Wood)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 Cobblestone)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Bowl)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 Wood))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 Cobblestone))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('cook_0', '(:action cook_0\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station FoodStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Potato)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target CookedPotato)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 Potato))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('cook_1', '(:action cook_1\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station FoodStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Potato)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 Potato)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target CookedPotato)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 Potato))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 Potato))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('cook_2', '(:action cook_2\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station FoodStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Potato)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 Coal)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target CookedPotato)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 Potato))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 Coal))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-cooked-potato_1', '(:action craft-cooked-potato_1\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station FoodStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Potato)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 Coal)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target CookedPotato)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 Potato))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 Coal))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [9.1, 9.1], "('craft-iron-ingot_0', '(:action craft-iron-ingot_0\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WorkStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 IronOre)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target IronIngot)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 IronOre))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-gold-ingot_0', '(:action craft-gold-ingot_0\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WorkStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 GoldOre)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target GoldIngot)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 GoldOre))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-gold-ingot_1', '(:action craft-gold-ingot_1\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WorkStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 GoldOre)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 Coal)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target GoldIngot)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 GoldOre))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 Coal))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [5.1, 5.1], "('craft-gold-ingot_2', '(:action craft-gold-ingot_2\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WorkStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 GoldOre)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 GoldOre)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target GoldIngot)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 GoldOre))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 GoldOre))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-stick_0', '(:action craft-stick_0\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WorkStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 WoodPlank)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Stick)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 WoodPlank))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t)\\n)')": [8.1, 8.1], "('craft-stick_1', '(:action craft-stick_1\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WorkStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 WoodPlank)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 WoodPlank)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Stick)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 WoodPlank))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 WoodPlank))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-stick_2', '(:action craft-stick_2\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WorkStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 WoodPlank)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 Cobblestone)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Stick)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 WoodPlank))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 Cobblestone))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('pick-up', '(:action pick-up\\n  :parameters (?i - inventory ?x - object ?t - tile)\\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\\n )')": [180.1, 180.1], "('move-to', '(:action move-to\\n  :parameters (?t1 - tile ?t2 - tile)\\n  :precondition (and (agent-at ?t1))\\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\\n )')": [287.1, 287.1], "('craft-arrow', '(:action craft-arrow\\n  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)\\n  :precondition (and\\n    (agent-at ?t)\\n    (object-at ?station ?t)\\n    (object-of-type ?station WeaponStation)\\n    (inventory-holding ?ingredientinv1 ?ingredient1)\\n    (object-of-type ?ingredient1 Stick)\\n    (inventory-holding ?ingredientinv2 ?ingredient2)\\n    (object-of-type ?ingredient2 Feather)\\n    (inventory-empty ?targetinv)\\n    (object-of-type ?target Hypothetical)\\n  )\\n  :effect (and\\n    (not (inventory-empty ?targetinv))\\n    (inventory-holding ?targetinv ?target)\\n    (not (object-of-type ?target Hypothetical))\\n    (object-of-type ?target Arrow)\\n    (not (inventory-holding ?ingredientinv1 ?ingredient1))\\n    (inventory-empty ?ingredientinv1)\\n    (not (object-of-type ?ingredient1 Stick))\\n    (object-of-type ?ingredient1 Hypothetical)\\n    (not (inventory-holding ?ingredientinv2 ?ingredient2))\\n    (inventory-empty ?ingredientinv2)\\n    (not (object-of-type ?ingredient2 Feather))\\n    (object-of-type ?ingredient2 Hypothetical)\\n  )\\n )')": [8.1, 8.1], "('craft-wood-plank', '(:action craft-wood-plank\\n  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)\\n  :precondition (and\\n    (agent-at ?t)\\n    (object-at ?station ?t)\\n    (object-of-type ?station WorkStation)\\n    (inventory-holding ?ingredientinv1 ?ingredient1)\\n    (object-of-type ?ingredient1 Wood)\\n    (inventory-empty ?targetinv)\\n    (object-of-type ?target Hypothetical)\\n  )\\n  :effect (and\\n    (not (inventory-empty ?targetinv))\\n    (inventory-holding ?targetinv ?target)\\n    (not (object-of-type ?target Hypothetical))\\n    (object-of-type ?target WoodPlank)\\n    (not (inventory-holding ?ingredientinv1 ?ingredient1))\\n    (inventory-empty ?ingredientinv1)\\n    (not (object-of-type ?ingredient1 Wood))\\n    (object-of-type ?ingredient1 Hypothetical)\\n  )\\n )')": [8.1, 8.1], "('craft-sword_0', '(:action craft-sword_0\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WeaponStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Stick)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 IronIngot)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Sword)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 Stick))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 IronIngot))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [6.1, 6.1], "('craft-sword_1', '(:action craft-sword_1\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WeaponStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Stick)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Sword)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 Stick))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-sword_2', '(:action craft-sword_2\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WeaponStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Stick)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 Stick)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Sword)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 Stick))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 Stick))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-bed_0', '(:action craft-bed_0\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station BedStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 WoodPlank)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 Wool)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Bed)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 WoodPlank))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 Wool))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-bed_1', '(:action craft-bed_1\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station BedStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 WoodPlank)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 Wool)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Bed)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 WoodPlank))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 Wool))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [9.1, 9.1], "('craft-bed_2', '(:action craft-bed_2\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station BedStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 WoodPlank)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 Wool)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Bed)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 WoodPlank))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 Wool))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('smelt-iron-ore_2', '(:action smelt-iron-ore_2\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station Furnace)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 IronOre)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 GoldOre)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target IronIngot)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 IronOre))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 GoldOre))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-iron-ingot_1', '(:action craft-iron-ingot_1\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station Furnace)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 GoldOre)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target IronIngot)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 GoldOre))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-iron-ingot_2', '(:action craft-iron-ingot_2\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station Furnace)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 IronOre)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 Coal)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target IronIngot)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 IronOre))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 Coal))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [4.1, 4.1], "('smelt-iron_0', '(:action smelt-iron_0\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station Furnace)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 IronOre)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target IronIngot)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 IronOre))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('smelt-iron_1', '(:action smelt-iron_1\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station Furnace)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 IronOre)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 IronOre)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target IronIngot)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 IronOre))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 IronOre))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 0.1], "('craft-bed1_0', '(:action craft-bed1_0\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station BedStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 WoodPlank)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Bed)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 WoodPlank))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 1.1], "('craft-bed1_1', '(:action craft-bed1_1\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station BedStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Wood)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 Wood)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Bed)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 Wood))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 Wood))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 1.1], "('craft-cooked-potato_2', '(:action craft-cooked-potato_2\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station FoodStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Potato)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 Potato)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target CookedPotato)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 Potato))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 Potato))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 1.1], "('smelt-iron-ore_1', '(:action smelt-iron-ore_1\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station Furnace)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Coal)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 GoldOre)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target IronIngot)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 Coal))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 GoldOre))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 1.1], "('furnace_0', '(:action furnace_0\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?resultinv - inventory ?result - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station Furnace)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Coal)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 IronIngot)\\n\\t\\t(inventory-empty ?resultinv)\\n\\t\\t(object-of-type ?result Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?resultinv))\\n\\t\\t(inventory-holding ?resultinv ?result)\\n\\t\\t(not (object-of-type ?result Hypothetical))\\n\\t\\t(object-of-type ?result GoldIngot)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 Coal))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 IronIngot))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 1.1], "('smelt-iron-ore_0', '(:action smelt-iron-ore_0\\n        :parameters (?t - tile ?station - object ?ingredientinv - inventory ?ingredient - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station Furnace)\\n\\t\\t(inventory-holding ?ingredientinv ?ingredient)\\n\\t\\t(object-of-type ?ingredient IronOre)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target IronIngot)\\n\\t\\t(not (inventory-holding ?ingredientinv ?ingredient))\\n\\t\\t(inventory-empty ?ingredientinv)\\n\\t\\t(not (object-of-type ?ingredient IronOre))\\n\\t\\t(object-of-type ?ingredient Hypothetical)\\n\\t\\t)\\n)')": [0.1, 1.1], "('smelt-iron-ore_1', '(:action smelt-iron-ore_1\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station Furnace)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 IronOre)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 Coal)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target IronIngot)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 IronOre))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 Coal))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 1.1], "('craft-iron-ingot_0', '(:action craft-iron-ingot_0\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station Furnace)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 IronOre)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target IronIngot)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 IronOre))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 1.1], "('melt-iron-ore_0', '(:action melt-iron-ore_0\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station Furnace)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Coal)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 IronOre)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target IronIngot)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 Coal))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 IronOre))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 1.1], "('craft-bed1_2', '(:action craft-bed1_2\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station BedStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 WoodPlank)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 WoodPlank)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target Bed)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 WoodPlank))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 WoodPlank))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 2.1], "('craft-cooked-potato_0', '(:action craft-cooked-potato_0\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station FoodStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Potato)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target CookedPotato)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 Potato))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 2.1], "('craft-iron-ingot_1', '(:action craft-iron-ingot_1\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WorkStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 IronOre)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target IronIngot)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 IronOre))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 2.1], "('craft-iron-ingot_2', '(:action craft-iron-ingot_2\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station WorkStation)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 IronOre)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 IronOre)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target IronIngot)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 IronOre))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 IronOre))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 2.1], "('smelt-iron-ore_0', '(:action smelt-iron-ore_0\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station Furnace)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Coal)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target IronIngot)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 Coal))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 2.1], "('smelt-iron-ore_2', '(:action smelt-iron-ore_2\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station Furnace)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 Coal)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 Coal)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target IronIngot)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 Coal))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 Coal))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 2.1], "('smelt-iron_2', '(:action smelt-iron_2\\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\\n\\n        :precondition (and \\n\\t\\t(agent-at ?t)\\n\\t\\t(object-at ?station ?t)\\n\\t\\t(object-of-type ?station Furnace)\\n\\t\\t(inventory-holding ?ingredientinv1 ?ingredient1)\\n\\t\\t(object-of-type ?ingredient1 IronOre)\\n\\t\\t(inventory-holding ?ingredientinv2 ?ingredient2)\\n\\t\\t(object-of-type ?ingredient2 Coal)\\n\\t\\t(inventory-empty ?targetinv)\\n\\t\\t(object-of-type ?target Hypothetical)\\n\\t\\t)\\n        :effect (and \\n\\t\\t(not (inventory-empty ?targetinv))\\n\\t\\t(inventory-holding ?targetinv ?target)\\n\\t\\t(not (object-of-type ?target Hypothetical))\\n\\t\\t(object-of-type ?target IronIngot)\\n\\t\\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\\n\\t\\t(inventory-empty ?ingredientinv1)\\n\\t\\t(not (object-of-type ?ingredient1 IronOre))\\n\\t\\t(object-of-type ?ingredient1 Hypothetical)\\n\\t\\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\\n\\t\\t(inventory-empty ?ingredientinv2)\\n\\t\\t(not (object-of-type ?ingredient2 Coal))\\n\\t\\t(object-of-type ?ingredient2 Hypothetical)\\n\\t\\t)\\n)')": [0.1, 2.1]}