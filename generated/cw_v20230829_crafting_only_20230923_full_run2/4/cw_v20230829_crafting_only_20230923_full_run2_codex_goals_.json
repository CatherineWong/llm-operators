{"train_7": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a beetroot soup.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o1 - object) (exists (?o2 - object) (and (inventory-holding ?i ?o1) (inventory-holding ?i ?o2) (object-of-type ?o1 Beetroot) (object-of-type ?o2 Bowl)) )))\n )\n\n<END>"]}, "train_8": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a stick.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Stick)) ))\n )\n\n<END>"]}, "train_9": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a beetroot soup.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o BeetrootSoup)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a beetroot soup.\n", "codex_output": ["PDDL Goal:\n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o BeetrootSoup)) ))\n)"]}, "train_12": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   i1 - inventory\n   o22 - object\n   i2 - inventory\n   o23 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a bowl.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bowl)) ))\n )"]}, "train_15": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a beetroot soup.\n", "codex_output": ["(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o BeetrootSoup)) ))\n )"]}, "train_19": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a boat.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Boat)) ))\n )"]}, "train_21": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a bowl.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bowl)) ))\n )"]}, "train_25": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   i1 - inventory\n   o22 - object\n   i2 - inventory\n   o23 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a cooked potato.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o CookedPotato)) ))\n )"]}, "train_26": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a cooked potato.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o CookedPotato)) ))\n )"]}, "train_28": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a cooked potato.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o CookedPotato)) ))\n )"]}, "train_30": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a cooked potato.\n", "codex_output": ["PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o CookedPotato)) ))\n )"]}, "train_32": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   i1 - inventory\n   o22 - object\n   i2 - inventory\n   o23 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a beetroot soup.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o BeetrootSoup)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a bowl.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bowl)) ))\n )\n<END>"]}, "train_35": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a beetroot soup.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o BeetrootSoup)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a boat.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Boat)) ))\n )"]}, "train_36": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a beetroot soup.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o BeetrootSoup)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a boat.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Boat)) ))\n )\n"]}, "train_37": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a stick.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Stick)) ))\n )\n\n<END>"]}, "train_38": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   i1 - inventory\n   o22 - object\n   i2 - inventory\n   o23 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a beetroot soup.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o BeetrootSoup)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a beetroot soup.\n", "codex_output": ["PDDL Goal: \n\n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o BeetrootSoup)) ))\n )"]}, "train_40": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   i1 - inventory\n   o22 - object\n   i2 - inventory\n   o23 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a beetroot soup.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o BeetrootSoup)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a beetroot soup.\n", "codex_output": ["PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o BeetrootSoup)) ))\n )"]}, "train_43": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   i1 - inventory\n   o22 - object\n   i2 - inventory\n   o23 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a beetroot soup.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o1 - object) (exists (?o2 - object) (exists (?o3 - object) (exists (?o4 - object) (and (inventory-holding ?i ?o1) (inventory-holding ?i ?o2) (inventory-holding ?i ?o3) (inventory-holding ?i ?o4) (object-of-type ?o1 Beetroot) (object-of-type ?o2 Beetroot) (object-of-type ?o3 Beetroot) (object-of-type ?o4 Bowl) (and (object-of-type ?o3 Beetroot) (object-of-type ?o4 Bowl))))))))\n )"]}, "train_44": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a bowl.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bowl)) ))\n )\n\n<END>"]}, "train_46": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a beetroot soup.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o BeetrootSoup)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a bowl.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bowl)) ))\n )\n\n<END>"]}, "train_48": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a bowl.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bowl)) ))\n )"]}, "train_52": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a boat.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Boat)) ))\n )"]}, "train_59": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a beetroot soup.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o BeetrootSoup)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a cooked potato.\n", "codex_output": ["PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o CookedPotato)) ))\n )"]}, "train_63": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   i1 - inventory\n   o22 - object\n   i2 - inventory\n   o23 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a cooked potato.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o CookedPotato)) ))\n )"]}, "train_65": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a boat.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Boat)) ))\n )"]}, "train_67": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a stick.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Stick)) ))\n )"]}, "train_69": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a beetroot soup.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o BeetrootSoup)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a beetroot soup.\n", "codex_output": ["PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o BeetrootSoup)) ))\n )"]}, "train_70": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a beetroot soup.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o BeetrootSoup)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a stick.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Stick)) ))\n )"]}, "train_75": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a beetroot soup.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o BeetrootSoup)) ))\n )\n\n<END>"]}, "train_78": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   i1 - inventory\n   o22 - object\n   i2 - inventory\n   o23 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a beetroot soup.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o BeetrootSoup)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a boat.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Boat)) ))\n )"]}, "train_81": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a beetroot soup.\n", "codex_output": ["PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o BeetrootSoup)) ))\n )"]}, "train_84": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   i1 - inventory\n   o22 - object\n   i2 - inventory\n   o23 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a stick.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Stick)) ))\n )"]}, "train_85": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a bowl.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bowl)) ))\n )"]}, "train_88": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a boat.\n", "codex_output": ["PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Boat)) ))\n )"]}, "train_89": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   i1 - inventory\n   o22 - object\n   i2 - inventory\n   o23 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a stick.\n", "codex_output": ["PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Stick)) ))\n )"]}, "train_90": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a cooked potato.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (and (inventory-holding ?i Potato) (inventory-holding ?i Furnace) (inventory-holding ?i Coal) ))\n )"]}, "train_93": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   i1 - inventory\n   o22 - object\n   i2 - inventory\n   o23 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a beetroot soup.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o BeetrootSoup)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a bowl.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bowl)) ))\n )"]}, "train_95": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   i1 - inventory\n   o22 - object\n   i2 - inventory\n   o23 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a beetroot soup.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o BeetrootSoup)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a stick.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Stick)) ))\n )"]}, "train_96": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a bowl.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bowl)) ))\n )"]}, "train_97": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   o22 - object\n   i1 - inventory\n   o23 - object\n   i2 - inventory\n   o24 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a stick.\n", "codex_output": ["PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Stick)) ))\n )"]}, "train_98": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   i1 - inventory\n   o22 - object\n   i2 - inventory\n   o23 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a gold ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o GoldIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a beetroot soup.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o BeetrootSoup)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a cooked potato.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o CookedPotato)) ))\n )"]}, "train_99": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404-teleport)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   o16 - object\n   o17 - object\n   o18 - object\n   o19 - object\n   o20 - object\n   o21 - object\n   i1 - inventory\n   o22 - object\n   i2 - inventory\n   o23 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a iron ingot.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o IronIngot)) ))\n )\n\n<END>\n;; Goal: \nCraft a arrow.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Arrow)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a sword.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Sword)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a paper.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Paper)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a shears.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Shears)) ))\n )\n\n<END>\n;; Goal: \nCraft a wood plank.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o WoodPlank)) ))\n )\n\n<END>\n;; Goal: \nCraft a bed.\n\n\n\n\n;; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o Bed)) ))\n )\n\n<END>\n\n\n\n;; Goal: \nCraft a cooked potato.\n", "codex_output": [";; PDDL Goal: \n(:goal\n   (exists (?i - inventory) (exists (?o - object) (and (inventory-holding ?i ?o) (object-of-type ?o CookedPotato)) ))\n )"]}}