{"mine-wood": "(:action mine-wood\n        :parameters (??t - tile ??target - object ??targetinv - inventory ??tool - object ??toolinv - inventory ??x - object ?Axe - object-type ?Hypothetical - object-type ?Tree - object-type ?Wood - object-type)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x Tree)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Axe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Wood)\n\t\t)\n)", "mine-wool1": "(:action mine-wool1\n        :parameters (??t - tile ??target - object ??targetinv - inventory ??tool - object ??toolinv - inventory ??x - object ?Hypothetical - object-type ?Shears - object-type ?Sheep - object-type ?Wool - object-type)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x Sheep)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Shears)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Wool)\n\t\t)\n)", "mine-potato": "(:action mine-potato\n        :parameters (??t - tile ??target - object ??targetinv - inventory ??tool - object ??toolinv - inventory ??x - object ?Hoe - object-type ?Hypothetical - object-type ?Potato - object-type ?PotatoPlant - object-type)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x PotatoPlant)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Hoe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Potato)\n\t\t)\n)", "mine-sugar-cane": "(:action mine-sugar-cane\n        :parameters (??t - tile ??target - object ??targetinv - inventory ??tool - object ??toolinv - inventory ?Axe - object-type ?Hypothetical - object-type ?SugarCane - object-type)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Axe)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target SugarCane)\n\t\t)\n)", "mine-wool2": "(:action mine-wool2\n        :parameters (??inv - inventory ??inv2 - inventory ??t - tile ??target - object ??tool - object ?Hypothetical - object-type ?Shears - object-type ?Wool - object-type)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(inventory-holding ?inv ?tool)\n\t\t(object-of-type ?tool Shears)\n\t\t(inventory-empty ?inv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?inv2))\n\t\t(inventory-holding ?inv2 ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Wool)\n\t\t)\n)", "fit-boat": "(:action fit-boat\n        :parameters (??x - object ??x1 - object ??x2 - object ??x3 - object ??x4 - object ??x5 - object ??x6 - object ?Boat - object-type ?BoatStation - object-type ?Cobblestone - object-type)\n\n        :precondition (and \n\t\t(object-of-type ?x BoatStation)\n\t\t(object-of-type ?x1 Cobblestone)\n\t\t(object-of-type ?x2 Cobblestone)\n\t\t(object-of-type ?x3 Cobblestone)\n\t\t(object-of-type ?x4 Cobblestone)\n\t\t(object-of-type ?x5 Cobblestone)\n\t\t(object-of-type ?x6 Cobblestone)\n\t\t)\n        :effect (and \n\t\t(object-of-type ?x Boat)\n\t\t)\n)", "float-boat": "(:action fit-boat\n        :parameters (??x - object ??x1 - object ??x2 - object ??x3 - object ??x4 - object ??x5 - object ??x6 - object ?Boat - object-type ?BoatStation - object-type ?Cobblestone - object-type)\n\n        :precondition (and \n\t\t(object-of-type ?x BoatStation)\n\t\t(object-of-type ?x1 Cobblestone)\n\t\t(object-of-type ?x2 Cobblestone)\n\t\t(object-of-type ?x3 Cobblestone)\n\t\t(object-of-type ?x4 Cobblestone)\n\t\t(object-of-type ?x5 Cobblestone)\n\t\t(object-of-type ?x6 Cobblestone)\n\t\t)\n        :effect (and \n\t\t(object-of-type ?x Boat)\n\t\t)\n)", "come-ashore": "(:action come-ashore\n        :parameters (??t1 - tile ??t2 - tile)\n\n        :precondition (and \n\t\t(agent-at ?t1)\n\t\t(tile-up ?t1 ?t2)\n\t\t)\n        :effect (and \n\t\t(agent-at ?t2)\n\t\t(not (agent-at ?t1))\n\t\t)\n)", "mine-sugar": "(:action mine-sugar\n        :parameters (??t - tile ??target - object ??targetinv - inventory ??tool - object ??toolinv - inventory ?Hypothetical - object-type ?Shears - object-type ?SugarCane - object-type)\n\n        :precondition (and \n\t\t(inventory-empty ?targetinv)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(agent-at ?t)\n\t\t(object-at ?tool ?t)\n\t\t(object-of-type ?tool Shears)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(inventory-holding ?targetinv ?target)\n\t\t(object-of-type ?target SugarCane)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t)\n)", "mine-gold-ore": "(:action mine-gold-ore\n        :parameters (??t - tile ??target - object ??targetinv - inventory ??tool - object ??toolinv - inventory ??x - object ?GoldOre - object-type ?GoldOreVein - object-type ?Hypothetical - object-type ?Pickaxe - object-type)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x GoldOreVein)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Pickaxe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target GoldOre)\n\t\t)\n)"}