operator_name,gt_operator,operator_body,n_operator_successes,n_operator_attempts,score,
craft-beetroot-soup_0,"(:action craft-beetroot-soup
  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station FoodStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 Beetroot)
    (inventory-holding ?ingredientinv2 ?ingredient2)
    (object-of-type ?ingredient2 Bowl)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target BeetrootSoup)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 Beetroot))
    (object-of-type ?ingredient1 Hypothetical)
    (not (inventory-holding ?ingredientinv2 ?ingredient2))
    (inventory-empty ?ingredientinv2)
    (not (object-of-type ?ingredient2 Bowl))
    (object-of-type ?ingredient2 Hypothetical)
  )
 )","(:action craft-beetroot-soup_0
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station FoodStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Beetroot)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 Bowl)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target BeetrootSoup)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 Beetroot))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 Bowl))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",10.1,10.1,1.0,
craft-paper_0,"(:action craft-paper
  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station WorkStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 SugarCane)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Paper)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 SugarCane))
    (object-of-type ?ingredient1 Hypothetical)
  )
 )","(:action craft-paper_0
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WorkStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 SugarCane)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Paper)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 SugarCane))
		(object-of-type ?ingredient1 Hypothetical)
		)
)",13.1,13.1,1.0,
craft-paper_1,"(:action craft-paper
  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station WorkStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 SugarCane)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Paper)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 SugarCane))
    (object-of-type ?ingredient1 Hypothetical)
  )
 )","(:action craft-paper_1
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WorkStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Sheep)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Paper)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 Sheep))
		(object-of-type ?ingredient1 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-paper_2,"(:action craft-paper
  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station WorkStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 SugarCane)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Paper)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 SugarCane))
    (object-of-type ?ingredient1 Hypothetical)
  )
 )","(:action craft-paper_2
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WorkStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 SugarCanePlant)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Paper)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 SugarCanePlant))
		(object-of-type ?ingredient1 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-shears1_0,"(:action craft-shears1
  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station ToolStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 IronIngot)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Shears)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 IronIngot))
    (object-of-type ?ingredient1 Hypothetical)
  )
 )","(:action craft-shears1_0
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station ToolStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 IronIngot)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 IronIngot)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Shears)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 IronIngot))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 IronIngot))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-shears1_1,"(:action craft-shears1
  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station ToolStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 IronIngot)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Shears)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 IronIngot))
    (object-of-type ?ingredient1 Hypothetical)
  )
 )","(:action craft-shears1_1
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station ToolStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 IronIngot)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 Cobblestone)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Shears)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 IronIngot))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 Cobblestone))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-shears1_2,"(:action craft-shears1
  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station ToolStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 IronIngot)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Shears)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 IronIngot))
    (object-of-type ?ingredient1 Hypothetical)
  )
 )","(:action craft-shears1_2
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station ToolStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Cobblestone)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 Cobblestone)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Shears)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 Cobblestone))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 Cobblestone))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-shears2_0,"(:action craft-shears2
  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station ToolStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 GoldIngot)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Shears)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 GoldIngot))
    (object-of-type ?ingredient1 Hypothetical)
  )
 )","(:action craft-shears2_0
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station ToolStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 IronIngot)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 IronIngot)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Shears)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 IronIngot))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 IronIngot))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-shears2_1,"(:action craft-shears2
  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station ToolStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 GoldIngot)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Shears)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 GoldIngot))
    (object-of-type ?ingredient1 Hypothetical)
  )
 )","(:action craft-shears2_1
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station ToolStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 IronIngot)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Shears)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 IronIngot))
		(object-of-type ?ingredient1 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-shears2_2,"(:action craft-shears2
  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station ToolStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 GoldIngot)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Shears)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 GoldIngot))
    (object-of-type ?ingredient1 Hypothetical)
  )
 )","(:action craft-shears2_2
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station ToolStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 GoldIngot)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Shears)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 GoldIngot))
		(object-of-type ?ingredient1 Hypothetical)
		)
)",4.1,4.1,1.0,
craft-stick1_0,,"(:action craft-stick1_0
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WorkStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 WoodPlank)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Stick)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 WoodPlank))
		(object-of-type ?ingredient1 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-stick1_1,,"(:action craft-stick1_1
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WorkStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Wood)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Stick)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 Wood))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-stick1_2,,"(:action craft-stick1_2
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WorkStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Wood)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 Axe)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Stick)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 Wood))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 Axe))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-bowl_0,,"(:action craft-bowl_0
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WorkStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 WoodPlank)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Bowl)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 WoodPlank))
		(object-of-type ?ingredient1 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-bowl_1,,"(:action craft-bowl_1
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WorkStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 WoodPlank)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 WoodPlank)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Bowl)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 WoodPlank))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 WoodPlank))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",9.1,9.1,1.0,
craft-bowl_2,,"(:action craft-bowl_2
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WorkStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 WoodPlank)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Bowl)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 WoodPlank))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-sword1_0,,"(:action craft-sword1_0
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?ingredientinv3 - inventory ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WeaponStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Stick)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 IronIngot)
		(inventory-holding ?ingredientinv3 ?ingredient2)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Sword)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (inventory-holding ?ingredientinv3 ?ingredient2))
		(inventory-empty ?ingredientinv3)
		)
)",0.1,0.1,1.0,
craft-sword1_1,,"(:action craft-sword1_1
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredientinv3 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WeaponStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Stick)
		(inventory-holding ?ingredientinv2 ?ingredient1)
		(inventory-holding ?ingredientinv3 ?ingredient2)
		(object-of-type ?ingredient2 IronIngot)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Sword)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (inventory-holding ?ingredientinv2 ?ingredient1))
		(inventory-empty ?ingredientinv2)
		(not (inventory-holding ?ingredientinv3 ?ingredient2))
		(inventory-empty ?ingredientinv3)
		)
)",0.1,0.1,1.0,
craft-sword1_2,,"(:action craft-sword1_2
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredientinv3 - inventory ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WeaponStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Stick)
		(inventory-holding ?ingredientinv2 ?ingredient1)
		(inventory-holding ?ingredientinv3 ?ingredient1)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Sword)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (inventory-holding ?ingredientinv2 ?ingredient1))
		(inventory-empty ?ingredientinv2)
		(not (inventory-holding ?ingredientinv3 ?ingredient1))
		(inventory-empty ?ingredientinv3)
		)
)",0.1,0.1,1.0,
craft-boat_0,"(:action craft-boat
  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station BoatStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 WoodPlank)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Boat)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 WoodPlank))
    (object-of-type ?ingredient1 Hypothetical)
  )
 )","(:action craft-boat_0
        :parameters (?t - tile ?station - object ?ingredientinv - inventory ?ingredient - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station BoatStation)
		(inventory-holding ?ingredientinv ?ingredient)
		(object-of-type ?ingredient WoodPlank)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Boat)
		(not (inventory-holding ?ingredientinv ?ingredient))
		(inventory-empty ?ingredientinv)
		(not (object-of-type ?ingredient WoodPlank))
		(object-of-type ?ingredient Hypothetical)
		)
)",7.1,7.1,1.0,
craft-boat_1,"(:action craft-boat
  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station BoatStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 WoodPlank)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Boat)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 WoodPlank))
    (object-of-type ?ingredient1 Hypothetical)
  )
 )","(:action craft-boat_1
        :parameters (?t - tile ?station - object ?ingredientinv - inventory ?ingredient - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station BoatStation)
		(inventory-holding ?ingredientinv ?ingredient)
		(object-of-type ?ingredient Wood)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Boat)
		(not (inventory-holding ?ingredientinv ?ingredient))
		(inventory-empty ?ingredientinv)
		(not (object-of-type ?ingredient Wood))
		(object-of-type ?ingredient Hypothetical)
		)
)",0.1,0.1,1.0,
craft-boat_2,"(:action craft-boat
  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station BoatStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 WoodPlank)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Boat)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 WoodPlank))
    (object-of-type ?ingredient1 Hypothetical)
  )
 )","(:action craft-boat_2
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station BoatStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 WoodPlank)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 Wood)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Boat)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 WoodPlank))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 Wood))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-bowl1_0,"(:action craft-bowl1
  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station FoodStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 WoodPlank)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Bowl)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 WoodPlank))
    (object-of-type ?ingredient1 Hypothetical)
  )
 )","(:action craft-bowl1_0
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WorkStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 WoodPlank)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 WoodPlank)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Bowl)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 WoodPlank))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 WoodPlank))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-bowl1_1,"(:action craft-bowl1
  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station FoodStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 WoodPlank)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Bowl)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 WoodPlank))
    (object-of-type ?ingredient1 Hypothetical)
  )
 )","(:action craft-bowl1_1
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WorkStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Wood)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 Stick)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Bowl)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 Wood))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 Stick))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-bowl1_2,"(:action craft-bowl1
  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station FoodStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 WoodPlank)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Bowl)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 WoodPlank))
    (object-of-type ?ingredient1 Hypothetical)
  )
 )","(:action craft-bowl1_2
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WorkStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Wood)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 Cobblestone)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Bowl)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 Wood))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 Cobblestone))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
cook_0,,"(:action cook_0
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station FoodStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Potato)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target CookedPotato)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 Potato))
		(object-of-type ?ingredient1 Hypothetical)
		)
)",0.1,0.1,1.0,
cook_1,,"(:action cook_1
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station FoodStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Potato)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 Potato)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target CookedPotato)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 Potato))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 Potato))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
cook_2,,"(:action cook_2
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station FoodStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Potato)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 Coal)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target CookedPotato)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 Potato))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 Coal))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-cooked-potato_1,"(:action craft-cooked-potato
  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station Furnace)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 Potato)
    (inventory-holding ?ingredientinv2 ?ingredient2)
    (object-of-type ?ingredient2 Coal)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target CookedPotato)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 Potato))
    (object-of-type ?ingredient1 Hypothetical)
    (not (inventory-holding ?ingredientinv2 ?ingredient2))
    (inventory-empty ?ingredientinv2)
    (not (object-of-type ?ingredient2 Coal))
    (object-of-type ?ingredient2 Hypothetical)
  )
 )","(:action craft-cooked-potato_1
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station FoodStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Potato)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 Coal)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target CookedPotato)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 Potato))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 Coal))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",9.1,9.1,1.0,
craft-iron-ingot_0,"(:action craft-iron-ingot
  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station Furnace)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 IronOre)
    (inventory-holding ?ingredientinv2 ?ingredient2)
    (object-of-type ?ingredient2 Coal)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target IronIngot)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 IronOre))
    (object-of-type ?ingredient1 Hypothetical)
    (not (inventory-holding ?ingredientinv2 ?ingredient2))
    (inventory-empty ?ingredientinv2)
    (not (object-of-type ?ingredient2 Coal))
    (object-of-type ?ingredient2 Hypothetical)
  )
 )","(:action craft-iron-ingot_0
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WorkStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 IronOre)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target IronIngot)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 IronOre))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-gold-ingot_0,"(:action craft-gold-ingot
  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station Furnace)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 GoldOre)
    (inventory-holding ?ingredientinv2 ?ingredient2)
    (object-of-type ?ingredient2 Coal)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target GoldIngot)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 GoldOre))
    (object-of-type ?ingredient1 Hypothetical)
    (not (inventory-holding ?ingredientinv2 ?ingredient2))
    (inventory-empty ?ingredientinv2)
    (not (object-of-type ?ingredient2 Coal))
    (object-of-type ?ingredient2 Hypothetical)
  )
 )","(:action craft-gold-ingot_0
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WorkStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 GoldOre)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target GoldIngot)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 GoldOre))
		(object-of-type ?ingredient1 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-gold-ingot_1,"(:action craft-gold-ingot
  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station Furnace)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 GoldOre)
    (inventory-holding ?ingredientinv2 ?ingredient2)
    (object-of-type ?ingredient2 Coal)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target GoldIngot)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 GoldOre))
    (object-of-type ?ingredient1 Hypothetical)
    (not (inventory-holding ?ingredientinv2 ?ingredient2))
    (inventory-empty ?ingredientinv2)
    (not (object-of-type ?ingredient2 Coal))
    (object-of-type ?ingredient2 Hypothetical)
  )
 )","(:action craft-gold-ingot_1
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WorkStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 GoldOre)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 Coal)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target GoldIngot)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 GoldOre))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 Coal))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",5.1,5.1,1.0,
craft-gold-ingot_2,"(:action craft-gold-ingot
  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station Furnace)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 GoldOre)
    (inventory-holding ?ingredientinv2 ?ingredient2)
    (object-of-type ?ingredient2 Coal)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target GoldIngot)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 GoldOre))
    (object-of-type ?ingredient1 Hypothetical)
    (not (inventory-holding ?ingredientinv2 ?ingredient2))
    (inventory-empty ?ingredientinv2)
    (not (object-of-type ?ingredient2 Coal))
    (object-of-type ?ingredient2 Hypothetical)
  )
 )","(:action craft-gold-ingot_2
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WorkStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 GoldOre)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 GoldOre)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target GoldIngot)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 GoldOre))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 GoldOre))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-stick_0,"(:action craft-stick
  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station WorkStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 WoodPlank)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Stick)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 WoodPlank))
    (object-of-type ?ingredient1 Hypothetical)
  )
 )","(:action craft-stick_0
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WorkStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 WoodPlank)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Stick)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 WoodPlank))
		(object-of-type ?ingredient1 Hypothetical)
		)
)",8.1,8.1,1.0,
craft-stick_1,"(:action craft-stick
  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station WorkStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 WoodPlank)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Stick)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 WoodPlank))
    (object-of-type ?ingredient1 Hypothetical)
  )
 )","(:action craft-stick_1
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WorkStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 WoodPlank)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 WoodPlank)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Stick)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 WoodPlank))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 WoodPlank))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-stick_2,"(:action craft-stick
  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station WorkStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 WoodPlank)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Stick)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 WoodPlank))
    (object-of-type ?ingredient1 Hypothetical)
  )
 )","(:action craft-stick_2
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WorkStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 WoodPlank)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 Cobblestone)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Stick)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 WoodPlank))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 Cobblestone))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
pick-up,"(:action pick-up
  :parameters (?i - inventory ?x - object ?t - tile)
  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))
  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))
 )","(:action pick-up
  :parameters (?i - inventory ?x - object ?t - tile)
  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))
  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))
 )",180.1,180.1,1.0,
move-to,"(:action move-to
  :parameters (?t1 - tile ?t2 - tile)
  :precondition (and (agent-at ?t1))
  :effect (and (agent-at ?t2) (not (agent-at ?t1)))
 )","(:action move-to
  :parameters (?t1 - tile ?t2 - tile)
  :precondition (and (agent-at ?t1))
  :effect (and (agent-at ?t2) (not (agent-at ?t1)))
 )",287.1,287.1,1.0,
craft-arrow,"(:action craft-arrow
  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station WeaponStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 Stick)
    (inventory-holding ?ingredientinv2 ?ingredient2)
    (object-of-type ?ingredient2 Feather)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Arrow)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 Stick))
    (object-of-type ?ingredient1 Hypothetical)
    (not (inventory-holding ?ingredientinv2 ?ingredient2))
    (inventory-empty ?ingredientinv2)
    (not (object-of-type ?ingredient2 Feather))
    (object-of-type ?ingredient2 Hypothetical)
  )
 )","(:action craft-arrow
  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station WeaponStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 Stick)
    (inventory-holding ?ingredientinv2 ?ingredient2)
    (object-of-type ?ingredient2 Feather)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Arrow)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 Stick))
    (object-of-type ?ingredient1 Hypothetical)
    (not (inventory-holding ?ingredientinv2 ?ingredient2))
    (inventory-empty ?ingredientinv2)
    (not (object-of-type ?ingredient2 Feather))
    (object-of-type ?ingredient2 Hypothetical)
  )
 )",8.1,8.1,1.0,
craft-wood-plank,"(:action craft-wood-plank
  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station WorkStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 Wood)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target WoodPlank)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 Wood))
    (object-of-type ?ingredient1 Hypothetical)
  )
 )","(:action craft-wood-plank
  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station WorkStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 Wood)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target WoodPlank)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 Wood))
    (object-of-type ?ingredient1 Hypothetical)
  )
 )",8.1,8.1,1.0,
craft-sword_0,"(:action craft-sword
  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station WeaponStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 Stick)
    (inventory-holding ?ingredientinv2 ?ingredient2)
    (object-of-type ?ingredient2 IronIngot)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Sword)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 Stick))
    (object-of-type ?ingredient1 Hypothetical)
    (not (inventory-holding ?ingredientinv2 ?ingredient2))
    (inventory-empty ?ingredientinv2)
    (not (object-of-type ?ingredient2 IronIngot))
    (object-of-type ?ingredient2 Hypothetical)
  )
 )","(:action craft-sword_0
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WeaponStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Stick)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 IronIngot)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Sword)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 Stick))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 IronIngot))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",6.1,6.1,1.0,
craft-sword_1,"(:action craft-sword
  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station WeaponStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 Stick)
    (inventory-holding ?ingredientinv2 ?ingredient2)
    (object-of-type ?ingredient2 IronIngot)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Sword)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 Stick))
    (object-of-type ?ingredient1 Hypothetical)
    (not (inventory-holding ?ingredientinv2 ?ingredient2))
    (inventory-empty ?ingredientinv2)
    (not (object-of-type ?ingredient2 IronIngot))
    (object-of-type ?ingredient2 Hypothetical)
  )
 )","(:action craft-sword_1
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WeaponStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Stick)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Sword)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 Stick))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-sword_2,"(:action craft-sword
  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station WeaponStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 Stick)
    (inventory-holding ?ingredientinv2 ?ingredient2)
    (object-of-type ?ingredient2 IronIngot)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Sword)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 Stick))
    (object-of-type ?ingredient1 Hypothetical)
    (not (inventory-holding ?ingredientinv2 ?ingredient2))
    (inventory-empty ?ingredientinv2)
    (not (object-of-type ?ingredient2 IronIngot))
    (object-of-type ?ingredient2 Hypothetical)
  )
 )","(:action craft-sword_2
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WeaponStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Stick)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 Stick)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Sword)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 Stick))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 Stick))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-bed_0,"(:action craft-bed
  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station BedStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 WoodPlank)
    (inventory-holding ?ingredientinv2 ?ingredient2)
    (object-of-type ?ingredient2 Wool)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Bed)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 WoodPlank))
    (object-of-type ?ingredient1 Hypothetical)
    (not (inventory-holding ?ingredientinv2 ?ingredient2))
    (inventory-empty ?ingredientinv2)
    (not (object-of-type ?ingredient2 Wool))
    (object-of-type ?ingredient2 Hypothetical)
  )
 )","(:action craft-bed_0
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station BedStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 WoodPlank)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 Wool)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Bed)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 WoodPlank))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 Wool))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-bed_1,"(:action craft-bed
  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station BedStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 WoodPlank)
    (inventory-holding ?ingredientinv2 ?ingredient2)
    (object-of-type ?ingredient2 Wool)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Bed)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 WoodPlank))
    (object-of-type ?ingredient1 Hypothetical)
    (not (inventory-holding ?ingredientinv2 ?ingredient2))
    (inventory-empty ?ingredientinv2)
    (not (object-of-type ?ingredient2 Wool))
    (object-of-type ?ingredient2 Hypothetical)
  )
 )","(:action craft-bed_1
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station BedStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 WoodPlank)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 Wool)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Bed)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 WoodPlank))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 Wool))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",9.1,9.1,1.0,
craft-bed_2,"(:action craft-bed
  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station BedStation)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 WoodPlank)
    (inventory-holding ?ingredientinv2 ?ingredient2)
    (object-of-type ?ingredient2 Wool)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target Bed)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 WoodPlank))
    (object-of-type ?ingredient1 Hypothetical)
    (not (inventory-holding ?ingredientinv2 ?ingredient2))
    (inventory-empty ?ingredientinv2)
    (not (object-of-type ?ingredient2 Wool))
    (object-of-type ?ingredient2 Hypothetical)
  )
 )","(:action craft-bed_2
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station BedStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 WoodPlank)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 Wool)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Bed)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 WoodPlank))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 Wool))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
smelt-iron-ore_2,,"(:action smelt-iron-ore_2
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station Furnace)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 IronOre)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 GoldOre)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target IronIngot)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 IronOre))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 GoldOre))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-iron-ingot_1,"(:action craft-iron-ingot
  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station Furnace)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 IronOre)
    (inventory-holding ?ingredientinv2 ?ingredient2)
    (object-of-type ?ingredient2 Coal)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target IronIngot)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 IronOre))
    (object-of-type ?ingredient1 Hypothetical)
    (not (inventory-holding ?ingredientinv2 ?ingredient2))
    (inventory-empty ?ingredientinv2)
    (not (object-of-type ?ingredient2 Coal))
    (object-of-type ?ingredient2 Hypothetical)
  )
 )","(:action craft-iron-ingot_1
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station Furnace)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 GoldOre)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target IronIngot)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 GoldOre))
		(object-of-type ?ingredient1 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-iron-ingot_2,"(:action craft-iron-ingot
  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station Furnace)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 IronOre)
    (inventory-holding ?ingredientinv2 ?ingredient2)
    (object-of-type ?ingredient2 Coal)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target IronIngot)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 IronOre))
    (object-of-type ?ingredient1 Hypothetical)
    (not (inventory-holding ?ingredientinv2 ?ingredient2))
    (inventory-empty ?ingredientinv2)
    (not (object-of-type ?ingredient2 Coal))
    (object-of-type ?ingredient2 Hypothetical)
  )
 )","(:action craft-iron-ingot_2
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station Furnace)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 IronOre)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 Coal)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target IronIngot)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 IronOre))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 Coal))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",4.1,4.1,1.0,
smelt-iron_0,,"(:action smelt-iron_0
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station Furnace)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 IronOre)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target IronIngot)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 IronOre))
		(object-of-type ?ingredient1 Hypothetical)
		)
)",0.1,0.1,1.0,
smelt-iron_1,,"(:action smelt-iron_1
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station Furnace)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 IronOre)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 IronOre)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target IronIngot)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 IronOre))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 IronOre))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,0.1,1.0,
craft-bed1_0,,"(:action craft-bed1_0
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station BedStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 WoodPlank)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Bed)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 WoodPlank))
		(object-of-type ?ingredient1 Hypothetical)
		)
)",0.1,1.1,0.09090909090909091,
craft-bed1_1,,"(:action craft-bed1_1
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station BedStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Wood)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 Wood)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Bed)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 Wood))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 Wood))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,1.1,0.09090909090909091,
craft-cooked-potato_2,"(:action craft-cooked-potato
  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station Furnace)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 Potato)
    (inventory-holding ?ingredientinv2 ?ingredient2)
    (object-of-type ?ingredient2 Coal)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target CookedPotato)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 Potato))
    (object-of-type ?ingredient1 Hypothetical)
    (not (inventory-holding ?ingredientinv2 ?ingredient2))
    (inventory-empty ?ingredientinv2)
    (not (object-of-type ?ingredient2 Coal))
    (object-of-type ?ingredient2 Hypothetical)
  )
 )","(:action craft-cooked-potato_2
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station FoodStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Potato)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 Potato)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target CookedPotato)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 Potato))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 Potato))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,1.1,0.09090909090909091,
smelt-iron-ore_1,,"(:action smelt-iron-ore_1
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station Furnace)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Coal)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 GoldOre)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target IronIngot)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 Coal))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 GoldOre))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,1.1,0.09090909090909091,
furnace_0,,"(:action furnace_0
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?resultinv - inventory ?result - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station Furnace)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Coal)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 IronIngot)
		(inventory-empty ?resultinv)
		(object-of-type ?result Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?resultinv))
		(inventory-holding ?resultinv ?result)
		(not (object-of-type ?result Hypothetical))
		(object-of-type ?result GoldIngot)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 Coal))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 IronIngot))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,1.1,0.09090909090909091,
smelt-iron-ore_0,,"(:action smelt-iron-ore_0
        :parameters (?t - tile ?station - object ?ingredientinv - inventory ?ingredient - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station Furnace)
		(inventory-holding ?ingredientinv ?ingredient)
		(object-of-type ?ingredient IronOre)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target IronIngot)
		(not (inventory-holding ?ingredientinv ?ingredient))
		(inventory-empty ?ingredientinv)
		(not (object-of-type ?ingredient IronOre))
		(object-of-type ?ingredient Hypothetical)
		)
)",0.1,1.1,0.09090909090909091,
smelt-iron-ore_1,,"(:action smelt-iron-ore_1
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station Furnace)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 IronOre)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 Coal)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target IronIngot)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 IronOre))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 Coal))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,1.1,0.09090909090909091,
craft-iron-ingot_0,"(:action craft-iron-ingot
  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station Furnace)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 IronOre)
    (inventory-holding ?ingredientinv2 ?ingredient2)
    (object-of-type ?ingredient2 Coal)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target IronIngot)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 IronOre))
    (object-of-type ?ingredient1 Hypothetical)
    (not (inventory-holding ?ingredientinv2 ?ingredient2))
    (inventory-empty ?ingredientinv2)
    (not (object-of-type ?ingredient2 Coal))
    (object-of-type ?ingredient2 Hypothetical)
  )
 )","(:action craft-iron-ingot_0
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station Furnace)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 IronOre)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target IronIngot)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 IronOre))
		(object-of-type ?ingredient1 Hypothetical)
		)
)",0.1,1.1,0.09090909090909091,
melt-iron-ore_0,,"(:action melt-iron-ore_0
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station Furnace)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Coal)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 IronOre)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target IronIngot)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 Coal))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 IronOre))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,1.1,0.09090909090909091,
craft-bed1_2,,"(:action craft-bed1_2
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station BedStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 WoodPlank)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 WoodPlank)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target Bed)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 WoodPlank))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 WoodPlank))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,2.1,0.047619047619047616,
craft-cooked-potato_0,"(:action craft-cooked-potato
  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station Furnace)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 Potato)
    (inventory-holding ?ingredientinv2 ?ingredient2)
    (object-of-type ?ingredient2 Coal)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target CookedPotato)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 Potato))
    (object-of-type ?ingredient1 Hypothetical)
    (not (inventory-holding ?ingredientinv2 ?ingredient2))
    (inventory-empty ?ingredientinv2)
    (not (object-of-type ?ingredient2 Coal))
    (object-of-type ?ingredient2 Hypothetical)
  )
 )","(:action craft-cooked-potato_0
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station FoodStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Potato)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target CookedPotato)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 Potato))
		(object-of-type ?ingredient1 Hypothetical)
		)
)",0.1,2.1,0.047619047619047616,
craft-iron-ingot_1,"(:action craft-iron-ingot
  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station Furnace)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 IronOre)
    (inventory-holding ?ingredientinv2 ?ingredient2)
    (object-of-type ?ingredient2 Coal)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target IronIngot)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 IronOre))
    (object-of-type ?ingredient1 Hypothetical)
    (not (inventory-holding ?ingredientinv2 ?ingredient2))
    (inventory-empty ?ingredientinv2)
    (not (object-of-type ?ingredient2 Coal))
    (object-of-type ?ingredient2 Hypothetical)
  )
 )","(:action craft-iron-ingot_1
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WorkStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 IronOre)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target IronIngot)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 IronOre))
		(object-of-type ?ingredient1 Hypothetical)
		)
)",0.1,2.1,0.047619047619047616,
craft-iron-ingot_2,"(:action craft-iron-ingot
  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)
  :precondition (and
    (agent-at ?t)
    (object-at ?station ?t)
    (object-of-type ?station Furnace)
    (inventory-holding ?ingredientinv1 ?ingredient1)
    (object-of-type ?ingredient1 IronOre)
    (inventory-holding ?ingredientinv2 ?ingredient2)
    (object-of-type ?ingredient2 Coal)
    (inventory-empty ?targetinv)
    (object-of-type ?target Hypothetical)
  )
  :effect (and
    (not (inventory-empty ?targetinv))
    (inventory-holding ?targetinv ?target)
    (not (object-of-type ?target Hypothetical))
    (object-of-type ?target IronIngot)
    (not (inventory-holding ?ingredientinv1 ?ingredient1))
    (inventory-empty ?ingredientinv1)
    (not (object-of-type ?ingredient1 IronOre))
    (object-of-type ?ingredient1 Hypothetical)
    (not (inventory-holding ?ingredientinv2 ?ingredient2))
    (inventory-empty ?ingredientinv2)
    (not (object-of-type ?ingredient2 Coal))
    (object-of-type ?ingredient2 Hypothetical)
  )
 )","(:action craft-iron-ingot_2
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station WorkStation)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 IronOre)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 IronOre)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target IronIngot)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 IronOre))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 IronOre))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,2.1,0.047619047619047616,
smelt-iron-ore_0,,"(:action smelt-iron-ore_0
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station Furnace)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Coal)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target IronIngot)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 Coal))
		(object-of-type ?ingredient1 Hypothetical)
		)
)",0.1,2.1,0.047619047619047616,
smelt-iron-ore_2,,"(:action smelt-iron-ore_2
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station Furnace)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 Coal)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 Coal)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target IronIngot)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 Coal))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 Coal))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,2.1,0.047619047619047616,
smelt-iron_2,,"(:action smelt-iron_2
        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)

        :precondition (and 
		(agent-at ?t)
		(object-at ?station ?t)
		(object-of-type ?station Furnace)
		(inventory-holding ?ingredientinv1 ?ingredient1)
		(object-of-type ?ingredient1 IronOre)
		(inventory-holding ?ingredientinv2 ?ingredient2)
		(object-of-type ?ingredient2 Coal)
		(inventory-empty ?targetinv)
		(object-of-type ?target Hypothetical)
		)
        :effect (and 
		(not (inventory-empty ?targetinv))
		(inventory-holding ?targetinv ?target)
		(not (object-of-type ?target Hypothetical))
		(object-of-type ?target IronIngot)
		(not (inventory-holding ?ingredientinv1 ?ingredient1))
		(inventory-empty ?ingredientinv1)
		(not (object-of-type ?ingredient1 IronOre))
		(object-of-type ?ingredient1 Hypothetical)
		(not (inventory-holding ?ingredientinv2 ?ingredient2))
		(inventory-empty ?ingredientinv2)
		(not (object-of-type ?ingredient2 Coal))
		(object-of-type ?ingredient2 Hypothetical)
		)
)",0.1,2.1,0.047619047619047616,
