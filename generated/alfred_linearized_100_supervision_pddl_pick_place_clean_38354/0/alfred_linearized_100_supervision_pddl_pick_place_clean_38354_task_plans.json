[
    {
        "file_name": "train/pick_and_place_simple-AppleSliced-None-Fridge-30/trial_T20190907_105723_672392",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar__minus_2_bar_2_bar_30",
                            "loc_bar_10_bar__minus_2_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_10_bar__minus_2_bar_1_bar_45",
                            "loc_bar__minus_1_bar_5_bar_3_bar_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_5_bar_3_bar_30",
                            "loc_bar__minus_1_bar_0_bar_3_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_0_bar_3_bar_45",
                            "apple__minus_3_dot_7417468_comma__minus_3_dot_7417468_comma__minus_0_dot_188876152_comma__minus_0_dot_188876152_comma_3_dot_8965216_comma_3_dot_8965216"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "CutObject",
                        "args": [
                            "apple__minus_3_dot_7417468_comma__minus_3_dot_7417468_comma__minus_0_dot_188876152_comma__minus_0_dot_188876152_comma_3_dot_8965216_comma_3_dot_8965216",
                            "loc_bar__minus_1_bar_0_bar_3_bar_45",
                            "agent1",
                            "countertop__minus_4_dot_0316868_comma__minus_4_dot_0316868_comma__minus_0_dot_1576_comma__minus_0_dot_1576_comma_3_dot_7432_comma_3_dot_7432"
                        ],
                        "operator_body": "(:action CutObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r CounterTopType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)"
                    },
                    {
                        "action": "RemoveObject",
                        "args": [
                            "apple__minus_3_dot_7417468_comma__minus_3_dot_7417468_comma__minus_0_dot_188876152_comma__minus_0_dot_188876152_comma_3_dot_8965216_comma_3_dot_8965216",
                            "countertop__minus_4_dot_0316868_comma__minus_4_dot_0316868_comma__minus_0_dot_1576_comma__minus_0_dot_1576_comma_3_dot_7432_comma_3_dot_7432",
                            "agent1",
                            "fridge_4_dot_032_comma_4_dot_032_comma__minus_5_dot_8716_comma__minus_5_dot_8716_comma_0_dot_1178706288_comma_0_dot_1178706288"
                        ],
                        "operator_body": "(:action RemoveObject\n        :parameters (?o - object ?rStart - receptacle ?a - agent ?rEnd - receptacle)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rStart)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rEnd)\n\t\t(not (inReceptacle ?o ?rStart))\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_and_place_simple-TomatoSliced-None-CounterTop-25/trial_T20190908_233907_188674",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar_7_bar_3_bar_30",
                            "loc_bar__minus_8_bar_4_bar_3_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar_4_bar_3_bar_45",
                            "tomato__minus_10_dot_63472652_comma__minus_10_dot_63472652_comma_2_dot_176296948_comma_2_dot_176296948_comma_3_dot_492494584_comma_3_dot_492494584"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar_4_bar_3_bar_45",
                            "loc_bar__minus_8_bar_5_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CutObject",
                        "args": [
                            "tomato__minus_10_dot_63472652_comma__minus_10_dot_63472652_comma_2_dot_176296948_comma_2_dot_176296948_comma_3_dot_492494584_comma_3_dot_492494584",
                            "loc_bar__minus_8_bar_5_bar_2_bar_45",
                            "agent1",
                            "countertop__minus_6_dot_232_comma__minus_6_dot_232_comma_1_dot_112_comma_1_dot_112_comma_3_dot_4364_comma_3_dot_4364"
                        ],
                        "operator_body": "(:action CutObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r CounterTopType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_and_place_simple-CellPhone-None-Drawer-302/trial_T20190907_235412_132976",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar__minus_2_bar_0_bar_30",
                            "loc_bar__minus_2_bar__minus_2_bar_3_bar__minus_15"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar__minus_2_bar_3_bar__minus_15",
                            "cellphone__minus_4_dot_922724_comma__minus_4_dot_922724_comma__minus_2_dot_412_comma__minus_2_dot_412_comma_7_dot_29774476_comma_7_dot_29774476",
                            "shelf__minus_5_dot_1472_comma__minus_5_dot_1472_comma__minus_2_dot_412_comma__minus_2_dot_412_comma_7_dot_2576_comma_7_dot_2576"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar__minus_2_bar_3_bar__minus_15",
                            "loc_bar__minus_2_bar_4_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar_4_bar_1_bar_60",
                            "cellphonetype",
                            "cellphone__minus_4_dot_922724_comma__minus_4_dot_922724_comma__minus_2_dot_412_comma__minus_2_dot_412_comma_7_dot_29774476_comma_7_dot_29774476",
                            "drawer_1_dot_22_comma_1_dot_22_comma_4_dot_904_comma_4_dot_904_comma_1_dot_852_comma_1_dot_852"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar__minus_2_bar_0_bar_30",
                            "loc_bar__minus_2_bar__minus_2_bar_3_bar__minus_15"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar__minus_2_bar_3_bar__minus_15",
                            "cellphone__minus_4_dot_922724_comma__minus_4_dot_922724_comma__minus_2_dot_412_comma__minus_2_dot_412_comma_7_dot_29774476_comma_7_dot_29774476"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "RemoveObject",
                        "args": [
                            "cellphone__minus_4_dot_922724_comma__minus_4_dot_922724_comma__minus_2_dot_412_comma__minus_2_dot_412_comma_7_dot_29774476_comma_7_dot_29774476",
                            "shelf__minus_5_dot_1472_comma__minus_5_dot_1472_comma__minus_2_dot_412_comma__minus_2_dot_412_comma_7_dot_2576_comma_7_dot_2576",
                            "agent1",
                            "drawer_1_dot_22_comma_1_dot_22_comma_4_dot_904_comma_4_dot_904_comma_1_dot_852_comma_1_dot_852"
                        ],
                        "operator_body": "(:action RemoveObject\n        :parameters (?o - object ?rStart - receptacle ?a - agent ?rEnd - receptacle)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rStart)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rEnd)\n\t\t(not (inReceptacle ?o ?rStart))\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-Egg-None-Fridge-17/trial_T20190909_130835_721326",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar_10_bar_2_bar_30",
                            "loc_bar__minus_2_bar_3_bar_3_bar_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar_3_bar_3_bar_30",
                            "egg__minus_5_dot_05565644_comma__minus_5_dot_05565644_comma_2_dot_6957504_comma_2_dot_6957504_comma_5_dot_290096_comma_5_dot_290096"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "HeatObject",
                        "args": [
                            "egg__minus_5_dot_05565644_comma__minus_5_dot_05565644_comma_2_dot_6957504_comma_2_dot_6957504_comma_5_dot_290096_comma_5_dot_290096",
                            "agent1"
                        ],
                        "operator_body": "(:action HeatObject\n        :parameters (?o - object ?a - agent)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(cleanable ?o)\n\t\t(coolable ?o)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (isCool ?o))\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-TomatoSliced-None-DiningTable-11/trial_T20190918_205827_915892",
        "plans": []
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-AppleSliced-None-Fridge-24/trial_T20190909_073807_553746",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))",
                "plan": [
                    {
                        "action": "PUT",
                        "args": [
                            "apple_4_dot_09999228_comma_4_dot_09999228_comma_8_dot_44654_comma_8_dot_44654_comma_3_dot_537076236_comma_3_dot_537076236",
                            "fridge__minus_10_dot_572_comma__minus_10_dot_572_comma_8_dot_536_comma_8_dot_536_comma_0_dot_0_comma_0_dot_0",
                            "loc_bar__minus_7_bar_9_bar_3_bar_60"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar_5_bar_2_bar_30",
                            "loc_bar_0_bar_5_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_5_bar_1_bar_45",
                            "loc_bar_1_bar_9_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar_9_bar_1_bar_45",
                            "apple_4_dot_09999228_comma_4_dot_09999228_comma_8_dot_44654_comma_8_dot_44654_comma_3_dot_537076236_comma_3_dot_537076236",
                            "countertop_3_dot_4584_comma_3_dot_4584_comma_9_dot_4872_comma_9_dot_4872_comma_3_dot_4344_comma_3_dot_4344"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar_9_bar_1_bar_45",
                            "loc_bar__minus_8_bar_12_bar_0_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CutObject",
                        "args": [
                            "apple_4_dot_09999228_comma_4_dot_09999228_comma_8_dot_44654_comma_8_dot_44654_comma_3_dot_537076236_comma_3_dot_537076236",
                            "loc_bar__minus_8_bar_12_bar_0_bar_45",
                            "agent1",
                            "countertop__minus_8_dot_324_comma__minus_8_dot_324_comma_15_dot_196_comma_15_dot_196_comma_3_dot_4344_comma_3_dot_4344"
                        ],
                        "operator_body": "(:action CutObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r CounterTopType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)"
                    },
                    {
                        "action": "HeatObject",
                        "args": [
                            "apple_4_dot_09999228_comma_4_dot_09999228_comma_8_dot_44654_comma_8_dot_44654_comma_3_dot_537076236_comma_3_dot_537076236",
                            "agent1"
                        ],
                        "operator_body": "(:action HeatObject\n        :parameters (?o - object ?a - agent)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(cleanable ?o)\n\t\t(coolable ?o)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (isCool ?o))\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_and_place_simple-LettuceSliced-None-DiningTable-24/trial_T20190906_220204_504890",
        "plans": []
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-WineBottle-None-Cabinet-16/trial_T20190907_084028_991219",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_5_bar_12_bar_0_bar_30",
                            "loc_bar_0_bar_10_bar_3_bar__minus_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_10_bar_3_bar__minus_30",
                            "loc_bar__minus_4_bar_13_bar_2_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar_13_bar_2_bar_60",
                            "winebottle__minus_3_dot_5015608_comma__minus_3_dot_5015608_comma_11_dot_49686528_comma_11_dot_49686528_comma_0_dot_31281408_comma_0_dot_31281408"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar_13_bar_2_bar_60",
                            "loc_bar_0_bar_1_bar_3_bar__minus_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_1_bar_3_bar__minus_30",
                            "loc_bar_0_bar__minus_2_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "ChillObject",
                        "args": [
                            "winebottle__minus_3_dot_5015608_comma__minus_3_dot_5015608_comma_11_dot_49686528_comma_11_dot_49686528_comma_0_dot_31281408_comma_0_dot_31281408",
                            "loc_bar_0_bar__minus_2_bar_3_bar_60",
                            "agent1",
                            "fridge__minus_3_dot_636_comma__minus_3_dot_636_comma__minus_1_dot_624_comma__minus_1_dot_624_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action ChillObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar__minus_2_bar_3_bar_60",
                            "loc_bar_0_bar_10_bar_3_bar__minus_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_10_bar_3_bar__minus_30",
                            "winebottletype",
                            "winebottle__minus_3_dot_5015608_comma__minus_3_dot_5015608_comma_11_dot_49686528_comma_11_dot_49686528_comma_0_dot_31281408_comma_0_dot_31281408",
                            "cabinet__minus_3_dot_294628144_comma__minus_3_dot_294628144_comma_10_dot_43572332_comma_10_dot_43572332_comma_8_dot_882908_comma_8_dot_882908"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-AppleSliced-None-SideTable-3/trial_T20190918_165030_719864",
        "plans": []
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-Apple-None-SideTable-21/trial_T20190907_180858_138819",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar__minus_14_bar_1_bar_30",
                            "loc_bar_0_bar__minus_8_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar__minus_8_bar_1_bar_60",
                            "loc_bar__minus_7_bar__minus_11_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_7_bar__minus_11_bar_2_bar_45",
                            "apple__minus_7_dot_37369776_comma__minus_7_dot_37369776_comma__minus_14_dot_82384204_comma__minus_14_dot_82384204_comma_3_dot_4119776_comma_3_dot_4119776"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_7_bar__minus_11_bar_2_bar_45",
                            "loc_bar_0_bar__minus_8_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "ChillObject",
                        "args": [
                            "apple__minus_7_dot_37369776_comma__minus_7_dot_37369776_comma__minus_14_dot_82384204_comma__minus_14_dot_82384204_comma_3_dot_4119776_comma_3_dot_4119776",
                            "loc_bar_0_bar__minus_8_bar_1_bar_60",
                            "agent1",
                            "fridge_2_dot_72_comma_2_dot_72_comma__minus_7_dot_832_comma__minus_7_dot_832_comma__minus_0_dot_1252121924_comma__minus_0_dot_1252121924"
                        ],
                        "operator_body": "(:action ChillObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar__minus_8_bar_1_bar_60",
                            "loc_bar__minus_1_bar_1_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_1_bar_1_bar_45",
                            "appletype",
                            "apple__minus_7_dot_37369776_comma__minus_7_dot_37369776_comma__minus_14_dot_82384204_comma__minus_14_dot_82384204_comma_3_dot_4119776_comma_3_dot_4119776",
                            "sidetable_3_dot_0924_comma_3_dot_0924_comma_1_dot_7924_comma_1_dot_7924_comma_2_dot_8004_comma_2_dot_8004"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-LettuceSliced-None-CounterTop-24/trial_T20190909_153425_218344",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))",
                "plan": [
                    {
                        "action": "PUT",
                        "args": [
                            "lettuce__minus_2_dot_3228904_comma__minus_2_dot_3228904_comma_5_dot_4332_comma_5_dot_4332_comma_3_dot_8264_comma_3_dot_8264",
                            "countertop_3_dot_4584_comma_3_dot_4584_comma_3_dot_936_comma_3_dot_936_comma_3_dot_4344_comma_3_dot_4344",
                            "loc_bar_0_bar_5_bar_1_bar_45"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_2_bar_12_bar_0_bar_30",
                            "loc_bar_0_bar_5_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_5_bar_1_bar_45",
                            "loc_bar_0_bar_5_bar_3_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_5_bar_3_bar_45",
                            "lettuce__minus_2_dot_3228904_comma__minus_2_dot_3228904_comma_5_dot_4332_comma_5_dot_4332_comma_3_dot_8264_comma_3_dot_8264",
                            "diningtable__minus_3_dot_5_comma__minus_3_dot_5_comma_5_dot_296_comma_5_dot_296_comma_0_dot_024_comma_0_dot_024"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_5_bar_3_bar_45",
                            "loc_bar__minus_7_bar_9_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "ChillObject",
                        "args": [
                            "lettuce__minus_2_dot_3228904_comma__minus_2_dot_3228904_comma_5_dot_4332_comma_5_dot_4332_comma_3_dot_8264_comma_3_dot_8264",
                            "loc_bar__minus_7_bar_9_bar_3_bar_60",
                            "agent1",
                            "fridge__minus_10_dot_572_comma__minus_10_dot_572_comma_8_dot_536_comma_8_dot_536_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action ChillObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_7_bar_9_bar_3_bar_60",
                            "loc_bar__minus_8_bar_12_bar_0_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CutObject",
                        "args": [
                            "lettuce__minus_2_dot_3228904_comma__minus_2_dot_3228904_comma_5_dot_4332_comma_5_dot_4332_comma_3_dot_8264_comma_3_dot_8264",
                            "loc_bar__minus_8_bar_12_bar_0_bar_45",
                            "agent1",
                            "countertop__minus_8_dot_324_comma__minus_8_dot_324_comma_15_dot_196_comma_15_dot_196_comma_3_dot_4344_comma_3_dot_4344"
                        ],
                        "operator_body": "(:action CutObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r CounterTopType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-Potato-None-GarbageCan-14/trial_T20190909_114102_376957",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar__minus_2_bar_0_bar_30",
                            "loc_bar__minus_3_bar__minus_3_bar_2_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_3_bar__minus_3_bar_2_bar_60",
                            "potato__minus_3_dot_160557748_comma__minus_3_dot_160557748_comma__minus_5_dot_90770628_comma__minus_5_dot_90770628_comma_2_dot_002696276_comma_2_dot_002696276"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "RemoveObject",
                        "args": [
                            "potato__minus_3_dot_160557748_comma__minus_3_dot_160557748_comma__minus_5_dot_90770628_comma__minus_5_dot_90770628_comma_2_dot_002696276_comma_2_dot_002696276",
                            "fridge__minus_2_dot_136_comma__minus_2_dot_136_comma__minus_6_dot_216_comma__minus_6_dot_216_comma_0_dot_0_comma_0_dot_0",
                            "agent1",
                            "garbagecan_7_dot_08_comma_7_dot_08_comma_6_dot_74_comma_6_dot_74_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action RemoveObject\n        :parameters (?o - object ?rStart - receptacle ?a - agent ?rEnd - receptacle)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rStart)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rEnd)\n\t\t(not (inReceptacle ?o ?rStart))\n\t\t)\n)"
                    },
                    {
                        "action": "HeatObject",
                        "args": [
                            "potato__minus_3_dot_160557748_comma__minus_3_dot_160557748_comma__minus_5_dot_90770628_comma__minus_5_dot_90770628_comma_2_dot_002696276_comma_2_dot_002696276",
                            "agent1"
                        ],
                        "operator_body": "(:action HeatObject\n        :parameters (?o - object ?a - agent)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(cleanable ?o)\n\t\t(coolable ?o)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (isCool ?o))\n\t\t)\n)"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar__minus_2_bar_0_bar_30",
                            "loc_bar_6_bar_10_bar_2_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_6_bar_10_bar_2_bar_60",
                            "loc_bar__minus_3_bar__minus_3_bar_2_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_3_bar__minus_3_bar_2_bar_60",
                            "potato__minus_3_dot_160557748_comma__minus_3_dot_160557748_comma__minus_5_dot_90770628_comma__minus_5_dot_90770628_comma_2_dot_002696276_comma_2_dot_002696276",
                            "fridge__minus_2_dot_136_comma__minus_2_dot_136_comma__minus_6_dot_216_comma__minus_6_dot_216_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_3_bar__minus_3_bar_2_bar_60",
                            "loc_bar_6_bar_10_bar_2_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "HeatObject",
                        "args": [
                            "potato__minus_3_dot_160557748_comma__minus_3_dot_160557748_comma__minus_5_dot_90770628_comma__minus_5_dot_90770628_comma_2_dot_002696276_comma_2_dot_002696276",
                            "agent1"
                        ],
                        "operator_body": "(:action HeatObject\n        :parameters (?o - object ?a - agent)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(cleanable ?o)\n\t\t(coolable ?o)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (isCool ?o))\n\t\t)\n)"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_6_bar_10_bar_2_bar_60",
                            "potatotype",
                            "potato__minus_3_dot_160557748_comma__minus_3_dot_160557748_comma__minus_5_dot_90770628_comma__minus_5_dot_90770628_comma_2_dot_002696276_comma_2_dot_002696276",
                            "garbagecan_7_dot_08_comma_7_dot_08_comma_6_dot_74_comma_6_dot_74_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-PotatoSliced-None-DiningTable-7/trial_T20190908_032410_853210",
        "plans": []
    },
    {
        "file_name": "train/pick_clean_then_place_in_recep-Potato-None-Microwave-23/trial_T20190908_131731_351718",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_5_bar__minus_2_bar_2_bar_30",
                            "loc_bar__minus_14_bar__minus_7_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_14_bar__minus_7_bar_1_bar_45",
                            "potato__minus_11_dot_12354184_comma__minus_11_dot_12354184_comma__minus_7_dot_53968908_comma__minus_7_dot_53968908_comma_3_dot_819248_comma_3_dot_819248",
                            "diningtable__minus_9_dot_73199272_comma__minus_9_dot_73199272_comma__minus_6_dot_78581428_comma__minus_6_dot_78581428_comma_3_dot_5828_comma_3_dot_5828"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_14_bar__minus_7_bar_1_bar_45",
                            "loc_bar__minus_4_bar__minus_7_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_7_bar_1_bar_60",
                            "sinkbasin__minus_1_dot_4024_comma__minus_1_dot_4024_comma__minus_8_dot_0756_comma__minus_8_dot_0756_comma_3_dot_1465648_comma_3_dot_1465648",
                            "potato__minus_11_dot_12354184_comma__minus_11_dot_12354184_comma__minus_7_dot_53968908_comma__minus_7_dot_53968908_comma_3_dot_819248_comma_3_dot_819248"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_7_bar_1_bar_60",
                            "loc_bar__minus_5_bar__minus_12_bar_2_bar_15"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_5_bar__minus_12_bar_2_bar_15",
                            "potatotype",
                            "potato__minus_11_dot_12354184_comma__minus_11_dot_12354184_comma__minus_7_dot_53968908_comma__minus_7_dot_53968908_comma_3_dot_819248_comma_3_dot_819248",
                            "microwave__minus_5_dot_284_comma__minus_5_dot_284_comma__minus_15_dot_412_comma__minus_15_dot_412_comma_6_dot_084_comma_6_dot_084"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-Cup-None-Shelf-1/trial_T20190907_181520_113143",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_5_bar__minus_4_bar_2_bar_30",
                            "loc_bar_7_bar__minus_8_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_7_bar__minus_8_bar_2_bar_45",
                            "cup_7_dot_157044_comma_7_dot_157044_comma__minus_10_dot_47174548_comma__minus_10_dot_47174548_comma_3_dot_5148516_comma_3_dot_5148516",
                            "shelf_7_dot_216_comma_7_dot_216_comma__minus_10_dot_2544_comma__minus_10_dot_2544_comma_3_dot_4799996_comma_3_dot_4799996"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_7_bar__minus_8_bar_2_bar_45",
                            "loc_bar__minus_5_bar_4_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "HeatObject",
                        "args": [
                            "cup_7_dot_157044_comma_7_dot_157044_comma__minus_10_dot_47174548_comma__minus_10_dot_47174548_comma_3_dot_5148516_comma_3_dot_5148516",
                            "agent1"
                        ],
                        "operator_body": "(:action HeatObject\n        :parameters (?o - object ?a - agent)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(cleanable ?o)\n\t\t(coolable ?o)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (isCool ?o))\n\t\t)\n)"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_5_bar_4_bar_3_bar_60",
                            "cuptype",
                            "cup_7_dot_157044_comma_7_dot_157044_comma__minus_10_dot_47174548_comma__minus_10_dot_47174548_comma_3_dot_5148516_comma_3_dot_5148516",
                            "fridge__minus_8_dot_388_comma__minus_8_dot_388_comma_4_dot_352_comma_4_dot_352_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    },
                    {
                        "action": "CoolObject",
                        "args": [
                            "cup_7_dot_157044_comma_7_dot_157044_comma__minus_10_dot_47174548_comma__minus_10_dot_47174548_comma_3_dot_5148516_comma_3_dot_5148516",
                            "loc_bar__minus_5_bar_4_bar_3_bar_60",
                            "agent1",
                            "fridge__minus_8_dot_388_comma__minus_8_dot_388_comma_4_dot_352_comma_4_dot_352_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action CoolObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(inReceptacle ?o ?r)\n\t\t(isHot ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-PotatoSliced-None-DiningTable-24/trial_T20190908_194409_961394",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_5_bar_12_bar_1_bar_30",
                            "loc_bar_0_bar_5_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_5_bar_1_bar_45",
                            "loc_bar__minus_7_bar_5_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_7_bar_5_bar_1_bar_60",
                            "potato__minus_5_dot_27052928_comma__minus_5_dot_27052928_comma_3_dot_7496612_comma_3_dot_7496612_comma_3_dot_7746264_comma_3_dot_7746264"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_7_bar_5_bar_1_bar_60",
                            "loc_bar__minus_7_bar_9_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "ChillObject",
                        "args": [
                            "potato__minus_5_dot_27052928_comma__minus_5_dot_27052928_comma_3_dot_7496612_comma_3_dot_7496612_comma_3_dot_7746264_comma_3_dot_7746264",
                            "loc_bar__minus_7_bar_9_bar_3_bar_60",
                            "agent1",
                            "fridge__minus_10_dot_572_comma__minus_10_dot_572_comma_8_dot_536_comma_8_dot_536_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action ChillObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_7_bar_9_bar_3_bar_60",
                            "loc_bar__minus_8_bar_12_bar_0_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CutObject",
                        "args": [
                            "potato__minus_5_dot_27052928_comma__minus_5_dot_27052928_comma_3_dot_7496612_comma_3_dot_7496612_comma_3_dot_7746264_comma_3_dot_7746264",
                            "loc_bar__minus_8_bar_12_bar_0_bar_45",
                            "agent1",
                            "countertop__minus_8_dot_324_comma__minus_8_dot_324_comma_15_dot_196_comma_15_dot_196_comma_3_dot_4344_comma_3_dot_4344"
                        ],
                        "operator_body": "(:action CutObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r CounterTopType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_clean_then_place_in_recep-Cloth-None-Drawer-411/trial_T20190907_202223_569116",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_3_bar_10_bar_2_bar_30",
                            "loc_bar_0_bar_10_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_10_bar_1_bar_60",
                            "cloth_2_dot_6352004_comma_2_dot_6352004_comma_10_dot_27466584_comma_10_dot_27466584_comma_2_dot_968016148_comma_2_dot_968016148",
                            "countertop_2_dot_932_comma_2_dot_932_comma_7_dot_82_comma_7_dot_82_comma_2_dot_788_comma_2_dot_788"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_10_bar_1_bar_60",
                            "loc_bar_0_bar_7_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_7_bar_1_bar_45",
                            "sinkbasin_2_dot_8836088_comma_2_dot_8836088_comma_7_dot_584396_comma_7_dot_584396_comma_3_dot_2518944_comma_3_dot_2518944",
                            "cloth_2_dot_6352004_comma_2_dot_6352004_comma_10_dot_27466584_comma_10_dot_27466584_comma_2_dot_968016148_comma_2_dot_968016148"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_7_bar_1_bar_45",
                            "loc_bar__minus_1_bar_10_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_10_bar_1_bar_60",
                            "clothtype",
                            "cloth_2_dot_6352004_comma_2_dot_6352004_comma_10_dot_27466584_comma_10_dot_27466584_comma_2_dot_968016148_comma_2_dot_968016148",
                            "drawer_1_dot_6384_comma_1_dot_6384_comma_9_dot_682348_comma_9_dot_682348_comma_2_dot_2044_comma_2_dot_2044"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "PUT",
                        "args": [
                            "cloth__minus_2_dot_7713764_comma__minus_2_dot_7713764_comma_1_dot_92_comma_1_dot_92_comma_0_dot_724013688_comma_0_dot_724013688",
                            "drawer_1_dot_6384_comma_1_dot_6384_comma_5_dot_9452_comma_5_dot_9452_comma_1_dot_26_comma_1_dot_26",
                            "loc_bar__minus_3_bar_5_bar_1_bar_45"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_3_bar_10_bar_2_bar_30",
                            "loc_bar_0_bar_7_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_7_bar_1_bar_45",
                            "loc_bar__minus_3_bar_5_bar_2_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_3_bar_5_bar_2_bar_60",
                            "cloth__minus_2_dot_7713764_comma__minus_2_dot_7713764_comma_1_dot_92_comma_1_dot_92_comma_0_dot_724013688_comma_0_dot_724013688"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_3_bar_5_bar_2_bar_60",
                            "loc_bar_0_bar_7_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_7_bar_1_bar_45",
                            "sinkbasin_2_dot_8836088_comma_2_dot_8836088_comma_7_dot_584396_comma_7_dot_584396_comma_3_dot_2518944_comma_3_dot_2518944",
                            "cloth__minus_2_dot_7713764_comma__minus_2_dot_7713764_comma_1_dot_92_comma_1_dot_92_comma_0_dot_724013688_comma_0_dot_724013688"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-Mug-None-SideTable-3/trial_T20190908_231853_151753",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "PUT",
                        "args": [
                            "mug_3_dot_863998652_comma_3_dot_863998652_comma__minus_6_dot_13999796_comma__minus_6_dot_13999796_comma_5_dot_4855976_comma_5_dot_4855976",
                            "sidetable_4_dot_088_comma_4_dot_088_comma_3_dot_4844_comma_3_dot_4844_comma_4_dot_9732_comma_4_dot_9732",
                            "loc_bar_1_bar_4_bar_1_bar_45"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_0_bar_1_bar_30",
                            "loc_bar_0_bar__minus_6_bar_1_bar_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar__minus_6_bar_1_bar_30",
                            "mug_3_dot_863998652_comma_3_dot_863998652_comma__minus_6_dot_13999796_comma__minus_6_dot_13999796_comma_5_dot_4855976_comma_5_dot_4855976"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "HeatObject",
                        "args": [
                            "mug_3_dot_863998652_comma_3_dot_863998652_comma__minus_6_dot_13999796_comma__minus_6_dot_13999796_comma_5_dot_4855976_comma_5_dot_4855976",
                            "agent1"
                        ],
                        "operator_body": "(:action HeatObject\n        :parameters (?o - object ?a - agent)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(cleanable ?o)\n\t\t(coolable ?o)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (isCool ?o))\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-PotatoSliced-None-DiningTable-27/trial_T20190908_101505_620069",
        "plans": []
    },
    {
        "file_name": "train/pick_clean_then_place_in_recep-Cloth-None-CounterTop-409/trial_T20190908_140608_692564",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_6_bar_6_bar_1_bar_30",
                            "loc_bar__minus_1_bar_10_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_10_bar_1_bar_60",
                            "loc_bar__minus_1_bar_9_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_9_bar_1_bar_45",
                            "cloth_2_dot_352100612_comma_2_dot_352100612_comma_8_dot_64570616_comma_8_dot_64570616_comma_3_dot_2990172_comma_3_dot_2990172"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_9_bar_1_bar_45",
                            "loc_bar__minus_1_bar_10_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_10_bar_1_bar_60",
                            "sinkbasin_1_dot_760799884_comma_1_dot_760799884_comma_10_dot_9856_comma_10_dot_9856_comma_2_dot_670436_comma_2_dot_670436",
                            "cloth_2_dot_352100612_comma_2_dot_352100612_comma_8_dot_64570616_comma_8_dot_64570616_comma_3_dot_2990172_comma_3_dot_2990172"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_6_bar_6_bar_1_bar_30",
                            "loc_bar__minus_1_bar_10_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_10_bar_1_bar_60",
                            "loc_bar__minus_1_bar_9_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_9_bar_1_bar_45",
                            "cloth_2_dot_352100612_comma_2_dot_352100612_comma_8_dot_64570616_comma_8_dot_64570616_comma_3_dot_2990172_comma_3_dot_2990172",
                            "countertop_1_dot_8339208_comma_1_dot_8339208_comma_11_dot_04_comma_11_dot_04_comma_3_dot_1583996_comma_3_dot_1583996"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_9_bar_1_bar_45",
                            "loc_bar__minus_1_bar_10_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_10_bar_1_bar_60",
                            "sinkbasin_1_dot_760799884_comma_1_dot_760799884_comma_10_dot_9856_comma_10_dot_9856_comma_2_dot_670436_comma_2_dot_670436",
                            "cloth_2_dot_352100612_comma_2_dot_352100612_comma_8_dot_64570616_comma_8_dot_64570616_comma_3_dot_2990172_comma_3_dot_2990172"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-Cup-None-Cabinet-26/trial_T20190909_085908_816209",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar_6_bar_1_bar_30",
                            "loc_bar__minus_2_bar_7_bar_0_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar_7_bar_0_bar_45",
                            "cup__minus_1_dot_602094292_comma__minus_1_dot_602094292_comma_9_dot_31966972_comma_9_dot_31966972_comma_3_dot_6012132_comma_3_dot_6012132"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar_7_bar_0_bar_45",
                            "loc_bar__minus_8_bar_18_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "ChillObject",
                        "args": [
                            "cup__minus_1_dot_602094292_comma__minus_1_dot_602094292_comma_9_dot_31966972_comma_9_dot_31966972_comma_3_dot_6012132_comma_3_dot_6012132",
                            "loc_bar__minus_8_bar_18_bar_3_bar_60",
                            "agent1",
                            "fridge__minus_11_dot_208_comma__minus_11_dot_208_comma_17_dot_708_comma_17_dot_708_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action ChillObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)"
                    },
                    {
                        "action": "RemoveObject",
                        "args": [
                            "cup__minus_1_dot_602094292_comma__minus_1_dot_602094292_comma_9_dot_31966972_comma_9_dot_31966972_comma_3_dot_6012132_comma_3_dot_6012132",
                            "diningtable__minus_1_dot_86_comma__minus_1_dot_86_comma_12_dot_012_comma_12_dot_012_comma_0_dot_024_comma_0_dot_024",
                            "agent1",
                            "cabinet__minus_9_dot_89871024_comma__minus_9_dot_89871024_comma_1_dot_5684848_comma_1_dot_5684848_comma_8_dot_186748_comma_8_dot_186748"
                        ],
                        "operator_body": "(:action RemoveObject\n        :parameters (?o - object ?rStart - receptacle ?a - agent ?rEnd - receptacle)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rStart)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rEnd)\n\t\t(not (inReceptacle ?o ?rStart))\n\t\t)\n)"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "PUT",
                        "args": [
                            "cup__minus_1_dot_612385272_comma__minus_1_dot_612385272_comma_0_dot_815096_comma_0_dot_815096_comma_4_dot_07303236_comma_4_dot_07303236",
                            "cabinet__minus_1_dot_918902992_comma__minus_1_dot_918902992_comma_1_dot_5684848_comma_1_dot_5684848_comma_8_dot_186748_comma_8_dot_186748",
                            "loc_bar__minus_2_bar_4_bar_2_bar__minus_30"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    },
                    {
                        "action": "PUT",
                        "args": [
                            "cup__minus_1_dot_612385272_comma__minus_1_dot_612385272_comma_0_dot_815096_comma_0_dot_815096_comma_4_dot_07303236_comma_4_dot_07303236",
                            "fridge__minus_11_dot_208_comma__minus_11_dot_208_comma_17_dot_708_comma_17_dot_708_comma_0_dot_0_comma_0_dot_0",
                            "loc_bar__minus_8_bar_18_bar_3_bar_60"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar_6_bar_1_bar_30",
                            "loc_bar__minus_2_bar_4_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar_4_bar_2_bar_45",
                            "cup__minus_1_dot_612385272_comma__minus_1_dot_612385272_comma_0_dot_815096_comma_0_dot_815096_comma_4_dot_07303236_comma_4_dot_07303236",
                            "microwave__minus_1_dot_436_comma__minus_1_dot_436_comma_0_dot_896_comma_0_dot_896_comma_3_dot_6564356_comma_3_dot_6564356"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar_4_bar_2_bar_45",
                            "loc_bar__minus_8_bar_18_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "HeatObject",
                        "args": [
                            "cup__minus_1_dot_612385272_comma__minus_1_dot_612385272_comma_0_dot_815096_comma_0_dot_815096_comma_4_dot_07303236_comma_4_dot_07303236",
                            "agent1"
                        ],
                        "operator_body": "(:action HeatObject\n        :parameters (?o - object ?a - agent)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(cleanable ?o)\n\t\t(coolable ?o)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (isCool ?o))\n\t\t)\n)"
                    },
                    {
                        "action": "CoolObject",
                        "args": [
                            "cup__minus_1_dot_612385272_comma__minus_1_dot_612385272_comma_0_dot_815096_comma_0_dot_815096_comma_4_dot_07303236_comma_4_dot_07303236",
                            "loc_bar__minus_8_bar_18_bar_3_bar_60",
                            "agent1",
                            "fridge__minus_11_dot_208_comma__minus_11_dot_208_comma_17_dot_708_comma_17_dot_708_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action CoolObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(inReceptacle ?o ?r)\n\t\t(isHot ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin-13/trial_T20190908_101527_364763",
        "plans": []
    },
    {
        "file_name": "train/pick_and_place_simple-SprayBottle-None-Toilet-418/trial_T20190906_190917_905379",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SprayBottleType) \n                (receptacleType ?r ToiletType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "PUT",
                        "args": [
                            "spraybottle__minus_10_dot_4812212_comma__minus_10_dot_4812212_comma__minus_15_dot_0615692_comma__minus_15_dot_0615692_comma_3_dot_23161626_comma_3_dot_23161626",
                            "toilet__minus_1_dot_810838224_comma__minus_1_dot_810838224_comma__minus_12_dot_2095146_comma__minus_12_dot_2095146_comma_0_dot_0025726184_comma_0_dot_0025726184",
                            "loc_bar__minus_2_bar__minus_10_bar_2_bar_15"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SprayBottleType) \n                (receptacleType ?r ToiletType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar__minus_2_bar_3_bar_30",
                            "loc_bar__minus_2_bar__minus_10_bar_2_bar_15"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar__minus_10_bar_2_bar_15",
                            "loc_bar__minus_8_bar__minus_15_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar__minus_15_bar_3_bar_60",
                            "spraybottle__minus_10_dot_4812212_comma__minus_10_dot_4812212_comma__minus_15_dot_0615692_comma__minus_15_dot_0615692_comma_3_dot_23161626_comma_3_dot_23161626",
                            "countertop__minus_10_dot_532_comma__minus_10_dot_532_comma__minus_12_dot_164_comma__minus_12_dot_164_comma_3_dot_376_comma_3_dot_376"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar__minus_15_bar_3_bar_60",
                            "loc_bar__minus_2_bar__minus_10_bar_2_bar_15"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar__minus_10_bar_2_bar_15",
                            "spraybottletype",
                            "spraybottle__minus_10_dot_4812212_comma__minus_10_dot_4812212_comma__minus_15_dot_0615692_comma__minus_15_dot_0615692_comma_3_dot_23161626_comma_3_dot_23161626",
                            "toilet__minus_1_dot_810838224_comma__minus_1_dot_810838224_comma__minus_12_dot_2095146_comma__minus_12_dot_2095146_comma_0_dot_0025726184_comma_0_dot_0025726184"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SprayBottleType) \n                (receptacleType ?r ToiletType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar__minus_2_bar_3_bar_30",
                            "loc_bar__minus_8_bar__minus_15_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar__minus_15_bar_3_bar_60",
                            "spraybottle__minus_10_dot_4812212_comma__minus_10_dot_4812212_comma__minus_15_dot_0615692_comma__minus_15_dot_0615692_comma_3_dot_23161626_comma_3_dot_23161626"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "RemoveObject",
                        "args": [
                            "spraybottle__minus_10_dot_4812212_comma__minus_10_dot_4812212_comma__minus_15_dot_0615692_comma__minus_15_dot_0615692_comma_3_dot_23161626_comma_3_dot_23161626",
                            "countertop__minus_10_dot_532_comma__minus_10_dot_532_comma__minus_12_dot_164_comma__minus_12_dot_164_comma_3_dot_376_comma_3_dot_376",
                            "agent1",
                            "toilet__minus_1_dot_810838224_comma__minus_1_dot_810838224_comma__minus_12_dot_2095146_comma__minus_12_dot_2095146_comma_0_dot_0025726184_comma_0_dot_0025726184"
                        ],
                        "operator_body": "(:action RemoveObject\n        :parameters (?o - object ?rStart - receptacle ?a - agent ?rEnd - receptacle)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rStart)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rEnd)\n\t\t(not (inReceptacle ?o ?rStart))\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-Egg-None-Microwave-18/trial_T20190909_113607_998821",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "PUT",
                        "args": [
                            "egg_5_dot_77031948_comma_5_dot_77031948_comma_8_dot_54814624_comma_8_dot_54814624_comma_3_dot_76262_comma_3_dot_76262",
                            "microwave_0_dot_434951068_comma_0_dot_434951068_comma_1_dot_052_comma_1_dot_052_comma_3_dot_926775456_comma_3_dot_926775456",
                            "loc_bar_1_bar_6_bar_2_bar_30"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar_23_bar_2_bar_30",
                            "loc_bar_3_bar_9_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_3_bar_9_bar_1_bar_45",
                            "egg_5_dot_77031948_comma_5_dot_77031948_comma_8_dot_54814624_comma_8_dot_54814624_comma_3_dot_76262_comma_3_dot_76262",
                            "sinkbasin_5_dot_5492_comma_5_dot_5492_comma_9_dot_356_comma_9_dot_356_comma_3_dot_5209168_comma_3_dot_5209168"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_3_bar_9_bar_1_bar_45",
                            "loc_bar_4_bar_22_bar_1_bar_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "ChillObject",
                        "args": [
                            "egg_5_dot_77031948_comma_5_dot_77031948_comma_8_dot_54814624_comma_8_dot_54814624_comma_3_dot_76262_comma_3_dot_76262",
                            "loc_bar_4_bar_22_bar_1_bar_30",
                            "agent1",
                            "fridge_8_dot_14_comma_8_dot_14_comma_22_dot_504_comma_22_dot_504_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action ChillObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan-17/trial_T20190906_210118_740854",
        "plans": []
    },
    {
        "file_name": "train/look_at_obj_in_light-Box-None-FloorLamp-205/trial_T20190906_211925_059562",
        "plans": []
    },
    {
        "file_name": "train/look_at_obj_in_light-Vase-None-FloorLamp-221/trial_T20190906_224945_676475",
        "plans": []
    },
    {
        "file_name": "train/pick_and_place_simple-TomatoSliced-None-Fridge-6/trial_T20190907_233305_019895",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_3_bar__minus_1_bar_3_bar_30",
                            "loc_bar_2_bar__minus_4_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_2_bar__minus_4_bar_2_bar_45",
                            "loc_bar__minus_7_bar__minus_4_bar_3_bar_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_7_bar__minus_4_bar_3_bar_30",
                            "tomato__minus_9_dot_94318_comma__minus_9_dot_94318_comma__minus_3_dot_9191232_comma__minus_3_dot_9191232_comma_5_dot_3709688_comma_5_dot_3709688"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_7_bar__minus_4_bar_3_bar_30",
                            "loc_bar__minus_7_bar_6_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CutObject",
                        "args": [
                            "tomato__minus_9_dot_94318_comma__minus_9_dot_94318_comma__minus_3_dot_9191232_comma__minus_3_dot_9191232_comma_5_dot_3709688_comma_5_dot_3709688",
                            "loc_bar__minus_7_bar_6_bar_1_bar_60",
                            "agent1",
                            "countertop__minus_5_dot_94_comma__minus_5_dot_94_comma_5_dot_276_comma_5_dot_276_comma_3_dot_7856_comma_3_dot_7856"
                        ],
                        "operator_body": "(:action CutObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r CounterTopType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-Plate-None-Cabinet-22/trial_T20190907_200807_715947",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_5_bar_0_bar_3_bar_30",
                            "loc_bar_0_bar__minus_2_bar_2_bar__minus_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar__minus_2_bar_2_bar__minus_30",
                            "loc_bar__minus_6_bar__minus_2_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_6_bar__minus_2_bar_2_bar_45",
                            "plate__minus_5_dot_834795_comma__minus_5_dot_834795_comma__minus_4_dot_94039632_comma__minus_4_dot_94039632_comma_3_dot_3733568_comma_3_dot_3733568"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_6_bar__minus_2_bar_2_bar_45",
                            "loc_bar_0_bar__minus_2_bar_2_bar__minus_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar__minus_2_bar_2_bar__minus_30",
                            "loc_bar__minus_8_bar_4_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "ChillObject",
                        "args": [
                            "plate__minus_5_dot_834795_comma__minus_5_dot_834795_comma__minus_4_dot_94039632_comma__minus_4_dot_94039632_comma_3_dot_3733568_comma_3_dot_3733568",
                            "loc_bar__minus_8_bar_4_bar_3_bar_60",
                            "agent1",
                            "fridge__minus_11_dot_424_comma__minus_11_dot_424_comma_3_dot_408_comma_3_dot_408_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action ChillObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar_4_bar_3_bar_60",
                            "loc_bar_0_bar__minus_2_bar_2_bar__minus_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar__minus_2_bar_2_bar__minus_30",
                            "platetype",
                            "plate__minus_5_dot_834795_comma__minus_5_dot_834795_comma__minus_4_dot_94039632_comma__minus_4_dot_94039632_comma_3_dot_3733568_comma_3_dot_3733568",
                            "cabinet_0_dot_659999968_comma_0_dot_659999968_comma__minus_4_dot_79_comma__minus_4_dot_79_comma_8_dot_04_comma_8_dot_04"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-Egg-None-DiningTable-11/trial_T20190907_125404_996063",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_5_bar__minus_2_bar_0_bar_30",
                            "loc_bar__minus_10_bar__minus_1_bar_0_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_10_bar__minus_1_bar_0_bar_45",
                            "egg__minus_10_dot_45627784_comma__minus_10_dot_45627784_comma_2_dot_099985836_comma_2_dot_099985836_comma_3_dot_9495532_comma_3_dot_9495532",
                            "diningtable__minus_8_dot_812_comma__minus_8_dot_812_comma_1_dot_792_comma_1_dot_792_comma_3_dot_96_comma_3_dot_96"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "HeatObject",
                        "args": [
                            "egg__minus_10_dot_45627784_comma__minus_10_dot_45627784_comma_2_dot_099985836_comma_2_dot_099985836_comma_3_dot_9495532_comma_3_dot_9495532",
                            "agent1"
                        ],
                        "operator_body": "(:action HeatObject\n        :parameters (?o - object ?a - agent)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(cleanable ?o)\n\t\t(coolable ?o)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (isCool ?o))\n\t\t)\n)"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_5_bar__minus_2_bar_0_bar_30",
                            "loc_bar__minus_10_bar__minus_1_bar_0_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_10_bar__minus_1_bar_0_bar_45",
                            "egg__minus_10_dot_45627784_comma__minus_10_dot_45627784_comma_2_dot_099985836_comma_2_dot_099985836_comma_3_dot_9495532_comma_3_dot_9495532"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "HeatObject",
                        "args": [
                            "egg__minus_10_dot_45627784_comma__minus_10_dot_45627784_comma_2_dot_099985836_comma_2_dot_099985836_comma_3_dot_9495532_comma_3_dot_9495532",
                            "agent1"
                        ],
                        "operator_body": "(:action HeatObject\n        :parameters (?o - object ?a - agent)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(cleanable ?o)\n\t\t(coolable ?o)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (isCool ?o))\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/look_at_obj_in_light-AlarmClock-None-DeskLamp-304/trial_T20190907_170557_255365",
        "plans": []
    },
    {
        "file_name": "train/pick_and_place_simple-TomatoSliced-None-CounterTop-25/trial_T20190908_233941_496641",
        "plans": []
    },
    {
        "file_name": "train/look_at_obj_in_light-Pillow-None-FloorLamp-221/trial_T20190907_103032_102765",
        "plans": []
    },
    {
        "file_name": "train/pick_and_place_simple-Book-None-Cabinet-310/trial_T20190908_154222_896076",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "PUT",
                        "args": [
                            "book_6_dot_6877508_comma_6_dot_6877508_comma__minus_3_dot_3330572_comma__minus_3_dot_3330572_comma_2_dot_7280964_comma_2_dot_7280964",
                            "cabinet__minus_7_dot_350444_comma__minus_7_dot_350444_comma__minus_7_dot_674432_comma__minus_7_dot_674432_comma_6_dot_10477304_comma_6_dot_10477304",
                            "loc_bar__minus_6_bar__minus_5_bar_2_bar_15"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_3_bar__minus_1_bar_2_bar_30",
                            "loc_bar_5_bar__minus_3_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_5_bar__minus_3_bar_1_bar_60",
                            "book_6_dot_6877508_comma_6_dot_6877508_comma__minus_3_dot_3330572_comma__minus_3_dot_3330572_comma_2_dot_7280964_comma_2_dot_7280964",
                            "sidetable_6_dot_412_comma_6_dot_412_comma__minus_3_dot_952_comma__minus_3_dot_952_comma_1_dot_852_comma_1_dot_852"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_5_bar__minus_3_bar_1_bar_60",
                            "loc_bar__minus_1_bar__minus_5_bar_2_bar_15"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar__minus_5_bar_2_bar_15",
                            "booktype",
                            "book_6_dot_6877508_comma_6_dot_6877508_comma__minus_3_dot_3330572_comma__minus_3_dot_3330572_comma_2_dot_7280964_comma_2_dot_7280964",
                            "cabinet__minus_0_dot_1202516556_comma__minus_0_dot_1202516556_comma__minus_7_dot_674432_comma__minus_7_dot_674432_comma_6_dot_10477304_comma_6_dot_10477304"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/look_at_obj_in_light-RemoteControl-None-FloorLamp-202/trial_T20190909_014548_223224",
        "plans": []
    },
    {
        "file_name": "train/pick_and_place_simple-LettuceSliced-None-DiningTable-24/trial_T20190906_220147_111155",
        "plans": []
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-Apple-None-Fridge-22/trial_T20190908_210352_288346",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "PUT",
                        "args": [
                            "apple_1_dot_13764894_comma_1_dot_13764894_comma_6_dot_32196092_comma_6_dot_32196092_comma_4_dot_61758328_comma_4_dot_61758328",
                            "fridge__minus_11_dot_424_comma__minus_11_dot_424_comma_3_dot_408_comma_3_dot_408_comma_0_dot_0_comma_0_dot_0",
                            "loc_bar__minus_8_bar_4_bar_3_bar_60"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_6_bar_3_bar_0_bar_30",
                            "loc_bar_1_bar_9_bar_2_bar_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar_9_bar_2_bar_30",
                            "apple_1_dot_13764894_comma_1_dot_13764894_comma_6_dot_32196092_comma_6_dot_32196092_comma_4_dot_61758328_comma_4_dot_61758328",
                            "countertop_3_dot_636_comma_3_dot_636_comma_3_dot_156_comma_3_dot_156_comma_4_dot_5888_comma_4_dot_5888"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "HeatObject",
                        "args": [
                            "apple_1_dot_13764894_comma_1_dot_13764894_comma_6_dot_32196092_comma_6_dot_32196092_comma_4_dot_61758328_comma_4_dot_61758328",
                            "agent1"
                        ],
                        "operator_body": "(:action HeatObject\n        :parameters (?o - object ?a - agent)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(cleanable ?o)\n\t\t(coolable ?o)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (isCool ?o))\n\t\t)\n)"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_6_bar_3_bar_0_bar_30",
                            "loc_bar_1_bar_9_bar_2_bar_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar_9_bar_2_bar_30",
                            "apple_1_dot_13764894_comma_1_dot_13764894_comma_6_dot_32196092_comma_6_dot_32196092_comma_4_dot_61758328_comma_4_dot_61758328"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "RemoveObject",
                        "args": [
                            "apple_1_dot_13764894_comma_1_dot_13764894_comma_6_dot_32196092_comma_6_dot_32196092_comma_4_dot_61758328_comma_4_dot_61758328",
                            "countertop_3_dot_636_comma_3_dot_636_comma_3_dot_156_comma_3_dot_156_comma_4_dot_5888_comma_4_dot_5888",
                            "agent1",
                            "fridge__minus_11_dot_424_comma__minus_11_dot_424_comma_3_dot_408_comma_3_dot_408_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action RemoveObject\n        :parameters (?o - object ?rStart - receptacle ?a - agent ?rEnd - receptacle)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rStart)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rEnd)\n\t\t(not (inReceptacle ?o ?rStart))\n\t\t)\n)"
                    },
                    {
                        "action": "HeatObject",
                        "args": [
                            "apple_1_dot_13764894_comma_1_dot_13764894_comma_6_dot_32196092_comma_6_dot_32196092_comma_4_dot_61758328_comma_4_dot_61758328",
                            "agent1"
                        ],
                        "operator_body": "(:action HeatObject\n        :parameters (?o - object ?a - agent)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(cleanable ?o)\n\t\t(coolable ?o)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (isCool ?o))\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin-19/trial_T20190913_161546_241277",
        "plans": []
    },
    {
        "file_name": "train/pick_and_place_simple-Tomato-None-Microwave-8/trial_T20190907_205050_993517",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_12_bar__minus_6_bar_0_bar_30",
                            "loc_bar_3_bar_8_bar_1_bar__minus_15"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_3_bar_8_bar_1_bar__minus_15",
                            "tomato_5_dot_55385304_comma_5_dot_55385304_comma_7_dot_60457228_comma_7_dot_60457228_comma_7_dot_0413766_comma_7_dot_0413766"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "RemoveObject",
                        "args": [
                            "tomato_5_dot_55385304_comma_5_dot_55385304_comma_7_dot_60457228_comma_7_dot_60457228_comma_7_dot_0413766_comma_7_dot_0413766",
                            "fridge_5_dot_668_comma_5_dot_668_comma_8_dot_404_comma_8_dot_404_comma_0_dot_0_comma_0_dot_0",
                            "agent1",
                            "microwave_5_dot_688_comma_5_dot_688_comma_0_dot_092_comma_0_dot_092_comma_4_dot_6_comma_4_dot_6"
                        ],
                        "operator_body": "(:action RemoveObject\n        :parameters (?o - object ?rStart - receptacle ?a - agent ?rEnd - receptacle)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rStart)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rEnd)\n\t\t(not (inReceptacle ?o ?rStart))\n\t\t)\n)"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "PUT",
                        "args": [
                            "tomato_5_dot_68187808_comma_5_dot_68187808_comma_4_dot_32_comma_4_dot_32_comma_1_dot_018626212_comma_1_dot_018626212",
                            "microwave_5_dot_688_comma_5_dot_688_comma_0_dot_092_comma_0_dot_092_comma_4_dot_6_comma_4_dot_6",
                            "loc_bar_2_bar_0_bar_1_bar_30"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_12_bar__minus_6_bar_0_bar_30",
                            "loc_bar_2_bar_0_bar_1_bar_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_2_bar_0_bar_1_bar_30",
                            "loc_bar_3_bar_8_bar_1_bar__minus_15"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_3_bar_8_bar_1_bar__minus_15",
                            "tomato_5_dot_55385304_comma_5_dot_55385304_comma_7_dot_60457228_comma_7_dot_60457228_comma_7_dot_0413766_comma_7_dot_0413766",
                            "fridge_5_dot_668_comma_5_dot_668_comma_8_dot_404_comma_8_dot_404_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_3_bar_8_bar_1_bar__minus_15",
                            "loc_bar_2_bar_0_bar_1_bar_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_2_bar_0_bar_1_bar_30",
                            "tomatotype",
                            "tomato_5_dot_55385304_comma_5_dot_55385304_comma_7_dot_60457228_comma_7_dot_60457228_comma_7_dot_0413766_comma_7_dot_0413766",
                            "microwave_5_dot_688_comma_5_dot_688_comma_0_dot_092_comma_0_dot_092_comma_4_dot_6_comma_4_dot_6"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/look_at_obj_in_light-AlarmClock-None-DeskLamp-305/trial_T20190908_082723_323728",
        "plans": []
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-Bowl-None-DiningTable-4/trial_T20190908_031115_333928",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_5_bar_12_bar_1_bar_30",
                            "loc_bar__minus_10_bar_11_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_10_bar_11_bar_3_bar_60",
                            "loc_bar__minus_5_bar_11_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_5_bar_11_bar_1_bar_45",
                            "bowl__minus_2_dot_648344_comma__minus_2_dot_648344_comma_11_dot_271248_comma_11_dot_271248_comma_4_dot_18334436_comma_4_dot_18334436"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_5_bar_11_bar_1_bar_45",
                            "loc_bar__minus_10_bar_11_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "ChillObject",
                        "args": [
                            "bowl__minus_2_dot_648344_comma__minus_2_dot_648344_comma_11_dot_271248_comma_11_dot_271248_comma_4_dot_18334436_comma_4_dot_18334436",
                            "loc_bar__minus_10_bar_11_bar_3_bar_60",
                            "agent1",
                            "fridge__minus_14_dot_076_comma__minus_14_dot_076_comma_10_dot_868_comma_10_dot_868_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action ChillObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/look_at_obj_in_light-Book-None-DeskLamp-309/trial_T20190907_175916_775742",
        "plans": []
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-Mug-None-CoffeeMachine-14/trial_T20190907_012116_449794",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_5_bar_9_bar_2_bar_30",
                            "loc_bar_2_bar__minus_3_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_2_bar__minus_3_bar_2_bar_45",
                            "mug_2_dot_008_comma_2_dot_008_comma__minus_5_dot_8424_comma__minus_5_dot_8424_comma_3_dot_761999844_comma_3_dot_761999844"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "HeatObject",
                        "args": [
                            "mug_2_dot_008_comma_2_dot_008_comma__minus_5_dot_8424_comma__minus_5_dot_8424_comma_3_dot_761999844_comma_3_dot_761999844",
                            "agent1"
                        ],
                        "operator_body": "(:action HeatObject\n        :parameters (?o - object ?a - agent)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(cleanable ?o)\n\t\t(coolable ?o)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (isCool ?o))\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin-14/trial_T20190908_123539_426345",
        "plans": []
    },
    {
        "file_name": "train/pick_and_place_simple-TomatoSliced-None-SideTable-28/trial_T20190908_213552_035696",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_7_bar__minus_12_bar_3_bar_30",
                            "loc_bar__minus_16_bar__minus_4_bar_0_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_16_bar__minus_4_bar_0_bar_60",
                            "tomato__minus_16_dot_24940108_comma__minus_16_dot_24940108_comma__minus_1_dot_235999824_comma__minus_1_dot_235999824_comma_2_dot_968249796_comma_2_dot_968249796"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_16_bar__minus_4_bar_0_bar_60",
                            "loc_bar__minus_7_bar__minus_12_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CutObject",
                        "args": [
                            "tomato__minus_16_dot_24940108_comma__minus_16_dot_24940108_comma__minus_1_dot_235999824_comma__minus_1_dot_235999824_comma_2_dot_968249796_comma_2_dot_968249796",
                            "loc_bar__minus_7_bar__minus_12_bar_2_bar_45",
                            "agent1",
                            "countertop__minus_7_dot_748_comma__minus_7_dot_748_comma__minus_14_dot_694479_comma__minus_14_dot_694479_comma_3_dot_9112_comma_3_dot_9112"
                        ],
                        "operator_body": "(:action CutObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r CounterTopType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-PotatoSliced-None-CounterTop-22/trial_T20190909_040642_077525",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_7_bar_8_bar_3_bar_30",
                            "loc_bar__minus_1_bar__minus_2_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar__minus_2_bar_2_bar_45",
                            "loc_bar__minus_2_bar__minus_2_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar__minus_2_bar_2_bar_45",
                            "potato__minus_2_dot_392156_comma__minus_2_dot_392156_comma__minus_4_dot_478636_comma__minus_4_dot_478636_comma_3_dot_734_comma_3_dot_734"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar__minus_2_bar_2_bar_45",
                            "loc_bar__minus_8_bar_0_bar_3_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CutObject",
                        "args": [
                            "potato__minus_2_dot_392156_comma__minus_2_dot_392156_comma__minus_4_dot_478636_comma__minus_4_dot_478636_comma_3_dot_734_comma_3_dot_734",
                            "loc_bar__minus_8_bar_0_bar_3_bar_45",
                            "agent1",
                            "countertop__minus_10_dot_7976_comma__minus_10_dot_7976_comma_0_dot_4244_comma_0_dot_4244_comma_3_dot_7872_comma_3_dot_7872"
                        ],
                        "operator_body": "(:action CutObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r CounterTopType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar_0_bar_3_bar_45",
                            "loc_bar__minus_8_bar_4_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "ChillObject",
                        "args": [
                            "potato__minus_2_dot_392156_comma__minus_2_dot_392156_comma__minus_4_dot_478636_comma__minus_4_dot_478636_comma_3_dot_734_comma_3_dot_734",
                            "loc_bar__minus_8_bar_4_bar_3_bar_60",
                            "agent1",
                            "fridge__minus_11_dot_424_comma__minus_11_dot_424_comma_3_dot_408_comma_3_dot_408_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action ChillObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-PotatoSliced-None-CounterTop-8/trial_T20190910_080205_480727",
        "plans": []
    },
    {
        "file_name": "train/pick_and_place_simple-TomatoSliced-None-SideTable-3/trial_T20190908_091658_623792",
        "plans": []
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-TomatoSliced-None-CounterTop-14/trial_T20190911_165306_552824",
        "plans": []
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-Cup-None-Shelf-1/trial_T20190906_230209_175441",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_8_bar__minus_3_bar_2_bar_30",
                            "loc_bar__minus_5_bar__minus_7_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_5_bar__minus_7_bar_3_bar_60",
                            "cup__minus_6_dot_96904136_comma__minus_6_dot_96904136_comma__minus_6_dot_69571496_comma__minus_6_dot_69571496_comma_3_dot_0705516_comma_3_dot_0705516"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "RemoveObject",
                        "args": [
                            "cup__minus_6_dot_96904136_comma__minus_6_dot_96904136_comma__minus_6_dot_69571496_comma__minus_6_dot_69571496_comma_3_dot_0705516_comma_3_dot_0705516",
                            "sinkbasin__minus_7_dot_6324_comma__minus_7_dot_6324_comma__minus_5_dot_9552_comma__minus_5_dot_9552_comma_3_dot_0368_comma_3_dot_0368",
                            "agent1",
                            "shelf_7_dot_216_comma_7_dot_216_comma__minus_10_dot_2544_comma__minus_10_dot_2544_comma_3_dot_4799996_comma_3_dot_4799996"
                        ],
                        "operator_body": "(:action RemoveObject\n        :parameters (?o - object ?rStart - receptacle ?a - agent ?rEnd - receptacle)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rStart)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rEnd)\n\t\t(not (inReceptacle ?o ?rStart))\n\t\t)\n)"
                    },
                    {
                        "action": "HeatObject",
                        "args": [
                            "cup__minus_6_dot_96904136_comma__minus_6_dot_96904136_comma__minus_6_dot_69571496_comma__minus_6_dot_69571496_comma_3_dot_0705516_comma_3_dot_0705516",
                            "agent1"
                        ],
                        "operator_body": "(:action HeatObject\n        :parameters (?o - object ?a - agent)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(cleanable ?o)\n\t\t(coolable ?o)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (isCool ?o))\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_clean_then_place_in_recep-Egg-None-DiningTable-23/trial_T20190908_083733_678856",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "PUT",
                        "args": [
                            "egg__minus_1_dot_37582338_comma__minus_1_dot_37582338_comma__minus_4_dot_33624936_comma__minus_4_dot_33624936_comma_4_dot_52712204_comma_4_dot_52712204",
                            "diningtable__minus_9_dot_73199272_comma__minus_9_dot_73199272_comma__minus_6_dot_78581428_comma__minus_6_dot_78581428_comma_3_dot_5828_comma_3_dot_5828",
                            "loc_bar__minus_5_bar__minus_7_bar_3_bar_30"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_5_bar__minus_5_bar_0_bar_30",
                            "loc_bar__minus_4_bar__minus_4_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_4_bar_1_bar_45",
                            "egg__minus_1_dot_37582338_comma__minus_1_dot_37582338_comma__minus_4_dot_33624936_comma__minus_4_dot_33624936_comma_4_dot_52712204_comma_4_dot_52712204"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_4_bar_1_bar_45",
                            "loc_bar__minus_4_bar__minus_7_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_7_bar_1_bar_60",
                            "sinkbasin__minus_1_dot_4024_comma__minus_1_dot_4024_comma__minus_8_dot_0756_comma__minus_8_dot_0756_comma_3_dot_1465648_comma_3_dot_1465648",
                            "egg__minus_1_dot_37582338_comma__minus_1_dot_37582338_comma__minus_4_dot_33624936_comma__minus_4_dot_33624936_comma_4_dot_52712204_comma_4_dot_52712204"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_5_bar__minus_5_bar_0_bar_30",
                            "loc_bar__minus_4_bar__minus_4_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_4_bar_1_bar_45",
                            "egg__minus_1_dot_37582338_comma__minus_1_dot_37582338_comma__minus_4_dot_33624936_comma__minus_4_dot_33624936_comma_4_dot_52712204_comma_4_dot_52712204"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_4_bar_1_bar_45",
                            "loc_bar__minus_4_bar__minus_7_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_7_bar_1_bar_60",
                            "sinkbasin__minus_1_dot_4024_comma__minus_1_dot_4024_comma__minus_8_dot_0756_comma__minus_8_dot_0756_comma_3_dot_1465648_comma_3_dot_1465648",
                            "egg__minus_1_dot_37582338_comma__minus_1_dot_37582338_comma__minus_4_dot_33624936_comma__minus_4_dot_33624936_comma_4_dot_52712204_comma_4_dot_52712204"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_7_bar_1_bar_60",
                            "loc_bar__minus_5_bar__minus_7_bar_3_bar_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_5_bar__minus_7_bar_3_bar_30",
                            "eggtype",
                            "egg__minus_1_dot_37582338_comma__minus_1_dot_37582338_comma__minus_4_dot_33624936_comma__minus_4_dot_33624936_comma_4_dot_52712204_comma_4_dot_52712204",
                            "diningtable__minus_9_dot_73199272_comma__minus_9_dot_73199272_comma__minus_6_dot_78581428_comma__minus_6_dot_78581428_comma_3_dot_5828_comma_3_dot_5828"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_5_bar__minus_5_bar_0_bar_30",
                            "loc_bar__minus_4_bar__minus_4_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_4_bar_1_bar_45",
                            "egg__minus_1_dot_37582338_comma__minus_1_dot_37582338_comma__minus_4_dot_33624936_comma__minus_4_dot_33624936_comma_4_dot_52712204_comma_4_dot_52712204",
                            "fridge__minus_1_dot_32_comma__minus_1_dot_32_comma__minus_3_dot_08_comma__minus_3_dot_08_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_4_bar_1_bar_45",
                            "loc_bar__minus_4_bar__minus_7_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_7_bar_1_bar_60",
                            "sinkbasin__minus_1_dot_4024_comma__minus_1_dot_4024_comma__minus_8_dot_0756_comma__minus_8_dot_0756_comma_3_dot_1465648_comma_3_dot_1465648",
                            "egg__minus_1_dot_37582338_comma__minus_1_dot_37582338_comma__minus_4_dot_33624936_comma__minus_4_dot_33624936_comma_4_dot_52712204_comma_4_dot_52712204"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_7_bar_1_bar_60",
                            "loc_bar__minus_5_bar__minus_7_bar_3_bar_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_5_bar__minus_7_bar_3_bar_30",
                            "eggtype",
                            "egg__minus_1_dot_37582338_comma__minus_1_dot_37582338_comma__minus_4_dot_33624936_comma__minus_4_dot_33624936_comma_4_dot_52712204_comma_4_dot_52712204",
                            "diningtable__minus_9_dot_73199272_comma__minus_9_dot_73199272_comma__minus_6_dot_78581428_comma__minus_6_dot_78581428_comma_3_dot_5828_comma_3_dot_5828"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_clean_then_place_in_recep-Spatula-None-SideTable-3/trial_T20190907_230305_502659",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar_1_bar_1_bar_30",
                            "loc_bar__minus_4_bar_4_bar_3_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar_4_bar_3_bar_45",
                            "spatula__minus_6_dot_64225052_comma__minus_6_dot_64225052_comma_4_dot_379692_comma_4_dot_379692_comma_5_dot_35199976_comma_5_dot_35199976"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar_4_bar_3_bar_45",
                            "loc_bar__minus_4_bar__minus_3_bar_3_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_3_bar_3_bar_45",
                            "sinkbasin__minus_7_dot_34220268_comma__minus_7_dot_34220268_comma__minus_2_dot_168930532_comma__minus_2_dot_168930532_comma_4_dot_16_comma_4_dot_16",
                            "spatula__minus_6_dot_64225052_comma__minus_6_dot_64225052_comma_4_dot_379692_comma_4_dot_379692_comma_5_dot_35199976_comma_5_dot_35199976"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    },
                    {
                        "action": "RemoveObject",
                        "args": [
                            "spatula__minus_6_dot_64225052_comma__minus_6_dot_64225052_comma_4_dot_379692_comma_4_dot_379692_comma_5_dot_35199976_comma_5_dot_35199976",
                            "countertop__minus_7_dot_236_comma__minus_7_dot_236_comma_4_dot_728_comma_4_dot_728_comma_5_dot_434_comma_5_dot_434",
                            "agent1",
                            "sidetable_4_dot_088_comma_4_dot_088_comma_3_dot_4844_comma_3_dot_4844_comma_4_dot_9732_comma_4_dot_9732"
                        ],
                        "operator_body": "(:action RemoveObject\n        :parameters (?o - object ?rStart - receptacle ?a - agent ?rEnd - receptacle)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rStart)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rEnd)\n\t\t(not (inReceptacle ?o ?rStart))\n\t\t)\n)"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar_1_bar_1_bar_30",
                            "loc_bar_1_bar_4_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar_4_bar_1_bar_45",
                            "loc_bar__minus_4_bar_4_bar_3_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar_4_bar_3_bar_45",
                            "spatula__minus_6_dot_64225052_comma__minus_6_dot_64225052_comma_4_dot_379692_comma_4_dot_379692_comma_5_dot_35199976_comma_5_dot_35199976",
                            "countertop__minus_7_dot_236_comma__minus_7_dot_236_comma_4_dot_728_comma_4_dot_728_comma_5_dot_434_comma_5_dot_434"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar_4_bar_3_bar_45",
                            "loc_bar_1_bar_4_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar_4_bar_1_bar_45",
                            "loc_bar__minus_4_bar__minus_3_bar_3_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_3_bar_3_bar_45",
                            "sinkbasin__minus_7_dot_34220268_comma__minus_7_dot_34220268_comma__minus_2_dot_168930532_comma__minus_2_dot_168930532_comma_4_dot_16_comma_4_dot_16",
                            "spatula__minus_6_dot_64225052_comma__minus_6_dot_64225052_comma_4_dot_379692_comma_4_dot_379692_comma_5_dot_35199976_comma_5_dot_35199976"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_3_bar_3_bar_45",
                            "loc_bar_1_bar_4_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar_4_bar_1_bar_45",
                            "spatulatype",
                            "spatula__minus_6_dot_64225052_comma__minus_6_dot_64225052_comma_4_dot_379692_comma_4_dot_379692_comma_5_dot_35199976_comma_5_dot_35199976",
                            "sidetable_4_dot_088_comma_4_dot_088_comma_3_dot_4844_comma_3_dot_4844_comma_4_dot_9732_comma_4_dot_9732"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_clean_then_place_in_recep-Spoon-None-SideTable-21/trial_T20190908_232031_145597",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar__minus_9_bar_1_bar_30",
                            "loc_bar_0_bar_1_bar_0_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_1_bar_0_bar_45",
                            "spoon__minus_0_dot_207300186_comma__minus_0_dot_207300186_comma_3_dot_7188272_comma_3_dot_7188272_comma_3_dot_607000588_comma_3_dot_607000588"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_1_bar_0_bar_45",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60",
                            "sinkbasin_3_dot_0292_comma_3_dot_0292_comma__minus_2_dot_754_comma__minus_2_dot_754_comma_3_dot_048_comma_3_dot_048",
                            "spoon__minus_0_dot_207300186_comma__minus_0_dot_207300186_comma_3_dot_7188272_comma_3_dot_7188272_comma_3_dot_607000588_comma_3_dot_607000588"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    },
                    {
                        "action": "RemoveObject",
                        "args": [
                            "spoon__minus_0_dot_207300186_comma__minus_0_dot_207300186_comma_3_dot_7188272_comma_3_dot_7188272_comma_3_dot_607000588_comma_3_dot_607000588",
                            "diningtable__minus_2_dot_096_comma__minus_2_dot_096_comma_3_dot_804_comma_3_dot_804_comma_0_dot_024_comma_0_dot_024",
                            "agent1",
                            "sidetable_3_dot_0924_comma_3_dot_0924_comma_1_dot_7924_comma_1_dot_7924_comma_2_dot_8004_comma_2_dot_8004"
                        ],
                        "operator_body": "(:action RemoveObject\n        :parameters (?o - object ?rStart - receptacle ?a - agent ?rEnd - receptacle)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rStart)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rEnd)\n\t\t(not (inReceptacle ?o ?rStart))\n\t\t)\n)"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar__minus_9_bar_1_bar_30",
                            "loc_bar_0_bar_1_bar_0_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_1_bar_0_bar_45",
                            "spoon__minus_0_dot_207300186_comma__minus_0_dot_207300186_comma_3_dot_7188272_comma_3_dot_7188272_comma_3_dot_607000588_comma_3_dot_607000588",
                            "diningtable__minus_2_dot_096_comma__minus_2_dot_096_comma_3_dot_804_comma_3_dot_804_comma_0_dot_024_comma_0_dot_024"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_1_bar_0_bar_45",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60",
                            "sinkbasin_3_dot_0292_comma_3_dot_0292_comma__minus_2_dot_754_comma__minus_2_dot_754_comma_3_dot_048_comma_3_dot_048",
                            "spoon__minus_0_dot_207300186_comma__minus_0_dot_207300186_comma_3_dot_7188272_comma_3_dot_7188272_comma_3_dot_607000588_comma_3_dot_607000588"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60",
                            "loc_bar__minus_1_bar_1_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_1_bar_1_bar_45",
                            "spoontype",
                            "spoon__minus_0_dot_207300186_comma__minus_0_dot_207300186_comma_3_dot_7188272_comma_3_dot_7188272_comma_3_dot_607000588_comma_3_dot_607000588",
                            "sidetable_3_dot_0924_comma_3_dot_0924_comma_1_dot_7924_comma_1_dot_7924_comma_2_dot_8004_comma_2_dot_8004"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "PUT",
                        "args": [
                            "spoon__minus_6_dot_878397_comma__minus_6_dot_878397_comma__minus_3_dot_502591848_comma__minus_3_dot_502591848_comma_2_dot_811675072_comma_2_dot_811675072",
                            "sidetable_3_dot_0924_comma_3_dot_0924_comma_1_dot_7924_comma_1_dot_7924_comma_2_dot_8004_comma_2_dot_8004",
                            "loc_bar__minus_1_bar_1_bar_1_bar_45"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar__minus_9_bar_1_bar_30",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60",
                            "loc_bar__minus_7_bar__minus_2_bar_2_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_7_bar__minus_2_bar_2_bar_60",
                            "spoon__minus_6_dot_878397_comma__minus_6_dot_878397_comma__minus_3_dot_502591848_comma__minus_3_dot_502591848_comma_2_dot_811675072_comma_2_dot_811675072"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_7_bar__minus_2_bar_2_bar_60",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60",
                            "sinkbasin_3_dot_0292_comma_3_dot_0292_comma__minus_2_dot_754_comma__minus_2_dot_754_comma_3_dot_048_comma_3_dot_048",
                            "spoon__minus_6_dot_878397_comma__minus_6_dot_878397_comma__minus_3_dot_502591848_comma__minus_3_dot_502591848_comma_2_dot_811675072_comma_2_dot_811675072"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_and_place_simple-Plunger-None-Cabinet-403/trial_T20190909_054730_826329",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_9_bar_6_bar_0_bar_30",
                            "loc_bar__minus_1_bar_3_bar_2_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_3_bar_2_bar_60",
                            "plunger__minus_0_dot_877566336_comma__minus_0_dot_877566336_comma_1_dot_9631_comma_1_dot_9631_comma_0_dot_1049107312_comma_0_dot_1049107312"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_3_bar_2_bar_60",
                            "loc_bar__minus_4_bar_8_bar_0_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar_8_bar_0_bar_60",
                            "plungertype",
                            "plunger__minus_0_dot_877566336_comma__minus_0_dot_877566336_comma_1_dot_9631_comma_1_dot_9631_comma_0_dot_1049107312_comma_0_dot_1049107312",
                            "cabinet__minus_1_dot_352_comma__minus_1_dot_352_comma_11_dot_47008324_comma_11_dot_47008324_comma_1_dot_701808216_comma_1_dot_701808216"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-AppleSliced-None-CounterTop-5/trial_T20190907_232136_007074",
        "plans": []
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-BreadSliced-None-GarbageCan-19/trial_T20190908_174425_766449",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_5_bar__minus_10_bar_3_bar_30",
                            "loc_bar__minus_10_bar__minus_9_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_10_bar__minus_9_bar_3_bar_60",
                            "loc_bar__minus_4_bar__minus_12_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_12_bar_1_bar_45",
                            "bread__minus_1_dot_6512432_comma__minus_1_dot_6512432_comma__minus_12_dot_048744_comma__minus_12_dot_048744_comma_3_dot_818286656_comma_3_dot_818286656",
                            "countertop__minus_7_dot_16_comma__minus_7_dot_16_comma__minus_15_dot_216_comma__minus_15_dot_216_comma_3_dot_7968_comma_3_dot_7968"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_12_bar_1_bar_45",
                            "loc_bar__minus_10_bar__minus_9_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "ChillObject",
                        "args": [
                            "bread__minus_1_dot_6512432_comma__minus_1_dot_6512432_comma__minus_12_dot_048744_comma__minus_12_dot_048744_comma_3_dot_818286656_comma_3_dot_818286656",
                            "loc_bar__minus_10_bar__minus_9_bar_3_bar_60",
                            "agent1",
                            "fridge__minus_12_dot_75556944_comma__minus_12_dot_75556944_comma__minus_8_dot_74_comma__minus_8_dot_74_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action ChillObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_10_bar__minus_9_bar_3_bar_60",
                            "loc_bar__minus_3_bar_0_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_3_bar_0_bar_1_bar_60",
                            "loc_bar__minus_4_bar__minus_5_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CutObject",
                        "args": [
                            "bread__minus_1_dot_6512432_comma__minus_1_dot_6512432_comma__minus_12_dot_048744_comma__minus_12_dot_048744_comma_3_dot_818286656_comma_3_dot_818286656",
                            "loc_bar__minus_4_bar__minus_5_bar_1_bar_45",
                            "agent1",
                            "countertop__minus_1_dot_076_comma__minus_1_dot_076_comma__minus_4_dot_3592_comma__minus_4_dot_3592_comma_3_dot_806_comma_3_dot_806"
                        ],
                        "operator_body": "(:action CutObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r CounterTopType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_5_bar_1_bar_45",
                            "loc_bar__minus_3_bar_0_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_3_bar_0_bar_1_bar_60",
                            "breadtype",
                            "bread__minus_1_dot_6512432_comma__minus_1_dot_6512432_comma__minus_12_dot_048744_comma__minus_12_dot_048744_comma_3_dot_818286656_comma_3_dot_818286656",
                            "garbagecan__minus_1_dot_136_comma__minus_1_dot_136_comma__minus_0_dot_14_comma__minus_0_dot_14_comma_0_dot_0001941937516_comma_0_dot_0001941937516"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_clean_then_place_in_recep-Egg-None-GarbageCan-11/trial_T20190906_181033_636334",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_10_bar__minus_4_bar_0_bar_30",
                            "loc_bar_2_bar__minus_4_bar_2_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_2_bar__minus_4_bar_2_bar_60",
                            "loc_bar__minus_3_bar_2_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_3_bar_2_bar_1_bar_60",
                            "egg__minus_1_dot_447999476_comma__minus_1_dot_447999476_comma_1_dot_584117412_comma_1_dot_584117412_comma_0_dot_421475292_comma_0_dot_421475292"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_3_bar_2_bar_1_bar_60",
                            "loc_bar_2_bar__minus_4_bar_2_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar_2_bar__minus_4_bar_2_bar_60",
                            "sinkbasin_1_dot_5085048_comma_1_dot_5085048_comma__minus_6_dot_62355136_comma__minus_6_dot_62355136_comma_3_dot_0634928_comma_3_dot_0634928",
                            "egg__minus_1_dot_447999476_comma__minus_1_dot_447999476_comma_1_dot_584117412_comma_1_dot_584117412_comma_0_dot_421475292_comma_0_dot_421475292"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_10_bar__minus_4_bar_0_bar_30",
                            "loc_bar_2_bar__minus_4_bar_2_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_2_bar__minus_4_bar_2_bar_60",
                            "loc_bar__minus_3_bar_2_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_3_bar_2_bar_1_bar_60",
                            "egg__minus_1_dot_447999476_comma__minus_1_dot_447999476_comma_1_dot_584117412_comma_1_dot_584117412_comma_0_dot_421475292_comma_0_dot_421475292",
                            "garbagecan__minus_1_dot_448_comma__minus_1_dot_448_comma_2_dot_156_comma_2_dot_156_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_3_bar_2_bar_1_bar_60",
                            "loc_bar_2_bar__minus_4_bar_2_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar_2_bar__minus_4_bar_2_bar_60",
                            "sinkbasin_1_dot_5085048_comma_1_dot_5085048_comma__minus_6_dot_62355136_comma__minus_6_dot_62355136_comma_3_dot_0634928_comma_3_dot_0634928",
                            "egg__minus_1_dot_447999476_comma__minus_1_dot_447999476_comma_1_dot_584117412_comma_1_dot_584117412_comma_0_dot_421475292_comma_0_dot_421475292"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-Bread-None-CounterTop-7/trial_T20190909_012427_332210",
        "plans": []
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-BreadSliced-None-SideTable-21/trial_T20190907_101038_416790",
        "plans": []
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-Egg-None-DiningTable-18/trial_T20190908_051307_917970",
        "plans": []
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-Tomato-None-Fridge-12/trial_T20190906_190441_327141",
        "plans": []
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-AppleSliced-None-GarbageCan-25/trial_T20190908_193803_869487",
        "plans": []
    },
    {
        "file_name": "train/look_at_obj_in_light-CD-None-DeskLamp-328/trial_T20190908_004539_969224",
        "plans": []
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-Bread-None-CounterTop-16/trial_T20190907_221816_384897",
        "plans": []
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-BreadSliced-None-DiningTable-27/trial_T20190908_080050_227088",
        "plans": []
    },
    {
        "file_name": "train/look_at_obj_in_light-Pillow-None-DeskLamp-319/trial_T20190907_224200_196003",
        "plans": []
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-Potato-None-Microwave-13/trial_T20190907_200955_697787",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "PUT",
                        "args": [
                            "potato__minus_16_dot_43597792_comma__minus_16_dot_43597792_comma_19_dot_60027312_comma_19_dot_60027312_comma_3_dot_827872_comma_3_dot_827872",
                            "microwave__minus_10_dot_776_comma__minus_10_dot_776_comma_6_dot_75624992_comma_6_dot_75624992_comma_5_dot_72338344_comma_5_dot_72338344",
                            "loc_bar__minus_11_bar_10_bar_2_bar_15"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_10_bar_11_bar_1_bar_30",
                            "loc_bar__minus_15_bar_18_bar_0_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_15_bar_18_bar_0_bar_60",
                            "potato__minus_16_dot_43597792_comma__minus_16_dot_43597792_comma_19_dot_60027312_comma_19_dot_60027312_comma_3_dot_827872_comma_3_dot_827872"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_15_bar_18_bar_0_bar_60",
                            "loc_bar__minus_5_bar_15_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "ChillObject",
                        "args": [
                            "potato__minus_16_dot_43597792_comma__minus_16_dot_43597792_comma_19_dot_60027312_comma_19_dot_60027312_comma_3_dot_827872_comma_3_dot_827872",
                            "loc_bar__minus_5_bar_15_bar_1_bar_60",
                            "agent1",
                            "fridge__minus_1_dot_298918724_comma__minus_1_dot_298918724_comma_14_dot_412_comma_14_dot_412_comma__minus_0_dot_00599211456_comma__minus_0_dot_00599211456"
                        ],
                        "operator_body": "(:action ChillObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan-18/trial_T20190909_070614_702720",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar_22_bar_3_bar_30",
                            "loc_bar_3_bar_4_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_3_bar_4_bar_1_bar_45",
                            "loc_bar__minus_1_bar_22_bar_0_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_22_bar_0_bar_45",
                            "potato__minus_0_dot_555888592_comma__minus_0_dot_555888592_comma_25_dot_12822532_comma_25_dot_12822532_comma_3_dot_1799052_comma_3_dot_1799052"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_22_bar_0_bar_45",
                            "loc_bar_4_bar_22_bar_1_bar_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "ChillObject",
                        "args": [
                            "potato__minus_0_dot_555888592_comma__minus_0_dot_555888592_comma_25_dot_12822532_comma_25_dot_12822532_comma_3_dot_1799052_comma_3_dot_1799052",
                            "loc_bar_4_bar_22_bar_1_bar_30",
                            "agent1",
                            "fridge_8_dot_14_comma_8_dot_14_comma_22_dot_504_comma_22_dot_504_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action ChillObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_4_bar_22_bar_1_bar_30",
                            "loc_bar_4_bar_24_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_4_bar_24_bar_1_bar_60",
                            "loc_bar_5_bar_21_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CutObject",
                        "args": [
                            "potato__minus_0_dot_555888592_comma__minus_0_dot_555888592_comma_25_dot_12822532_comma_25_dot_12822532_comma_3_dot_1799052_comma_3_dot_1799052",
                            "loc_bar_5_bar_21_bar_2_bar_45",
                            "agent1",
                            "countertop_5_dot_564_comma_5_dot_564_comma_18_dot_866_comma_18_dot_866_comma_4_dot_1128_comma_4_dot_1128"
                        ],
                        "operator_body": "(:action CutObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r CounterTopType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_5_bar_21_bar_2_bar_45",
                            "loc_bar_4_bar_24_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_4_bar_24_bar_1_bar_60",
                            "potatotype",
                            "potato__minus_0_dot_555888592_comma__minus_0_dot_555888592_comma_25_dot_12822532_comma_25_dot_12822532_comma_3_dot_1799052_comma_3_dot_1799052",
                            "garbagecan_8_dot_00458908_comma_8_dot_00458908_comma_26_dot_0127182_comma_26_dot_0127182_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))",
                "plan": [
                    {
                        "action": "PUT",
                        "args": [
                            "potato__minus_0_dot_555888592_comma__minus_0_dot_555888592_comma_25_dot_12822532_comma_25_dot_12822532_comma_3_dot_1799052_comma_3_dot_1799052",
                            "garbagecan_8_dot_00458908_comma_8_dot_00458908_comma_26_dot_0127182_comma_26_dot_0127182_comma_0_dot_0_comma_0_dot_0",
                            "loc_bar_4_bar_24_bar_1_bar_60"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar_22_bar_3_bar_30",
                            "loc_bar_3_bar_4_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_3_bar_4_bar_1_bar_45",
                            "loc_bar__minus_1_bar_22_bar_0_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_22_bar_0_bar_45",
                            "potato__minus_0_dot_555888592_comma__minus_0_dot_555888592_comma_25_dot_12822532_comma_25_dot_12822532_comma_3_dot_1799052_comma_3_dot_1799052"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_22_bar_0_bar_45",
                            "loc_bar_4_bar_22_bar_1_bar_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "ChillObject",
                        "args": [
                            "potato__minus_0_dot_555888592_comma__minus_0_dot_555888592_comma_25_dot_12822532_comma_25_dot_12822532_comma_3_dot_1799052_comma_3_dot_1799052",
                            "loc_bar_4_bar_22_bar_1_bar_30",
                            "agent1",
                            "fridge_8_dot_14_comma_8_dot_14_comma_22_dot_504_comma_22_dot_504_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action ChillObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_4_bar_22_bar_1_bar_30",
                            "loc_bar_5_bar_21_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CutObject",
                        "args": [
                            "potato__minus_0_dot_555888592_comma__minus_0_dot_555888592_comma_25_dot_12822532_comma_25_dot_12822532_comma_3_dot_1799052_comma_3_dot_1799052",
                            "loc_bar_5_bar_21_bar_2_bar_45",
                            "agent1",
                            "countertop_5_dot_564_comma_5_dot_564_comma_18_dot_866_comma_18_dot_866_comma_4_dot_1128_comma_4_dot_1128"
                        ],
                        "operator_body": "(:action CutObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r CounterTopType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-Egg-None-SideTable-28/trial_T20190908_115607_419115",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_5_bar__minus_9_bar_2_bar_30",
                            "loc_bar__minus_4_bar__minus_6_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_6_bar_1_bar_45",
                            "egg__minus_0_dot_630764068_comma__minus_0_dot_630764068_comma__minus_5_dot_977293_comma__minus_5_dot_977293_comma_3_dot_9294672_comma_3_dot_9294672"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "RemoveObject",
                        "args": [
                            "egg__minus_0_dot_630764068_comma__minus_0_dot_630764068_comma__minus_5_dot_977293_comma__minus_5_dot_977293_comma_3_dot_9294672_comma_3_dot_9294672",
                            "countertop__minus_1_dot_308_comma__minus_1_dot_308_comma__minus_5_dot_802_comma__minus_5_dot_802_comma_3_dot_9072_comma_3_dot_9072",
                            "agent1",
                            "sidetable__minus_16_dot_284_comma__minus_16_dot_284_comma__minus_1_dot_236_comma__minus_1_dot_236_comma_2_dot_904_comma_2_dot_904"
                        ],
                        "operator_body": "(:action RemoveObject\n        :parameters (?o - object ?rStart - receptacle ?a - agent ?rEnd - receptacle)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rStart)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rEnd)\n\t\t(not (inReceptacle ?o ?rStart))\n\t\t)\n)"
                    },
                    {
                        "action": "HeatObject",
                        "args": [
                            "egg__minus_0_dot_630764068_comma__minus_0_dot_630764068_comma__minus_5_dot_977293_comma__minus_5_dot_977293_comma_3_dot_9294672_comma_3_dot_9294672",
                            "agent1"
                        ],
                        "operator_body": "(:action HeatObject\n        :parameters (?o - object ?a - agent)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(cleanable ?o)\n\t\t(coolable ?o)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (isCool ?o))\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_clean_then_place_in_recep-Apple-None-Microwave-24/trial_T20190907_133215_985130",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_5_bar_1_bar_30",
                            "loc_bar__minus_6_bar_13_bar_0_bar_15"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_6_bar_13_bar_0_bar_15",
                            "apple__minus_5_dot_9465356_comma__minus_5_dot_9465356_comma_15_dot_86917496_comma_15_dot_86917496_comma_5_dot_68272256_comma_5_dot_68272256",
                            "microwave__minus_6_dot_116_comma__minus_6_dot_116_comma_15_dot_5288_comma_15_dot_5288_comma_5_dot_00112532_comma_5_dot_00112532"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_6_bar_13_bar_0_bar_15",
                            "loc_bar__minus_7_bar_13_bar_0_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar__minus_7_bar_13_bar_0_bar_60",
                            "sinkbasin__minus_6_dot_4064_comma__minus_6_dot_4064_comma_15_dot_0988_comma_15_dot_0988_comma_2_dot_748_comma_2_dot_748",
                            "apple__minus_5_dot_9465356_comma__minus_5_dot_9465356_comma_15_dot_86917496_comma_15_dot_86917496_comma_5_dot_68272256_comma_5_dot_68272256"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_5_bar_1_bar_30",
                            "loc_bar__minus_6_bar_13_bar_0_bar_15"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_6_bar_13_bar_0_bar_15",
                            "apple__minus_5_dot_9465356_comma__minus_5_dot_9465356_comma_15_dot_86917496_comma_15_dot_86917496_comma_5_dot_68272256_comma_5_dot_68272256"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_6_bar_13_bar_0_bar_15",
                            "loc_bar__minus_7_bar_13_bar_0_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar__minus_7_bar_13_bar_0_bar_60",
                            "sinkbasin__minus_6_dot_4064_comma__minus_6_dot_4064_comma_15_dot_0988_comma_15_dot_0988_comma_2_dot_748_comma_2_dot_748",
                            "apple__minus_5_dot_9465356_comma__minus_5_dot_9465356_comma_15_dot_86917496_comma_15_dot_86917496_comma_5_dot_68272256_comma_5_dot_68272256"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-Apple-None-GarbageCan-12/trial_T20190908_172429_549227",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_4_bar__minus_2_bar_0_bar_30",
                            "loc_bar__minus_1_bar_5_bar_3_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_5_bar_3_bar_45",
                            "apple__minus_3_dot_1751204_comma__minus_3_dot_1751204_comma_4_dot_61625768_comma_4_dot_61625768_comma_3_dot_9485216_comma_3_dot_9485216"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "RemoveObject",
                        "args": [
                            "apple__minus_3_dot_1751204_comma__minus_3_dot_1751204_comma_4_dot_61625768_comma_4_dot_61625768_comma_3_dot_9485216_comma_3_dot_9485216",
                            "countertop__minus_3_dot_888_comma__minus_3_dot_888_comma_3_dot_684_comma_3_dot_684_comma_3_dot_8936_comma_3_dot_8936",
                            "agent1",
                            "garbagecan_5_dot_80777024_comma_5_dot_80777024_comma_11_dot_65005396_comma_11_dot_65005396_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action RemoveObject\n        :parameters (?o - object ?rStart - receptacle ?a - agent ?rEnd - receptacle)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rStart)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rEnd)\n\t\t(not (inReceptacle ?o ?rStart))\n\t\t)\n)"
                    },
                    {
                        "action": "HeatObject",
                        "args": [
                            "apple__minus_3_dot_1751204_comma__minus_3_dot_1751204_comma_4_dot_61625768_comma_4_dot_61625768_comma_3_dot_9485216_comma_3_dot_9485216",
                            "agent1"
                        ],
                        "operator_body": "(:action HeatObject\n        :parameters (?o - object ?a - agent)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(cleanable ?o)\n\t\t(coolable ?o)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (isCool ?o))\n\t\t)\n)"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_4_bar__minus_2_bar_0_bar_30",
                            "loc_bar_4_bar_11_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_4_bar_11_bar_1_bar_60",
                            "loc_bar__minus_1_bar_5_bar_3_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_5_bar_3_bar_45",
                            "apple__minus_3_dot_1751204_comma__minus_3_dot_1751204_comma_4_dot_61625768_comma_4_dot_61625768_comma_3_dot_9485216_comma_3_dot_9485216",
                            "countertop__minus_3_dot_888_comma__minus_3_dot_888_comma_3_dot_684_comma_3_dot_684_comma_3_dot_8936_comma_3_dot_8936"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_5_bar_3_bar_45",
                            "loc_bar_4_bar_11_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "HeatObject",
                        "args": [
                            "apple__minus_3_dot_1751204_comma__minus_3_dot_1751204_comma_4_dot_61625768_comma_4_dot_61625768_comma_3_dot_9485216_comma_3_dot_9485216",
                            "agent1"
                        ],
                        "operator_body": "(:action HeatObject\n        :parameters (?o - object ?a - agent)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(cleanable ?o)\n\t\t(coolable ?o)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (isCool ?o))\n\t\t)\n)"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_4_bar_11_bar_1_bar_60",
                            "appletype",
                            "apple__minus_3_dot_1751204_comma__minus_3_dot_1751204_comma_4_dot_61625768_comma_4_dot_61625768_comma_3_dot_9485216_comma_3_dot_9485216",
                            "garbagecan_5_dot_80777024_comma_5_dot_80777024_comma_11_dot_65005396_comma_11_dot_65005396_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_and_place_simple-PotatoSliced-None-SinkBasin-25/trial_T20190907_062036_745419",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "PUT",
                        "args": [
                            "potato__minus_10_dot_90717124_comma__minus_10_dot_90717124_comma_9_dot_23858072_comma_9_dot_23858072_comma_5_dot_93760348_comma_5_dot_93760348",
                            "sinkbasin__minus_6_dot_9823656_comma__minus_6_dot_9823656_comma_1_dot_183695672_comma_1_dot_183695672_comma_2_dot_748186588_comma_2_dot_748186588",
                            "loc_bar__minus_6_bar_5_bar_2_bar_45"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar_11_bar_1_bar_30",
                            "loc_bar__minus_8_bar_5_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar_5_bar_2_bar_45",
                            "loc_bar__minus_8_bar_9_bar_3_bar_15"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar_9_bar_3_bar_15",
                            "potato__minus_10_dot_90717124_comma__minus_10_dot_90717124_comma_9_dot_23858072_comma_9_dot_23858072_comma_5_dot_93760348_comma_5_dot_93760348"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar_9_bar_3_bar_15",
                            "loc_bar__minus_8_bar_5_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CutObject",
                        "args": [
                            "potato__minus_10_dot_90717124_comma__minus_10_dot_90717124_comma_9_dot_23858072_comma_9_dot_23858072_comma_5_dot_93760348_comma_5_dot_93760348",
                            "loc_bar__minus_8_bar_5_bar_2_bar_45",
                            "agent1",
                            "countertop__minus_6_dot_232_comma__minus_6_dot_232_comma_1_dot_112_comma_1_dot_112_comma_3_dot_4364_comma_3_dot_4364"
                        ],
                        "operator_body": "(:action CutObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r CounterTopType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar_11_bar_1_bar_30",
                            "loc_bar__minus_8_bar_5_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar_5_bar_2_bar_45",
                            "loc_bar__minus_8_bar_9_bar_3_bar_15"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar_9_bar_3_bar_15",
                            "potato__minus_10_dot_90717124_comma__minus_10_dot_90717124_comma_9_dot_23858072_comma_9_dot_23858072_comma_5_dot_93760348_comma_5_dot_93760348"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar_9_bar_3_bar_15",
                            "loc_bar__minus_8_bar_5_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CutObject",
                        "args": [
                            "potato__minus_10_dot_90717124_comma__minus_10_dot_90717124_comma_9_dot_23858072_comma_9_dot_23858072_comma_5_dot_93760348_comma_5_dot_93760348",
                            "loc_bar__minus_8_bar_5_bar_2_bar_45",
                            "agent1",
                            "countertop__minus_6_dot_232_comma__minus_6_dot_232_comma_1_dot_112_comma_1_dot_112_comma_3_dot_4364_comma_3_dot_4364"
                        ],
                        "operator_body": "(:action CutObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r CounterTopType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)"
                    },
                    {
                        "action": "RemoveObject",
                        "args": [
                            "potato__minus_10_dot_90717124_comma__minus_10_dot_90717124_comma_9_dot_23858072_comma_9_dot_23858072_comma_5_dot_93760348_comma_5_dot_93760348",
                            "fridge__minus_11_dot_128_comma__minus_11_dot_128_comma_8_dot_8868_comma_8_dot_8868_comma_0_dot_0_comma_0_dot_0",
                            "agent1",
                            "sinkbasin__minus_6_dot_9823656_comma__minus_6_dot_9823656_comma_1_dot_183695672_comma_1_dot_183695672_comma_2_dot_748186588_comma_2_dot_748186588"
                        ],
                        "operator_body": "(:action RemoveObject\n        :parameters (?o - object ?rStart - receptacle ?a - agent ?rEnd - receptacle)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rStart)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rEnd)\n\t\t(not (inReceptacle ?o ?rStart))\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_and_place_simple-Glassbottle-None-Fridge-16/trial_T20190908_045933_322597",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar_10_bar_2_bar_30",
                            "loc_bar_0_bar_4_bar_3_bar_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_4_bar_3_bar_30",
                            "glassbottle__minus_4_dot_63670732_comma__minus_4_dot_63670732_comma_4_dot_23483468_comma_4_dot_23483468_comma_4_dot_11286688_comma_4_dot_11286688",
                            "countertop__minus_3_dot_2522_comma__minus_3_dot_2522_comma_8_dot_756_comma_8_dot_756_comma_4_dot_252_comma_4_dot_252"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_4_bar_3_bar_30",
                            "loc_bar_0_bar__minus_2_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar__minus_2_bar_3_bar_60",
                            "glassbottletype",
                            "glassbottle__minus_4_dot_63670732_comma__minus_4_dot_63670732_comma_4_dot_23483468_comma_4_dot_23483468_comma_4_dot_11286688_comma_4_dot_11286688",
                            "fridge__minus_3_dot_636_comma__minus_3_dot_636_comma__minus_1_dot_624_comma__minus_1_dot_624_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-Tomato-None-SideTable-3/trial_T20190907_140946_092791",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "PUT",
                        "args": [
                            "tomato__minus_7_dot_68027256_comma__minus_7_dot_68027256_comma__minus_6_dot_72589348_comma__minus_6_dot_72589348_comma_5_dot_42768432_comma_5_dot_42768432",
                            "sidetable_4_dot_088_comma_4_dot_088_comma_3_dot_4844_comma_3_dot_4844_comma_4_dot_9732_comma_4_dot_9732",
                            "loc_bar_1_bar_4_bar_1_bar_45"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_3_bar_0_bar_1_bar_30",
                            "loc_bar__minus_4_bar__minus_7_bar_3_bar_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_7_bar_3_bar_30",
                            "tomato__minus_7_dot_68027256_comma__minus_7_dot_68027256_comma__minus_6_dot_72589348_comma__minus_6_dot_72589348_comma_5_dot_42768432_comma_5_dot_42768432",
                            "countertop__minus_7_dot_236_comma__minus_7_dot_236_comma_4_dot_728_comma_4_dot_728_comma_5_dot_434_comma_5_dot_434"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "HeatObject",
                        "args": [
                            "tomato__minus_7_dot_68027256_comma__minus_7_dot_68027256_comma__minus_6_dot_72589348_comma__minus_6_dot_72589348_comma_5_dot_42768432_comma_5_dot_42768432",
                            "agent1"
                        ],
                        "operator_body": "(:action HeatObject\n        :parameters (?o - object ?a - agent)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(cleanable ?o)\n\t\t(coolable ?o)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (isCool ?o))\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_and_place_simple-Plunger-None-Cabinet-405/trial_T20190908_120726_695995",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "PUT",
                        "args": [
                            "plunger__minus_12_dot_17401028_comma__minus_12_dot_17401028_comma_6_dot_73406504_comma_6_dot_73406504_comma_0_dot_013557136_comma_0_dot_013557136",
                            "cabinet__minus_11_dot_620116_comma__minus_11_dot_620116_comma_7_dot_51459692_comma_7_dot_51459692_comma_8_dot_39255716_comma_8_dot_39255716",
                            "loc_bar__minus_8_bar_5_bar_3_bar__minus_30"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_10_bar_3_bar_0_bar_30",
                            "loc_bar__minus_10_bar_3_bar_0_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_10_bar_3_bar_0_bar_60",
                            "plunger__minus_12_dot_17401028_comma__minus_12_dot_17401028_comma_6_dot_73406504_comma_6_dot_73406504_comma_0_dot_013557136_comma_0_dot_013557136"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_10_bar_3_bar_0_bar_60",
                            "loc_bar__minus_7_bar_0_bar_3_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_7_bar_0_bar_3_bar_45",
                            "plungertype",
                            "plunger__minus_12_dot_17401028_comma__minus_12_dot_17401028_comma_6_dot_73406504_comma_6_dot_73406504_comma_0_dot_013557136_comma_0_dot_013557136",
                            "cabinet__minus_11_dot_04684_comma__minus_11_dot_04684_comma_2_dot_399622_comma_2_dot_399622_comma_1_dot_7867198_comma_1_dot_7867198"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_clean_then_place_in_recep-Mug-None-CoffeeMachine-21/trial_T20190907_143348_068782",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar_0_bar_0_bar_30",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60",
                            "loc_bar__minus_8_bar__minus_11_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar__minus_11_bar_2_bar_45",
                            "mug__minus_7_dot_58513736_comma__minus_7_dot_58513736_comma__minus_15_dot_08508872_comma__minus_15_dot_08508872_comma_3_dot_1780176_comma_3_dot_1780176"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar__minus_11_bar_2_bar_45",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60",
                            "sinkbasin_3_dot_0292_comma_3_dot_0292_comma__minus_2_dot_754_comma__minus_2_dot_754_comma_3_dot_048_comma_3_dot_048",
                            "mug__minus_7_dot_58513736_comma__minus_7_dot_58513736_comma__minus_15_dot_08508872_comma__minus_15_dot_08508872_comma_3_dot_1780176_comma_3_dot_1780176"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60",
                            "loc_bar_1_bar__minus_5_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar__minus_5_bar_1_bar_45",
                            "mugtype",
                            "mug__minus_7_dot_58513736_comma__minus_7_dot_58513736_comma__minus_15_dot_08508872_comma__minus_15_dot_08508872_comma_3_dot_1780176_comma_3_dot_1780176",
                            "coffeemachine_3_dot_5_comma_3_dot_5_comma__minus_5_dot_024_comma__minus_5_dot_024_comma_3_dot_456_comma_3_dot_456"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar_0_bar_0_bar_30",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60",
                            "loc_bar__minus_8_bar__minus_11_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar__minus_11_bar_2_bar_45",
                            "mug__minus_7_dot_58513736_comma__minus_7_dot_58513736_comma__minus_15_dot_08508872_comma__minus_15_dot_08508872_comma_3_dot_1780176_comma_3_dot_1780176",
                            "microwave__minus_8_dot_052_comma__minus_8_dot_052_comma__minus_14_dot_756_comma__minus_14_dot_756_comma_2_dot_761099816_comma_2_dot_761099816"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar__minus_11_bar_2_bar_45",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60",
                            "sinkbasin_3_dot_0292_comma_3_dot_0292_comma__minus_2_dot_754_comma__minus_2_dot_754_comma_3_dot_048_comma_3_dot_048",
                            "mug__minus_7_dot_58513736_comma__minus_7_dot_58513736_comma__minus_15_dot_08508872_comma__minus_15_dot_08508872_comma_3_dot_1780176_comma_3_dot_1780176"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60",
                            "loc_bar_1_bar__minus_5_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar__minus_5_bar_1_bar_45",
                            "mugtype",
                            "mug__minus_7_dot_58513736_comma__minus_7_dot_58513736_comma__minus_15_dot_08508872_comma__minus_15_dot_08508872_comma_3_dot_1780176_comma_3_dot_1780176",
                            "coffeemachine_3_dot_5_comma_3_dot_5_comma__minus_5_dot_024_comma__minus_5_dot_024_comma_3_dot_456_comma_3_dot_456"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar_0_bar_0_bar_30",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60",
                            "loc_bar__minus_8_bar__minus_11_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar__minus_11_bar_2_bar_45",
                            "mug__minus_7_dot_58513736_comma__minus_7_dot_58513736_comma__minus_15_dot_08508872_comma__minus_15_dot_08508872_comma_3_dot_1780176_comma_3_dot_1780176"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar__minus_11_bar_2_bar_45",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar_1_bar__minus_2_bar_1_bar_60",
                            "sinkbasin_3_dot_0292_comma_3_dot_0292_comma__minus_2_dot_754_comma__minus_2_dot_754_comma_3_dot_048_comma_3_dot_048",
                            "mug__minus_7_dot_58513736_comma__minus_7_dot_58513736_comma__minus_15_dot_08508872_comma__minus_15_dot_08508872_comma_3_dot_1780176_comma_3_dot_1780176"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    },
                    {
                        "action": "RemoveObject",
                        "args": [
                            "mug__minus_7_dot_58513736_comma__minus_7_dot_58513736_comma__minus_15_dot_08508872_comma__minus_15_dot_08508872_comma_3_dot_1780176_comma_3_dot_1780176",
                            "microwave__minus_8_dot_052_comma__minus_8_dot_052_comma__minus_14_dot_756_comma__minus_14_dot_756_comma_2_dot_761099816_comma_2_dot_761099816",
                            "agent1",
                            "coffeemachine_3_dot_5_comma_3_dot_5_comma__minus_5_dot_024_comma__minus_5_dot_024_comma_3_dot_456_comma_3_dot_456"
                        ],
                        "operator_body": "(:action RemoveObject\n        :parameters (?o - object ?rStart - receptacle ?a - agent ?rEnd - receptacle)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rStart)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rEnd)\n\t\t(not (inReceptacle ?o ?rStart))\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-BreadSliced-None-SideTable-28/trial_T20190907_180304_503402",
        "plans": []
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-PotatoSliced-None-CounterTop-22/trial_T20190909_040822_239216",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar_1_bar_1_bar_30",
                            "loc_bar__minus_1_bar__minus_2_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar__minus_2_bar_2_bar_45",
                            "loc_bar__minus_2_bar__minus_2_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar__minus_2_bar_2_bar_45",
                            "potato__minus_2_dot_392156_comma__minus_2_dot_392156_comma__minus_4_dot_478636_comma__minus_4_dot_478636_comma_3_dot_734_comma_3_dot_734"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar__minus_2_bar_2_bar_45",
                            "loc_bar__minus_8_bar_0_bar_3_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CutObject",
                        "args": [
                            "potato__minus_2_dot_392156_comma__minus_2_dot_392156_comma__minus_4_dot_478636_comma__minus_4_dot_478636_comma_3_dot_734_comma_3_dot_734",
                            "loc_bar__minus_8_bar_0_bar_3_bar_45",
                            "agent1",
                            "countertop__minus_10_dot_7976_comma__minus_10_dot_7976_comma_0_dot_4244_comma_0_dot_4244_comma_3_dot_7872_comma_3_dot_7872"
                        ],
                        "operator_body": "(:action CutObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r CounterTopType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar_0_bar_3_bar_45",
                            "loc_bar__minus_8_bar_4_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "ChillObject",
                        "args": [
                            "potato__minus_2_dot_392156_comma__minus_2_dot_392156_comma__minus_4_dot_478636_comma__minus_4_dot_478636_comma_3_dot_734_comma_3_dot_734",
                            "loc_bar__minus_8_bar_4_bar_3_bar_60",
                            "agent1",
                            "fridge__minus_11_dot_424_comma__minus_11_dot_424_comma_3_dot_408_comma_3_dot_408_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action ChillObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/look_at_obj_in_light-Newspaper-None-FloorLamp-212/trial_T20190908_112042_584512",
        "plans": []
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-Pot-None-DiningTable-24/trial_T20190908_111415_336140",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar_11_bar_0_bar_30",
                            "loc_bar_0_bar_7_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_7_bar_1_bar_45",
                            "pot_3_dot_6532_comma_3_dot_6532_comma_7_dot_0752_comma_7_dot_0752_comma_3_dot_403200148_comma_3_dot_403200148"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_0_bar_7_bar_1_bar_45",
                            "loc_bar__minus_7_bar_9_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "ChillObject",
                        "args": [
                            "pot_3_dot_6532_comma_3_dot_6532_comma_7_dot_0752_comma_7_dot_0752_comma_3_dot_403200148_comma_3_dot_403200148",
                            "loc_bar__minus_7_bar_9_bar_3_bar_60",
                            "agent1",
                            "fridge__minus_10_dot_572_comma__minus_10_dot_572_comma_8_dot_536_comma_8_dot_536_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action ChillObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)"
                    },
                    {
                        "action": "RemoveObject",
                        "args": [
                            "pot_3_dot_6532_comma_3_dot_6532_comma_7_dot_0752_comma_7_dot_0752_comma_3_dot_403200148_comma_3_dot_403200148",
                            "stoveburner_3_dot_6532_comma_3_dot_6532_comma_7_dot_0752_comma_7_dot_0752_comma_3_dot_3752_comma_3_dot_3752",
                            "agent1",
                            "diningtable__minus_3_dot_5_comma__minus_3_dot_5_comma_5_dot_296_comma_5_dot_296_comma_0_dot_024_comma_0_dot_024"
                        ],
                        "operator_body": "(:action RemoveObject\n        :parameters (?o - object ?rStart - receptacle ?a - agent ?rEnd - receptacle)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rStart)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rEnd)\n\t\t(not (inReceptacle ?o ?rStart))\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_and_place_simple-RemoteControl-None-ArmChair-223/trial_T20190908_163723_604442",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_5_bar__minus_6_bar_2_bar_30",
                            "loc_bar_12_bar_0_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_12_bar_0_bar_3_bar_60",
                            "remotecontrol_10_dot_19536496_comma_10_dot_19536496_comma__minus_0_dot_18212533_comma__minus_0_dot_18212533_comma_3_dot_142136572_comma_3_dot_142136572",
                            "diningtable_7_dot_536_comma_7_dot_536_comma__minus_1_dot_168_comma__minus_1_dot_168_comma__minus_0_dot_0148_comma__minus_0_dot_0148"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_12_bar_0_bar_3_bar_60",
                            "loc_bar__minus_3_bar__minus_5_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_3_bar__minus_5_bar_3_bar_60",
                            "remotecontroltype",
                            "remotecontrol_10_dot_19536496_comma_10_dot_19536496_comma__minus_0_dot_18212533_comma__minus_0_dot_18212533_comma_3_dot_142136572_comma_3_dot_142136572",
                            "armchair__minus_8_dot_02_comma__minus_8_dot_02_comma__minus_6_dot_316_comma__minus_6_dot_316_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "PUT",
                        "args": [
                            "remotecontrol__minus_9_dot_06609536_comma__minus_9_dot_06609536_comma_1_dot_092223524_comma_1_dot_092223524_comma_1_dot_793736576_comma_1_dot_793736576",
                            "armchair__minus_8_dot_02_comma__minus_8_dot_02_comma__minus_6_dot_316_comma__minus_6_dot_316_comma_0_dot_0_comma_0_dot_0",
                            "loc_bar__minus_3_bar__minus_5_bar_3_bar_60"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-AppleSliced-None-Microwave-25/trial_T20190908_055159_132487",
        "plans": []
    },
    {
        "file_name": "train/pick_cool_then_place_in_recep-Egg-None-SinkBasin-25/trial_T20190909_105100_154263",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_5_bar_11_bar_2_bar_30",
                            "loc_bar__minus_6_bar_4_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_6_bar_4_bar_2_bar_45",
                            "egg__minus_6_dot_168668_comma__minus_6_dot_168668_comma_0_dot_2926234604_comma_0_dot_2926234604_comma_3_dot_3915128_comma_3_dot_3915128"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_6_bar_4_bar_2_bar_45",
                            "loc_bar__minus_8_bar_9_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "RemoveObject",
                        "args": [
                            "egg__minus_6_dot_168668_comma__minus_6_dot_168668_comma_0_dot_2926234604_comma_0_dot_2926234604_comma_3_dot_3915128_comma_3_dot_3915128",
                            "countertop__minus_6_dot_232_comma__minus_6_dot_232_comma_1_dot_112_comma_1_dot_112_comma_3_dot_4364_comma_3_dot_4364",
                            "agent1",
                            "fridge__minus_11_dot_128_comma__minus_11_dot_128_comma_8_dot_8868_comma_8_dot_8868_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action RemoveObject\n        :parameters (?o - object ?rStart - receptacle ?a - agent ?rEnd - receptacle)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rStart)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rEnd)\n\t\t(not (inReceptacle ?o ?rStart))\n\t\t)\n)"
                    },
                    {
                        "action": "HeatObject",
                        "args": [
                            "egg__minus_6_dot_168668_comma__minus_6_dot_168668_comma_0_dot_2926234604_comma_0_dot_2926234604_comma_3_dot_3915128_comma_3_dot_3915128",
                            "agent1"
                        ],
                        "operator_body": "(:action HeatObject\n        :parameters (?o - object ?a - agent)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(cleanable ?o)\n\t\t(coolable ?o)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (isCool ?o))\n\t\t)\n)"
                    },
                    {
                        "action": "CoolObject",
                        "args": [
                            "egg__minus_6_dot_168668_comma__minus_6_dot_168668_comma_0_dot_2926234604_comma_0_dot_2926234604_comma_3_dot_3915128_comma_3_dot_3915128",
                            "loc_bar__minus_8_bar_9_bar_3_bar_60",
                            "agent1",
                            "fridge__minus_11_dot_128_comma__minus_11_dot_128_comma_8_dot_8868_comma_8_dot_8868_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action CoolObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(inReceptacle ?o ?r)\n\t\t(isHot ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)"
                    },
                    {
                        "action": "RemoveObject",
                        "args": [
                            "egg__minus_6_dot_168668_comma__minus_6_dot_168668_comma_0_dot_2926234604_comma_0_dot_2926234604_comma_3_dot_3915128_comma_3_dot_3915128",
                            "fridge__minus_11_dot_128_comma__minus_11_dot_128_comma_8_dot_8868_comma_8_dot_8868_comma_0_dot_0_comma_0_dot_0",
                            "agent1",
                            "sinkbasin__minus_6_dot_9823656_comma__minus_6_dot_9823656_comma_1_dot_183695672_comma_1_dot_183695672_comma_2_dot_748186588_comma_2_dot_748186588"
                        ],
                        "operator_body": "(:action RemoveObject\n        :parameters (?o - object ?rStart - receptacle ?a - agent ?rEnd - receptacle)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rStart)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rEnd)\n\t\t(not (inReceptacle ?o ?rStart))\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_and_place_simple-AppleSliced-None-Microwave-14/trial_T20190908_171220_804585",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_5_bar__minus_3_bar_1_bar_30",
                            "loc_bar_2_bar__minus_3_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_2_bar__minus_3_bar_2_bar_45",
                            "loc_bar_4_bar__minus_3_bar_1_bar_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_4_bar__minus_3_bar_1_bar_30",
                            "apple_7_dot_34344436_comma_7_dot_34344436_comma__minus_3_dot_55239582_comma__minus_3_dot_55239582_comma_4_dot_291039_comma_4_dot_291039"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_4_bar__minus_3_bar_1_bar_30",
                            "loc_bar_4_bar_1_bar_0_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CutObject",
                        "args": [
                            "apple_7_dot_34344436_comma_7_dot_34344436_comma__minus_3_dot_55239582_comma__minus_3_dot_55239582_comma_4_dot_291039_comma_4_dot_291039",
                            "loc_bar_4_bar_1_bar_0_bar_45",
                            "agent1",
                            "countertop_3_dot_956_comma_3_dot_956_comma_4_dot_068_comma_4_dot_068_comma_3_dot_7844_comma_3_dot_7844"
                        ],
                        "operator_body": "(:action CutObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r CounterTopType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan-23/trial_T20190909_034745_393039",
        "plans": []
    },
    {
        "file_name": "train/pick_clean_then_place_in_recep-Apple-None-Microwave-14/trial_T20190909_120047_598548",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_7_bar_12_bar_2_bar_30",
                            "loc_bar_4_bar__minus_3_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_4_bar__minus_3_bar_1_bar_45",
                            "apple_6_dot_95492124_comma_6_dot_95492124_comma__minus_3_dot_552394628_comma__minus_3_dot_552394628_comma_4_dot_291039_comma_4_dot_291039",
                            "microwave_7_dot_008_comma_7_dot_008_comma__minus_3_dot_376_comma__minus_3_dot_376_comma_3_dot_600000144_comma_3_dot_600000144"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_4_bar__minus_3_bar_1_bar_45",
                            "loc_bar_4_bar__minus_3_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar_4_bar__minus_3_bar_2_bar_45",
                            "sinkbasin_4_dot_3652_comma_4_dot_3652_comma__minus_6_dot_398_comma__minus_6_dot_398_comma_2_dot_964_comma_2_dot_964",
                            "apple_6_dot_95492124_comma_6_dot_95492124_comma__minus_3_dot_552394628_comma__minus_3_dot_552394628_comma_4_dot_291039_comma_4_dot_291039"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_7_bar_12_bar_2_bar_30",
                            "loc_bar_4_bar__minus_3_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_4_bar__minus_3_bar_1_bar_45",
                            "apple_6_dot_95492124_comma_6_dot_95492124_comma__minus_3_dot_552394628_comma__minus_3_dot_552394628_comma_4_dot_291039_comma_4_dot_291039"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_4_bar__minus_3_bar_1_bar_45",
                            "loc_bar_4_bar__minus_3_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar_4_bar__minus_3_bar_2_bar_45",
                            "sinkbasin_4_dot_3652_comma_4_dot_3652_comma__minus_6_dot_398_comma__minus_6_dot_398_comma_2_dot_964_comma_2_dot_964",
                            "apple_6_dot_95492124_comma_6_dot_95492124_comma__minus_3_dot_552394628_comma__minus_3_dot_552394628_comma_4_dot_291039_comma_4_dot_291039"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_and_place_simple-BreadSliced-None-SideTable-3/trial_T20190906_235928_630179",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_3_bar__minus_3_bar_2_bar_30",
                            "loc_bar__minus_4_bar__minus_8_bar_0_bar_15"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_8_bar_0_bar_15",
                            "loc_bar__minus_4_bar__minus_9_bar_3_bar_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_9_bar_3_bar_30",
                            "bread__minus_8_dot_19928264_comma__minus_8_dot_19928264_comma__minus_10_dot_88489912_comma__minus_10_dot_88489912_comma_5_dot_589581_comma_5_dot_589581"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar__minus_9_bar_3_bar_30",
                            "loc_bar__minus_4_bar__minus_8_bar_0_bar_15"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CutObject",
                        "args": [
                            "bread__minus_8_dot_19928264_comma__minus_8_dot_19928264_comma__minus_10_dot_88489912_comma__minus_10_dot_88489912_comma_5_dot_589581_comma_5_dot_589581",
                            "loc_bar__minus_4_bar__minus_8_bar_0_bar_15",
                            "agent1",
                            "countertop__minus_7_dot_236_comma__minus_7_dot_236_comma_4_dot_728_comma_4_dot_728_comma_5_dot_434_comma_5_dot_434"
                        ],
                        "operator_body": "(:action CutObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r CounterTopType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)"
                    },
                    {
                        "action": "RemoveObject",
                        "args": [
                            "bread__minus_8_dot_19928264_comma__minus_8_dot_19928264_comma__minus_10_dot_88489912_comma__minus_10_dot_88489912_comma_5_dot_589581_comma_5_dot_589581",
                            "countertop__minus_7_dot_236_comma__minus_7_dot_236_comma_4_dot_728_comma_4_dot_728_comma_5_dot_434_comma_5_dot_434",
                            "agent1",
                            "sidetable_4_dot_088_comma_4_dot_088_comma_3_dot_4844_comma_3_dot_4844_comma_4_dot_9732_comma_4_dot_9732"
                        ],
                        "operator_body": "(:action RemoveObject\n        :parameters (?o - object ?rStart - receptacle ?a - agent ?rEnd - receptacle)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rStart)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rEnd)\n\t\t(not (inReceptacle ?o ?rStart))\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/look_at_obj_in_light-WateringCan-None-DeskLamp-224/trial_T20190907_122624_148095",
        "plans": []
    },
    {
        "file_name": "train/look_at_obj_in_light-CD-None-DeskLamp-305/trial_T20190909_132447_100635",
        "plans": []
    },
    {
        "file_name": "train/pick_and_place_simple-Book-None-Cabinet-310/trial_T20190908_154238_160623",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_2_bar__minus_8_bar_0_bar_30",
                            "loc_bar_3_bar__minus_3_bar_0_bar_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_3_bar__minus_3_bar_0_bar_30",
                            "book_3_dot_4752456_comma_3_dot_4752456_comma_2_dot_3932484_comma_2_dot_3932484_comma_2_dot_5867148_comma_2_dot_5867148"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_3_bar__minus_3_bar_0_bar_30",
                            "loc_bar__minus_1_bar__minus_5_bar_2_bar_15"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar__minus_5_bar_2_bar_15",
                            "booktype",
                            "book_3_dot_4752456_comma_3_dot_4752456_comma_2_dot_3932484_comma_2_dot_3932484_comma_2_dot_5867148_comma_2_dot_5867148",
                            "cabinet__minus_0_dot_1202516556_comma__minus_0_dot_1202516556_comma__minus_7_dot_674432_comma__minus_7_dot_674432_comma_6_dot_10477304_comma_6_dot_10477304"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "PUT",
                        "args": [
                            "book_3_dot_4752456_comma_3_dot_4752456_comma_2_dot_3932484_comma_2_dot_3932484_comma_2_dot_5867148_comma_2_dot_5867148",
                            "cabinet__minus_7_dot_350444_comma__minus_7_dot_350444_comma__minus_7_dot_674432_comma__minus_7_dot_674432_comma_6_dot_10477304_comma_6_dot_10477304",
                            "loc_bar__minus_6_bar__minus_5_bar_2_bar_15"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_2_bar__minus_8_bar_0_bar_30",
                            "loc_bar_3_bar__minus_3_bar_0_bar_30"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_3_bar__minus_3_bar_0_bar_30",
                            "book_3_dot_4752456_comma_3_dot_4752456_comma_2_dot_3932484_comma_2_dot_3932484_comma_2_dot_5867148_comma_2_dot_5867148",
                            "bed_4_dot_708_comma_4_dot_708_comma_0_dot_956_comma_0_dot_956_comma_0_dot_0_comma_0_dot_0"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_3_bar__minus_3_bar_0_bar_30",
                            "loc_bar__minus_1_bar__minus_5_bar_2_bar_15"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_1_bar__minus_5_bar_2_bar_15",
                            "booktype",
                            "book_3_dot_4752456_comma_3_dot_4752456_comma_2_dot_3932484_comma_2_dot_3932484_comma_2_dot_5867148_comma_2_dot_5867148",
                            "cabinet__minus_0_dot_1202516556_comma__minus_0_dot_1202516556_comma__minus_7_dot_674432_comma__minus_7_dot_674432_comma_6_dot_10477304_comma_6_dot_10477304"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_clean_then_place_in_recep-Kettle-None-CounterTop-18/trial_T20190908_025431_507279",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KettleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_3_bar_17_bar_2_bar_30",
                            "loc_bar_3_bar_13_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_3_bar_13_bar_1_bar_45",
                            "kettle_6_dot_372_comma_6_dot_372_comma_13_dot_0_comma_13_dot_0_comma_3_dot_9267776_comma_3_dot_9267776",
                            "countertop_5_dot_564_comma_5_dot_564_comma_3_dot_588_comma_3_dot_588_comma_4_dot_1128_comma_4_dot_1128"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_3_bar_13_bar_1_bar_45",
                            "loc_bar_3_bar_9_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar_3_bar_9_bar_1_bar_45",
                            "sinkbasin_5_dot_5492_comma_5_dot_5492_comma_9_dot_356_comma_9_dot_356_comma_3_dot_5209168_comma_3_dot_5209168",
                            "kettle_6_dot_372_comma_6_dot_372_comma_13_dot_0_comma_13_dot_0_comma_3_dot_9267776_comma_3_dot_9267776"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KettleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_3_bar_17_bar_2_bar_30",
                            "loc_bar_3_bar_13_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_3_bar_13_bar_1_bar_45",
                            "kettle_6_dot_372_comma_6_dot_372_comma_13_dot_0_comma_13_dot_0_comma_3_dot_9267776_comma_3_dot_9267776"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_3_bar_13_bar_1_bar_45",
                            "loc_bar_3_bar_9_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar_3_bar_9_bar_1_bar_45",
                            "sinkbasin_5_dot_5492_comma_5_dot_5492_comma_9_dot_356_comma_9_dot_356_comma_3_dot_5209168_comma_3_dot_5209168",
                            "kettle_6_dot_372_comma_6_dot_372_comma_13_dot_0_comma_13_dot_0_comma_3_dot_9267776_comma_3_dot_9267776"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_and_place_simple-AppleSliced-None-Microwave-14/trial_T20190908_171329_509999",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar_10_bar_2_bar_30",
                            "loc_bar_2_bar__minus_3_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_2_bar__minus_3_bar_2_bar_45",
                            "loc_bar_4_bar__minus_3_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_4_bar__minus_3_bar_1_bar_45",
                            "apple_6_dot_95492124_comma_6_dot_95492124_comma__minus_3_dot_552394628_comma__minus_3_dot_552394628_comma_4_dot_291039_comma_4_dot_291039",
                            "microwave_7_dot_008_comma_7_dot_008_comma__minus_3_dot_376_comma__minus_3_dot_376_comma_3_dot_600000144_comma_3_dot_600000144"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_4_bar__minus_3_bar_1_bar_45",
                            "loc_bar_4_bar_1_bar_0_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CutObject",
                        "args": [
                            "apple_6_dot_95492124_comma_6_dot_95492124_comma__minus_3_dot_552394628_comma__minus_3_dot_552394628_comma_4_dot_291039_comma_4_dot_291039",
                            "loc_bar_4_bar_1_bar_0_bar_45",
                            "agent1",
                            "countertop_3_dot_956_comma_3_dot_956_comma_4_dot_068_comma_4_dot_068_comma_3_dot_7844_comma_3_dot_7844"
                        ],
                        "operator_body": "(:action CutObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r CounterTopType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_2_bar_10_bar_2_bar_30",
                            "loc_bar_2_bar__minus_3_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_2_bar__minus_3_bar_2_bar_45",
                            "loc_bar_4_bar__minus_3_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_4_bar__minus_3_bar_1_bar_45",
                            "apple_6_dot_95492124_comma_6_dot_95492124_comma__minus_3_dot_552394628_comma__minus_3_dot_552394628_comma_4_dot_291039_comma_4_dot_291039"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_4_bar__minus_3_bar_1_bar_45",
                            "loc_bar_4_bar_1_bar_0_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CutObject",
                        "args": [
                            "apple_6_dot_95492124_comma_6_dot_95492124_comma__minus_3_dot_552394628_comma__minus_3_dot_552394628_comma_4_dot_291039_comma_4_dot_291039",
                            "loc_bar_4_bar_1_bar_0_bar_45",
                            "agent1",
                            "countertop_3_dot_956_comma_3_dot_956_comma_4_dot_068_comma_4_dot_068_comma_3_dot_7844_comma_3_dot_7844"
                        ],
                        "operator_body": "(:action CutObject\n        :parameters (?o - object ?l - location ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r CounterTopType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_and_place_simple-Box-None-DiningTable-223/trial_T20190907_201444_740434",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar_14_bar__minus_5_bar_2_bar_30",
                            "loc_bar__minus_11_bar__minus_2_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_11_bar__minus_2_bar_3_bar_60",
                            "box__minus_13_dot_019784_comma__minus_13_dot_019784_comma__minus_2_dot_209903_comma__minus_2_dot_209903_comma_2_dot_946186_comma_2_dot_946186",
                            "sofa__minus_13_dot_756_comma__minus_13_dot_756_comma__minus_0_dot_1679999828_comma__minus_0_dot_1679999828_comma__minus_0_dot_024_comma__minus_0_dot_024"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_11_bar__minus_2_bar_3_bar_60",
                            "loc_bar_8_bar__minus_5_bar_0_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar_8_bar__minus_5_bar_0_bar_60",
                            "boxtype",
                            "box__minus_13_dot_019784_comma__minus_13_dot_019784_comma__minus_2_dot_209903_comma__minus_2_dot_209903_comma_2_dot_946186_comma_2_dot_946186",
                            "diningtable_7_dot_536_comma_7_dot_536_comma__minus_1_dot_168_comma__minus_1_dot_168_comma__minus_0_dot_0148_comma__minus_0_dot_0148"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "PUT",
                        "args": [
                            "box__minus_13_dot_019784_comma__minus_13_dot_019784_comma__minus_2_dot_209903_comma__minus_2_dot_209903_comma_2_dot_946186_comma_2_dot_946186",
                            "diningtable__minus_7_dot_518_comma__minus_7_dot_518_comma_11_dot_1516_comma_11_dot_1516_comma_1_dot_0848_comma_1_dot_0848",
                            "loc_bar__minus_8_bar_7_bar_0_bar_60"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_and_place_simple-Box-None-Sofa-205/trial_T20190907_214830_497445",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_11_bar_1_bar_3_bar_30",
                            "loc_bar__minus_10_bar_7_bar_1_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_10_bar_7_bar_1_bar_45",
                            "box__minus_7_dot_49467088_comma__minus_7_dot_49467088_comma_6_dot_78114748_comma_6_dot_78114748_comma_3_dot_468812944_comma_3_dot_468812944",
                            "diningtable__minus_6_dot_368032_comma__minus_6_dot_368032_comma_5_dot_096312_comma_5_dot_096312_comma_1_dot_2581852_comma_1_dot_2581852"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_10_bar_7_bar_1_bar_45",
                            "loc_bar__minus_13_bar_21_bar_3_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_13_bar_21_bar_3_bar_60",
                            "boxtype",
                            "box__minus_7_dot_49467088_comma__minus_7_dot_49467088_comma_6_dot_78114748_comma_6_dot_78114748_comma_3_dot_468812944_comma_3_dot_468812944",
                            "sofa__minus_17_dot_702484_comma__minus_17_dot_702484_comma_20_dot_248_comma_20_dot_248_comma_0_dot_039098684_comma_0_dot_039098684"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "PUT",
                        "args": [
                            "box__minus_7_dot_49467088_comma__minus_7_dot_49467088_comma_6_dot_78114748_comma_6_dot_78114748_comma_3_dot_468812944_comma_3_dot_468812944",
                            "sofa__minus_17_dot_702484_comma__minus_17_dot_702484_comma_20_dot_248_comma_20_dot_248_comma_0_dot_039098684_comma_0_dot_039098684",
                            "loc_bar__minus_13_bar_21_bar_3_bar_60"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_and_place_simple-CreditCard-None-ArmChair-201/trial_T20190908_124445_444943",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CreditCardType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar_17_bar_1_bar_30",
                            "loc_bar__minus_4_bar_20_bar_0_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar_20_bar_0_bar_60",
                            "loc_bar__minus_9_bar_2_bar_2_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_9_bar_2_bar_2_bar_60",
                            "creditcard__minus_9_dot_47488596_comma__minus_9_dot_47488596_comma__minus_0_dot_42238462_comma__minus_0_dot_42238462_comma_2_dot_5964964_comma_2_dot_5964964",
                            "drawer__minus_8_dot_456_comma__minus_8_dot_456_comma__minus_0_dot_2779686152_comma__minus_0_dot_2779686152_comma_2_dot_6297864_comma_2_dot_6297864"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_9_bar_2_bar_2_bar_60",
                            "loc_bar__minus_17_bar_20_bar_0_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_17_bar_20_bar_0_bar_60",
                            "creditcardtype",
                            "creditcard__minus_9_dot_47488596_comma__minus_9_dot_47488596_comma__minus_0_dot_42238462_comma__minus_0_dot_42238462_comma_2_dot_5964964_comma_2_dot_5964964",
                            "armchair__minus_17_dot_648_comma__minus_17_dot_648_comma_24_dot_032_comma_24_dot_032_comma_0_dot_055999998_comma_0_dot_055999998"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CreditCardType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar_17_bar_1_bar_30",
                            "loc_bar__minus_4_bar_20_bar_0_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_4_bar_20_bar_0_bar_60",
                            "loc_bar__minus_9_bar_2_bar_2_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_9_bar_2_bar_2_bar_60",
                            "creditcard__minus_9_dot_47488596_comma__minus_9_dot_47488596_comma__minus_0_dot_42238462_comma__minus_0_dot_42238462_comma_2_dot_5964964_comma_2_dot_5964964"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_9_bar_2_bar_2_bar_60",
                            "loc_bar__minus_17_bar_20_bar_0_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PutObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_17_bar_20_bar_0_bar_60",
                            "creditcardtype",
                            "creditcard__minus_9_dot_47488596_comma__minus_9_dot_47488596_comma__minus_0_dot_42238462_comma__minus_0_dot_42238462_comma_2_dot_5964964_comma_2_dot_5964964",
                            "armchair__minus_17_dot_648_comma__minus_17_dot_648_comma_24_dot_032_comma_24_dot_032_comma_0_dot_055999998_comma_0_dot_055999998"
                        ],
                        "operator_body": "(:action PutObjectInReceptacle\n        :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (objectType ?o ?ot)\n            (holds ?a ?o)\n            (not (holdsAnyReceptacleObject ?a))\n        )\n        :effect (and\n            (inReceptacle ?o ?r)\n            (not (holds ?a ?o))\n            (not (holdsAny ?a))\n            (objectAtLocation ?o ?l)\n        )\n    )"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CreditCardType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))",
                "plan": [
                    {
                        "action": "PUT",
                        "args": [
                            "creditcard__minus_10_dot_04321672_comma__minus_10_dot_04321672_comma_24_dot_040448_comma_24_dot_040448_comma_0_dot_951983868_comma_0_dot_951983868",
                            "armchair__minus_17_dot_648_comma__minus_17_dot_648_comma_24_dot_032_comma_24_dot_032_comma_0_dot_055999998_comma_0_dot_055999998",
                            "loc_bar__minus_17_bar_20_bar_0_bar_60"
                        ],
                        "operator_body": "(:action PUT\n        :parameters (?o - object ?c - receptacle ?l - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"
                    }
                ]
            }
        ]
    },
    {
        "file_name": "train/pick_clean_then_place_in_recep-Ladle-None-Cabinet-25/trial_T20190908_033914_770782",
        "plans": [
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_7_bar_7_bar_2_bar_30",
                            "loc_bar__minus_6_bar_5_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_6_bar_5_bar_2_bar_45",
                            "loc_bar__minus_8_bar_4_bar_2_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectNotInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar_4_bar_2_bar_60",
                            "ladle__minus_7_dot_77228832_comma__minus_7_dot_77228832_comma_1_dot_6067844_comma_1_dot_6067844_comma_0_dot_678682328_comma_0_dot_678682328"
                        ],
                        "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar_4_bar_2_bar_60",
                            "loc_bar__minus_6_bar_5_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar__minus_6_bar_5_bar_2_bar_45",
                            "sinkbasin__minus_6_dot_9823656_comma__minus_6_dot_9823656_comma_1_dot_183695672_comma_1_dot_183695672_comma_2_dot_748186588_comma_2_dot_748186588",
                            "ladle__minus_7_dot_77228832_comma__minus_7_dot_77228832_comma_1_dot_6067844_comma_1_dot_6067844_comma_0_dot_678682328_comma_0_dot_678682328"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    }
                ]
            },
            {
                "goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))",
                "plan": [
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_7_bar_7_bar_2_bar_30",
                            "loc_bar__minus_6_bar_5_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_6_bar_5_bar_2_bar_45",
                            "loc_bar__minus_8_bar_4_bar_2_bar_60"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "PickupObjectInReceptacle",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar_4_bar_2_bar_60",
                            "ladle__minus_7_dot_77228832_comma__minus_7_dot_77228832_comma_1_dot_6067844_comma_1_dot_6067844_comma_0_dot_678682328_comma_0_dot_678682328",
                            "cabinet__minus_8_dot_95314216_comma__minus_8_dot_95314216_comma_2_dot_258996_comma_2_dot_258996_comma_1_dot_540134548_comma_1_dot_540134548"
                        ],
                        "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"
                    },
                    {
                        "action": "GotoLocation",
                        "args": [
                            "agent1",
                            "loc_bar__minus_8_bar_4_bar_2_bar_60",
                            "loc_bar__minus_6_bar_5_bar_2_bar_45"
                        ],
                        "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"
                    },
                    {
                        "action": "CleanObject",
                        "args": [
                            "agent1",
                            "loc_bar__minus_6_bar_5_bar_2_bar_45",
                            "sinkbasin__minus_6_dot_9823656_comma__minus_6_dot_9823656_comma_1_dot_183695672_comma_1_dot_183695672_comma_2_dot_748186588_comma_2_dot_748186588",
                            "ladle__minus_7_dot_77228832_comma__minus_7_dot_77228832_comma_1_dot_6067844_comma_1_dot_6067844_comma_0_dot_678682328_comma_0_dot_678682328"
                        ],
                        "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"
                    }
                ]
            }
        ]
    }
]