{"mine-wood": "(:action mine-wood\n        :parameters (?toolinv - inventory ?t - tile ?target - object ?tool - object ?targetinv - inventory ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x Tree)\n\t\t(object-of-type ?target Hypothetical)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?tool Axe)\n\t\t)\n        :effect (and \n\t\t(object-of-type ?target Wood)\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (inventory-empty ?targetinv))\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t)\n)", "mine-wool1": "(:action mine-wool1\n        :parameters (?target - object ?targetinv - inventory ?tool - object ?x - object)\n\n        :precondition (and \n\t\t(object-of-type ?tool Shears)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t(object-of-type ?x Sheep)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Wool)\n\t\t)\n)", "plant-potato": "(:action plant-potato\n        :parameters (?holdinv - inventory ?t - tile ?iteminv - inventory ?x151 - object ?x90 - object)\n\n        :precondition (and \n\t\t(inventory-holding ?holdinv ?x90)\n\t\t(object-of-type ?x90 Potato)\n\t\t(inventory-empty ?iteminv)\n\t\t(inventory-empty ?iteminv)\n\t\t)\n        :effect (and \n\t\t(inventory-holding ?holdinv ?x90)\n\t\t(object-at ?x151 ?t)\n\t\t(not (inventory-empty ?iteminv))\n\t\t(not (object-of-type ?x151 Hypothetical))\n\t\t(object-of-type ?x151 Potato)\n\t\t)\n)", "wail": "(:action plant-potato\n        :parameters (?holdinv - inventory ?t - tile ?iteminv - inventory ?x151 - object ?x90 - object)\n\n        :precondition (and \n\t\t(inventory-holding ?holdinv ?x90)\n\t\t(object-of-type ?x90 Potato)\n\t\t(inventory-empty ?iteminv)\n\t\t(inventory-empty ?iteminv)\n\t\t)\n        :effect (and \n\t\t(inventory-holding ?holdinv ?x90)\n\t\t(object-at ?x151 ?t)\n\t\t(not (inventory-empty ?iteminv))\n\t\t(not (object-of-type ?x151 Hypothetical))\n\t\t(object-of-type ?x151 Potato)\n\t\t)\n)", "place": "(:action place\n        :parameters (?t - tile ?x - object ?i - inventory)\n\n        :precondition (and \n\t\t(inventory-holding ?i ?x)\n\t\t(agent-at ?t)\n\t\t(inventory-empty ?i)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?i))\n\t\t(inventory-holding ?i ?x)\n\t\t(not (agent-at ?t))\n\t\t(object-at ?x ?t)\n\t\t)\n)", "mine-potatoes": "(:action mine-potatoes\n        :parameters (?toolinv - inventory ?t - tile ?target - object ?tool - object ?targetinv - inventory ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x PotatoPlant)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Axe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Potato)\n\t\t)\n)", "mine-sugar-cane": "(:action mine-potatoes\n        :parameters (?toolinv - inventory ?t - tile ?target - object ?tool - object ?targetinv - inventory ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x PotatoPlant)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Axe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Potato)\n\t\t)\n)", "mine-gold-ore": "(:action mine-gold-ore\n        :parameters (?t - tile ?target - object ?i - inventory ?tool - object ?targetinv - inventory ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x GoldOreVein)\n\t\t(inventory-holding ?i ?tool)\n\t\t(object-of-type ?tool Pickaxe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target GoldOre)\n\t\t)\n)", "mine-beet": "(:action mine-beet\n        :parameters (?toolinv - inventory ?t - tile ?target - object ?tool - object ?targetinv - inventory ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x BeetrootCrop)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Key)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Beetroot)\n\t\t)\n)", "mine-feather": "(:action mine-beet\n        :parameters (?toolinv - inventory ?t - tile ?target - object ?tool - object ?targetinv - inventory ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x BeetrootCrop)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Key)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Beetroot)\n\t\t)\n)", "mine-coal1": "(:action mine-coal1\n        :parameters (?toolinv - inventory ?t - tile ?target - object ?tool - object ?targetinv - inventory ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x CoalOreVein)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Pickaxe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Coal)\n\t\t)\n)", "harvest-beets": "(:action harvest-beets\n        :parameters (?t - tile ?i - inventory ?k - object ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x BeetrootCrop)\n\t\t(inventory-holding ?i ?k)\n\t\t(object-of-type ?k Shears)\n\t\t(inventory-empty ?i)\n\t\t)\n        :effect (and \n\t\t(inventory-holding ?i ?x)\n\t\t(not (object-at ?x ?t))\n\t\t(not (inventory-holding ?i ?x))\n\t\t)\n)", "mine-gold1": "(:action mine-gold1\n        :parameters (?toolinv - inventory ?t - tile ?goldinv - inventory ?tool - object ?gold - object ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x GoldOreVein)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Pickaxe)\n\t\t(object-of-type ?gold GoldOreVein)\n\t\t)\n        :effect (and \n\t\t(inventory-holding ?goldinv ?gold)\n\t\t(object-of-type ?gold Hypothetical)\n\t\t(not (object-of-type ?gold GoldOreVein))\n\t\t)\n)", "mine-wool2": "(:action mine-wool2\n        :parameters (?toolinv - inventory ?t - tile ?target - object ?targ - object ?tool - object ?targetinv - inventory)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?targ ?t)\n\t\t(object-of-type ?targ Sheep)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Shears)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Wool)\n\t\t)\n)", "mine-cobblestone": "(:action mine-cobblestone\n        :parameters (?toolinv - inventory ?t - tile ?target - object ?tool - object ?targetinv - inventory ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x CobblestoneStash)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Pickaxe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Cobblestone)\n\t\t)\n)", "boat-go": "(:action boat-go\n        :parameters (?e3 - tile ?t - tile ?e2 - tile ?e5 - tile ?e1 - tile ?e6 - tile ?e4 - tile ?w - tile)\n\n        :precondition (and \n\t\t(agent-at ?w)\n\t\t(tile-left ?e1 ?w)\n\t\t(tile-left ?e2 ?e1)\n\t\t(tile-left ?e3 ?e2)\n\t\t(tile-left ?e4 ?e3)\n\t\t(tile-left ?e5 ?e4)\n\t\t(tile-left ?e6 ?e5)\n\t\t(tile-left ?t ?e6)\n\t\t)\n        :effect (and \n\t\t(agent-at ?t)\n\t\t)\n)", "mine-coal-ore": "(:action mine-coal-ore\n        :parameters (?toolinv - inventory ?t - tile ?target - object ?tool - object ?targetinv - inventory ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x CoalOreVein)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Pickaxe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Coal)\n\t\t)\n)", "mine-coal": "(:action mine-coal\n        :parameters (?toolinv - inventory ?t - tile ?target - object ?tool - object ?targetinv - inventory ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x CoalOreVein)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Pickaxe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Coal)\n\t\t)\n)", "planks-house": "(:action planks-house\n        :parameters (?t - tile ?x - object ?y - object ?i - inventory)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(inventory-holding ?i ?x)\n\t\t(inventory-holding ?i ?y)\n\t\t)\n        :effect (and \n\t\t(inventory-empty ?i)\n\t\t(not (inventory-empty ?i))\n\t\t(not (inventory-holding ?i ?x))\n\t\t(not (inventory-holding ?i ?y))\n\t\t)\n)", "mine-feather1": "(:action mine-feather1\n        :parameters (?toolinv - inventory ?t - tile ?target - object ?tool - object ?targetinv - inventory)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Axe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Feather)\n\t\t)\n)", "mine-iron": "(:action mine-iron\n        :parameters (?tool1inv - inventory ?toolinv - inventory ?tool2 - object ?t - tile ?tool2inv - inventory ?tool - object ?x - object ?tool1 - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x IronOreVein)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Pickaxe)\n\t\t(inventory-holding ?tool1inv ?tool1)\n\t\t(object-of-type ?tool1 Key)\n\t\t(inventory-holding ?tool2inv ?tool2)\n\t\t(object-of-type ?tool2 Key)\n\t\t)\n        :effect (and \n\t\t(not (object-of-type ?x IronOreVein))\n\t\t(object-of-type ?x IronIngot)\n\t\t)\n)", "move-right1": "(:action move-right1\n        :parameters (?t2 - tile ?t1 - tile)\n\n        :precondition (and \n\t\t(agent-at ?t1)\n\t\t(tile-right ?t1 ?t2)\n\t\t)\n        :effect (and \n\t\t(agent-at ?t2)\n\t\t(not (agent-at ?t1))\n\t\t)\n)", "move-left1": "(:action move-left1\n        :parameters (?t2 - tile ?t1 - tile)\n\n        :precondition (and \n\t\t(not (agent-at ?t1))\n\t\t(tile-left ?t1 ?t2)\n\t\t)\n        :effect (and \n\t\t(agent-at ?t2)\n\t\t(not (agent-at ?t1))\n\t\t)\n)", "mine-potato": "(:action mine-potato\n        :parameters (?toolinv - inventory ?t - tile ?target - object ?tool - object ?targetinv - inventory ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x PotatoPlant)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Hoe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Potato)\n\t\t)\n)", "match-to-feather": "(:action match-to-feather\n        :parameters (?goldingot - object ?toolinv - inventory ?wood - object ?targetinv - inventory ?ironingot - object ?tnt - object)\n\n        :precondition (and \n\t\t(inventory-holding ?toolinv ?ironingot)\n\t\t(object-of-type ?ironingot IronIngot)\n\t\t(inventory-holding ?toolinv ?goldingot)\n\t\t(object-of-type ?goldingot GoldIngot)\n\t\t(inventory-holding ?toolinv ?wood)\n\t\t(object-of-type ?wood Wood)\n\t\t(inventory-holding ?toolinv ?tnt)\n\t\t(object-of-type ?tnt Wood)\n\t\t(inventory-empty ?targetinv)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv Feather)\n\t\t(not (object-of-type Feather Hypothetical))\n\t\t)\n)", "mine-beetroot": "(:action mine-beetroot\n        :parameters (?toolinv - inventory ?t - tile ?target - object ?tool - object ?targetinv - inventory ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x BeetrootCrop)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Shears)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Beetroot)\n\t\t)\n)", "mine-wool0": "(:action mine-beetroot\n        :parameters (?toolinv - inventory ?t - tile ?target - object ?tool - object ?targetinv - inventory ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x BeetrootCrop)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Shears)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Beetroot)\n\t\t)\n)", "plant-tree": "(:action plant-tree\n        :parameters (?toolinv - inventory ?t - tile ?target - object ?tool - object ?targetinv - inventory ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x Seed)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Axe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Tree)\n\t\t)\n)", "mine-cobble": "(:action mine-cobble\n        :parameters (?toolinv - inventory ?t - tile ?target - object ?tool - object ?targetinv - inventory)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Pickaxe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Cobblestone)\n\t\t)\n)", "mine-iron1": "(:action mine-iron1\n        :parameters (?toolinv - inventory ?t - tile ?target - object ?tool - object ?targetinv - inventory ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x IronOreVein)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Pickaxe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronOre)\n\t\t)\n)", "mine-iron-ore1": "(:action mine-iron-ore1\n        :parameters (?toolinv - inventory ?t - tile ?target - object ?tool - object ?targetinv - inventory ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x IronOreVein)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Pickaxe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronOre)\n\t\t)\n)", "mine-beetroot1": "(:action mine-beetroot1\n        :parameters (?toolinv - inventory ?t - tile ?target - object ?tool - object ?targetinv - inventory)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Pickaxe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Cobblestone)\n\t\t)\n)", "drop": "(:action drop\n        :parameters (?t - tile ?x - object ?i - inventory)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(inventory-holding ?i ?x)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?i))\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x Trash)\n\t\t)\n)", "mine-sugar-cane1": "(:action mine-sugar-cane1\n        :parameters (?toolinv - inventory ?t - tile ?target - object ?tool - object ?targetinv - inventory ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x SugarCanePlant)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Shears)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target SugarCane)\n\t\t)\n)", "mine": "(:action mine\n        :parameters (?toolinv - inventory ?t - tile ?target - object ?tool - object ?targetinv - inventory ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x IronOreVein)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Pickaxe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronOre)\n\t\t)\n)"}