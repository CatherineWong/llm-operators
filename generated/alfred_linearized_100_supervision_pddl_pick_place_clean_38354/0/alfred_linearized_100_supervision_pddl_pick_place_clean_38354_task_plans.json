[{"file_name": "train/pick_clean_then_place_in_recep-Ladle-None-Cabinet-25/trial_T20190908_033914_770782", "plans": [{"goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))", "plan": [{"action": "GotoLocation", "args": ["agent1", "loc_bar__minus_7_bar_7_bar_2_bar_30", "loc_bar__minus_6_bar_5_bar_2_bar_45"], "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"}, {"action": "GotoLocation", "args": ["agent1", "loc_bar__minus_6_bar_5_bar_2_bar_45", "loc_bar__minus_8_bar_4_bar_2_bar_60"], "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"}, {"action": "PickupObjectInReceptacle", "args": ["agent1", "loc_bar__minus_8_bar_4_bar_2_bar_60", "ladle__minus_7_dot_77228832_comma__minus_7_dot_77228832_comma_1_dot_6067844_comma_1_dot_6067844_comma_0_dot_678682328_comma_0_dot_678682328", "cabinet__minus_8_dot_95314216_comma__minus_8_dot_95314216_comma_2_dot_258996_comma_2_dot_258996_comma_1_dot_540134548_comma_1_dot_540134548"], "operator_body": "(:action PickupObjectInReceptacle\n        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"}, {"action": "GotoLocation", "args": ["agent1", "loc_bar__minus_8_bar_4_bar_2_bar_60", "loc_bar__minus_6_bar_5_bar_2_bar_45"], "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"}, {"action": "CleanObject", "args": ["agent1", "loc_bar__minus_6_bar_5_bar_2_bar_45", "sinkbasin__minus_6_dot_9823656_comma__minus_6_dot_9823656_comma_1_dot_183695672_comma_1_dot_183695672_comma_2_dot_748186588_comma_2_dot_748186588", "ladle__minus_7_dot_77228832_comma__minus_7_dot_77228832_comma_1_dot_6067844_comma_1_dot_6067844_comma_0_dot_678682328_comma_0_dot_678682328"], "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"}]}, {"goal": "(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))", "plan": [{"action": "GotoLocation", "args": ["agent1", "loc_bar__minus_7_bar_7_bar_2_bar_30", "loc_bar__minus_6_bar_5_bar_2_bar_45"], "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"}, {"action": "GotoLocation", "args": ["agent1", "loc_bar__minus_6_bar_5_bar_2_bar_45", "loc_bar__minus_8_bar_4_bar_2_bar_60"], "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"}, {"action": "PickupObjectNotInReceptacle", "args": ["agent1", "loc_bar__minus_8_bar_4_bar_2_bar_60", "ladle__minus_7_dot_77228832_comma__minus_7_dot_77228832_comma_1_dot_6067844_comma_1_dot_6067844_comma_0_dot_678682328_comma_0_dot_678682328"], "operator_body": "(:action PickupObjectNotInReceptacle\n        :parameters (?a - agent ?l - location ?o - object)\n        :precondition (and\n            (atLocation ?a ?l)\n            (objectAtLocation ?o ?l)\n            (not (holdsAny ?a))\n        )\n        :effect (and\n            (not (objectAtLocation ?o ?l))\n            (holds ?a ?o)\n            (holdsAny ?a)\n        )\n    )"}, {"action": "GotoLocation", "args": ["agent1", "loc_bar__minus_8_bar_4_bar_2_bar_60", "loc_bar__minus_6_bar_5_bar_2_bar_45"], "operator_body": "(:action GotoLocation\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n        :precondition (and\n            (atLocation ?a ?lStart)\n        )\n        :effect (and\n            (atLocation ?a ?lEnd)\n            (not (atLocation ?a ?lStart))\n        )\n    )"}, {"action": "CleanObject", "args": ["agent1", "loc_bar__minus_6_bar_5_bar_2_bar_45", "sinkbasin__minus_6_dot_9823656_comma__minus_6_dot_9823656_comma_1_dot_183695672_comma_1_dot_183695672_comma_2_dot_748186588_comma_2_dot_748186588", "ladle__minus_7_dot_77228832_comma__minus_7_dot_77228832_comma_1_dot_6067844_comma_1_dot_6067844_comma_0_dot_678682328_comma_0_dot_678682328"], "operator_body": "(:action CleanObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n        :precondition (and\n            (receptacleType ?r SinkBasinType)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n        )\n        :effect (and\n            (isClean ?o)\n        )\n    )"}]}]}]