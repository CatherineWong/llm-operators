Experiment Parameters
================================================================================
Timestamp: 2023-09-12 12:45:23.893452
Command to replicate: python main.py --experiment_name alfred_cot_250_filtered_2_912023 --random_seed 2 --output_directory generated --train_iterations 2 --pddl_domain_name alfred_linearized --dataset_name alfred_cot_250_filtered --dataset_fraction 1.0 --dataset_pddl_directory data/dataset/alfred_linearized_pddl --supervision_name supervision --goal_supervision_fraction 0.1 --initial_goal_supervision_prefix ALL --plan_supervision_fraction 0.1 --initial_plans_prefix ALL --initial_pddl_predicates  --initial_pddl_operators GotoLocation PickupObjectInReceptacle PickupObjectNotInReceptacle PutObjectInReceptacle --operator_propose_minimum_usage 2 --operator_use_cot 1 --goal_propose_include_codex_types  --codex_goal_temperature 1.0 --codex_operator_temperature 1.0 --codex_plan_temperature 1.0 --maximum_operator_arity 4 --n_goal_samples 4 --n_plan_samples 5 --n_operator_samples 3 --n_attempts_to_plan 1 --external_goal_sample_with_prompt  --external_goal_supervision data/dataset/alfred-goal-supervision_ --external_plan_supervision data/dataset/alfred-grate-break-fill-restart-supervision.json --external_operator_supervision data/dataset/alfred-grate-break-fill-restart-operator-supervision_ --external_operator_sample_with_prompt  --external_operator_names GrateObject BakeObject FillObject RestartObject --planner task_planner_fd --planner_timeout None --planner_minimum_n_operators 7 --planner_run_second_pass 1 --motionplan_search_type counter --operator_pseudocounts 0.05 --operator_pseudocounts_denominator 0.5 --operator_acceptance_threshold 0.5 --conservative_library_proposal  --checkpoint_every_n_problem_plans 2 --resume  --resume_from_iteration 0 --resume_from_problem_idx 0 --verbose  --debug_export_failed_pddl None --debug_no_propose_plans_operators_goals  --debug_mock_propose_goals  --debug_mock_propose_plans  --debug_mock_propose_operators  --debug_skip_propose_operators_after -1 --debug_skip_propose_plans_after -1 --debug_skip_task_plans  --debug_mock_task_plans  --debug_mock_motion_plans  --debug_skip_motion_plans  --debug_start_problem_idx 0 --debug_skip_problems None --debug_ground_truth_operators  --debug_ground_truth_goals  --debug_stop_after_first_proposal  --debug_cw_skip_location_check  


Loaded PDDL file with operators
================================================================================
Domain: alfred_linearized
Filename: data/domains/alfred_linearized.pddl
Operators: 12
Ground truth operators: 
   GotoLocation
   OpenObject
   CloseObject
   PickupObjectInReceptacle
   PickupObjectNotInReceptacle
   PutObjectInReceptacle
   PutObjectInReceptacleObject
   CleanObject
   HeatObject
   CoolObject
   ToggleObject
   SliceObject
Initializing with operators: 
  GotoLocation
  PickupObjectInReceptacle
  PickupObjectNotInReceptacle
  PutObjectInReceptacle


load_alfred_filtered_planning_domain_problems: loaded alfred_cot_250_filtered from data/dataset/alfred-cot-250-filtered-NLgoals-operators.json
train : 223 / original 223 problems
valid_seen : 145 / original 145 problems
valid_unseen : 155 / original 155 problems
Loaded initial dataset: alfred_cot_250_filtered
================================================================================
Initial train problems: 223
Marking problems for goal supervision: fraction=0.1, prefix=['ALL']
Sampling problems for goal supervision: 
	 look_at_obj_in_light : 3
	 pick_and_place_simple : 3
	 pick_heat_then_place_in_recep : 3
	 pick_clean_then_place_in_recep : 2
	 pick_cool_then_place_in_recep_slice : 2
	 pick_heat_then_place_in_recep_slice : 2
	 pick_cool_then_place_in_recep : 2
	 pick_and_place_simple_slice : 1
Total goal supervision problems: 18
Marking problems for plan supervision: fraction=0.1, prefix=['ALL']
This is not implemented yet. (!!!)

Loaded PDDL supervision
================================================================================
Loaded additional PDDL supervision from the following domain files:
  data/domains/supervision_domains/movie_domain.pddl
  data/domains/supervision_domains/depot_domain.pddl
  data/domains/supervision_domains/travel_domain.pddl


Training started.
================================================================================

propose_goals_for_problems:: proposing for 205 unsolved problems.
propose_goals_for_problems:: now on 0 / 205
propose_goals_for_problems:: "examine an alarm clock by the light of a table lamp.":
[Goal 1/4]

;; PDDL guess 1 for "examine an alarm clock by the light of a table lamp."
;; Official goal name: look_at_in_light-AlarmClock-None-DeskLamp
(:goal
    (exists (?a - agent)
        (exists (?r1 - receptacle)
            (exists (?r2 - receptacle)
                (exists (?o - object)
                    (exists (?l1 - location)
                        (exists (?l2 - location)
                            (and 
                                (objectType ?o AlarmClockType)
                                (receptacleType ?r1 DeskLampType)
                                (receptacleType ?r2 DiningTableType)
                                (inReceptacle ?o ?r1)
                                (atLocation ?a ?l2)
                                (objectAtLocation ?o ?l2)
                                (objectAtLocation ?r1 ?l1)
                                (objectAtLocation ?r2 ?l2)
                            )
                    )))))))

[Goal 2/4]

;; PDDL guess 2 for "examine an alarm clock by the light of a table lamp."
;; Official goal name: look_at_in_light-AlarmClock-None-DeskLamp
(:goal
    (exists (?a - agent)
        (exists (?r1 - receptacle)
            (exists (?r2 - receptacle)
                (exists (?o - object)
                    (exists (?l1 - location)
                        (exists (?l2 - location)
                            (and 
                                (objectType ?o AlarmClockType)
                                (receptacleType ?r1 DeskLampType)
                                (receptacleType ?r2 DiningTableType)
                                (inReceptacle ?o ?r1)
                                (atLocation ?a ?l2)
                                (objectAtLocation ?o ?l2)
                                (objectAtLocation ?r1 ?l1)
                                (objectAtLocation ?r2 ?l2)
                            )
                    )))))))

[Goal 3/4]

;; PDDL guess 3 for "examine an alarm clock by the light of a table lamp."
;; Official goal name: look_at_in_light-AlarmClock-None-DeskLamp
(:goal
    (exists (?a - agent)
        (exists (?r1 - receptacle)
            (exists (?r2 - receptacle)
                (exists (?o - object)
                    (exists (?l1 - location)
                        (exists (?l2 - location)
                            (and 
                                (objectType ?o AlarmClockType)
                                (receptacleType ?r1 DeskLampType)
                                (receptacleType ?r2 DiningTableType)
                                (inReceptacle ?o ?r1)
                                (atLocation ?a ?l2)
                                (objectAtLocation ?o ?l2)
                                (objectAtLocation ?r1 ?l1)
                                (objectAtLocation ?r2 ?l2)
                            )
                    )))))))

[Goal 4/4]

;; PDDL guess 4 for "examine an alarm clock by the light of a table lamp."
;; Official goal name: look_at_in_light-AlarmClock-None-DeskLamp
(:goal
    (exists (?a - agent)
        (exists (?r1 - receptacle)
            (exists (?r2 - receptacle)
                (exists (?o - object)
                    (exists (?l1 - location)
                        (exists (?l2 - location)
                            (and 
                                (objectType ?o AlarmClockType)
                                (receptacleType ?r1 DeskLampType)
                                (receptacleType ?r2 DiningTableType)
                                (inReceptacle ?o ?r1)
                                (atLocation ?a ?l2)
                                (objectAtLocation ?o ?l2)
                                (objectAtLocation ?r1 ?l1)
                                (objectAtLocation ?r2 ?l2)
                            )
                    )))))))

propose_goals_for_problems:: now on 1 / 205
propose_goals_for_problems:: "examine a laptop by the dim light of a living room.":
[Goal 1/4]

;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'
;; Simplified Goal: 
look_at_obj_in_light-Laptop-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o LaptopType)
                (holds ?a ?o)
            )
    ))))))


[Goal 2/4]

;; PDDL guess 2 for 'examine a laptop by the dim light of a living room.'
;; Simplified Goal: 
look_at_obj_in_light-Laptop-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o LaptopType)
                (holds ?a ?o)
            )
    ))))))


[Goal 3/4]

;; PDDL guess 3 for 'examine a laptop by the dim light of a living room.'
;; Simplified Goal: 
look_at_obj_in_light-Laptop-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o LaptopType)
                (holds ?a ?o)
            )
    ))))))


[Goal 4/4]

;; PDDL guess 4 for 'examine a laptop by the dim light of a living room.'
;; Simplified Goal: 
look_at_obj_in_light-Laptop-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o LaptopType)
                (holds ?a ?o)
            )
    ))))))


propose_goals_for_problems:: now on 2 / 205
propose_goals_for_problems:: "set the bowl on the coffee table.":
[Goal 1/4]

;; PDDL guess 1 for 'set the bowl on the coffee table.'
;; Simplified Goal: 
pick_and_place_simple-Bowl-None-CoffeeTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'set the bowl on the coffee table.'
;; Simplified Goal: 
pick_and_place_simple-Plate-None-CoffeeTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlateType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'set the bowl on the coffee table.'
;; Simplified Goal: 
pick_and_place_simple-Box-None-CoffeeTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'set the bowl on the coffee table.'
;; Simplified Goal: 
pick_and_place_simple-Cup-None-CoffeeTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r) 
            )
    )))

propose_goals_for_problems:: now on 3 / 205
propose_goals_for_problems:: "take the box from the table , put it on the couch.":
[Goal 1/4]

;; PDDL guess 1 for 'take the box from the table , put it on the couch.'
;; Simplified Goal: 
pick_and_place_simple-Box-None-Sofa

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'take the box from the table , put it on the couch.'
;; Simplified Goal: 
pick_and_place_simple-Box-None-Sofa

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'take the box from the table , put it on the couch.'
;; Simplified Goal: 
pick_and_place_simple-Box-None-Sofa

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'take the box from the table , put it on the couch.'
;; Simplified Goal: 
pick_and_place_simple-Box-None-Sofa

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))


propose_goals_for_problems:: now on 4 / 205
propose_goals_for_problems:: "put keys on the dresser.":
[Goal 1/4]

;; PDDL guess 1 for "put keys on the dresser."
;; Official goal name: pick_and_place_simple-KeyChain-None-Dresser
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KeyChainType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put keys on the dresser."
;; Official goal name: pick_and_place_simple-Key-None-Dresser
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KeyType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put keys on the dresser."
;; Official goal name: pick_and_place_simple-KeyChain-None-CoffeeTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KeyChainType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put keys on the dresser."
;; Official goal name: pick_and_place_simple-Key-None-SideTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KeyType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
            )
    )))

propose_goals_for_problems:: now on 5 / 205
propose_goals_for_problems:: "place a cooked egg in the sink.":
[Goal 1/4]

;; PDDL guess 1 for "place a cooked egg in the sink."
;; Official goal name: pick_and_place_simple-Egg-None-SinkBasinType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place a cooked egg in the sink."
;; Official goal name: pick_and_place_simple-PotatoType-None-SinkBasinType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place a cooked egg in the sink."
;; Official goal name: pick_and_place_simple-BasketBallType-None-SinkBasinType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BasketBallType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place a cooked egg in the sink."
;; Official goal name: pick_and_place_simple-AppleType-None-SinkBasinType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r) 
            )
    )))

propose_goals_for_problems:: now on 6 / 205
propose_goals_for_problems:: "grab the pen from the table , turn on the floor lamp.":
[Goal 1/4]

;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'
;; Official goal name: look_at_obj_in_light-Pen-None-FloorLamp
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PenType)
                (holds ?a ?o)
            )
    ))))))


[Goal 2/4]

;; PDDL guess 2 for 'grab the pen from the table , turn on the floor lamp.'
;; Official goal name: pick_and_place_simple-Pen-None-FloorLamp
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PenType) 
                (receptacleType ?r FloorLampType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 3/4]

;; PDDL guess 3 for 'grab the pen from the table , turn on the floor lamp.'
;; Official goal name: pick_and_place_simple-Pen-None-FloorLamp
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PenType) 
                (receptacleType ?r FloorLampType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 4/4]

;; PDDL guess 4 for 'grab the pen from the table , turn on the floor lamp.'
;; Official goal name: look_at_obj_in_light-Pen-None-FloorLamp
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PenType)
                (holds ?a ?o)
            )
    ))))))


propose_goals_for_problems:: now on 7 / 205
propose_goals_for_problems:: "put a clean spatula on the table.":
[Goal 1/4]

;; PDDL guess 1 for "put a clean spatula on the table."
;; Official goal name: pick_and_place_clean-Spatula-None-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpatulaType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (cleanable ?o)
                (isClean ?o)
            )
)))

[Goal 2/4]

;; PDDL guess 2 for "put a clean spatula on the table."
;; Official goal name: pick_and_place_clean-Mug-None-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o)
            )
)))

[Goal 3/4]

;; PDDL guess 3 for "put a clean spatula on the table."
;; Official goal name: pick_and_place_clean-Pot-None-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o)
            )
)))

[Goal 4/4]

;; PDDL guess 4 for "put a clean spatula on the table."
;; Official goal name: pick_and_place_clean-ShowerGlassType-None-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ShowerGlassType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o)
            )
)))

propose_goals_for_problems:: now on 8 / 205
propose_goals_for_problems:: "to cool a slice of lettuce and place it on the kitchen table.":
[Goal 1/4]

;; PDDL guess 1 for 'to cool a slice of lettuce and place it on the kitchen table.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-LettuceSliced-None-DiningTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'to cool a slice of lettuce and place it on the kitchen table.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-LettuceSliced-None-DiningTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'to cool a slice of lettuce and place it on the kitchen table.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-LettuceSliced-None-DiningTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'to cool a slice of lettuce and place it on the kitchen table.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-LettuceSliced-None-DiningTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


propose_goals_for_problems:: now on 9 / 205
propose_goals_for_problems:: "grab the watch on the coffee table , turn on the floor lamp in the corner.":
[Goal 1/4]

;; PDDL guess 1 for "grab the watch on the coffee table , turn on the floor lamp in the corner."
;; Official goal name: pick_and_place_simple-WatchType-None-CoffeeTableType 
;; Official goal name: look_at_obj_in_light-Lamp-None-FloorLampType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
            (and 
                (objectType ?o WatchType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r) 
            )
))))

[Goal 2/4]

;; PDDL guess 2 for "grab the watch on the coffee table , turn on the floor lamp in the corner."
;; Official goal name: pick_and_place_simple-WatchType-None-CoffeeTableType 
;; Official goal name: turn_on-Lamp-None-FloorLampType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
            (and 
                (objectType ?o WatchType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r) 
            )
))))

[Goal 3/4]

;; PDDL guess 3 for "grab the watch on the coffee table , turn on the floor lamp in the corner."
;; Official goal name: pick_and_place_simple-WatchType-None-CoffeeTableType 
;; Official goal name: look_at_obj_in_light-Lamp-None-FloorLampType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
            (and 
                (objectType ?o WatchType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r) 
            )
))))

[Goal 4/4]

;; PDDL guess 4 for "grab the watch on the coffee table , turn on the floor lamp in the corner."
;; Official goal name: pick_and_place_simple-WatchType-None-CoffeeTableType 
;; Official goal name: turn_on-Lamp-None-FloorLampType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
            (and 
                (objectType ?o WatchType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r) 
            )
))))

propose_goals_for_problems:: now on 10 / 205
propose_goals_for_problems:: "put a chilled piece of sliced lettuce in a green bin.":
[Goal 1/4]

;; PDDL guess 1 for 'put a chilled piece of sliced lettuce in a green bin.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-LettuceSliced-None-GarbageCan

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'put a chilled piece of sliced lettuce in a green bin.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-LettuceSliced-None-GarbageCan

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'put a chilled piece of sliced lettuce in a green bin.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-LettuceSliced-None-GarbageCan

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'put a chilled piece of sliced lettuce in a green bin.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-LettuceSliced-None-GarbageCan

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


propose_goals_for_problems:: now on 11 / 205
propose_goals_for_problems:: "put a heated egg on the small black table.":
[Goal 1/4]

;; PDDL guess 1 for "put a heated egg on the small black table."
;; Official goal name: pick_heat_then_place_in_recep-Egg-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a heated egg on the small black table."
;; Official goal name: pick_heat_then_place_in_recep-Potato-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a heated egg on the small black table."
;; Official goal name: pick_heat_then_place_in_recep-Apple-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a heated egg on the small black table."
;; Official goal name: pick_heat_then_place_in_recep-Bread-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

propose_goals_for_problems:: now on 12 / 205
propose_goals_for_problems:: "put a microwaved slice of apple in the sink.":
[Goal 1/4]

;; PDDL guess 1 for 'put a microwaved slice of apple in the sink.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-AppleSliced-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'put a microwaved slice of apple in the sink.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-AppleSliced-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'put a microwaved slice of apple in the sink.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-AppleSliced-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'put a microwaved slice of apple in the sink.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-AppleSliced-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


propose_goals_for_problems:: now on 13 / 205
propose_goals_for_problems:: "put a cleaned spatula on the the counter.":
[Goal 1/4]

;; PDDL guess 1 for 'put a cleaned spatula on the the counter.'
;; Official goal name: pick_clean_then_place_in_recep-Spatula-None-CounterTop
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpatulaType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'put a cleaned spatula on the the counter.'
;; Official goal name: pick_clean_then_place_in_recep-SpoonType-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpoonType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'put a cleaned spatula on the the counter.'
;; Official goal name: pick_clean_then_place_in_recep-ForkType-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ForkType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'put a cleaned spatula on the the counter.'
;; Official goal name: pick_clean_then_place_in_recep-KnifeType-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

propose_goals_for_problems:: now on 14 / 205
propose_goals_for_problems:: "look at a striped pillow under a lit lamp.":
[Goal 1/4]

;; PDDL guess 1 for 'look at a striped pillow under a lit lamp.'
;; Simplified Goal: 
look_at_obj_in_light-Pillow-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PillowType)
                (holds ?a ?o)
            )
    ))))))

[Goal 2/4]

;; PDDL guess 2 for 'look at a striped pillow under a lit lamp.'
;; Simplified Goal: 
look_at_obj_in_light-Pillow-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PillowType)
                (holds ?a ?o)
            )
    ))))))

[Goal 3/4]

;; PDDL guess 3 for 'look at a striped pillow under a lit lamp.'
;; Simplified Goal: 
look_at_obj_in_light-Pillow-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PillowType)
                (holds ?a ?o)
            )
    ))))))

[Goal 4/4]

;; PDDL guess 4 for 'look at a striped pillow under a lit lamp.'
;; Simplified Goal: 
look_at_obj_in_light-Pillow-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PillowType)
                (holds ?a ?o)
            )
    ))))))

propose_goals_for_problems:: now on 15 / 205
propose_goals_for_problems:: "move a newspaper from a tv stand to a sofa.":
[Goal 1/4]

;; PDDL guess 1 for 'move a newspaper from a tv stand to a sofa.'
;; Simplified Goal: 
pick_and_place_simple-Newspaper-None-Sofa

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o NewspaperType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'move a newspaper from a tv stand to a sofa.'
;; Simplified Goal: 
pick_and_place_simple-Newspaper-None-Sofa

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o NewspaperType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'move a newspaper from a tv stand to a sofa.'
;; Simplified Goal: 
pick_and_place_simple-Newspaper-None-Sofa

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o NewspaperType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'move a newspaper from a tv stand to a sofa.'
;; Simplified Goal: 
pick_and_place_simple-Newspaper-None-Sofa

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o NewspaperType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))


propose_goals_for_problems:: now on 16 / 205
propose_goals_for_problems:: "put the chilled tomato in the microwave.":
[Goal 1/4]

;; PDDL guess 1 for "put the chilled tomato in the microwave."
;; Official goal name: pick_cool_then_place_in_recep-TomatoSliced-None-Microwave
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put the chilled tomato in the microwave."
;; Official goal name: pick_cool_then_place_in_recep-Potato-None-Microwave
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put the chilled tomato in the microwave."
;; Official goal name: pick_cool_then_place_in_recep-LeL-None-Microwave
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LeLType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put the chilled tomato in the microwave."
;; Official goal name: pick_cool_then_place_in_recep-Vase-None-Microwave
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o VaseType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

propose_goals_for_problems:: now on 17 / 205
propose_goals_for_problems:: "put the clean tomato on the table.":
[Goal 1/4]

;; PDDL guess 1 for "put the clean tomato on the table."
;; Official goal name: pick_clean_then_place_in_recep-Tomato-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put the clean tomato on the table."
;; Official goal name: pick_clean_then_place_in_recep-Apple-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put the clean tomato on the table."
;; Official goal name: pick_clean_then_place_in_recep-Tomato-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put the clean tomato on the table."
;; Official goal name: pick_clean_then_place_in_recep-Apple-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

propose_goals_for_problems:: now on 18 / 205
propose_goals_for_problems:: "chill the tomato in the fridge then throw it away.":
[Goal 1/4]

;; PDDL guess 1 for 'chill the tomato in the fridge then throw it away.'
;; Official goal name: pick_cool_then_place_in_recep-Tomato-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'chill the tomato in the fridge then throw it away.'
;; Official goal name: pick_cool_then_place_in_recep-Tomato-None-TrashCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r TrashCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'chill the tomato in the fridge then throw it away.'
;; Official goal name: pick_cool_then_place_in_recep-Tomato-None-Bin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r BinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'chill the tomato in the fridge then throw it away.'
;; Official goal name: pick_cool_then_place_in_recep-Tomato-None-WasteBasket
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r WasteBasketType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

propose_goals_for_problems:: now on 19 / 205
propose_goals_for_problems:: "to heat a piece of apple and place it on the end of the table.":
[Goal 1/4]

;; PDDL guess 1 for 'to heat a piece of apple and place it on the end of the table.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-AppleSliced-None-DiningTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'to heat a piece of apple and place it on the end of the table.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-DiningTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'to heat a piece of apple and place it on the end of the table.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-AppleSliced-None-Desk

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'to heat a piece of apple and place it on the end of the table.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Desk

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 20 / 205
propose_goals_for_problems:: "to chill a loaf of bread and put it on the counter.":
[Goal 1/4]

;; PDDL guess 1 for 'to chill a loaf of bread and put it on the counter.'
;; Official goal name: pick_cool_then_place_in_recep-Bread-None-CounterTop
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'to chill a loaf of bread and put it on the counter.'
;; Official goal name: pick_cool_then_place_in_recep-Bread-None-CounterTop
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'to chill a loaf of bread and put it on the counter.'
;; Official goal name: pick_cool_then_place_in_recep-Bread-None-CounterTop
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'to chill a loaf of bread and put it on the counter.'
;; Official goal name: pick_cool_then_place_in_recep-Bread-None-CounterTop
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

propose_goals_for_problems:: now on 21 / 205
propose_goals_for_problems:: "cool a bread slice plus place it in the trash can.":
[Goal 1/4]

;; PDDL guess 1 for "cool a bread slice plus place it in the trash can."
;; Official goal name: pick_cool_then_place_in_recep-BreadSliced-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "cool a bread slice plus place it in the trash can."
;; Official goal name: pick_cool_then_place_in_recep-BaguetteSlice-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BaguetteType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "cool a bread slice plus place it in the trash can."
;; Official goal name: pick_cool_then_place_in_recep-FrenchBreadSlice-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o FrenchBreadType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "cool a bread slice plus place it in the trash can."
;; Official goal name: pick_cool_then_place_in_recep-ToastSlice-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ToastType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 22 / 205
propose_goals_for_problems:: "carry a knife to cut the yellow apple in the fridge.":
[Goal 1/4]

;; PDDL guess 1 for "carry a knife to cut the yellow apple in the fridge."
;; Official goal name: pick_then_place_in_receptacle_simple-Knife-None-FridgeType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (objectType ?o AppleType)
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "carry a knife to cut the yellow apple in the fridge."
;; Official goal name: pick_and_place_simple-Knife-None-FridgeType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (objectType ?o AppleType)
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "carry a knife to cut the yellow apple in the fridge."
;; Official goal name: pick_then_place_in_receptacle_simple-ButterKnifeType-None-FridgeType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ButterKnifeType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (objectType ?o AppleType)
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "carry a knife to cut the yellow apple in the fridge."
;; Official goal name: pick_and_place_simple-ButterKnifeType-None-FridgeType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ButterKnifeType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (objectType ?o AppleType)
            )
    )))

propose_goals_for_problems:: now on 23 / 205
propose_goals_for_problems:: "put a cold potato in the garbage.":
[Goal 1/4]

;; PDDL guess 1 for "put a cold potato in the garbage."
;; Official goal name: pick_then_cool_then_place_in_recep-Potato-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a cold potato in the garbage."
;; Official goal name: pick_and_place_cooled-Potato-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a cold potato in the garbage."
;; Official goal name: pick_then_cool_then_place_in_recep-Potato-None-WasteBasket
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r WasteBasketType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a cold potato in the garbage."
;; Official goal name: pick_and_place_cooled-Potato-None-WasteBasket
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r WasteBasketType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

propose_goals_for_problems:: now on 24 / 205
propose_goals_for_problems:: "put a slice of bread on a stand.":
[Goal 1/4]

;; PDDL guess 1 for "put a slice of bread on a stand."
;; Official goal name: pick_and_place_simple-BreadSliced-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a slice of bread on a stand."
;; Official goal name: pick_and_place_simple-TomatoSliced-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a slice of bread on a stand."
;; Official goal name: pick_and_place_simple-CheeseSliced-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CheeseType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a slice of bread on a stand."
;; Official goal name: pick_and_place_simple-LettuceSliced-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 25 / 205
propose_goals_for_problems:: "place a heated mug on a coffee maker.":
[Goal 1/4]

;; PDDL guess 1 for "place a heated mug on a coffee maker."
;; Official goal name: pick_heat_then_place_in_recep-Mug-None-CoffeeMachine
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place a heated mug on a coffee maker."
;; Official goal name: pick_heat_then_place_in_recep-CupType-None-CoffeeMachineType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place a heated mug on a coffee maker."
;; Official goal name: pick_heat_then_place_in_recep-BootsType-None-CoffeeMachineType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BootsType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place a heated mug on a coffee maker."
;; Official goal name: pick_heat_then_place_in_recep-CoffeeCupType-None-CoffeeMachineType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CoffeeCupType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

propose_goals_for_problems:: now on 26 / 205
propose_goals_for_problems:: "move a remote control to a chair.":
[Goal 1/4]

;; PDDL guess 1 for "move a remote control to a chair."
;; Official goal name: pick_and_place_simple-RemoteControl-None-ArmChair
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o RemoteControlType) 
                (receptacleType ?r ArmChairType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "move a remote control to a chair."
;; Official goal name: pick_and_place_simple-RemoteControl-None-Sofa
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o RemoteControlType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "move a remote control to a chair."
;; Official goal name: pick_and_place_simple-RemoteControl-None-CoffeeTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o RemoteControlType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "move a remote control to a chair."
;; Official goal name: pick_and_place_simple-RemoteControl-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o RemoteControlType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
            )
    )))

propose_goals_for_problems:: now on 27 / 205
propose_goals_for_problems:: "to place a chilled mug in the coffee maker.":
[Goal 1/4]

;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Mug-None-CoffeeMachine

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'to place a chilled mug in the coffee maker.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Mug-None-CoffeeMachine

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'to place a chilled mug in the coffee maker.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Mug-None-CoffeeMachine

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'to place a chilled mug in the coffee maker.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Mug-None-CoffeeMachine

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))


propose_goals_for_problems:: now on 28 / 205
propose_goals_for_problems:: "put the chilled glass in the sink.":
[Goal 1/4]

;; PDDL guess 1 for 'put the chilled glass in the sink.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-GlassType-None-SinkBasinType

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o GlassType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'put the chilled glass in the sink.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-GlassType-None-SinkBasinType

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o GlassType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'put the chilled glass in the sink.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-GlassType-None-SinkBasinType

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o GlassType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'put the chilled glass in the sink.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-GlassType-None-SinkBasinType

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o GlassType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

propose_goals_for_problems:: now on 29 / 205
propose_goals_for_problems:: "put a microwaved egg in the garbage.":
[Goal 1/4]

;; PDDL guess 1 for "put a microwaved egg in the garbage."
;; Official goal name: pick_heat_then_place_in_recep-Egg-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a microwaved egg in the garbage."
;; Official goal name: pick_heat_then_place_in_recep-Egg-None-GarbageBin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r GarbageBinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a microwaved egg in the garbage."
;; Official goal name: pick_heat_then_place_in_recep-Egg-None-WastebasketType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r WastebasketType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a microwaved egg in the garbage."
;; Official goal name: pick_heat_then_place_in_recep-Egg-None-TrashCanType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r TrashCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

propose_goals_for_problems:: now on 30 / 205
propose_goals_for_problems:: "put a cold head of lettuce in the garbage.":
[Goal 1/4]

;; PDDL guess 1 for "put a cold head of lettuce in the garbage."
;; Official goal name: pick_cool_then_place_in_recep-Lettuce-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a cold head of lettuce in the garbage."
;; Official goal name: pick_cool_then_place_in_recep-Tomato-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a cold head of lettuce in the garbage."
;; Official goal name: pick_cool_then_place_in_recep-Apple-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a cold head of lettuce in the garbage."
;; Official goal name: pick_cool_then_place_in_recep-Cabbage-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CabbageType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

propose_goals_for_problems:: now on 31 / 205
propose_goals_for_problems:: "cool down the cup on the small black table.":
[Goal 1/4]

;; PDDL guess 1 for 'cool down the cup on the small black table.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Cup-None-SideTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'cool down the cup on the small black table.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-TeaCup-None-SideTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TeaCupType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'cool down the cup on the small black table.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-CoffeeCup-None-SideTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CoffeeCupType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'cool down the cup on the small black table.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-PlasticCup-None-SideTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlasticCupType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))


propose_goals_for_problems:: now on 32 / 205
propose_goals_for_problems:: "remove the tomato from the fridge and cut it up on the table.":
[Goal 1/4]

;; PDDL guess 1 for "remove the tomato from the fridge and cut it up on the table."
;; Official goal name: pick_and_place_simple-TomatoSliced-None-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "remove the tomato from the fridge and cut it up on the table."
;; Official goal name: pick_and_place_simple-TomatoSliced-None-CoffeeTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "remove the tomato from the fridge and cut it up on the table."
;; Official goal name: pick_and_place_simple-TomatoSliced-None-SideTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "remove the tomato from the fridge and cut it up on the table."
;; Official goal name: pick_and_place_simple-TomatoSliced-None-DeskType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

propose_goals_for_problems:: now on 33 / 205
propose_goals_for_problems:: "place a clean pan on the electric cooker.":
[Goal 1/4]

;; PDDL guess 1 for 'place a clean pan on the electric cooker.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-Pan-None-StoveBurner

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r StoveBurnerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'place a clean pan on the electric cooker.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-Pan-None-StoveBurner

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r StoveBurnerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'place a clean pan on the electric cooker.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-Pan-None-StoveBurner

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r StoveBurnerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'place a clean pan on the electric cooker.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-Pan-None-StoveBurner

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r StoveBurnerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

propose_goals_for_problems:: now on 34 / 205
propose_goals_for_problems:: "put a hot chunk of apple in the freezer.":
[Goal 1/4]

;; PDDL guess 1 for 'put a hot chunk of apple in the freezer.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-AppleSliced-None-Fridge

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'put a hot chunk of apple in the freezer.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-AppleSliced-None-Fridge

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'put a hot chunk of apple in the freezer.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-AppleSliced-None-Fridge

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'put a hot chunk of apple in the freezer.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-AppleSliced-None-Fridge

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


propose_goals_for_problems:: now on 35 / 205
propose_goals_for_problems:: "put the clean knife in the cabinet drawer.":
[Goal 1/4]

;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'
;; Simplified Goal: pick_clean_then_place_in_recep-Knife-None-Drawer
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'put the clean knife in the cabinet drawer.'
;; Simplified Goal: pick_clean_then_place_in_recep-ButterKnife-None-Drawer
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ButterKnifeType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'put the clean knife in the cabinet drawer.'
;; Simplified Goal: pick_clean_then_place_in_recep-SteakKnife-None-Drawer
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SteakKnifeType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'put the clean knife in the cabinet drawer.'
;; Simplified Goal: pick_clean_then_place_in_recep-ParingKnife-None-Drawer
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ParingKnifeType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

propose_goals_for_problems:: now on 36 / 205
propose_goals_for_problems:: "put a clean bar of soap in a small green bin.":
[Goal 1/4]

;; PDDL guess 1 for "put a clean bar of soap in a small green bin."
;; Official goal name: pick_clean_then_place_in_recep-SoapBar-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a clean bar of soap in a small green bin."
;; Official goal name: pick_clean_then_place_in_recep-SoapBar-None-TrashCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r TrashCanType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o)
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a clean bar of soap in a small green bin."
;; Official goal name: pick_clean_then_place_in_recep-ClothType-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ClothType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a clean bar of soap in a small green bin."
;; Official goal name: pick_clean_then_place_in_recep-ClothType-None-TrashCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ClothType) 
                (receptacleType ?r TrashCanType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))


propose_goals_for_problems:: now on 37 / 205
propose_goals_for_problems:: "place a cleaned head of lettuce on a small side table.":
[Goal 1/4]

;; PDDL guess 1 for "place a cleaned head of lettuce on a small side table."
;; Official goal name: pick_and_place_cleaned-Lettuce-None-SideTable
(:goal
    (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (cleanable ?o) 
                (isClean ?o)
            )
        )
    )
)

[Goal 2/4]

;; PDDL guess 2 for "place a cleaned head of lettuce on a small side table."
;; Official goal name: pick_and_place_cleaned-Lettuce-None-SideTable
(:goal
    (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (cleanable ?o) 
                (isClean ?o)
            )
        )
    )
)

[Goal 3/4]

;; PDDL guess 3 for "place a cleaned head of lettuce on a small side table."
;; Official goal name: pick_and_place_cleaned-Lettuce-None-SideTable
(:goal
    (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (cleanable ?o) 
                (isClean ?o)
            )
        )
    )
)

[Goal 4/4]

;; PDDL guess 4 for "place a cleaned head of lettuce on a small side table."
;; Official goal name: pick_and_place_cleaned-Lettuce-None-SideTable
(:goal
    (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (cleanable ?o) 
                (isClean ?o)
            )
        )
    )
)

propose_goals_for_problems:: now on 38 / 205
propose_goals_for_problems:: "put a chilled tomato slice on the table.":
[Goal 1/4]

;; PDDL guess 1 for "put a chilled tomato slice on the table."
;; Official goal name: pick_cool_then_place_in_recep-TomatoSliced-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a chilled tomato slice on the table."
;; Official goal name: pick_cool_then_place_in_recep-SoupBowl-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoupBowlType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a chilled tomato slice on the table."
;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a chilled tomato slice on the table."
;; Official goal name: pick_cool_then_place_in_recep-AppleSliced-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

propose_goals_for_problems:: now on 39 / 205
propose_goals_for_problems:: "put a warm potato in the sink.":
[Goal 1/4]

;; PDDL guess 1 for "put a warm potato in the sink."
;; Official goal name: pick_heat_then_place_in_recep-Potato-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a warm potato in the sink."
;; Official goal name: pick_heat_then_place_in_recep-Onion-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o OnionType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a warm potato in the sink."
;; Official goal name: pick_heat_then_place_in_recep-Tomato-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a warm potato in the sink."
;; Official goal name: pick_heat_then_place_in_recep-Carrot-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CarrotType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

propose_goals_for_problems:: now on 40 / 205
propose_goals_for_problems:: "place a rinsed towel inside a tub.":
[Goal 1/4]

;; PDDL guess 1 for "place a rinsed towel inside a tub."
;; Official goal name: pick_clean_then_place_in_recep-Towel-None-BathtubBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TowelType) 
                (receptacleType ?r BathtubBasinType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place a rinsed towel inside a tub."
;; Official goal name: pick_clean_then_place_in_recep-ClothType-None-BathtubBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ClothType) 
                (receptacleType ?r BathtubBasinType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place a rinsed towel inside a tub."
;; Official goal name: pick_clean_then_place_in_recep-TowelType-None-BathtubBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TowelType) 
                (receptacleType ?r BathtubBasinType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place a rinsed towel inside a tub."
;; Official goal name: pick_clean_then_place_in_recep-Cloth-None-BathtubBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ClothType) 
                (receptacleType ?r BathtubBasinType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o)  
            )
    )))

propose_goals_for_problems:: now on 41 / 205
propose_goals_for_problems:: "carry a pencil while turning on a lamp.":
[Goal 1/4]

;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'
;; Simplified Goal: 
look_at_obj_in_light-Pencil-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PencilType)
                (holds ?a ?o)
            )
    ))))))


[Goal 2/4]

;; PDDL guess 2 for 'carry a pencil while turning on a lamp.'
;; Simplified Goal: 
look_at_obj_in_light-Pencil-None-TableLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot TableLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PencilType)
                (holds ?a ?o)
            )
    ))))))


[Goal 3/4]

;; PDDL guess 3 for 'carry a pencil while turning on a lamp.'
;; Simplified Goal: 
look_at_obj_in_light-Pencil-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PencilType)
                (holds ?a ?o)
            )
    ))))))


[Goal 4/4]

;; PDDL guess 4 for 'carry a pencil while turning on a lamp.'
;; Simplified Goal: 
look_at_obj_in_light-Pencil-None-DeskLampType

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PencilType)
                (holds ?a ?o)
            )
    ))))))


propose_goals_for_problems:: now on 42 / 205
propose_goals_for_problems:: "examine a pen next to the light of a lamp.":
[Goal 1/4]

;; PDDL guess 1 for 'examine a pen next to the light of a lamp.'
;; Simplified Goal: look_at_obj_in_light-Pen-None-DeskLamp
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PenType)
                (holds ?a ?o)
            )
    ))))))

[Goal 2/4]

;; PDDL guess 2 for 'examine a pen next to the light of a lamp.'
;; Simplified Goal: look_at_obj_in_light-Pen-None-DeskLamp
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PenType)
                (holds ?a ?o)
            )
    ))))))

[Goal 3/4]

;; PDDL guess 3 for 'examine a pen next to the light of a lamp.'
;; Simplified Goal: look_at_obj_in_light-Pen-None-DeskLamp
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PenType)
                (holds ?a ?o)
            )
    ))))))

[Goal 4/4]

;; PDDL guess 4 for 'examine a pen next to the light of a lamp.'
;; Simplified Goal: look_at_obj_in_light-Pen-None-DeskLamp
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PenType)
                (holds ?a ?o)
            )
    ))))))

propose_goals_for_problems:: now on 43 / 205
propose_goals_for_problems:: "hold a credit card while turning on a lamp.":
[Goal 1/4]

;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'
;; Simplified Goal: 
look_at_obj_in_light-CreditCard-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CreditCardType)
                (holds ?a ?o)
            )
    ))))))

[Goal 2/4]

;; PDDL guess 2 for 'hold a credit card while turning on a lamp.'
;; Simplified Goal: 
look_at_obj_in_light-CreditCard-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CreditCardType)
                (holds ?a ?o)
            )
    ))))))

[Goal 3/4]

;; PDDL guess 3 for 'hold a credit card while turning on a lamp.'
;; Simplified Goal: 
look_at_obj_in_light-CreditCard-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CreditCardType)
                (holds ?a ?o)
            )
    ))))))

[Goal 4/4]

;; PDDL guess 4 for 'hold a credit card while turning on a lamp.'
;; Simplified Goal: 
look_at_obj_in_light-CreditCard-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CreditCardType)
                (holds ?a ?o)
            )
    ))))))

propose_goals_for_problems:: now on 44 / 205
propose_goals_for_problems:: "cut a tomato on the counter.":
[Goal 1/4]

;; PDDL guess 1 for 'cut a tomato on the counter.'
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-CounterTop

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'cut a tomato on the counter.'
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-CounterTop

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'cut a tomato on the counter.'
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-CounterTop

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'cut a tomato on the counter.'
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-CounterTop

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

propose_goals_for_problems:: now on 45 / 205
propose_goals_for_problems:: "place a cooled slice of apple in the black bin.":
[Goal 1/4]

;; PDDL guess 1 for "place a cooled slice of apple in the black bin."
;; Official goal name: pick_cool_then_place_in_recep-AppleSliced-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place a cooled slice of apple in the black bin."
;; Official goal name: pick_cool_then_place_in_recep-PearSliced-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PearType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place a cooled slice of apple in the black bin."
;; Official goal name: pick_cool_then_place_in_recep-PlumSliced-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlumType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place a cooled slice of apple in the black bin."
;; Official goal name: pick_cool_then_place_in_recep-WatermelonSliced-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o WatermelonType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 46 / 205
propose_goals_for_problems:: "throw away a rinsed egg.":
[Goal 1/4]

;; PDDL guess 1 for 'throw away a rinsed egg.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-Egg-None-GarbageCan

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'throw away a rinsed egg.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-Egg-None-TrashBin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r TrashBinType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'throw away a rinsed egg.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-Egg-None-TrashCan

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r TrashCanType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'throw away a rinsed egg.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-Egg-None-WasteBasket

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r WasteBasketType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

propose_goals_for_problems:: now on 47 / 205
propose_goals_for_problems:: "chill a pan in the fridge and put it on the counter.":
[Goal 1/4]

;; PDDL guess 1 for "chill a pan in the fridge and put it on the counter."
;; Official goal name: pick_cool_then_place_in_recep-Pot-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "chill a pan in the fridge and put it on the counter."
;; Official goal name: pick_cool_then_place_in_recep-Pot-None-CoffeeTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "chill a pan in the fridge and put it on the counter."
;; Official goal name: pick_cool_then_place_in_recep-Pot-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "chill a pan in the fridge and put it on the counter."
;; Official goal name: pick_cool_then_place_in_recep-Pot-None-Desk
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

propose_goals_for_problems:: now on 48 / 205
Request timed out: HTTPSConnectionPool(host='api.openai.com', port=443): Read timed out. (read timeout=600)
ERR: Codex rate limit. On attempt 1/5 after waiting 30s.
propose_goals_for_problems:: "pick up a pan from the stove , refrigerate it , put in on the table.":
[Goal 1/4]

;; PDDL guess 1 for "pick up a pan from the stove , refrigerate it , put in on the table."
;; Official goal name: pick_cool_then_place_in_recep-Pot-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "pick up a pan from the stove , refrigerate it , put in on the table."
;; Official goal name: pick_cool_then_place_in_recep-FryingPanType-None-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o FryingPanType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "pick up a pan from the stove , refrigerate it , put in on the table."
;; Official goal name: pick_cool_then_place_in_recep-PanType-None-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "pick up a pan from the stove , refrigerate it , put in on the table."
;; Official goal name: pick_cool_then_place_in_recep-SaucePanType-None-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SaucePanType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

propose_goals_for_problems:: now on 49 / 205
propose_goals_for_problems:: "examine a pen by the light of a lamp on a small table.":
[Goal 1/4]

;; PDDL guess 1 for "examine a pen by the light of a lamp on a small table."
;; Official goal name: look_at_obj_in_light-Pen-None-DeskLamp
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PenType)
                (holds ?a ?o)
            )
    ))))))

[Goal 2/4]

;; PDDL guess 2 for "examine a pen by the light of a lamp on a small table."
;; Official goal name: look_at_obj_in_light-Pen-None-TableLamp
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot TableLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PenType)
                (holds ?a ?o)
            )
    ))))))

[Goal 3/4]

;; PDDL guess 3 for "examine a pen by the light of a lamp on a small table."
;; Official goal name: look_at_obj_in_light-Pen-None-DeskLampType
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PenType)
                (holds ?a ?o)
            )
    ))))))

[Goal 4/4]

;; PDDL guess 4 for "examine a pen by the light of a lamp on a small table."
;; Official goal name: look_at_obj_in_light-Pen-None-TableLampType
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot TableLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PenType)
                (holds ?a ?o)
            )
    ))))))

propose_goals_for_problems:: now on 50 / 205
propose_goals_for_problems:: "pick up knife , cut tomato , place into fridge , remove from fridge , place on table.":
[Goal 1/4]

;; PDDL guess 1 for "pick up knife, cut tomato, place into fridge, remove from fridge, place on table."
;; Official goal name: pick_slice_then_pick_heat_then_place_in_recep-TomatoSliced-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType)
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "pick up knife, cut tomato, place into fridge, remove from fridge, place on table."
;; Official goal name: pick_slice_then_pick_heat_then_place_in_recep-TomatoSliced-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType)
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "pick up knife, cut tomato, place into fridge, remove from fridge, place on table."
;; Official goal name: pick_slice_then_pick_heat_then_place_in_recep-TomatoSliced-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType)
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "pick up knife, cut tomato, place into fridge, remove from fridge, place on table."
;; Official goal name: pick_slice_then_pick_heat_then_place_in_recep-TomatoSliced-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType)
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 51 / 205
propose_goals_for_problems:: "slice a potato , cook it in the microwave , and put it in the refrigerator.":
[Goal 1/4]

;; PDDL guess 1 for "slice a potato , cook it in the microwave , and put it in the refrigerator."
;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "slice a potato , cook it in the microwave , and put it in the refrigerator."
;; Official goal name: pick_heat_then_place_in_recep-CarrotSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CarrotType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "slice a potato , cook it in the microwave , and put it in the refrigerator."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "slice a potato , cook it in the microwave , and put it in the refrigerator."
;; Official goal name: pick_heat_then_place_in_recep-CucumberSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CucumberType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 52 / 205
propose_goals_for_problems:: "place a heated apple on a counter.":
[Goal 1/4]

;; PDDL guess 1 for "place a heated apple on a counter."
;; Official goal name: pick_heat_then_place_in_recep-Apple-None-CounterTop
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place a heated apple on a counter."
;; Official goal name: pick_heat_then_place_in_recep-Pear-None-CounterTop
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PearType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place a heated apple on a counter."
;; Official goal name: pick_heat_then_place_in_recep-Orange-None-CounterTop
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o OrangeType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place a heated apple on a counter."
;; Official goal name: pick_heat_then_place_in_recep-Banana-None-CounterTop
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BananaType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

propose_goals_for_problems:: now on 53 / 205
propose_goals_for_problems:: "cut a slice of tomato , chill it , then cook it in the microwave.":
[Goal 1/4]

;; PDDL guess 1 for "cut a slice of tomato, chill it, then cook it in the microwave."
;; Official goal name: pick_then_place_in_recep-TomatoSliced-None-Microwave-11
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o) 
            )
)))

[Goal 2/4]

;; PDDL guess 2 for "cut a slice of tomato, chill it, then cook it in the microwave."
;; Official goal name: pick_then_place_in_recep-PotatoType-Sliced-MicrowaveType-11
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o) 
            )
)))

[Goal 3/4]

;; PDDL guess 3 for "cut a slice of tomato, chill it, then cook it in the microwave."
;; Official goal name: pick_then_place_in_recep-CucumberType-Sliced-MicrowaveType-11
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CucumberType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o) 
            )
)))

[Goal 4/4]

;; PDDL guess 4 for "cut a slice of tomato, chill it, then cook it in the microwave."
;; Official goal name: pick_then_place_in_recep-OnionType-Sliced-MicrowaveType-11
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o OnionType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o) 
            )
)))

propose_goals_for_problems:: now on 54 / 205
propose_goals_for_problems:: "place a rinsed knife in a drawer.":
[Goal 1/4]

;; PDDL guess 1 for "place a rinsed knife in a drawer."
;; Official goal name: pick_clean_then_place_in_recep-ButterKnife-None-Drawer
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ButterKnifeType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
)))

[Goal 2/4]

;; PDDL guess 2 for "place a rinsed knife in a drawer."
;; Official goal name: pick_clean_then_place_in_recep-KnifeType-None-DrawerType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
)))

[Goal 3/4]

;; PDDL guess 3 for "place a rinsed knife in a drawer."
;; Official goal name: pick_clean_then_place_in_recep-KnifeType-None-HandTowelHolderType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r HandTowelHolderType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
)))

[Goal 4/4]

;; PDDL guess 4 for "place a rinsed knife in a drawer."
;; Official goal name: pick_clean_then_place_in_recep-KnifeType-None-DeskType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
)))

propose_goals_for_problems:: now on 55 / 205
propose_goals_for_problems:: "chill a pot and place it on the counter.":
[Goal 1/4]

;; PDDL guess 1 for 'chill a pot and place it on the counter.'
;; Official goal name: pick_cool_then_place_in_recep-Pot-None-CounterTop
(:goal
    (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
        )
    )
)

[Goal 2/4]

;; PDDL guess 2 for 'chill a pot and place it on the counter.'
;; Official goal name: pick_cool_then_place_in_recep-Pan-None-CounterTop
(:goal
    (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
        )
    )
)

[Goal 3/4]

;; PDDL guess 3 for 'chill a pot and place it on the counter.'
;; Official goal name: pick_cool_then_place_in_recep-Saucepan-None-CounterTop
(:goal
    (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SaucepanType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
        )
    )
)

[Goal 4/4]

;; PDDL guess 4 for 'chill a pot and place it on the counter.'
;; Official goal name: pick_cool_then_place_in_recep-Stockpot-None-CounterTop
(:goal
    (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o StockpotType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
        )
    )
)

propose_goals_for_problems:: now on 56 / 205
propose_goals_for_problems:: "put in the chilled bowl inside the cabinet.":
[Goal 1/4]

;; PDDL guess 1 for 'put in the chilled bowl inside the cabinet.'
;; Official goal name: pick_and_place_then_cool-Bowl-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'put in the chilled bowl inside the cabinet.'
;; Official goal name: pick_and_place_then_cool-Spoon-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpoonType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'put in the chilled bowl inside the cabinet.'
;; Official goal name: pick_and_place_then_cool-Plate-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlateType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'put in the chilled bowl inside the cabinet.'
;; Official goal name: pick_and_place_then_cool-Cup-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

propose_goals_for_problems:: now on 57 / 205
propose_goals_for_problems:: "slice a tomato on the black table.":
[Goal 1/4]

;; PDDL guess 1 for "slice a tomato on the black table."
;; Official goal name: pick_and_place_simple-Tomato-None-SideTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 2/4]

;; PDDL guess 2 for "slice a tomato on the black table."
;; Official goal name: pick_and_place_simple-Tomato-None-CoffeeTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 3/4]

;; PDDL guess 3 for "slice a tomato on the black table."
;; Official goal name: pick_and_place_simple-Tomato-None-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 4/4]

;; PDDL guess 4 for "slice a tomato on the black table."
;; Official goal name: pick_and_place_simple-Tomato-None-DeskType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
            )
)))

propose_goals_for_problems:: now on 58 / 205
propose_goals_for_problems:: "heat a glass and put it in the cabinet.":
[Goal 1/4]

;; PDDL guess 1 for "heat a glass and put it in the cabinet."
;; Official goal name: pick_heat_then_place_in_recep-Glass-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o GlassType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "heat a glass and put it in the cabinet."
;; Official goal name: pick_heat_then_place_in_recep-Mug-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "heat a glass and put it in the cabinet."
;; Official goal name: pick_heat_then_place_in_recep-Cup-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "heat a glass and put it in the cabinet."
;; Official goal name: pick_heat_then_place_in_recep-WineBottle-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o WineBottleType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

propose_goals_for_problems:: now on 59 / 205
propose_goals_for_problems:: "use the knife on the table by the stove to slice the cabbage on the white table.":
[Goal 1/4]

;; PDDL guess 1 for 'use the knife on the table by the stove to slice the cabbage on the white table.'
;; Official goal name: pick_and_place_simple-Knife-None-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 2/4]

;; PDDL guess 2 for 'use the knife on the table by the stove to slice the cabbage on the white table.'
;; Official goal name: pick_and_place_simple-Knife-None-CoffeeTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 3/4]

;; PDDL guess 3 for 'use the knife on the table by the stove to slice the cabbage on the white table.'
;; Official goal name: pick_and_place_simple-Knife-None-DeskType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 4/4]

;; PDDL guess 4 for 'use the knife on the table by the stove to slice the cabbage on the white table.'
;; Official goal name: pick_and_place_simple-Knife-None-KitchenIslandType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r KitchenIslandType)
                (inReceptacle ?o ?r) 
            )
)))

propose_goals_for_problems:: now on 60 / 205
propose_goals_for_problems:: "put a warm apple on the table.":
[Goal 1/4]

;; PDDL guess 1 for "put a warm apple on the table."
;; Official goal name: pick_heat_then_place_in_recep-Apple-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)  
        )
)))

[Goal 2/4]

;; PDDL guess 2 for "put a warm apple on the table."
;; Official goal name: pick_heat_then_place_in_recep-Apple-None-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)  
        )
)))

[Goal 3/4]

;; PDDL guess 3 for "put a warm apple on the table."
;; Official goal name: pick_heat_then_place_in_recep-Apple-None-CoffeeTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)  
        )
)))

[Goal 4/4]

;; PDDL guess 4 for "put a warm apple on the table."
;; Official goal name: pick_heat_then_place_in_recep-Apple-None-DeskType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)  
        )
)))

propose_goals_for_problems:: now on 61 / 205
propose_goals_for_problems:: "use a butter knife to slice up an apple that is in the microwave.":
[Goal 1/4]

;; PDDL guess 1 for "use a butter knife to slice up an apple that is in the microwave."
;; Official goal name: pick_and_place_simple-AppleSliced-None-Microwave
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "use a butter knife to slice up an apple that is in the microwave."
;; Official goal name: pick_and_place_simple-PearSliced-None-Microwave
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PearType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "use a butter knife to slice up an apple that is in the microwave."
;; Official goal name: pick_and_place_simple-BananaSliced-None-Microwave
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BananaType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "use a butter knife to slice up an apple that is in the microwave."
;; Official goal name: pick_and_place_simple-OrangeSliced-None-Microwave
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o OrangeType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

propose_goals_for_problems:: now on 62 / 205
propose_goals_for_problems:: "to see the tissue box in the lamp light.":
[Goal 1/4]

;; PDDL guess 1 for 'to see the tissue box in the lamp light.'
;; Simplified Goal: 
look_at_obj_in_light-TissueBox-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o TissueBoxType)
                (holds ?a ?o)
            )
    ))))))


[Goal 2/4]

;; PDDL guess 2 for 'to see the tissue box in the lamp light.'
;; Simplified Goal: 
look_at_obj_in_light-TissueBox-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o TissueBoxType)
                (holds ?a ?o)
            )
    ))))))


[Goal 3/4]

;; PDDL guess 3 for 'to see the tissue box in the lamp light.'
;; Simplified Goal: 
look_at_obj_in_light-TissueBox-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o TissueBoxType)
                (holds ?a ?o)
            )
    ))))))


[Goal 4/4]

;; PDDL guess 4 for 'to see the tissue box in the lamp light.'
;; Simplified Goal: 
look_at_obj_in_light-TissueBox-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o TissueBoxType)
                (holds ?a ?o)
            )
    ))))))


propose_goals_for_problems:: now on 63 / 205
propose_goals_for_problems:: "turn a lamp on with a remote in hand.":
[Goal 1/4]

;; PDDL guess 1 for "turn a lamp on with a remote in hand."
;; Official goal name: look_at_obj_in_light-Torch-None-FloorLamp
(:goal
    (exists (?l - location)
    (exists (?a - agent)
    (exists (?o - object)
        (and 
            (objectType ?o TorchType)
            (objectAtLocation ?o ?l)
            (atLocation ?a ?l)
            (objectType ?r RemoteControlType)
            (holds ?a ?r)
        )
))))

[Goal 2/4]

;; PDDL guess 2 for "turn a lamp on with a remote in hand."
;; Official goal name: look_at_obj_in_light-Flashlight-None-FloorLamp
(:goal
    (exists (?l - location)
    (exists (?a - agent)
    (exists (?o - object)
        (and 
            (objectType ?o FlashlightType)
            (objectAtLocation ?o ?l)
            (atLocation ?a ?l)
            (objectType ?r RemoteControlType)
            (holds ?a ?r)
        )
))))

[Goal 3/4]

;; PDDL guess 3 for "turn a lamp on with a remote in hand."
;; Official goal name: look_at_obj_in_light-TableLampType-None-FloorLamp
(:goal
    (exists (?l - location)
    (exists (?a - agent)
    (exists (?o - object)
        (and 
            (objectType ?o TableLampType)
            (objectAtLocation ?o ?l)
            (atLocation ?a ?l)
            (objectType ?r RemoteControlType)
            (holds ?a ?r)
        )
))))

[Goal 4/4]

;; PDDL guess 4 for "turn a lamp on with a remote in hand."
;; Official goal name: look_at_obj_in_light-BedsideLampType-None-FloorLamp
(:goal
    (exists (?l - location)
    (exists (?a - agent)
    (exists (?o - object)
        (and 
            (objectType ?o BedsideLampType)
            (objectAtLocation ?o ?l)
            (atLocation ?a ?l)
            (objectType ?r RemoteControlType)
            (holds ?a ?r)
        )
))))

propose_goals_for_problems:: now on 64 / 205
Request timed out: HTTPSConnectionPool(host='api.openai.com', port=443): Read timed out. (read timeout=600)
ERR: Codex rate limit. On attempt 1/5 after waiting 30s.
propose_goals_for_problems:: "examine the cd under the light of the table lamp.":
[Goal 1/4]

;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'
;; Simplified Goal: 
look_at_obj_in_light-CD-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CDType)
                (holds ?a ?o)
            )
    ))))))


[Goal 2/4]

;; PDDL guess 2 for 'examine the cd under the light of the table lamp.'
;; Simplified Goal: 
look_at_obj_in_light-CD-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CDType)
                (holds ?a ?o)
            )
    ))))))


[Goal 3/4]

;; PDDL guess 3 for 'examine the cd under the light of the table lamp.'
;; Simplified Goal: 
look_at_obj_in_light-CD-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CDType)
                (holds ?a ?o)
            )
    ))))))


[Goal 4/4]

;; PDDL guess 4 for 'examine the cd under the light of the table lamp.'
;; Simplified Goal: 
look_at_obj_in_light-CD-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CDType)
                (holds ?a ?o)
            )
    ))))))


propose_goals_for_problems:: now on 65 / 205
propose_goals_for_problems:: "put chilled wine in the cabinet.":
[Goal 1/4]

;; PDDL guess 1 for "put chilled wine in the cabinet."
;; Official goal name: pick_cool_then_place_in_recep-WineBottle-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o WineBottleType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put chilled wine in the cabinet."
;; Official goal name: pick_cool_then_place_in_recep-WateringCan-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o WateringCanType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put chilled wine in the cabinet."
;; Official goal name: pick_cool_then_place_in_recep-Kettle-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KettleType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put chilled wine in the cabinet."
;; Official goal name: pick_cool_then_place_in_recep-SprayBottle-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SprayBottleType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

propose_goals_for_problems:: now on 66 / 205
propose_goals_for_problems:: "put a slice of warm toast in the fridge.":
[Goal 1/4]

;; PDDL guess 1 for "put a slice of warm toast in the fridge."
;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a slice of warm toast in the fridge."
;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a slice of warm toast in the fridge."
;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a slice of warm toast in the fridge."
;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 67 / 205
propose_goals_for_problems:: "put a heated mug into a cupboard.":
[Goal 1/4]

;; PDDL guess 1 for 'put a heated mug into a cupboard.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-Cabinet

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'put a heated mug into a cupboard.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-Cabinet

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'put a heated mug into a cupboard.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-Cabinet

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'put a heated mug into a cupboard.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-Cabinet

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))


propose_goals_for_problems:: now on 68 / 205
propose_goals_for_problems:: "put a heated slice of bread in the trash can.":
[Goal 1/4]

;; PDDL guess 1 for "put a heated slice of bread in the trash can."
;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a heated slice of bread in the trash can."
;; Official goal name: pick_heat_then_place_in_recep-BaguetteSliced-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BaguetteType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a heated slice of bread in the trash can."
;; Official goal name: pick_heat_then_place_in_recep-RollSliced-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o RollType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a heated slice of bread in the trash can."
;; Official goal name: pick_heat_then_place_in_recep-CroissantSliced-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CroissantType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

propose_goals_for_problems:: now on 69 / 205
propose_goals_for_problems:: "put a slice of cooked apple into the sink.":
[Goal 1/4]

;; PDDL guess 1 for 'put a slice of cooked apple into the sink.'
;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'put a slice of cooked apple into the sink.'
;; Official goal name: pick_heat_then_place_in_recep-PotatoSliceType-None-SinkBasinType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoSliceType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'put a slice of cooked apple into the sink.'
;; Official goal name: pick_heat_then_place_in_recep-MangoSliceType-None-SinkBasinType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MangoSliceType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'put a slice of cooked apple into the sink.'
;; Official goal name: pick_heat_then_place_in_recep-PeachSliceType-None-SinkBasinType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PeachSliceType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
            )
    )))

propose_goals_for_problems:: now on 70 / 205
propose_goals_for_problems:: "place a cooked tomato slice in the refrigerator.":
[Goal 1/4]

;; PDDL guess 1 for 'place a cooked tomato slice in the refrigerator.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Fridge

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'place a cooked tomato slice in the refrigerator.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Fridge

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'place a cooked tomato slice in the refrigerator.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Fridge

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'place a cooked tomato slice in the refrigerator.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Fridge

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


propose_goals_for_problems:: now on 71 / 205
propose_goals_for_problems:: "place an apple slice inside of the fridge.":
[Goal 1/4]

;; PDDL guess 1 for "place an apple slice inside of the fridge."
;; Official goal name: pick_and_place_simple-AppleSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place an apple slice inside of the fridge."
;; Official goal name: pick_and_place_simple-AppleSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place an apple slice inside of the fridge."
;; Official goal name: pick_and_place_simple-AppleSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place an apple slice inside of the fridge."
;; Official goal name: pick_and_place_simple-AppleSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

propose_goals_for_problems:: now on 72 / 205
propose_goals_for_problems:: "put a washed knife on a counter.":
[Goal 1/4]

;; PDDL guess 1 for 'put a washed knife on a counter.'
;; Official goal name: pick_clean_then_place_in_recep-Knife-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'put a washed knife on a counter.'
;; Official goal name: pick_clean_then_place_in_recep-Knife-None-KitchenIslandTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r KitchenIslandTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'put a washed knife on a counter.'
;; Official goal name: pick_clean_then_place_in_recep-Knife-None-CoffeeTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'put a washed knife on a counter.'
;; Official goal name: pick_clean_then_place_in_recep-Knife-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

propose_goals_for_problems:: now on 73 / 205
propose_goals_for_problems:: "put a cold piece of bread in the microwave.":
[Goal 1/4]

;; PDDL guess 1 for 'put a cold piece of bread in the microwave.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Bread-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'put a cold piece of bread in the microwave.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Bread-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'put a cold piece of bread in the microwave.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Bread-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'put a cold piece of bread in the microwave.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Bread-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
    )))

propose_goals_for_problems:: now on 74 / 205
propose_goals_for_problems:: "throw away a chilled apple slice.":
[Goal 1/4]

;; PDDL guess 1 for 'throw away a chilled apple slice.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-AppleSliced-None-GarbageCan

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'throw away a chilled apple slice.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-PeaChilledSliced-None-GarbageCan

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PeaType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'throw away a chilled apple slice.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-PineappleSliced-None-GarbageCan

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PineappleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'throw away a chilled apple slice.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-PearSliced-None-GarbageCan

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PearType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


propose_goals_for_problems:: now on 75 / 205
propose_goals_for_problems:: "slice the tomato on the black stand.":
[Goal 1/4]

;; PDDL guess 1 for "slice the tomato on the black stand."
;; Official goal name: pick_and_place_simple-Tomato-None-SideTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o)
            )
)))

[Goal 2/4]

;; PDDL guess 2 for "slice the tomato on the black stand."
;; Official goal name: pick_and_place_simple-Potato-None-SideTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o)
            )
)))

[Goal 3/4]

;; PDDL guess 3 for "slice the tomato on the black stand."
;; Official goal name: pick_and_place_simple-Onion-None-SideTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o OnionType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o)
            )
)))

[Goal 4/4]

;; PDDL guess 4 for "slice the tomato on the black stand."
;; Official goal name: pick_and_place_simple-Carrot-None-SideTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CarrotType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o)
            )
)))

propose_goals_for_problems:: now on 76 / 205
propose_goals_for_problems:: "to heat a mug and put it inside of the cabinet.":
[Goal 1/4]

;; PDDL guess 1 for "to heat a mug and put it inside of the cabinet."
;; Official goal name: pick_heat_then_place_in_recep-Mug-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "to heat a mug and put it inside of the cabinet."
;; Official goal name: pick_heat_then_place_in_recep-CupType-None-CabinetType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "to heat a mug and put it inside of the cabinet."
;; Official goal name: pick_heat_then_place_in_recep-TeaCupType-None-CabinetType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TeaCupType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "to heat a mug and put it inside of the cabinet."
;; Official goal name: pick_heat_then_place_in_recep-TravelMugType-None-CabinetType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TravelMugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)  
            )
    )))

propose_goals_for_problems:: now on 77 / 205
propose_goals_for_problems:: "put a heated mug in the coffee maker.":
[Goal 1/4]

;; PDDL guess 1 for "put a heated mug in the coffee maker."
;; Official goal name: pick_heat_then_place_in_recep-Mug-None-CoffeeMachine
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a heated mug in the coffee maker."
;; Official goal name: pick_heat_then_place_in_recep-CupType-None-CoffeeMachineType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a heated mug in the coffee maker."
;; Official goal name: pick_heat_then_place_in_recep-TeaCupType-None-CoffeeMachineType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TeaCupType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a heated mug in the coffee maker."
;; Official goal name: pick_heat_then_place_in_recep-MugType-None-CoffeeMachineType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

propose_goals_for_problems:: now on 78 / 205
propose_goals_for_problems:: "slice a potato in a sink with a knife.":
[Goal 1/4]

;; PDDL guess 1 for 'slice a potato in a sink with a knife.'
;; Simplified Goal: 
pick_and_place_simple-PotatoSliced-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'slice a potato in a sink with a knife.'
;; Simplified Goal: 
pick_and_place_simple-PotatoSliced-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'slice a potato in a sink with a knife.'
;; Simplified Goal: 
pick_and_place_simple-PotatoSliced-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'slice a potato in a sink with a knife.'
;; Simplified Goal: 
pick_and_place_simple-PotatoSliced-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))


propose_goals_for_problems:: now on 79 / 205
propose_goals_for_problems:: "use a large metal knife to slice up a tomato on the counter.":
[Goal 1/4]

;; PDDL guess 1 for 'use a large metal knife to slice up a tomato on the counter.'
;; Official goal name: pick_and_place_simple-TomatoSliced-None-CounterTop
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'use a large metal knife to slice up a tomato on the counter.'
;; Official goal name: pick_and_place_simple-AppleSliced-None-CounterTop
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'use a large metal knife to slice up a tomato on the counter.'
;; Official goal name: pick_and_place_simple-CucumberSliced-None-CounterTop
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CucumberType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'use a large metal knife to slice up a tomato on the counter.'
;; Official goal name: pick_and_place_simple-PearSliced-None-CounterTop
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PearType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

propose_goals_for_problems:: now on 80 / 205
propose_goals_for_problems:: "slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.":
[Goal 1/4]

;; PDDL guess 1 for "slice a loaf of bread with a knife , cook it in a microwave put it the small brown table."
;; Official goal name: pick_slice_then_heat_then_place_in_recep-Bread-None-SideTable-12
(:goal
   (exists (?r - receptacle)
   (exists (?o - object)
   (and 
       (objectType ?o BreadType) 
       (receptacleType ?r SideTableType)
       (inReceptacle ?o ?r)
       (sliceable ?o) 
       (isSliced ?o)
       (heatable ?o) 
       (isHot ?o)  
   )
))) 

[Goal 2/4]

;; PDDL guess 2 for "slice a loaf of bread with a knife , cook it in a microwave put it the small brown table."
;; Official goal name: pick_slice_then_heat_then_place_in_recep-Bread-None-DiningTableType-12
(:goal
   (exists (?r - receptacle)
   (exists (?o - object)
   (and 
       (objectType ?o BreadType) 
       (receptacleType ?r DiningTableType)
       (inReceptacle ?o ?r)
       (sliceable ?o) 
       (isSliced ?o)
       (heatable ?o) 
       (isHot ?o)  
   )
))) 

[Goal 3/4]

;; PDDL guess 3 for "slice a loaf of bread with a knife , cook it in a microwave put it the small brown table."
;; Official goal name: pick_slice_then_heat_then_place_in_recep-Bread-None-CoffeeTableType-12
(:goal
   (exists (?r - receptacle)
   (exists (?o - object)
   (and 
       (objectType ?o BreadType) 
       (receptacleType ?r CoffeeTableType)
       (inReceptacle ?o ?r)
       (sliceable ?o) 
       (isSliced ?o)
       (heatable ?o) 
       (isHot ?o)  
   )
))) 

[Goal 4/4]

;; PDDL guess 4 for "slice a loaf of bread with a knife , cook it in a microwave put it the small brown table."
;; Official goal name: pick_slice_then_heat_then_place_in_recep-Bread-None-CartType-12
(:goal
   (exists (?r - receptacle)
   (exists (?o - object)
   (and 
       (objectType ?o BreadType) 
       (receptacleType ?r CartType)
       (inReceptacle ?o ?r)
       (sliceable ?o) 
       (isSliced ?o)
       (heatable ?o) 
       (isHot ?o)  
   )
))) 

propose_goals_for_problems:: now on 81 / 205
propose_goals_for_problems:: "put a chilled sweet potato in the microwave.":
[Goal 1/4]

;; PDDL guess 1 for 'put a chilled sweet potato in the microwave.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Potato-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'put a chilled sweet potato in the microwave.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Corn-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CornType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'put a chilled sweet potato in the microwave.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Carrot-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CarrotType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'put a chilled sweet potato in the microwave.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-SweetPotato-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SweetPotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))


propose_goals_for_problems:: now on 82 / 205
propose_goals_for_problems:: "slice a tomato that is on the microwave stand.":
[Goal 1/4]

;; PDDL guess 1 for 'slice a tomato that is on the microwave stand.'
;; Official goal name: pick_and_place_simple-TomatoSliced-None-MicrowaveStand
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveStandType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'slice a tomato that is on the microwave stand.'
;; Official goal name: pick_and_place_simple-AppleSliced-None-MicrowaveStand
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r MicrowaveStandType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'slice a tomato that is on the microwave stand.'
;; Official goal name: pick_and_place_simple-TomatoSliced-None-KitchenCounter
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r KitchenCounterType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'slice a tomato that is on the microwave stand.'
;; Official goal name: pick_and_place_simple-AppleSliced-None-KitchenCounter
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r KitchenCounterType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

propose_goals_for_problems:: now on 83 / 205
propose_goals_for_problems:: "place a rinsed tomato on a table.":
[Goal 1/4]

;; PDDL guess 1 for "place a rinsed tomato on a table."
;; Official goal name: pick_clean_then_place_in_recep-Tomato-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place a rinsed tomato on a table."
;; Official goal name: pick_clean_then_place_in_recep-Tomato-None-CounterTop
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place a rinsed tomato on a table."
;; Official goal name: pick_clean_then_place_in_recep-Tomato-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place a rinsed tomato on a table."
;; Official goal name: pick_clean_then_place_in_recep-Tomato-None-CoffeeTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

propose_goals_for_problems:: now on 84 / 205
propose_goals_for_problems:: "examine a towel with a lamp.":
[Goal 1/4]

;; PDDL guess 1 for 'examine a towel with a lamp.'
;; Simplified Goal: 
look_at_obj_in_light-Cloth-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o ClothType)
                (holds ?a ?o)
            )
    ))))))


[Goal 2/4]

;; PDDL guess 2 for 'examine a towel with a lamp.'
;; Simplified Goal: 
look_at_obj_in_light-TowelType-None-DeskLampType

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o TowelType)
                (holds ?a ?o)
            )
    ))))))


[Goal 3/4]

;; PDDL guess 3 for 'examine a towel with a lamp.'
;; Simplified Goal: 
look_at_obj_in_light-TowelType-None-FloorLampType

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o TowelType)
                (holds ?a ?o)
            )
    ))))))


[Goal 4/4]

;; PDDL guess 4 for 'examine a towel with a lamp.'
;; Simplified Goal: 
look_at_obj_in_light-TowelType-None-FloorLampType

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o TowelType)
                (holds ?a ?o)
            )
    ))))))


propose_goals_for_problems:: now on 85 / 205
propose_goals_for_problems:: "place a cooked tomato slice in the refrigerator.":
[Goal 1/4]

;; PDDL guess 1 for "place a cooked tomato slice in the refrigerator."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
)))

[Goal 2/4]

;; PDDL guess 2 for "place a cooked tomato slice in the refrigerator."
;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
)))

[Goal 3/4]

;; PDDL guess 3 for "place a cooked tomato slice in the refrigerator."
;; Official goal name: pick_heat_then_place_in_recep-OnionSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o OnionType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
)))

[Goal 4/4]

;; PDDL guess 4 for "place a cooked tomato slice in the refrigerator."
;; Official goal name: pick_heat_then_place_in_recep-CucumberSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CucumberType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
)))

propose_goals_for_problems:: now on 86 / 205
propose_goals_for_problems:: "move the cell phone from the shelves to desk.":
[Goal 1/4]

;; PDDL guess 1 for "move the cell phone from the shelves to desk."
;; Official goal name: pick_and_place_simple-CellPhone-None-Desk
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CellPhoneType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 2/4]

;; PDDL guess 2 for "move the cell phone from the shelves to desk."
;; Official goal name: pick_and_place_simple-CellPhone-None-Desk
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CellPhoneType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 3/4]

;; PDDL guess 3 for "move the cell phone from the shelves to desk."
;; Official goal name: pick_and_place_simple-CellPhone-None-Desk
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CellPhoneType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 4/4]

;; PDDL guess 4 for "move the cell phone from the shelves to desk."
;; Official goal name: pick_and_place_simple-CellPhone-None-Desk
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CellPhoneType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
            )
)))

propose_goals_for_problems:: now on 87 / 205
propose_goals_for_problems:: "inspect a mug with a lamp.":
[Goal 1/4]

;; PDDL guess 1 for 'inspect a mug with a lamp.'
;; Simplified Goal: 
look_at_obj_in_light-Mug-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o MugType)
                (holds ?a ?o)
            )
    ))))))

[Goal 2/4]

;; PDDL guess 2 for 'inspect a mug with a lamp.'
;; Simplified Goal: 
look_at_obj_in_light-Mug-None-TableLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot TableLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o MugType)
                (holds ?a ?o)
            )
    ))))))

[Goal 3/4]

;; PDDL guess 3 for 'inspect a mug with a lamp.'
;; Simplified Goal: 
look_at_obj_in_light-Mug-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o MugType)
                (holds ?a ?o)
            )
    ))))))

[Goal 4/4]

;; PDDL guess 4 for 'inspect a mug with a lamp.'
;; Simplified Goal: 
look_at_obj_in_light-Mug-None-BedsideLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot BedsideLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o MugType)
                (holds ?a ?o)
            )
    ))))))

propose_goals_for_problems:: now on 88 / 205
propose_goals_for_problems:: "col the tomato from the trash in the refrigerator , put the tomato on the table.":
[Goal 1/4]

;; PDDL guess 1 for 'col the tomato from the trash in the refrigerator , put the tomato on the table.'
;; Official goal name: pick_cool_then_place_in_recep-Tomato-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
)))

[Goal 2/4]

;; PDDL guess 2 for 'col the tomato from the trash in the refrigerator , put the tomato on the table.'
;; Official goal name: pick_cool_then_place_in_recep-Tomato-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
)))

[Goal 3/4]

;; PDDL guess 3 for 'col the tomato from the trash in the refrigerator , put the tomato on the table.'
;; Official goal name: pick_cool_then_place_in_recep-Tomato-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
)))

[Goal 4/4]

;; PDDL guess 4 for 'col the tomato from the trash in the refrigerator , put the tomato on the table.'
;; Official goal name: pick_cool_then_place_in_recep-Tomato-None-Desk
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
)))

propose_goals_for_problems:: now on 89 / 205
propose_goals_for_problems:: "turn on the lamp while holding the keys.":
[Goal 1/4]

;; PDDL guess 1 for 'turn on the lamp while holding the keys.'
;; Simplified Goal: 
look_at_obj_in_light-KeyChain-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o KeyChainType)
                (holds ?a ?o)
            )
    ))))))


[Goal 2/4]

;; PDDL guess 2 for 'turn on the lamp while holding the keys.'
;; Simplified Goal: 
look_at_obj_in_light-KeyChain-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o KeyChainType)
                (holds ?a ?o)
            )
    ))))))


[Goal 3/4]

;; PDDL guess 3 for 'turn on the lamp while holding the keys.'
;; Simplified Goal: 
look_at_obj_in_light-KeyChain-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o KeyChainType)
                (holds ?a ?o)
            )
    ))))))


[Goal 4/4]

;; PDDL guess 4 for 'turn on the lamp while holding the keys.'
;; Simplified Goal: 
look_at_obj_in_light-KeyChain-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o KeyChainType)
                (holds ?a ?o)
            )
    ))))))


propose_goals_for_problems:: now on 90 / 205
propose_goals_for_problems:: "place a microwaved apple slice on top of the black table.":
[Goal 1/4]

;; PDDL guess 1 for "place a microwaved apple slice on top of the black table."
;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place a microwaved apple slice on top of the black table."
;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place a microwaved apple slice on top of the black table."
;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-CoffeeTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place a microwaved apple slice on top of the black table."
;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-SofaType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 91 / 205
propose_goals_for_problems:: "move the plunger to the cabinet under the sink.":
[Goal 1/4]

;; PDDL guess 1 for "move the plunger to the cabinet under the sink."
;; Official goal name: pick_and_place_simple-Plunger-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlungerType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 2/4]

;; PDDL guess 2 for "move the plunger to the cabinet under the sink."
;; Official goal name: pick_and_place_simple-Ladle-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LadleType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 3/4]

;; PDDL guess 3 for "move the plunger to the cabinet under the sink."
;; Official goal name: pick_and_place_simple-Spoon-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpoonType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 4/4]

;; PDDL guess 4 for "move the plunger to the cabinet under the sink."
;; Official goal name: pick_and_place_simple-ForkType-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ForkType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
)))

propose_goals_for_problems:: now on 92 / 205
propose_goals_for_problems:: "place a cooked tomato slice inside the fridge.":
[Goal 1/4]

;; PDDL guess 1 for "place a cooked tomato slice inside the fridge."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place a cooked tomato slice inside the fridge."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place a cooked tomato slice inside the fridge."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place a cooked tomato slice inside the fridge."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 93 / 205
propose_goals_for_problems:: "put a cooked slice of potato in the middle of the sink.":
[Goal 1/4]

;; PDDL guess 1 for 'put a cooked slice of potato in the middle of the sink.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'put a cooked slice of potato in the middle of the sink.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'put a cooked slice of potato in the middle of the sink.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'put a cooked slice of potato in the middle of the sink.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 94 / 205
propose_goals_for_problems:: "put a vase in a fridge.":
[Goal 1/4]

;; PDDL guess 1 for 'put a vase in a fridge.'
;; Simplified Goal: 
pick_and_place_simple-Vase-None-Fridge

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o VaseType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'put a vase in a fridge.'
;; Simplified Goal: 
pick_and_place_simple-Glassbottle-None-Fridge

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o GlassbottleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'put a vase in a fridge.'
;; Simplified Goal: 
pick_and_place_simple-Vase-None-Fridge

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o VaseType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'put a vase in a fridge.'
;; Simplified Goal: 
pick_and_place_simple-PotType-None-Fridge

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
            )
    )))


propose_goals_for_problems:: now on 95 / 205
propose_goals_for_problems:: "inspect a bowl by lamplight.":
[Goal 1/4]

;; PDDL guess 1 for 'inspect a bowl by lamplight.'
;; Simplified Goal: 
look_at_obj_in_light-Bowl-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BowlType)
                (holds ?a ?o)
            )
    ))))))

[Goal 2/4]

;; PDDL guess 2 for 'inspect a bowl by lamplight.'
;; Simplified Goal: 
look_at_obj_in_light-Bowl-None-TableLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot TableLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BowlType)
                (holds ?a ?o)
            )
    ))))))

[Goal 3/4]

;; PDDL guess 3 for 'inspect a bowl by lamplight.'
;; Simplified Goal: 
look_at_obj_in_light-Bowl-None-BedsideLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot BedsideLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BowlType)
                (holds ?a ?o)
            )
    ))))))

[Goal 4/4]

;; PDDL guess 4 for 'inspect a bowl by lamplight.'
;; Simplified Goal: 
look_at_obj_in_light-Bowl-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BowlType)
                (holds ?a ?o)
            )
    ))))))

propose_goals_for_problems:: now on 96 / 205
propose_goals_for_problems:: "examine the plate under the light of the lamp.":
[Goal 1/4]

;; PDDL guess 1 for 'examine the plate under the light of the lamp.'
;; Simplified Goal: 
look_at_obj_in_light-Plate-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PlateType)
                (holds ?a ?o)
            )
    ))))))


[Goal 2/4]

;; PDDL guess 2 for 'examine the plate under the light of the lamp.'
;; Simplified Goal: 
look_at_obj_in_light-Plate-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PlateType)
                (holds ?a ?o)
            )
    ))))))


[Goal 3/4]

;; PDDL guess 3 for 'examine the plate under the light of the lamp.'
;; Simplified Goal: 
look_at_obj_in_light-Plate-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PlateType)
                (holds ?a ?o)
            )
    ))))))


[Goal 4/4]

;; PDDL guess 4 for 'examine the plate under the light of the lamp.'
;; Simplified Goal: 
look_at_obj_in_light-Plate-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PlateType)
                (holds ?a ?o)
            )
    ))))))


propose_goals_for_problems:: now on 97 / 205
propose_goals_for_problems:: "put a warmed glass in the cabinet.":
[Goal 1/4]

;; PDDL guess 1 for "put a warmed glass in the cabinet."
;; Official goal name: pick_heat_then_place_in_recep-Glass-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o GlassType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a warmed glass in the cabinet."
;; Official goal name: pick_heat_then_place_in_recep-Mug-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a warmed glass in the cabinet."
;; Official goal name: pick_heat_then_place_in_recep-WineBottle-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o WineBottleType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a warmed glass in the cabinet."
;; Official goal name: pick_heat_then_place_in_recep-CoffeeCup-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CoffeeCupType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
            )
    )))

propose_goals_for_problems:: now on 98 / 205
propose_goals_for_problems:: "place a slice of heated tomato in a sink.":
[Goal 1/4]

;; PDDL guess 1 for "place a slice of heated tomato in a sink."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place a slice of heated tomato in a sink."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-BathtubBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r BathtubBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place a slice of heated tomato in a sink."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Kettle
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r KettleType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place a slice of heated tomato in a sink."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-SoupBowl
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SoupBowlType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 99 / 205
propose_goals_for_problems:: "move a slice of cold bread to the microwave.":
[Goal 1/4]

;; PDDL guess 1 for 'move a slice of cold bread to the microwave.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSliced-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'move a slice of cold bread to the microwave.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSliced-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'move a slice of cold bread to the microwave.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSliced-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'move a slice of cold bread to the microwave.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSliced-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


propose_goals_for_problems:: now on 100 / 205
propose_goals_for_problems:: "put a cold potato slice in the microwave.":
[Goal 1/4]

;; PDDL guess 1 for "put a cold potato slice in the microwave."
;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a cold potato slice in the microwave."
;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a cold potato slice in the microwave."
;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a cold potato slice in the microwave."
;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 101 / 205
propose_goals_for_problems:: "put a warmed apple in the trash can.":
[Goal 1/4]

;; PDDL guess 1 for "put a warmed apple in the trash can."
;; Simplified Goal: pick_heat_then_place_in_recep-Apple-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a warmed apple in the trash can."
;; Simplified Goal: pick_heat_then_place_in_recep-SoupLadle-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoupLadleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a warmed apple in the trash can."
;; Simplified Goal: pick_heat_then_place_in_recep-SoupLadle-None-TrashCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoupLadleType) 
                (receptacleType ?r TrashCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a warmed apple in the trash can."
;; Simplified Goal: pick_heat_then_place_in_recep-Apple-None-TrashCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r TrashCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

propose_goals_for_problems:: now on 102 / 205
propose_goals_for_problems:: "take the phone from the top of the nightstand and place it in the drawer.":
[Goal 1/4]

;; PDDL guess 1 for "take the phone from the top of the nightstand and place it in the drawer."
;; Official goal name: pick_and_place_simple-CellPhone-None-Drawer
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CellPhoneType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "take the phone from the top of the nightstand and place it in the drawer."
;; Official goal name: pick_and_place_simple-CellPhone-None-Drawer
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CellPhoneType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "take the phone from the top of the nightstand and place it in the drawer."
;; Official goal name: pick_and_place_simple-CellPhone-None-Drawer
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CellPhoneType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "take the phone from the top of the nightstand and place it in the drawer."
;; Official goal name: pick_and_place_simple-CellPhone-None-Drawer
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CellPhoneType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r) 
            )
    )))

propose_goals_for_problems:: now on 103 / 205
propose_goals_for_problems:: "put a cold pot in the cabinet.":
[Goal 1/4]

;; PDDL guess 1 for "put a cold pot in the cabinet."
;; Official goal name: pick_cool_then_place_in_recep-Pot-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a cold pot in the cabinet."
;; Official goal name: pick_cool_then_place_in_recep-Bowl-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a cold pot in the cabinet."
;; Official goal name: pick_cool_then_place_in_recep-Pan-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a cold pot in the cabinet."
;; Official goal name: pick_cool_then_place_in_recep-Pitcher-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PitcherType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
    )))

propose_goals_for_problems:: now on 104 / 205
propose_goals_for_problems:: "place a cooled potato in a garbage bin.":
[Goal 1/4]

;; PDDL guess 1 for "place a cooled potato in a garbage bin."
;; Official goal name: pick_cool_then_place_in_recep-Potato-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place a cooled potato in a garbage bin."
;; Official goal name: pick_cool_then_place_in_recep-Potato-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place a cooled potato in a garbage bin."
;; Official goal name: pick_cool_then_place_in_recep-Potato-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place a cooled potato in a garbage bin."
;; Official goal name: pick_cool_then_place_in_recep-Potato-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
    )))

propose_goals_for_problems:: now on 105 / 205
propose_goals_for_problems:: "to take a mug from the microwave to put it away in the cabinet.":
[Goal 1/4]

;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'
;; Simplified Goal: pick_and_place_simple-Mug-None-CabinetType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'to take a mug from the microwave to put it away in the cabinet.'
;; Simplified Goal: pick_and_place_simple-MugType-None-CabinetType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'to take a mug from the microwave to put it away in the cabinet.'
;; Simplified Goal: pick_and_place_simple-CupType-None-CabinetType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'to take a mug from the microwave to put it away in the cabinet.'
;; Simplified Goal: pick_and_place_simple-CoffeeCupType-None-CabinetType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CoffeeCupType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
            )
    )))

propose_goals_for_problems:: now on 106 / 205
propose_goals_for_problems:: "put a credit card on the blue chair.":
[Goal 1/4]

;; PDDL guess 1 for 'put a credit card on the blue chair.'
;; Simplified Goal: 
pick_and_place_simple-CreditCard-None-ArmChair

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CreditCardType) 
                (receptacleType ?r ArmChairType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'put a credit card on the blue chair.'
;; Simplified Goal: 
pick_and_place_simple-CreditCard-None-SideTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CreditCardType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'put a credit card on the blue chair.'
;; Simplified Goal: 
pick_and_place_simple-CreditCard-None-DiningTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CreditCardType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'put a credit card on the blue chair.'
;; Simplified Goal: 
pick_and_place_simple-CreditCard-None-CoffeeTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CreditCardType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r) 
            )
    )))

propose_goals_for_problems:: now on 107 / 205
propose_goals_for_problems:: "cool the cabbage in the refrigerator , put it back on the table.":
[Goal 1/4]

;; PDDL guess 1 for "cool the cabbage in the refrigerator , put it back on the table."
;; Official goal name: pick_cool_then_place_in_recep-Lettuce-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "cool the cabbage in the refrigerator , put it back on the table."
;; Official goal name: pick_cool_then_place_in_recep-Cabbage-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CabbageType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "cool the cabbage in the refrigerator , put it back on the table."
;; Official goal name: pick_cool_then_place_in_recep-Cabbage-None-DeskType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CabbageType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "cool the cabbage in the refrigerator , put it back on the table."
;; Official goal name: pick_cool_then_place_in_recep-Cabbage-None-SideTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CabbageType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

propose_goals_for_problems:: now on 108 / 205
propose_goals_for_problems:: "put a box on a table.":
[Goal 1/4]

;; PDDL guess 1 for "put a box on a table."
;; Official goal name: pick_and_place_simple-Box-None-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 2/4]

;; PDDL guess 2 for "put a box on a table."
;; Official goal name: pick_and_place_simple-Cloth-None-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ClothType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 3/4]

;; PDDL guess 3 for "put a box on a table."
;; Official goal name: pick_and_place_simple-BasketBall-None-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BasketBallType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 4/4]

;; PDDL guess 4 for "put a box on a table."
;; Official goal name: pick_and_place_simple-HousePlant-None-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o HousePlantType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
)))

propose_goals_for_problems:: now on 109 / 205
propose_goals_for_problems:: "move a clock to the dresser.":
[Goal 1/4]

;; PDDL guess 1 for 'move a clock to the dresser.'
;; Simplified Goal: 
pick_and_place_simple-AlarmClock-None-Dresser

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AlarmClockType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r) 
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'move a clock to the dresser.'
;; Simplified Goal: 
pick_and_place_simple-WatchType-None-Dresser

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o WatchType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r) 
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'move a clock to the dresser.'
;; Simplified Goal: 
pick_and_place_simple-WallClockType-None-Dresser

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o WallClockType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r) 
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'move a clock to the dresser.'
;; Simplified Goal: 
pick_and_place_simple-ClockRadioType-None-Dresser

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ClockRadioType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r) 
            )
    )))


propose_goals_for_problems:: now on 110 / 205
propose_goals_for_problems:: "put a cold tomato on the table.":
[Goal 1/4]

;; PDDL guess 1 for 'put a cold tomato on the table.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Tomato-None-DiningTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'put a cold tomato on the table.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Tomato-None-DiningTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'put a cold tomato on the table.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Tomato-None-DiningTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'put a cold tomato on the table.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Tomato-None-DiningTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))


propose_goals_for_problems:: now on 111 / 205
propose_goals_for_problems:: "turn on a lamp while holding a red cushion.":
[Goal 1/4]

;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'
;; Official goal name: look_at_obj_in_light-Cushion-None-FloorLamp
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CushionType)
                (holds ?a ?o)
            )
    ))))))

[Goal 2/4]

;; PDDL guess 2 for 'turn on a lamp while holding a red cushion.'
;; Official goal name: look_at_obj_in_light-PatternedPillow-None-FloorLamp
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PatternedPillowType)
                (holds ?a ?o)
            )
    ))))))

[Goal 3/4]

;; PDDL guess 3 for 'turn on a lamp while holding a red cushion.'
;; Official goal name: look_at_obj_in_light-Cushion-None-DeskLamp
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CushionType)
                (holds ?a ?o)
            )
    ))))))

[Goal 4/4]

;; PDDL guess 4 for 'turn on a lamp while holding a red cushion.'
;; Official goal name: look_at_obj_in_light-PatternedPillow-None-DeskLamp
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PatternedPillowType)
                (holds ?a ?o)
            )
    ))))))

propose_goals_for_problems:: now on 112 / 205
propose_goals_for_problems:: "put a heated potato on the small black table.":
[Goal 1/4]

;; PDDL guess 1 for "put a heated potato on the small black table."
;; Official goal name: pick_heat_then_place_in_recep-Potato-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a heated potato on the small black table."
;; Official goal name: pick_heat_then_place_in_recep-Tomato-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a heated potato on the small black table."
;; Official goal name: pick_heat_then_place_in_recep-Apple-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a heated potato on the small black table."
;; Official goal name: pick_heat_then_place_in_recep-Pear-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PearType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

propose_goals_for_problems:: now on 113 / 205
propose_goals_for_problems:: "pick up knife , cut potato , place potato in fridge , place potato into trash can.":
[Goal 1/4]

;; PDDL guess 1 for "pick up knife , cut potato , place potato in fridge , place potato into trash can."
;; Official goal name: pick_slice_then_place_in_recep-Knife-Potato-Fridge-GarbageCan
(:goal
        (exists (?r1 - receptacle) 
        (exists (?r2 - receptacle) 
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r1 FridgeType)
                (receptacleType ?r2 GarbageCanType)
                (inReceptacle ?o ?r2) 
                (inReceptacle ?o ?r1) 
                (sliceable ?o) 
            )
        )
    )))

[Goal 2/4]

;; PDDL guess 2 for "pick up knife , cut potato , place potato in fridge , place potato into trash can."
;; Official goal name: pick_slice_then_place_in_recep-Knife-Potato-Fridge-GarbageCan
(:goal
        (exists (?r1 - receptacle) 
        (exists (?r2 - receptacle) 
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r1 FridgeType)
                (receptacleType ?r2 GarbageCanType)
                (inReceptacle ?o ?r2) 
                (inReceptacle ?o ?r1) 
                (sliceable ?o) 
            )
        )
    )))

[Goal 3/4]

;; PDDL guess 3 for "pick up knife , cut potato , place potato in fridge , place potato into trash can."
;; Official goal name: pick_slice_then_place_in_recep-Knife-Potato-Fridge-GarbageCan
(:goal
        (exists (?r1 - receptacle) 
        (exists (?r2 - receptacle) 
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r1 FridgeType)
                (receptacleType ?r2 GarbageCanType)
                (inReceptacle ?o ?r2) 
                (inReceptacle ?o ?r1) 
                (sliceable ?o) 
            )
        )
    )))

[Goal 4/4]

;; PDDL guess 4 for "pick up knife , cut potato , place potato in fridge , place potato into trash can."
;; Official goal name: pick_slice_then_place_in_recep-Knife-Potato-Fridge-GarbageCan
(:goal
        (exists (?r1 - receptacle) 
        (exists (?r2 - receptacle) 
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r1 FridgeType)
                (receptacleType ?r2 GarbageCanType)
                (inReceptacle ?o ?r2) 
                (inReceptacle ?o ?r1) 
                (sliceable ?o) 
            )
        )
    )))

propose_goals_for_problems:: now on 114 / 205
propose_goals_for_problems:: "put the keys on the couch.":
[Goal 1/4]

;; PDDL guess 1 for 'put the keys on the couch.'
;; Official goal name: pick_and_place_simple-KeyChain-None-Sofa
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KeyChainType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'put the keys on the couch.'
;; Official goal name: pick_and_place_simple-Key-None-Sofa
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KeyType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'put the keys on the couch.'
;; Official goal name: pick_and_place_simple-KeyRing-None-Sofa
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KeyRingType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'put the keys on the couch.'
;; Official goal name: pick_and_place_simple-Keys-None-Sofa
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KeysType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))

propose_goals_for_problems:: now on 115 / 205
propose_goals_for_problems:: "chill a loaf of bread and move it to the table.":
[Goal 1/4]

;; PDDL guess 1 for "chill a loaf of bread and move it to the table."
;; Official goal name: pick_cool_then_place_in_recep-Bread-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "chill a loaf of bread and move it to the table."
;; Official goal name:
pick_cool_then_place_in_recep-Bread-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "chill a loaf of bread and move it to the table."
;; Official goal name:
pick_cool_then_place_in_recep-Bread-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "chill a loaf of bread and move it to the table."
;; Official goal name:
pick_cool_then_place_in_recep-Bread-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

propose_goals_for_problems:: now on 116 / 205
propose_goals_for_problems:: "place a chilled slice of tomato into a bin.":
[Goal 1/4]

;; PDDL guess 1 for "place a chilled slice of tomato into a bin."
;; Official goal name: pick_cool_then_place_in_receptacle-TomatoSliced-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place a chilled slice of tomato into a bin."
;; Official goal name: pick_cool_then_place_in_receptacle-TomatoSliced-None-TrashCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r TrashCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place a chilled slice of tomato into a bin."
;; Official goal name: pick_cool_then_place_in_receptacle-TomatoSliced-None-RecycleBin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r RecycleBinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place a chilled slice of tomato into a bin."
;; Official goal name: pick_cool_then_place_in_receptacle-TomatoSliced-None-WasteBasket
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r WasteBasketType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 117 / 205
propose_goals_for_problems:: "examine the figurine by the light.":
[Goal 1/4]

;; PDDL guess 1 for 'examine the figurine by the light.'
;; Simplified Goal: 
look_at_obj_in_light-Statue-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o StatueType)
                (holds ?a ?o)
            )
    ))))))


[Goal 2/4]

;; PDDL guess 2 for 'examine the figurine by the light.'
;; Simplified Goal: 
look_at_obj_in_light-Statue-None-TableLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot TableLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o StatueType)
                (holds ?a ?o)
            )
    ))))))


[Goal 3/4]

;; PDDL guess 3 for 'examine the figurine by the light.'
;; Simplified Goal: 
look_at_obj_in_light-Statue-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o StatueType)
                (holds ?a ?o)
            )
    ))))))


[Goal 4/4]

;; PDDL guess 4 for 'examine the figurine by the light.'
;; Simplified Goal: 
look_at_obj_in_light-Statue-None-BedsideLamp

 (:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot BedsideLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o StatueType)
                (holds ?a ?o)
            )
    ))))))


propose_goals_for_problems:: now on 118 / 205
propose_goals_for_problems:: "put a bottle in a trash can.":
[Goal 1/4]

;; PDDL guess 1 for "put a bottle in a trash can."
;; Official goal name: pick_and_place_simple-SoapBottle-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBottleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 2/4]

;; PDDL guess 2 for "put a bottle in a trash can."
;; Official goal name: pick_and_place_simple-GlassBottle-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o GlassBottleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 3/4]

;; PDDL guess 3 for "put a bottle in a trash can."
;; Official goal name: pick_and_place_simple-WineBottleType-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o WineBottleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 4/4]

;; PDDL guess 4 for "put a bottle in a trash can."
;; Official goal name: pick_and_place_simple-CupType-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r) 
            )
)))

propose_goals_for_problems:: now on 119 / 205
propose_goals_for_problems:: "put the chilled potato in the sink.":
[Goal 1/4]

;; PDDL guess 1 for "put the chilled potato in the sink."
;; Official goal name: pick_cool_then_place_in_recep-Potato-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put the chilled potato in the sink."
;; Official goal name: pick_cool_then_place_in_recep-Apple-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put the chilled potato in the sink."
;; Official goal name: pick_cool_then_place_in_recep-Onion-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o OnionType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put the chilled potato in the sink."
;; Official goal name: pick_cool_then_place_in_recep-Strawberry-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o StrawberryType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

propose_goals_for_problems:: now on 120 / 205
propose_goals_for_problems:: "put a warmed tomato in the sink.":
[Goal 1/4]

;; PDDL guess 1 for "put a warmed tomato in the sink."
;; Official goal name: pick_heat_then_place_in_recep-Tomato-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a warmed tomato in the sink."
;; Official goal name: pick_heat_then_place_in_recep-Tomato-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a warmed tomato in the sink."
;; Official goal name: pick_heat_then_place_in_recep-Tomato-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a warmed tomato in the sink."
;; Official goal name: pick_heat_then_place_in_recep-Tomato-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

propose_goals_for_problems:: now on 121 / 205
propose_goals_for_problems:: "take the box from the kitchen table , put it on the red couch.":
[Goal 1/4]

;; PDDL guess 1 for 'take the box from the kitchen table , put it on the red couch.'
;; Official goal name: pick_and_place_simple-Box-None-Sofa
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'take the box from the kitchen table , put it on the red couch.'
;; Official goal name: pick_and_place_simple-Bowl-None-Sofa
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'take the box from the kitchen table , put it on the red couch.'
;; Official goal name: pick_and_place_simple-ShoeBox-None-Sofa
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ShoeBoxType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'take the box from the kitchen table , put it on the red couch.'
;; Official goal name: pick_and_place_simple-CardboardBox-None-Sofa
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CardboardBoxType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))

propose_goals_for_problems:: now on 122 / 205
propose_goals_for_problems:: "move a pencil to the desk shelf.":
[Goal 1/4]

;; PDDL guess 1 for "move a pencil to the desk shelf."
;; Official goal name: pick_and_place_simple-Pencil-None-Shelf
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PencilType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "move a pencil to the desk shelf."
;; Official goal name: pick_and_place_simple-PenType-None-ShelfType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PenType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "move a pencil to the desk shelf."
;; Official goal name: pick_and_place_simple-PenType-None-SideTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PenType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "move a pencil to the desk shelf."
;; Official goal name: pick_and_place_simple-SpoonType-None-ShelfType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpoonType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
    )))

propose_goals_for_problems:: now on 123 / 205
propose_goals_for_problems:: "examine a key chain by the dim natural light of a living room.":
[Goal 1/4]

;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'
;; Simplified Goal: 
look_at_obj_in_light-KeyChain-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o KeyChainType)
                (holds ?a ?o)
            )
    ))))))


[Goal 2/4]

;; PDDL guess 2 for 'examine a key chain by the dim natural light of a living room.'
;; Simplified Goal: 
look_at_obj_in_light-KeyChain-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o KeyChainType)
                (holds ?a ?o)
            )
    ))))))


[Goal 3/4]

;; PDDL guess 3 for 'examine a key chain by the dim natural light of a living room.'
;; Simplified Goal: 
look_at_obj_in_light-KeyChain-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o KeyChainType)
                (holds ?a ?o)
            )
    ))))))


[Goal 4/4]

;; PDDL guess 4 for 'examine a key chain by the dim natural light of a living room.'
;; Simplified Goal: 
look_at_obj_in_light-KeyChain-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o KeyChainType)
                (holds ?a ?o)
            )
    ))))))


propose_goals_for_problems:: now on 124 / 205
propose_goals_for_problems:: "place a green candle on a counter.":
[Goal 1/4]

;; PDDL guess 1 for "place a green candle on a counter."
;; Official goal name: pick_and_place_simple-CandleType-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CandleType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 2/4]

;; PDDL guess 2 for "place a green candle on a counter."
;; Official goal name: pick_and_place_simple-CandleType-None-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CandleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 3/4]

;; PDDL guess 3 for "place a green candle on a counter."
;; Official goal name: pick_and_place_simple-CandleType-None-SideTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CandleType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 4/4]

;; PDDL guess 4 for "place a green candle on a counter."
;; Official goal name: pick_and_place_simple-CandleType-None-CoffeeTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CandleType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r) 
            )
)))

propose_goals_for_problems:: now on 125 / 205
propose_goals_for_problems:: "put a cooked piece of potato into the fridge.":
[Goal 1/4]

;; PDDL guess 1 for "put a cooked piece of potato into the fridge."
;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a cooked piece of potato into the fridge."
;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a cooked piece of potato into the fridge."
;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a cooked piece of potato into the fridge."
;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 126 / 205
propose_goals_for_problems:: "move a pencil from the table to the counter.":
[Goal 1/4]

;; PDDL guess 1 for "move a pencil from the table to the counter."
;; Official goal name: pick_and_place_simple-Pencil-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PencilType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 2/4]

;; PDDL guess 2 for "move a pencil from the table to the counter."
;; Official goal name: pick_and_place_simple-Pencil-None-CoffeeTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PencilType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 3/4]

;; PDDL guess 3 for "move a pencil from the table to the counter."
;; Official goal name: pick_and_place_simple-Pencil-None-DeskType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PencilType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 4/4]

;; PDDL guess 4 for "move a pencil from the table to the counter."
;; Official goal name: pick_and_place_simple-Pencil-None-SideTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PencilType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
            )
)))

propose_goals_for_problems:: now on 127 / 205
propose_goals_for_problems:: "put a clean mug in the coffee machine.":
[Goal 1/4]

;; PDDL guess 1 for 'put a clean mug in the coffee machine.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-Mug-None-CoffeeMachine

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'put a clean mug in the coffee machine.'
;; Simplified Goal: 
pick_and_place_simple-Mug-None-CoffeeMachineType

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (isClean ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'put a clean mug in the coffee machine.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-Mug-None-CoffeeMachineType

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'put a clean mug in the coffee machine.'
;; Simplified Goal: 
pick_and_place_simple-Mug-None-CoffeeMachineType

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (isClean ?o) 
            )
    )))

propose_goals_for_problems:: now on 128 / 205
propose_goals_for_problems:: "place wet soap in a cabinet.":
[Goal 1/4]

;; PDDL guess 1 for 'place wet soap in a cabinet.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-SoapBar-None-Cabinet

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'place wet soap in a cabinet.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-SoapBar-None-Cabinet

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'place wet soap in a cabinet.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-SoapBar-None-Cabinet

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'place wet soap in a cabinet.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-SoapBar-None-Cabinet

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))


propose_goals_for_problems:: now on 129 / 205
propose_goals_for_problems:: "move pen from desk to shelf.":
[Goal 1/4]

;; PDDL guess 1 for "move pen from desk to shelf."
;; Official goal name: pick_and_place_simple-Pen-None-Shelf
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PenType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "move pen from desk to shelf."
;; Official goal name: pick_and_place_simple-Pencil-None-Shelf
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PencilType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "move pen from desk to shelf."
;; Official goal name: pick_and_place_simple-Pencil-None-SideTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PencilType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "move pen from desk to shelf."
;; Official goal name: pick_and_place_simple-Pencil-None-DeskType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PencilType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
            )
    )))

propose_goals_for_problems:: now on 130 / 205
propose_goals_for_problems:: "move a book into a cabinet.":
[Goal 1/4]

;; PDDL guess 1 for "move a book into a cabinet."
;; Official goal name: pick_and_place_simple-Book-None-CabinetType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BookType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 2/4]

;; PDDL guess 2 for "move a book into a cabinet."
;; Official goal name: pick_and_place_simple-Notebook-None-CabinetType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o NotebookType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 3/4]

;; PDDL guess 3 for "move a book into a cabinet."
;; Official goal name: pick_and_place_simple-Magazine-None-CabinetType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MagazineType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 4/4]

;; PDDL guess 4 for "move a book into a cabinet."
;; Official goal name: pick_and_place_simple-Sketchbook-None-CabinetType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SketchbookType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
)))

propose_goals_for_problems:: now on 131 / 205
propose_goals_for_problems:: "pick up a smartphone , turn on a lamp.":
[Goal 1/4]

;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'
;; Simplified Goal: 
look_at_obj_in_light-CellPhone-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CellPhoneType)
                (holds ?a ?o)
            )
    ))))))

[Goal 2/4]

;; PDDL guess 2 for 'pick up a smartphone , turn on a lamp.'
;; Simplified Goal: 
look_at_obj_in_light-CellPhone-None-Kettle

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot KettleType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CellPhoneType)
                (holds ?a ?o)
            )
    ))))))

[Goal 3/4]

;; PDDL guess 3 for 'pick up a smartphone , turn on a lamp.'
;; Simplified Goal: 
look_at_obj_in_light-CellPhone-None-BedType

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot BedType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CellPhoneType)
                (holds ?a ?o)
            )
    ))))))

[Goal 4/4]

;; PDDL guess 4 for 'pick up a smartphone , turn on a lamp.'
;; Simplified Goal: 
look_at_obj_in_light-CellPhone-None-TelevisionType

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot TelevisionType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CellPhoneType)
                (holds ?a ?o)
            )
    ))))))

propose_goals_for_problems:: now on 132 / 205
propose_goals_for_problems:: "put a chilled slice of lettuce on the counter.":
[Goal 1/4]

;; PDDL guess 1 for "put a chilled slice of lettuce on the counter."
;; Official goal name: pick_cool_then_place_in_recep-LettuceSliced-None-CounterTop
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a chilled slice of lettuce on the counter."
;; Official goal name: pick_cool_then_place_in_recep-BreadType-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a chilled slice of lettuce on the counter."
;; Official goal name: pick_cool_then_place_in_recep-TomatoType-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a chilled slice of lettuce on the counter."
;; Official goal name: pick_cool_then_place_in_recep-AppleType-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 133 / 205
propose_goals_for_problems:: "move the cd that ' s on top of the desk to on top of the dresser.":
[Goal 1/4]

;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'
;; Official goal name: pick_and_place_simple-CD-None-Dresser
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CDType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'move the cd that ' s on top of the desk to on top of the dresser.'
;; Official goal name: pick_and_place_simple-DVD-None-Dresser
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CDType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'move the cd that ' s on top of the desk to on top of the dresser.'
;; Official goal name: pick_and_place_simple-BluRay-None-Dresser
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CDType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'move the cd that ' s on top of the desk to on top of the dresser.'
;; Official goal name: pick_and_place_simple-Vinyl-None-Dresser
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CDType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r) 
            )
    )))

propose_goals_for_problems:: now on 134 / 205
propose_goals_for_problems:: "put a cleaned fork on the table.":
[Goal 1/4]

;; PDDL guess 1 for 'put a cleaned fork on the table.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-Fork-None-DiningTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ForkType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'put a cleaned fork on the table.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-Fork-None-DiningTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ForkType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'put a cleaned fork on the table.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-Fork-None-DiningTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ForkType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'put a cleaned fork on the table.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-Fork-None-DiningTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ForkType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))


propose_goals_for_problems:: now on 135 / 205
propose_goals_for_problems:: "put a heated apple in the fridge.":
[Goal 1/4]

;; PDDL guess 1 for "put a heated apple in the fridge."
;; Official goal name: pick_heat_then_place_in_recep-Apple-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a heated apple in the fridge."
;; Official goal name: pick_heat_then_place_in_recep-Apple-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a heated apple in the fridge."
;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a heated apple in the fridge."
;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 136 / 205
propose_goals_for_problems:: "put a heated tomato slice in the sink.":
[Goal 1/4]

;; PDDL guess 1 for "put a heated tomato slice in the sink."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a heated tomato slice in the sink."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a heated tomato slice in the sink."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a heated tomato slice in the sink."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 137 / 205
propose_goals_for_problems:: "put a chilled mug on the coffee maker.":
[Goal 1/4]

;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Mug-None-CoffeeMachine

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'put a chilled mug on the coffee maker.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Mug-None-CoffeeMachine

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'put a chilled mug on the coffee maker.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Mug-None-CoffeeMachine

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'put a chilled mug on the coffee maker.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Mug-None-CoffeeMachine

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

propose_goals_for_problems:: now on 138 / 205
propose_goals_for_problems:: "slice lettuce on the table with the knife.":
[Goal 1/4]

;; PDDL guess 1 for 'slice lettuce on the table with the knife.'
;; Simplified Goal: 
pick_and_place_simple-LettuceSliced-None-DiningTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'slice lettuce on the table with the knife.'
;; Simplified Goal: 
pick_and_place_simple-CabbageSliced-None-DiningTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CabbageType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'slice lettuce on the table with the knife.'
;; Simplified Goal: 
pick_and_place_simple-SpinachSliced-None-DiningTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpinachType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'slice lettuce on the table with the knife.'
;; Simplified Goal: 
pick_and_place_simple-LettuceSliced-None-Desk

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))


propose_goals_for_problems:: now on 139 / 205
propose_goals_for_problems:: "put heated egg on kitchen table.":
[Goal 1/4]

;; PDDL guess 1 for 'put heated egg on kitchen table.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-DiningTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'put heated egg on kitchen table.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-DiningTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'put heated egg on kitchen table.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-DiningTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'put heated egg on kitchen table.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-DiningTable

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

propose_goals_for_problems:: now on 140 / 205
propose_goals_for_problems:: "clean mug in sink and return to coffee maker.":
[Goal 1/4]

;; PDDL guess 1 for "clean mug in sink and return to coffee maker."
;; Official goal name: pick_clean_then_place_in_recep-Mug-None-CoffeeMachine
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "clean mug in sink and return to coffee maker."
;; Official goal name: pick_clean_then_place_in_recep-CupType-None-CoffeeMachine
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "clean mug in sink and return to coffee maker."
;; Official goal name: pick_clean_then_place_in_recep-MugType-None-CoffeeMachine
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "clean mug in sink and return to coffee maker."
;; Official goal name: pick_clean_then_place_in_recep-CupType-None-CoffeeMachine
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

propose_goals_for_problems:: now on 141 / 205
propose_goals_for_problems:: "to cool a tomato slice plus place it in the microwave.":
[Goal 1/4]

;; PDDL guess 1 for 'to cool a tomato slice plus place it in the microwave.'
;; Official goal name: pick_cool_then_place_in_recep-TomatoSliced-None-Microwave
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'to cool a tomato slice plus place it in the microwave.'
;; Official goal name: pick_cool_then_place_in_recep-TomatoType-None-MicrowaveType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'to cool a tomato slice plus place it in the microwave.'
;; Official goal name: pick_cool_then_place_in_recep-TomatoType-None-MicrowaveType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'to cool a tomato slice plus place it in the microwave.'
;; Official goal name: pick_cool_then_place_in_recep-TomatoType-None-MicrowaveType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

propose_goals_for_problems:: now on 142 / 205
propose_goals_for_problems:: "heat up mug , put mug in cabinet.":
[Goal 1/4]

;; PDDL guess 1 for 'heat up mug , put mug in cabinet.'
;; Goal name: pick_heat_then_place_in_recep-Mug-None-Cabinet
(:goal
        (exists (?r - receptacle) 
        (exists (?o - object) 
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType) 
                (inReceptacle ?o ?r) 
                (heatable ?o) 
                (isHot ?o)
            )
        )
    )
)

[Goal 2/4]

;; PDDL guess 2 for 'heat up mug , put mug in cabinet.'
;; Goal name: pick_heat_then_place_in_recep-Mug-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and
                (objectType ?o MugType)
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
            )
        )
    )
)

[Goal 3/4]

;; PDDL guess 3 for 'heat up mug , put mug in cabinet.'
;; Goal name: pick_heat_then_place_in_recep-Mug-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and
                (objectType ?o MugType)
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
            )
        )
    )
)

[Goal 4/4]

;; PDDL guess 4 for 'heat up mug , put mug in cabinet.'
;; Goal name: pick_heat_then_place_in_recep-Mug-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and
                (objectType ?o MugType)
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
            )
        )
    )
)

propose_goals_for_problems:: now on 143 / 205
propose_goals_for_problems:: "put a chilled egg on the counter.":
[Goal 1/4]

;; PDDL guess 1 for "put a chilled egg on the counter."
;; Official goal name: pick_cool_then_place_in_recep-Egg-None-CounterTop
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a chilled egg on the counter."
;; Official goal name: pick_cool_then_place_in_recep-AppleType-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a chilled egg on the counter."
;; Official goal name: pick_cool_then_place_in_recep-PotatoType-None-CounterTopType
 (:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a chilled egg on the counter."
;; Official goal name: pick_cool_then_place_in_recep-MugType-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

propose_goals_for_problems:: now on 144 / 205
propose_goals_for_problems:: "put a candle on a table.":
[Goal 1/4]

;; PDDL guess 1 for "put a candle on a table."
;; Official goal name: pick_and_place_simple-Candle-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CandleType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 2/4]

;; PDDL guess 2 for "put a candle on a table."
;; Official goal name: pick_and_place_simple-Candle-None-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CandleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 3/4]

;; PDDL guess 3 for "put a candle on a table."
;; Official goal name: pick_and_place_simple-Candle-None-CoffeeTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CandleType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 4/4]

;; PDDL guess 4 for "put a candle on a table."
;; Official goal name: pick_and_place_simple-Candle-None-DeskType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CandleType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
            )
)))

propose_goals_for_problems:: now on 145 / 205
propose_goals_for_problems:: "place a clean tomato on the counter.":
[Goal 1/4]

;; PDDL guess 1 for "place a clean tomato on the counter."
;; Official goal name: pick_then_place_in_recep-Tomato-None-CounterTop
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place a clean tomato on the counter."
;; Official goal name: pick_then_place_in_recep-Tomato-None-CounterTop
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place a clean tomato on the counter."
;; Official goal name: pick_then_place_in_recep-Tomato-None-CounterTop
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place a clean tomato on the counter."
;; Official goal name: pick_then_place_in_recep-Tomato-None-CounterTop
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

propose_goals_for_problems:: now on 146 / 205
propose_goals_for_problems:: "warm up an egg to put in the fridge.":
[Goal 1/4]

;; PDDL guess 1 for "warm up an egg to put in the fridge."
;; Official goal name: pick_heat_then_place_in_recep-Egg-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "warm up an egg to put in the fridge."
;; Official goal name: pick_heat_then_place_in_recep-Tomato-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "warm up an egg to put in the fridge."
;; Official goal name: pick_heat_then_place_in_recep-Potato-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "warm up an egg to put in the fridge."
;; Official goal name: pick_heat_then_place_in_recep-Ladle-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LadleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

propose_goals_for_problems:: now on 147 / 205
propose_goals_for_problems:: "return a washed spatula to a kitchen counter.":
[Goal 1/4]

;; PDDL guess 1 for "return a washed spatula to a kitchen counter."
;; Official goal name: pick_then_place_in_recep-ClothType-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ClothType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 2/4]

;; PDDL guess 2 for "return a washed spatula to a kitchen counter."
;; Official goal name: pick_then_place_in_recep-DishSpongeType-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o DishSpongeType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 3/4]

;; PDDL guess 3 for "return a washed spatula to a kitchen counter."
;; Official goal name: pick_then_place_in_recep-SpongeType-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpongeType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 4/4]

;; PDDL guess 4 for "return a washed spatula to a kitchen counter."
;; Official goal name: pick_then_place_in_recep-TowelType-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TowelType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
            )
)))

propose_goals_for_problems:: now on 148 / 205
propose_goals_for_problems:: "throw away a cooked slice of potato.":
[Goal 1/4]

;; PDDL guess 1 for "throw away a cooked slice of potato."
;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "throw away a cooked slice of potato."
;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-WasteBasketType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r WasteBasketType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "throw away a cooked slice of potato."
;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-DumpsterType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r DumpsterType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "throw away a cooked slice of potato."
;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-RecycleBinType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r RecycleBinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 149 / 205
propose_goals_for_problems:: "putting a hot apple in the sink.":
[Goal 1/4]

;; PDDL guess 1 for 'putting a hot apple in the sink.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'putting a hot apple in the sink.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'putting a hot apple in the sink.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 'putting a hot apple in the sink.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

propose_goals_for_problems:: now on 150 / 205
propose_goals_for_problems:: "examine a pen by the light of a floor lamp.":
[Goal 1/4]

;; PDDL guess 1 for 'examine a pen by the light of a floor lamp.'
;; Simplified Goal: 
look_at_obj_in_light-Pen-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PenType)
                (holds ?a ?o)
            )
    ))))))


[Goal 2/4]

;; PDDL guess 2 for 'examine a pen by the light of a floor lamp.'
;; Simplified Goal: 
look_at_obj_in_light-Pen-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PenType)
                (holds ?a ?o)
            )
    ))))))


[Goal 3/4]

;; PDDL guess 3 for 'examine a pen by the light of a floor lamp.'
;; Simplified Goal: 
look_at_obj_in_light-Pen-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PenType)
                (holds ?a ?o)
            )
    ))))))


[Goal 4/4]

;; PDDL guess 4 for 'examine a pen by the light of a floor lamp.'
;; Simplified Goal: 
look_at_obj_in_light-Pen-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PenType)
                (holds ?a ?o)
            )
    ))))))


propose_goals_for_problems:: now on 151 / 205
propose_goals_for_problems:: "place a washed kettle on a kitchen counter top.":
[Goal 1/4]

;; PDDL guess 1 for "place a washed kettle on a kitchen counter top."
;; Official goal name: pick_and_place_clean-Kettle-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KettleType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (isClean ?o)  
            )
)))

[Goal 2/4]

;; PDDL guess 2 for "place a washed kettle on a kitchen counter top."
;; Official goal name: pick_and_place_clean-Kettle-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KettleType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (isClean ?o)  
            )
)))

[Goal 3/4]

;; PDDL guess 3 for "place a washed kettle on a kitchen counter top."
;; Official goal name: pick_and_place_clean-Kettle-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KettleType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (isClean ?o)  
            )
)))

[Goal 4/4]

;; PDDL guess 4 for "place a washed kettle on a kitchen counter top."
;; Official goal name: pick_and_place_clean-Kettle-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KettleType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (isClean ?o)  
            )
)))

propose_goals_for_problems:: now on 152 / 205
propose_goals_for_problems:: "place a spray bottle on top of a toilet cistern.":
[Goal 1/4]

;; PDDL guess 1 for 'place a spray bottle on top of a toilet cistern.'
;; Official goal name: pick_and_place_simple-SprayBottleType-None-ToiletType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SprayBottleType) 
                (receptacleType ?r ToiletType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'place a spray bottle on top of a toilet cistern.'
;; Official goal name: pick_and_place_simple-SoapBottleType-None-ToiletType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBottleType) 
                (receptacleType ?r ToiletType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'place a spray bottle on top of a toilet cistern.'
;; Official goal name: pick_and_place_simple-SprayBottleType-None-BathtubBasinType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SprayBottleType) 
                (receptacleType ?r BathtubBasinType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'place a spray bottle on top of a toilet cistern.'
;; Official goal name: pick_and_place_simple-SoapBottleType-None-BathtubBasinType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBottleType) 
                (receptacleType ?r BathtubBasinType)
                (inReceptacle ?o ?r) 
            )
    )))

propose_goals_for_problems:: now on 153 / 205
propose_goals_for_problems:: "move a heated piece of apple from the refrigerator to the table.":
[Goal 1/4]

;; PDDL guess 1 for "move a heated piece of apple from the refrigerator to the table."
;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "move a heated piece of apple from the refrigerator to the table."
;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "move a heated piece of apple from the refrigerator to the table."
;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "move a heated piece of apple from the refrigerator to the table."
;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 154 / 205
propose_goals_for_problems:: "place a chilled piece of apple between the two tomatoes on the table.":
[Goal 1/4]

;; PDDL guess 1 for "place a chilled piece of apple between the two tomatoes on the table."
;; Official goal name: pick_then_place_in_recep-AppleSliced-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place a chilled piece of apple between the two tomatoes on the table."
;; Official goal name: pick_then_place_in_recep-AppleSliced-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place a chilled piece of apple between the two tomatoes on the table."
;; Official goal name: pick_then_place_in_recep-AppleSliced-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place a chilled piece of apple between the two tomatoes on the table."
;; Official goal name: pick_then_place_in_recep-AppleSliced-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 155 / 205
propose_goals_for_problems:: "pick up the pen from the dresser and turn the lamp on.":
[Goal 1/4]

;; PDDL guess 1 for 'pick up the pen from the dresser and turn the lamp on.'
;; Simplified Goal: 
look_at_obj_in_light-Pen-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PenType)
                (holds ?a ?o)
            )
    ))))))

[Goal 2/4]

;; PDDL guess 2 for 'pick up the pen from the dresser and turn the lamp on.'
;; Simplified Goal: 
look_at_obj_in_light-Pen-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PenType)
                (holds ?a ?o)
            )
    ))))))

[Goal 3/4]

;; PDDL guess 3 for 'pick up the pen from the dresser and turn the lamp on.'
;; Simplified Goal: 
look_at_obj_in_light-Pen-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PenType)
                (holds ?a ?o)
            )
    ))))))

[Goal 4/4]

;; PDDL guess 4 for 'pick up the pen from the dresser and turn the lamp on.'
;; Simplified Goal: 
look_at_obj_in_light-Pen-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PenType)
                (holds ?a ?o)
            )
    ))))))

propose_goals_for_problems:: now on 156 / 205
propose_goals_for_problems:: "move a rag from a cabinet to the sink.":
[Goal 1/4]

;; PDDL guess 1 for 'move a rag from a cabinet to the sink.'
;; Official goal name: pick_and_place_simple-Cloth-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ClothType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'move a rag from a cabinet to the sink.'
;; Official goal name: pick_and_place_simple-Towel-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TowelType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'move a rag from a cabinet to the sink.'
;; Official goal name: pick_and_place_simple-HandTowel-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o HandTowelType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'move a rag from a cabinet to the sink.'
;; Official goal name: pick_and_place_simple-PaperTowel-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PaperTowelType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r) 
            )
    )))

propose_goals_for_problems:: now on 157 / 205
propose_goals_for_problems:: "put a cooked potato in the trash can.":
[Goal 1/4]

;; PDDL guess 1 for "put a cooked potato in the trash can."
;; Official goal name: pick_heat_then_place_in_recep-Potato-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
    ))))

[Goal 2/4]

;; PDDL guess 2 for "put a cooked potato in the trash can."
;; Official goal name: pick_heat_then_place_in_recep-Potato-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
    ))))

[Goal 3/4]

;; PDDL guess 3 for "put a cooked potato in the trash can."
;; Official goal name: pick_heat_then_place_in_recep-Potato-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
    ))))

[Goal 4/4]

;; PDDL guess 4 for "put a cooked potato in the trash can."
;; Official goal name: pick_heat_then_place_in_recep-Potato-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
    ))))

propose_goals_for_problems:: now on 158 / 205
propose_goals_for_problems:: "put a heated slice of bred in a bin.":
[Goal 1/4]

;; PDDL guess 1 for "put a heated slice of bread in a bin."
;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a heated slice of bread in a bin."
;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-TrashCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r TrashCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a heated slice of bread in a bin."
;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-WasteBasket
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r WasteBasketType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a heated slice of bread in a bin."
;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-RecycleBin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r RecycleBinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 159 / 205
propose_goals_for_problems:: "pick up a credit card and turn a lamp on.":
[Goal 1/4]

;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'
;; Simplified Goal: 
look_at_obj_in_light-CreditCard-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CreditCardType)
                (holds ?a ?o)
            )
    ))))))


[Goal 2/4]

;; PDDL guess 2 for 'pick up a credit card and turn a lamp on.'
;; Simplified Goal: 
look_at_obj_in_light-CreditCard-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CreditCardType)
                (holds ?a ?o)
            )
    ))))))


[Goal 3/4]

;; PDDL guess 3 for 'pick up a credit card and turn a lamp on.'
;; Simplified Goal: 
look_at_obj_in_light-CreditCard-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CreditCardType)
                (holds ?a ?o)
            )
    ))))))


[Goal 4/4]

;; PDDL guess 4 for 'pick up a credit card and turn a lamp on.'
;; Simplified Goal: 
look_at_obj_in_light-CreditCard-None-FloorLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CreditCardType)
                (holds ?a ?o)
            )
    ))))))


propose_goals_for_problems:: now on 160 / 205
propose_goals_for_problems:: "put the heated cup on the shelf.":
[Goal 1/4]

;; PDDL guess 1 for 'put the heated cup on the shelf.'
;; Official goal name: pick_heat_then_place_in_recep-Mug-None-Shelf
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'put the heated cup on the shelf.'
;; Official goal name: pick_heat_then_place_in_recep-Mug-None-Shelf
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'put the heated cup on the shelf.'
;; Official goal name: pick_heat_then_place_in_recep-Mug-None-Shelf
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'put the heated cup on the shelf.'
;; Official goal name: pick_heat_then_place_in_recep-Mug-None-Shelf
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

propose_goals_for_problems:: now on 161 / 205
propose_goals_for_problems:: "turn on desk lamp with clock in hand.":
[Goal 1/4]

;; PDDL guess 1 for 'turn on desk lamp with clock in hand.'
;; Simplified Goal: 
look_at_obj_in_light-AlarmClock-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o AlarmClockType)
                (holds ?a ?o)
            )
    ))))))


[Goal 2/4]

;; PDDL guess 2 for 'turn on desk lamp with clock in hand.'
;; Simplified Goal: 
look_at_obj_in_light-Watch-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o WatchType)
                (holds ?a ?o)
            )
    ))))))


[Goal 3/4]

;; PDDL guess 3 for 'turn on desk lamp with clock in hand.'
;; Simplified Goal: 
look_at_obj_in_light-Clock-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o ClockType)
                (holds ?a ?o)
            )
    ))))))


[Goal 4/4]

;; PDDL guess 4 for 'turn on desk lamp with clock in hand.'
;; Simplified Goal: 
look_at_obj_in_light-Watch-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o WatchType)
                (holds ?a ?o)
            )
    ))))))


propose_goals_for_problems:: now on 162 / 205
propose_goals_for_problems:: "use the knife to cut the lettuce on the table.":
[Goal 1/4]

;; PDDL guess 1 for 'use the knife to cut the lettuce on the table.'
;; Simplified Goal: 
pick_and_place_simple-KnifeType-LettuceType-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'use the knife to cut the lettuce on the table.'
;; Simplified Goal: 
pick_and_place_simple-LettuceType-KnifeType-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'use the knife to cut the lettuce on the table.'
;; Simplified Goal: 
pick_and_place_simple-KnifeType-LettuceType-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'use the knife to cut the lettuce on the table.'
;; Simplified Goal: 
pick_and_place_simple-LettuceType-KnifeType-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
    )))

propose_goals_for_problems:: now on 163 / 205
propose_goals_for_problems:: "place a hot plate on top of the shelves in the corner of the kitchen.":
[Goal 1/4]

;; PDDL guess 1 for "place a hot plate on top of the shelves in the corner of the kitchen."
;; Official goal name: pick_heat_then_place_in_recep-Plate-None-Shelf
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlateType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place a hot plate on top of the shelves in the corner of the kitchen."
;; Official goal name: pick_heat_then_place_in_recep-Plate-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlateType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place a hot plate on top of the shelves in the corner of the kitchen."
;; Official goal name: pick_heat_then_place_in_recep-Plate-None-SideTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlateType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place a hot plate on top of the shelves in the corner of the kitchen."
;; Official goal name: pick_heat_then_place_in_recep-Plate-None-CounterTop
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlateType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

propose_goals_for_problems:: now on 164 / 205
propose_goals_for_problems:: "put a chilled head of lettuce on a black table.":
[Goal 1/4]

;; PDDL guess 1 for "put a chilled head of lettuce on a black table."
;; Official goal name: pick_cool_then_place_in_recep-Lettuce-None-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a chilled head of lettuce on a black table."
;; Official goal name: pick_cool_then_place_in_recep-Lettuce-None-CoffeeTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a chilled head of lettuce on a black table."
;; Official goal name: pick_cool_then_place_in_recep-Lettuce-None-SideTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a chilled head of lettuce on a black table."
;; Official goal name: pick_cool_then_place_in_recep-Lettuce-None-DeskType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
    )))

propose_goals_for_problems:: now on 165 / 205
propose_goals_for_problems:: "put washed tomato in fridge.":
[Goal 1/4]

;; PDDL guess 1 for "put washed tomato in fridge."
;; Official goal name: pick_clean_then_place_in_recep-Tomato-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put washed tomato in fridge."
;; Official goal name: pick_clean_then_place_in_recep-Tomato-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put washed tomato in fridge."
;; Official goal name: pick_clean_then_place_in_recep-Tomato-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put washed tomato in fridge."
;; Official goal name: pick_clean_then_place_in_recep-Tomato-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o)  
            )
    )))

propose_goals_for_problems:: now on 166 / 205
propose_goals_for_problems:: "place a clean knife in the large sink.":
[Goal 1/4]

;; PDDL guess 1 for "place a clean knife in the large sink."
;; Official goal name: pick_clean_then_place_in_recep-ButterKnife-None-CounterTop
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ButterKnifeType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place a clean knife in the large sink."
;; Official goal name: pick_clean_then_place_in_recep-KnifeType-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place a clean knife in the large sink."
;; Official goal name: pick_clean_then_place_in_recep-ButterKnife-None-SinkType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ButterKnifeType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place a clean knife in the large sink."
;; Official goal name: pick_clean_then_place_in_recep-KnifeType-None-SinkType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

propose_goals_for_problems:: now on 167 / 205
propose_goals_for_problems:: "to place an apple in the microwave and cut it into three slices.":
[Goal 1/4]

;; PDDL guess 1 for "to place an apple in the microwave and cut it into three slices."
;; Official goal name: pick_and_place_simple-AppleSliced-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "to place an apple in the microwave and cut it into three slices."
;; Official goal name: pick_and_place_simple-PearSliced-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PearType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "to place an apple in the microwave and cut it into three slices."
;; Official goal name: pick_and_place_simple-OrangeSliced-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o OrangeType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "to place an apple in the microwave and cut it into three slices."
;; Official goal name: pick_and_place_simple-MelonSliced-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MelonType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

propose_goals_for_problems:: now on 168 / 205
propose_goals_for_problems:: "put a cold apple in the microwave.":
[Goal 1/4]

;; PDDL guess 1 for "put a cold apple in the microwave."
;; Official goal name: pick_cool_then_place_in_recep-Apple-None-Microwave
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a cold apple in the microwave."
;; Official goal name: pick_cool_then_place_in_recep-PearType-None-Microwave
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PearType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a cold apple in the microwave."
;; Official goal name: pick_cool_then_place_in_recep-AppleSliced-None-Microwave
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleSliced) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a cold apple in the microwave."
;; Official goal name: pick_cool_then_place_in_recep-PearSliced-None-Microwave
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PearSliced) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

propose_goals_for_problems:: now on 169 / 205
propose_goals_for_problems:: "place a heated coffee mug in a coffeemaker.":
[Goal 1/4]

;; PDDL guess 1 for "place a heated coffee mug in a coffeemaker."
;; Simplified Goal: pick_heat_then_place_in_recep-Mug-None-CoffeeMachine
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place a heated coffee mug in a coffeemaker."
;; Simplified Goal: pick_heat_then_place_in_recep-Mug-None-CoffeeMachine
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place a heated coffee mug in a coffeemaker."
;; Simplified Goal: pick_heat_then_place_in_recep-Mug-None-CoffeeMachine
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place a heated coffee mug in a coffeemaker."
;; Simplified Goal: pick_heat_then_place_in_recep-Mug-None-CoffeeMachine
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

propose_goals_for_problems:: now on 170 / 205
propose_goals_for_problems:: "place a washed spoon in a drawer with the fork.":
[Goal 1/4]

;; PDDL guess 1 for 'place a washed spoon in a drawer with the fork.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-Spoon-None-Drawer

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpoonType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'place a washed spoon in a drawer with the fork.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-Spoon-None-Drawer

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpoonType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'place a washed spoon in a drawer with the fork.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-Spoon-None-Drawer

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpoonType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'place a washed spoon in a drawer with the fork.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-Spoon-None-Drawer

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpoonType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

propose_goals_for_problems:: now on 171 / 205
propose_goals_for_problems:: "put a clean fork in the drawer.":
[Goal 1/4]

;; PDDL guess 1 for 'put a clean fork in the drawer.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-Fork-None-Drawer

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ForkType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'put a clean fork in the drawer.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-Spoon-None-Drawer

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpoonType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'put a clean fork in the drawer.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-Knife-None-Drawer

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'put a clean fork in the drawer.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-Plate-None-Drawer

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlateType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

propose_goals_for_problems:: now on 172 / 205
propose_goals_for_problems:: "pick up the keys and then turn the lamp on behind the blue chair.":
[Goal 1/4]

;; PDDL guess 1 for "pick up the keys and then turn the lamp on behind the blue chair."
;; Official goal name: look_at_obj_in_light-KeyChain-None-FloorLamp
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o KeyChainType)
                (holds ?a ?o)
            )
    ))))))

[Goal 2/4]

;; PDDL guess 2 for "pick up the keys and then turn the lamp on behind the blue chair."
;; Official goal name: look_at_obj_in_light-KeyChain-None-FloorLamp
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o KeyChainType)
                (holds ?a ?o)
            )
    ))))))

[Goal 3/4]

;; PDDL guess 3 for "pick up the keys and then turn the lamp on behind the blue chair."
;; Official goal name: look_at_obj_in_light-KeyChain-None-FloorLamp
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o KeyChainType)
                (holds ?a ?o)
            )
    ))))))

[Goal 4/4]

;; PDDL guess 4 for "pick up the keys and then turn the lamp on behind the blue chair."
;; Official goal name: look_at_obj_in_light-KeyChain-None-FloorLamp
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o KeyChainType)
                (holds ?a ?o)
            )
    ))))))

propose_goals_for_problems:: now on 173 / 205
propose_goals_for_problems:: "place a cooked slice of potato in the sink.":
[Goal 1/4]

;; PDDL guess 1 for "place a cooked slice of potato in the sink."
;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place a cooked slice of potato in the sink."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place a cooked slice of potato in the sink."
;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-KitchenSinkType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r KitchenSinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place a cooked slice of potato in the sink."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-KitchenSinkType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r KitchenSinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 174 / 205
propose_goals_for_problems:: "place a heated cup inside the refrigerator.":
[Goal 1/4]

;; PDDL guess 1 for "place a heated cup inside the refrigerator."
;; Official goal name: pick_heat_then_place_in_recep-Cup-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place a heated cup inside the refrigerator."
;; Official goal name: pick_heat_then_place_in_recep-Cup-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place a heated cup inside the refrigerator."
;; Official goal name: pick_heat_then_place_in_recep-Cup-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place a heated cup inside the refrigerator."
;; Official goal name: pick_heat_then_place_in_recep-Cup-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

propose_goals_for_problems:: now on 175 / 205
propose_goals_for_problems:: "put a heated potato in the sink.":
[Goal 1/4]

;; PDDL guess 1 for 'put a heated potato in the sink.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'put a heated potato in the sink.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'put a heated potato in the sink.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'put a heated potato in the sink.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))


propose_goals_for_problems:: now on 176 / 205
propose_goals_for_problems:: "putting a cold potato slice in the microwave.":
[Goal 1/4]

;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'
;; Simplified Goal: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'putting a cold potato slice in the microwave.'
;; Simplified Goal: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'putting a cold potato slice in the microwave.'
;; Simplified Goal: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'putting a cold potato slice in the microwave.'
;; Simplified Goal: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


propose_goals_for_problems:: now on 177 / 205
propose_goals_for_problems:: "put a heated egg in the trash can.":
[Goal 1/4]

;; PDDL guess 1 for 'put a heated egg in the trash can.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-GarbageCan

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'put a heated egg in the trash can.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-GarbageCan

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'put a heated egg in the trash can.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-GarbageCan

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'put a heated egg in the trash can.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-GarbageCan

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

propose_goals_for_problems:: now on 178 / 205
propose_goals_for_problems:: "throw away a slice of heated tomato in the trash bin.":
[Goal 1/4]

;; PDDL guess 1 for 'throw away a slice of heated tomato in the trash bin.'
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'throw away a slice of heated tomato in the trash bin.'
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'throw away a slice of heated tomato in the trash bin.'
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'throw away a slice of heated tomato in the trash bin.'
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 179 / 205
propose_goals_for_problems:: "place a slice of tomato in the fridge.":
[Goal 1/4]

;; PDDL guess 1 for "place a slice of tomato in the fridge."
;; Official goal name: pick_and_place_simple-TomatoSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place a slice of tomato in the fridge."
;; Official goal name: pick_and_place_simple-AppleSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place a slice of tomato in the fridge."
;; Official goal name: pick_and_place_simple-CucumberSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CucumberType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place a slice of tomato in the fridge."
;; Official goal name: pick_and_place_simple-OrangeSliced-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o OrangeType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

propose_goals_for_problems:: now on 180 / 205
propose_goals_for_problems:: "to heat a tomato slice and place it in the sink.":
[Goal 1/4]

;; PDDL guess 1 for 'to heat a tomato slice and place it in the sink.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'to heat a tomato slice and place it in the sink.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'to heat a tomato slice and place it in the sink.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'to heat a tomato slice and place it in the sink.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


propose_goals_for_problems:: now on 181 / 205
propose_goals_for_problems:: "look at the pillow in the light.":
[Goal 1/4]

;; PDDL guess 1 for 'look at the pillow in the light.'
;; Simplified Goal: 
look_at_obj_in_light-Pillow-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PillowType)
                (holds ?a ?o)
            )
    ))))))


[Goal 2/4]

;; PDDL guess 2 for 'look at the pillow in the light.'
;; Simplified Goal: 
look_at_obj_in_light-Pillow-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PillowType)
                (holds ?a ?o)
            )
    ))))))


[Goal 3/4]

;; PDDL guess 3 for 'look at the pillow in the light.'
;; Simplified Goal: 
look_at_obj_in_light-Pillow-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PillowType)
                (holds ?a ?o)
            )
    ))))))


[Goal 4/4]

;; PDDL guess 4 for 'look at the pillow in the light.'
;; Simplified Goal: 
look_at_obj_in_light-Pillow-None-DeskLamp

(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PillowType)
                (holds ?a ?o)
            )
    ))))))


propose_goals_for_problems:: now on 182 / 205
propose_goals_for_problems:: "place a cooled pan down on the kitchen counter corner.":
[Goal 1/4]

;; PDDL guess 1 for "place a cooled pan down on the kitchen counter corner."
;; Official goal name: pick_cool_then_place_in_recep-PotType-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place a cooled pan down on the kitchen counter corner."
;; Official goal name: pick_cool_then_place_in_recep-PlateType-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlateType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place a cooled pan down on the kitchen counter corner."
;; Official goal name: pick_cool_then_place_in_recep-BowlType-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place a cooled pan down on the kitchen counter corner."
;; Official goal name: pick_cool_then_place_in_recep-SpoonType-None-CounterTopType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpoonType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
    )))

propose_goals_for_problems:: now on 183 / 205
propose_goals_for_problems:: "slice the bread , cook a slice put it on the table.":
[Goal 1/4]

;; PDDL guess 1 for "slice the bread , cook a slice put it on the table."
;; Official goal name: pick_heat_then_place_in_recep-BreadSlice-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "slice the bread , cook a slice put it on the table."
;; Official goal name: pick_heat_then_place_in_recep-CakeSlice-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CakeType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "slice the bread , cook a slice put it on the table."
;; Official goal name: pick_heat_then_place_in_recep-PizzaSlice-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PizzaType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "slice the bread , cook a slice put it on the table."
;; Official goal name: pick_heat_then_place_in_recep-PieSlice-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PieType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 184 / 205
propose_goals_for_problems:: "put a heated slice of tomato on the table.":
[Goal 1/4]

;; PDDL guess 1 for "put a heated slice of tomato on the table."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-DiningTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a heated slice of tomato on the table."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-CoffeeTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a heated slice of tomato on the table."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-KitchenTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r KitchenTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a heated slice of tomato on the table."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-SofaType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 185 / 205
propose_goals_for_problems:: "to cool an apple piece as well as place it in the microwave.":
[Goal 1/4]

;; PDDL guess 1 for 'to cool an apple piece as well as place it in the microwave.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-AppleSliced-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'to cool an apple piece as well as place it in the microwave.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-AppleSliced-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'to cool an apple piece as well as place it in the microwave.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-AppleSliced-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'to cool an apple piece as well as place it in the microwave.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-AppleSliced-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


propose_goals_for_problems:: now on 186 / 205
propose_goals_for_problems:: "put a clean bar of soap in the trash can.":
[Goal 1/4]

;; PDDL guess 1 for "put a clean bar of soap in the trash can."
;; Official goal name: pick_clean_then_place_in_recep-SoapBar-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
)))

[Goal 2/4]

;; PDDL guess 2 for "put a clean bar of soap in the trash can."
;; Official goal name: pick_clean_then_place_in_recep-DishSponge-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o DishSpongeType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
)))

[Goal 3/4]

;; PDDL guess 3 for "put a clean bar of soap in the trash can."
;; Official goal name: pick_clean_then_place_in_recep-ClothType-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ClothType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
)))

[Goal 4/4]

;; PDDL guess 4 for "put a clean bar of soap in the trash can."
;; Official goal name: pick_clean_then_place_in_recep-PaperTowel-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PaperTowelType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
)))

propose_goals_for_problems:: now on 187 / 205
propose_goals_for_problems:: "to put an empty roll on the toilet paper holder on the wall.":
[Goal 1/4]

;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'
;; Simplified Goal: pick_and_place_simple-ToiletPaperRoll-None-ToiletPaperHanger

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ToiletPaperRollType) 
                (receptacleType ?r ToiletPaperHangerType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'to put an empty roll on the toilet paper holder on the wall.'
;; Simplified Goal: pick_and_place_simple-ToiletPaperRoll-None-ToiletPaperHanger

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ToiletPaperRollType) 
                (receptacleType ?r ToiletPaperHangerType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'to put an empty roll on the toilet paper holder on the wall.'
;; Simplified Goal: pick_and_place_simple-ToiletPaperRoll-None-ToiletPaperHanger

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ToiletPaperRollType) 
                (receptacleType ?r ToiletPaperHangerType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'to put an empty roll on the toilet paper holder on the wall.'
;; Simplified Goal: pick_and_place_simple-ToiletPaperRoll-None-ToiletPaperHanger

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ToiletPaperRollType) 
                (receptacleType ?r ToiletPaperHangerType)
                (inReceptacle ?o ?r) 
            )
    )))

propose_goals_for_problems:: now on 188 / 205
propose_goals_for_problems:: "turn on the lamp on the desk while holding the bowl.":
[Goal 1/4]

;; PDDL guess 1 for "turn on the lamp on the desk while holding the bowl."
;; Official goal name: look_at_obj_in_light-Bowl-None-DeskLamp
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BowlType)
                (holds ?a ?o)
            )
    ))))))

[Goal 2/4]

;; PDDL guess 2 for "turn on the lamp on the desk while holding the bowl."
;; Official goal name: look_at_obj_in_light-Bowl-None-TableLampType
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot TableLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BowlType)
                (holds ?a ?o)
            )
    ))))))

[Goal 3/4]

;; PDDL guess 3 for "turn on the lamp on the desk while holding the bowl."
;; Official goal name: toggle_and_say_message_desk-lamp_on_in_the_kitchen-lamp_room-BowlType
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectType ?o BowlType)
                (holds ?a ?o)
            )
    )))))

[Goal 4/4]

;; PDDL guess 4 for "turn on the lamp on the desk while holding the bowl."
;; Official goal name: toggle_and_say_message_desk-lamp_on_in_the_living-room-BowlType
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectType ?o BowlType)
                (holds ?a ?o)
            )
    )))))

propose_goals_for_problems:: now on 189 / 205
propose_goals_for_problems:: "place a chilled potato slice inside the microwave.":
[Goal 1/4]

;; PDDL guess 1 for "place a chilled potato slice inside the microwave."
;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place a chilled potato slice inside the microwave."
;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place a chilled potato slice inside the microwave."
;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place a chilled potato slice inside the microwave."
;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 190 / 205
propose_goals_for_problems:: "put a microwaved slice of bread on the counter by the stove top.":
[Goal 1/4]

;; PDDL guess 1 for 'put a microwaved slice of bread on the counter by the stove top.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-CounterTop

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'put a microwaved slice of bread on the counter by the stove top.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-CounterTop

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )
    ))


[Goal 3/4]

;; PDDL guess 3 for 'put a microwaved slice of bread on the counter by the stove top.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-CounterTop

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


[Goal 4/4]

;; PDDL guess 4 for 'put a microwaved slice of bread on the counter by the stove top.'
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-CounterTop

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))


propose_goals_for_problems:: now on 191 / 205
propose_goals_for_problems:: "to cool a slice of potato and place it on the table.":
[Goal 1/4]

;; PDDL guess 1 for 'to cool a slice of potato and place it on the table.'
;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'to cool a slice of potato and place it on the table.'
;; Official goal name: pick_cool_then_place_in_recep-AppleSliced-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'to cool a slice of potato and place it on the table.'
;; Official goal name: pick_cool_then_place_in_recep-PearSliced-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PearType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'to cool a slice of potato and place it on the table.'
;; Official goal name: pick_cool_then_place_in_recep-BananaSliced-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BananaType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 192 / 205
propose_goals_for_problems:: "put a microwaved tomato slice on the counter.":
[Goal 1/4]

;; PDDL guess 1 for "put a microwaved tomato slice on the counter."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-DiningTable
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a microwaved tomato slice on the counter."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-DiningRoomTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningRoomTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a microwaved tomato slice on the counter."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-KitchenTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r KitchenTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a microwaved tomato slice on the counter."
;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-IslandTableType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r IslandTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 193 / 205
propose_goals_for_problems:: "put the tomato in the microwave.":
[Goal 1/4]

;; PDDL guess 1 for 'put the tomato in the microwave.'
;; Simplified Goal: 
pick_and_place_simple-Tomato-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
            )
    )))


[Goal 2/4]

;; PDDL guess 2 for 'put the tomato in the microwave.'
;; Simplified Goal: 
pick_and_place_simple-Tomato-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
            )
    )))


[Goal 3/4]

;; PDDL guess 3 for 'put the tomato in the microwave.'
;; Simplified Goal: 
pick_and_place_simple-Tomato-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'put the tomato in the microwave.'
;; Simplified Goal: 
pick_and_place_simple-Tomato-None-Microwave

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
            )
    )))

propose_goals_for_problems:: now on 194 / 205
propose_goals_for_problems:: "move the plunger from next to the toilet to the cupboard under the sink.":
[Goal 1/4]

;; PDDL guess 1 for 'move the plunger from next to the toilet to the cupboard under the sink.'
;; Official goal name: pick_and_place_simple-Plunger-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlungerType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'move the plunger from next to the toilet to the cupboard under the sink.'
;; Official goal name: pick_and_place_simple-Plunger-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlungerType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'move the plunger from next to the toilet to the cupboard under the sink.'
;; Official goal name: pick_and_place_simple-Plunger-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlungerType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'move the plunger from next to the toilet to the cupboard under the sink.'
;; Official goal name: pick_and_place_simple-Plunger-None-Cabinet
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlungerType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
    )))

propose_goals_for_problems:: now on 195 / 205
propose_goals_for_problems:: "turn a lamp on with a bowl in hand.":
[Goal 1/4]

;; PDDL guess 1 for "turn a lamp on with a bowl in hand."
;; Official goal name: look_at_obj_in_light-Bowl-None-DeskLamp
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BowlType)
                (holds ?a ?o)
            )
    ))))))

[Goal 2/4]

;; PDDL guess 2 for "turn a lamp on with a bowl in hand."
;; Official goal name: look_at_obj_in_light-Bowl-None-DeskLamp
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BowlType)
                (holds ?a ?o)
            )
    ))))))

[Goal 3/4]

;; PDDL guess 3 for "turn a lamp on with a bowl in hand."
;; Official goal name: look_at_obj_in_light-Bowl-None-DeskLamp
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BowlType)
                (holds ?a ?o)
            )
    ))))))

[Goal 4/4]

;; PDDL guess 4 for "turn a lamp on with a bowl in hand."
;; Official goal name: look_at_obj_in_light-Bowl-None-DeskLamp
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BowlType)
                (holds ?a ?o)
            )
    ))))))

propose_goals_for_problems:: now on 196 / 205
propose_goals_for_problems:: "put the chilled mug in the cabinet.":
[Goal 1/4]

;; PDDL guess 1 for 'put the chilled mug in the cabinet.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Mug-None-Cabinet

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'put the chilled mug in the cabinet.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Mug-None-Cabinet

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'put the chilled mug in the cabinet.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Mug-None-Cabinet

(:goal 
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'put the chilled mug in the cabinet.'
;; Simplified Goal: 
pick_cool_then_place_in_recep-Mug-None-Cabinet

(:goal 
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

propose_goals_for_problems:: now on 197 / 205
propose_goals_for_problems:: "chill bottle in refrigerator , throw in trash can to front left of paper towels.":
[Goal 1/4]

;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'
;; Official goal name: pick_cool_then_place_in_recep-WineBottle-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o WineBottleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'
;; Official goal name: pick_cool_then_place_in_recep-BeerBottle-None-WasteBasket
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BeerBottleType) 
                (receptacleType ?r WasteBasketType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'
;; Official goal name: pick_cool_then_place_in_recep-SodaCan-None-GarbageCan
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SodaCanType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'
;; Official goal name: pick_cool_then_place_in_recep-WaterBottle-None-WasteBasket
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o WaterBottleType) 
                (receptacleType ?r WasteBasketType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

propose_goals_for_problems:: now on 198 / 205
propose_goals_for_problems:: "put the book in the desk cabinet.":
[Goal 1/4]

;; PDDL guess 1 for "put the book in the desk cabinet."
;; Official goal name: pick_and_place_simple-Book-None-DeskType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BookType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 2/4]

;; PDDL guess 2 for "put the book in the desk cabinet."
;; Official goal name: pick_and_place_simple-Painting-None-DeskType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PaintingType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 3/4]

;; PDDL guess 3 for "put the book in the desk cabinet."
;; Official goal name: pick_and_place_simple-CD-None-DeskType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CDType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 4/4]

;; PDDL guess 4 for "put the book in the desk cabinet."
;; Official goal name: pick_and_place_simple-PaperTowelRoll-None-DeskType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PaperTowelRollType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
            )
)))

propose_goals_for_problems:: now on 199 / 205
propose_goals_for_problems:: "put a cleaned apple in the fridge.":
[Goal 1/4]

;; PDDL guess 1 for "put a cleaned apple in the fridge."
;; Official goal name: pick_clean_then_place_in_recep-Apple-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a cleaned apple in the fridge."
;; Official goal name: pick_clean_then_place_in_recep-Apple-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a cleaned apple in the fridge."
;; Official goal name: pick_clean_then_place_in_recep-Apple-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a cleaned apple in the fridge."
;; Official goal name: pick_clean_then_place_in_recep-Apple-None-Fridge
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

propose_goals_for_problems:: now on 200 / 205
propose_goals_for_problems:: "place a warm glass in the cabinet.":
[Goal 1/4]

;; PDDL guess 1 for "place a warm glass in the cabinet."
;; Official goal name: pick_heat_then_place_in_recep-Glass-None-CabinetType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o GlassType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
)))

[Goal 2/4]

;; PDDL guess 2 for "place a warm glass in the cabinet."
;; Official goal name: pick_heat_then_place_in_recep-Cup-None-CabinetType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
)))

[Goal 3/4]

;; PDDL guess 3 for "place a warm glass in the cabinet."
;; Official goal name: pick_heat_then_place_in_recep-TeaMug-None-CabinetType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TeaMugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
)))

[Goal 4/4]

;; PDDL guess 4 for "place a warm glass in the cabinet."
;; Official goal name: pick_heat_then_place_in_recep-CoffeeCup-None-CabinetType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CoffeeCupType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
)))

propose_goals_for_problems:: now on 201 / 205
propose_goals_for_problems:: "put a cleaned cloth in a drawer.":
[Goal 1/4]

;; PDDL guess 1 for "put a cleaned cloth in a drawer."
;; Official goal name: pick_clean_then_place_in_recep-Cloth-None-Drawer
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ClothType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "put a cleaned cloth in a drawer."
;; Official goal name: pick_clean_then_place_in_recep-TowelType-None-DrawerType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TowelType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "put a cleaned cloth in a drawer."
;; Official goal name: pick_clean_then_place_in_recep-DishSpongeType-None-DrawerType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o DishSpongeType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "put a cleaned cloth in a drawer."
;; Official goal name: pick_clean_then_place_in_recep-PillowType-None-DrawerType
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PillowType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

propose_goals_for_problems:: now on 202 / 205
propose_goals_for_problems:: "place a cold potato slice in the sink.":
[Goal 1/4]

;; PDDL guess 1 for "place a cold potato slice in the sink."
;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for "place a cold potato slice in the sink."
;; Official goal name: pick_cool_then_place_in_recep-CarrotSliced-None-SinkBasin
;; Note: Since there are no specific object types mentioned in the goal, we can make multiple guesses by substituting different object types.
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CarrotType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for "place a cold potato slice in the sink."
;; Official goal name: pick_cool_then_place_in_recep-TomatoSliced-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for "place a cold potato slice in the sink."
;; Official goal name: pick_cool_then_place_in_recep-OnionSliced-None-SinkBasin
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o OnionType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

propose_goals_for_problems:: now on 203 / 205
propose_goals_for_problems:: "put a cd in the book shelf.":
[Goal 1/4]

;; PDDL guess 1 for "put a cd in the book shelf."
;; Official goal name: pick_and_place_simple-CD-None-Shelf
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CDType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 2/4]

;; PDDL guess 2 for "put a cd in the book shelf."
;; Official goal name: pick_and_place_simple-Album-None-Shelf
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AlbumType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 3/4]

;; PDDL guess 3 for "put a cd in the book shelf."
;; Official goal name: pick_and_place_simple-DVD-None-Shelf
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o DVDType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
)))

[Goal 4/4]

;; PDDL guess 4 for "put a cd in the book shelf."
;; Official goal name: pick_and_place_simple-Movie-None-Shelf
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MovieType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
)))

propose_goals_for_problems:: now on 204 / 205
propose_goals_for_problems:: "place wet soap on the edge of the bathtub.":
[Goal 1/4]

;; PDDL guess 1 for 'place wet soap on the edge of the bathtub.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-SoapBar-None-BathtubBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r BathtubBasinType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 2/4]

;; PDDL guess 2 for 'place wet soap on the edge of the bathtub.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-SoapBar-None-BathtubBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r BathtubBasinType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 3/4]

;; PDDL guess 3 for 'place wet soap on the edge of the bathtub.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-SoapBar-None-BathtubBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r BathtubBasinType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

[Goal 4/4]

;; PDDL guess 4 for 'place wet soap on the edge of the bathtub.'
;; Simplified Goal: 
pick_clean_then_place_in_recep-SoapBar-None-BathtubBasin

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r BathtubBasinType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

preprocess_goals: preprocessing 205 unsolved problems.
preprocess_goals: Preprocess goals top-K accuracy: 180 / 205 exact match to ground truth goal.
Logging preprocessed goals: generated/alfred_cot_250_filtered_2_912023/0/alfred_cot_250_filtered_2_912023_preprocessed_goals.csv

propose_plans_for_problems:: Now on problem 0 / 223 ... 
propose_plans_for_problems:: "examine an alarm clock by the light of a table lamp.":
[Plan 0 / 5]
  (GotoLocation tablelamp); (TurnOnObject tablelamp); (GotoLocation alarmclock); (ExamineObject alarmclock); 
[Plan 1 / 5]
  (GotoLocation table); (GotoLocation bedside); (TurnOnObject lamp); (GotoLocation alarmclock); (ExamineObject alarmclock); 
[Plan 2 / 5]
  (GotoLocation bed); (ExamineObject alarmclock); (GotoLocation desklamp); (TurnOnObject desklamp); 
[Plan 3 / 5]
  (GotoLocation table); (GotoLocation alarmclock); (ExamineObject alarmclock); (GotoLocation tablelamp); (TurnOnObject tablelamp); 
[Plan 4 / 5]
  (GotoLocation table); (PickupObject lamp); (TurnOnObject lamp); (GotoLocation desk); (PickupObject alarmclock); (ExamineObject alarmclock); (TurnOffObject lamp); 
propose_plans_for_problems:: Now on problem 1 / 223 ... 
propose_plans_for_problems:: "examine a laptop by the dim light of a living room.":
[Plan 0 / 5]
  (GotoLocation livingroom); (GotoLocation desk); (TurnOnObject lamp); (ExamineObject laptop lamp); 
[Plan 1 / 5]
  (GotoLocation livingroom); (TurnOnObject lamp); (GotoLocation desk); (PickupObject laptop); (GotoLocation livingroom); (ExamineObject laptop); 
[Plan 2 / 5]
  (GotoLocation livingroom); (PickupObject laptop); (GotoLocation dimlight); (ExamineObject laptop dimlight); 
[Plan 3 / 5]
  (GotoLocation livingroom); (TurnOnObject light); (GotoLocation laptop); (ExamineObject laptop); (TurnOffObject light); 
[Plan 4 / 5]
  (GotoLocation livingroom); (TurnOnLight dim); (GotoLocation bed); (PickupObject laptop); (ExamineObject laptop); 
propose_plans_for_problems:: Now on problem 2 / 223 ... 
propose_plans_for_problems:: "set the bowl on the coffee table.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject bowl); (GotoLocation coffeetable); (PutObject bowl coffeetable); 
[Plan 1 / 5]
  (GotoLocation kitchen); (PickupObject bowl); (GotoLocation coffeetable); (PutObject bowl coffeetable); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject bowl); (GotoLocation coffee table); (PutObject bowl coffee table); 
[Plan 3 / 5]
  (GotoLocation cabinet); (PickupObject bowl); (GotoLocation countertop); (PutObject bowl countertop); (GotoLocation coffeeTable); (PutObject bowl coffeeTable); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject bowl); (GotoLocation coffeetable); (PutObject bowl coffeetable); 
propose_plans_for_problems:: Now on problem 3 / 223 ... 
propose_plans_for_problems:: "take the box from the table , put it on the couch.":
[Plan 0 / 5]
  (GotoLocation diningtable); (PickupObject box); (GotoLocation couch); (PutObject box couch); 
[Plan 1 / 5]
  (GotoLocation table); (PickupObject box); (GotoLocation couch); (PutObject box couch); 
[Plan 2 / 5]
  (GotoLocation table); (PickupObject box); (GotoLocation couch); (PutObject box couch); 
[Plan 3 / 5]
  (GotoLocation table); (PickupObject box); (GotoLocation couch); (PutObject box couch); 
[Plan 4 / 5]
  (GotoLocation table); (PickupObject box); (GotoLocation couch); (PutObject box couch); 
propose_plans_for_problems:: Now on problem 4 / 223 ... 
propose_plans_for_problems:: "put keys on the dresser.":
[Plan 0 / 5]
  (GotoLocation kitchen); (PickupObject keys); (GotoLocation dresser); (PutObject keys dresser); 
[Plan 1 / 5]
  (GotoLocation entryway); (PickupObject keys); (GotoLocation bedroom); (PutObject keys dresser); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject keys); (GotoLocation dresser); (PutObject keys dresser); 
[Plan 3 / 5]
  (GotoLocation entryway); (PickupObject keys); (GotoLocation dresser); (PutObject keys dresser); 
[Plan 4 / 5]
  (GotoLocation table); (PickupObject keys); (GotoLocation dresser); (PutObject keys dresser); 
propose_plans_for_problems:: Now on problem 5 / 223 ... 
propose_plans_for_problems:: "place a cooked egg in the sink.":
[Plan 0 / 5]
  (GotoLocation stove); (PickupObject egg); (CookObject egg stove); (GotoLocation sinkbasin); (PutObject egg sinkbasin); 
[Plan 1 / 5]
  (GotoLocation stove); (CookObject egg stove); (GotoLocation sink); (PutObject egg sink); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject egg); (GotoLocation stove); (CookObject egg stove); (GotoLocation sinkbasin); (PutObject egg sinkbasin); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject egg); (GotoLocation stove); (CookObject egg stove); (GotoLocation sinkbasin); (PutObject egg sinkbasin); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject pan); (GotoLocation stove); (HeatObject pan stove); (GotoLocation countertop); (PutObject pan countertop); (GotoLocation fridge); (PickupObject egg); (GotoLocation sink); (PutObject egg sink); 
propose_plans_for_problems:: Now on problem 6 / 223 ... 
propose_plans_for_problems:: "grab the pen from the table , turn on the floor lamp.":
[Plan 0 / 5]
  (GotoLocation table); (PickupObject pen); (GotoLocation floorlamp); (TurnOnObject floorlamp); 
[Plan 1 / 5]
  (GotoLocation table); (PickupObject pen); (GotoLocation floorlamp); (TurnOnObject floorlamp); 
[Plan 2 / 5]
  (GotoLocation table); (PickupObject pen); (GotoLocation floorlamp); (RestartObject floorlamp); 
[Plan 3 / 5]
  (GotoLocation table); (PickupObject pen); (GotoLocation floorlamp); (RestartObject floorlamp); 
[Plan 4 / 5]
  (GotoLocation diningtable); (PickupObject pen); (GotoLocation floorlamp); (TurnOnObject floorlamp); 
propose_plans_for_problems:: Now on problem 7 / 223 ... 
propose_plans_for_problems:: "put a clean spatula on the table.":
[Plan 0 / 5]
  (GotoLocation sink); (PickupObject spatula); (GotoLocation table); (PutObject spatula table); 
[Plan 1 / 5]
  (GotoLocation sink); (PickupObject spatula); (GotoLocation diningtable); (PutObject spatula diningtable); 
[Plan 2 / 5]
  (GotoLocation drawer); (PickupObject spatula); (GotoLocation table); (PutObject spatula table); 
[Plan 3 / 5]
  (GotoLocation drawer); (PickupObject spatula); (GotoLocation sink); (WashObject spatula); (GotoLocation diningtable); (PutObject spatula diningtable); 
[Plan 4 / 5]
  (GotoLocation sink); (PickupObject spatula); (GotoLocation table); (PutObject spatula table); 
propose_plans_for_problems:: Now on problem 8 / 223 ... 
propose_plans_for_problems:: "to cool a slice of lettuce and place it on the kitchen table.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation sink); (FillObject sinkbasin); (PutObject lettuce sinkbasin); (GotoLocation kitchenTable); (PutObject lettuce kitchenTable); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation diningtable); (PutObject lettuce diningtable); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation sink); (FillObject sinkbasin); (PutObject lettuce sinkbasin); (GotoLocation countertop); (PutObject lettuce countertop); (GotoLocation kitchentable); (PutObject lettuce kitchentable); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation countertop); (CoolObject lettuce); (GotoLocation kitchentable); (PutObject lettuce kitchentable); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation kitchen table); (PutObject lettuce kitchen table); 
propose_plans_for_problems:: Now on problem 9 / 223 ... 
propose_plans_for_problems:: "grab the watch on the coffee table , turn on the floor lamp in the corner.":
[Plan 0 / 5]
  (GotoLocation coffeetable); (PickupObject watch); (GotoLocation corner); (TurnOnObject floorlamp); 
[Plan 1 / 5]
  (GotoLocation coffeetable); (PickupObject watch); (GotoLocation corner); (TurnOnObject floorlamp); 
[Plan 2 / 5]
  (GotoLocation coffeetable); (PickupObject watch); (GotoLocation corner); (TurnOnObject floorlamp); 
[Plan 3 / 5]
  (GotoLocation coffeetable); (PickupObject watch); (GotoLocation corner); (TurnOnObject floorlamp); 
[Plan 4 / 5]
  (GotoLocation coffeetable); (PickupObject watch); (GotoLocation corner); (TurnOnObject floorlamp); 
propose_plans_for_problems:: Now on problem 10 / 223 ... 
propose_plans_for_problems:: "put a chilled piece of sliced lettuce in a green bin.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation countertop); (SliceObject lettuce); (GotoLocation greenbin); (PutObject lettuce greenbin); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation countertop); (GotoLocation greenbin); (PutObject lettuce greenbin); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (PutObject lettuce greenbin); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation countertop); (SliceObject lettuce); (GotoLocation greenbin); (PutObject lettuce greenbin); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation greenbin); (PutObject lettuce greenbin); 
propose_plans_for_problems:: Now on problem 11 / 223 ... 
propose_plans_for_problems:: "put a heated egg on the small black table.":
[Plan 0 / 5]
  (GotoLocation stove); (PickupObject egg); (HeatObject egg stove); (GotoLocation smallblacktable); (PutObject egg smallblacktable); 
[Plan 1 / 5]
  (GotoLocation pantry); (PickupObject egg); (GotoLocation stove); (HeatObject egg stove); (GotoLocation smallblacktable); (PutObject egg smallblacktable); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject egg); (GotoLocation stove); (HeatObject egg stove); (GotoLocation smallblacktable); (PutObject egg smallblacktable); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject egg); (GotoLocation microwave); (HeatObject egg microwave); (GotoLocation smallblacktable); (PutObject egg smallblacktable); 
[Plan 4 / 5]
  (GotoLocation stove); (PickupObject egg); (HeatObject egg stove); (GotoLocation smalltable); (PutObject egg smalltable); 
propose_plans_for_problems:: Now on problem 12 / 223 ... 
propose_plans_for_problems:: "drop a cooked egg in the sink.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject egg); (GotoLocation stove); (CookObject egg stove); (GotoLocation sinkbasin); (PutObject egg sinkbasin); 
[Plan 1 / 5]
  (GotoLocation stovetop); (PickupObject egg); (CookObject egg stovetop); (GotoLocation sinkbasin); (PutObject egg sinkbasin); 
[Plan 2 / 5]
  (GotoLocation stove); (PickupObject egg); (CookObject egg stove); (GotoLocation sinkbasin); (PutObject egg sinkbasin); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject egg); (GotoLocation sinkbasin); (PutObject egg sinkbasin); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject egg); (GotoLocation stove); (CookObject egg stove); (GotoLocation sinkbasin); (DropObject egg sinkbasin); 
propose_plans_for_problems:: Now on problem 13 / 223 ... 
propose_plans_for_problems:: "put a microwaved slice of apple in the sink.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation microwave); (MicrowaveObject apple microwave); (GotoLocation sinkbasin); (PutObject apple sinkbasin); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation microwave); (CookObject apple microwave); (GotoLocation sink); (PutObject apple sink); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation microwave); (MicrowaveObject apple microwave); (GotoLocation sink); (PutObject apple sink); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject apple); (GotoLocation microwave); (MicrowaveObject apple microwave); (GotoLocation sink); (PutObject apple sink); 
[Plan 4 / 5]
  (GotoLocation applebasket); (PickupObject apple); (GotoLocation microwave); (MicrowaveObject apple microwave); (GotoLocation sinkbasin); (PutObject apple sinkbasin); 
propose_plans_for_problems:: Now on problem 14 / 223 ... 
propose_plans_for_problems:: "put a cleaned spatula on the the counter.":
[Plan 0 / 5]
  (GotoLocation sink); (PickupObject spatula); (WashObject spatula); (GotoLocation countertop); (PutObject spatula countertop); 
[Plan 1 / 5]
  (GotoLocation sinkbasin); (PickupObject spatula); (GotoLocation countertop); (PutObject spatula countertop); 
[Plan 2 / 5]
  (GotoLocation sink); (PickupObject spatula); (GotoLocation countertop); (PutObject spatula countertop); 
[Plan 3 / 5]
  (GotoLocation sink); (CleanObject spatula); (GotoLocation countertop); (PutObject spatula countertop); 
[Plan 4 / 5]
  (GotoLocation sink); (CleanObject spatula); (GotoLocation countertop); (PutObject spatula countertop); 
propose_plans_for_problems:: Now on problem 15 / 223 ... 
propose_plans_for_problems:: "look at a striped pillow under a lit lamp.":
[Plan 0 / 5]
  (GotoLocation bed); (GotoLocation lamp); (TurnOnObject lamp); (GotoLocation pillow); (LookAtObject pillow); 
[Plan 1 / 5]
  (GotoLocation bed); (GotoLocation lamp); (TurnOnObject lamp); (GotoLocation bed); (LookAtObject pillow)
[Plan 2 / 5]
  (TurnOnObject lamp); (GotoLocation couch); (LookAtObject pillow); 
[Plan 3 / 5]
  (GotoLocation bed); (GotoLocation lamp); (LookAtObject pillow lamp); 
[Plan 4 / 5]
  (GotoLocation bed); (GotoLocation desklamp); (TurnOnObject desklamp); (GoToLocation bed); (LookAtObject pillow); 
propose_plans_for_problems:: Now on problem 16 / 223 ... 
propose_plans_for_problems:: "move a newspaper from a tv stand to a sofa.":
[Plan 0 / 5]
  (GotoLocation tvstand); (PickupObject newspaper); (GotoLocation sofa); (PutObject newspaper sofa); 
[Plan 1 / 5]
  (GotoLocation tvstand); (PickupObject newspaper); (GotoLocation sofa); (PutObject newspaper sofa); 
[Plan 2 / 5]
  (GotoLocation tvstand); (PickupObject newspaper); (GotoLocation sofa); (PutObject newspaper sofa); 
[Plan 3 / 5]
  (GotoLocation tvstand); (PickupObject newspaper); (GotoLocation sofa); (PutObject newspaper sofa); 
[Plan 4 / 5]
  (GotoLocation tvstand); (PickupObject newspaper); (GotoLocation sofa); (PutObject newspaper sofa); 
propose_plans_for_problems:: Now on problem 17 / 223 ... 
propose_plans_for_problems:: "slice bread , cook a slice , put it in the trash.":
[Plan 0 / 5]
  (GotoLocation cabinet); (PickupObject bread); (GotoLocation countertop); (SliceObject bread); (GotoLocation stove); (CookObject bread stove); (GotoLocation trash); (PutObject bread trash); 
[Plan 1 / 5]
  (GotoLocation pantry); (PickupObject bread); (GotoLocation countertop); (SliceObject bread); (GotoLocation stove); (CookObject bread stove); (GotoLocation trashcan); (PutObject bread trashcan); 
[Plan 2 / 5]
  (GotoLocation pantry); (PickupObject bread); (GotoLocation countertop); (SliceObject bread); (GotoLocation stovetop); (CookObject bread stovetop); (GotoLocation trashcan); (PutObject bread trashcan); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation cuttingboard); (SliceObject bread cuttingboard); (GotoLocation stove); (CookObject bread stove); (GotoLocation trash); (PutObject bread trash); 
[Plan 4 / 5]
  (GotoLocation cabinet); (PickupObject bread); (GotoLocation countertop); (SliceObject bread); (GotoLocation stove); (CookObject bread stove); (GotoLocation trashcan); (PutObject bread trashcan); 
propose_plans_for_problems:: Now on problem 18 / 223 ... 
propose_plans_for_problems:: "put the chilled tomato in the microwave.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation microwave); (PutObject tomato microwave); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation microwave); (PutObject tomato microwave); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation microwave); (PutObject tomato microwave); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation microwave); (PutObject tomato microwave); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation microwave); (PutObject tomato microwave); 
propose_plans_for_problems:: Now on problem 19 / 223 ... 
propose_plans_for_problems:: "put the clean tomato on the table.":
[Plan 0 / 5]
  (GotoLocation sink); (PickupObject tomato); (GotoLocation table); (PutObject tomato table); 
[Plan 1 / 5]
  (GotoLocation sink); (WashObject tomato sink); (GotoLocation diningtable); (PutObject tomato diningtable); 
[Plan 2 / 5]
  (GotoLocation sink); (PickupObject tomato); (GotoLocation table); (PutObject tomato table); 
[Plan 3 / 5]
  (GotoLocation sink); (PickupObject tomato); (GotoLocation diningtable); (PutObject tomato diningtable); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation diningtable); (PutObject tomato diningtable); 
propose_plans_for_problems:: Now on problem 20 / 223 ... 
propose_plans_for_problems:: "chill the tomato in the fridge then throw it away.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation fridge); (PutObject tomato fridge); (GoToLocation trashcan); (DropObject tomato); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation fridge); (PutObject tomato fridge); (GotoLocation trashcan); (ThrowAwayObject tomato); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation fridge); (PutObject tomato fridge); (GotoLocation trashcan); (PutObject tomato trashcan); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation fridge); (PutObject tomato fridge); (GotoLocation trashcan); (ThrowObject tomato trashcan); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation fridge); (PutObject tomato fridge); (GotoLocation trashcan); (DropObject tomato); 
propose_plans_for_problems:: Now on problem 21 / 223 ... 
propose_plans_for_problems:: "to heat a piece of apple and place it on the end of the table.":
[Plan 0 / 5]
  (GotoLocation sidetable); (PickupObject apple); (GotoLocation microwave); (HeatObject apple microwave); (GotoLocation diningtable); (PutObject apple diningtable); 
[Plan 1 / 5]
  (GotoLocation sidetable); (PickupObject apple); (GotoLocation oven); (HeatObject apple oven); (GotoLocation endtable); (PutObject apple endtable); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject apple); (GotoLocation oven); (BakeObject apple oven); (GotoLocation table); (PutObject apple table); 
[Plan 3 / 5]
  (GotoLocation oven); (PickupObject apple); (BakeObject apple oven); (GotoLocation diningtable); (PutObject apple diningtable); 
[Plan 4 / 5]
  (GotoLocation counter); (PickupObject apple); (GotoLocation microwave); (HeatObject apple microwave); (GotoLocation table); (PutObject apple table); 
propose_plans_for_problems:: Now on problem 22 / 223 ... 
propose_plans_for_problems:: "to chill a loaf of bread and put it on the counter.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject bread); (GotoLocation countertop); (PutObject bread countertop); 
[Plan 1 / 5]
  (GotoLocation pantry); (PickupObject bread); (GotoLocation fridge); (PutObject bread fridge); (GotoLocation countertop); (PutObject bread countertop); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject loafofbread); (GotoLocation counter); (ChillObject loafofbread fridge); (GotoLocation counter); (PutObject loafofbread counter); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject bread); (GotoLocation countertop); (PutObject bread countertop); 
[Plan 4 / 5]
  (GotoLocation refrigerator); (PickupObject loaf-of-bread); (GotoLocation countertop); (PutObject loaf-of-bread countertop); 
propose_plans_for_problems:: Now on problem 23 / 223 ... 
propose_plans_for_problems:: "cool a bread slice plus place it in the trash can.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation fridge); (CoolObject bread fridge); (GotoLocation trashcan); (PutObject bread trashcan); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject breadslice); (GotoLocation fridge); (CoolObject breadslice fridge); (GotoLocation trashcan); (PutObject breadslice trashcan); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject bread); (GotoLocation countertop); (CoolObject bread); (GotoLocation trashcan); (PutObject bread trashcan); 
[Plan 3 / 5]
  (GotoLocation breadbox); (PickupObject bread); (GotoLocation refrigerator); (PutObject bread refrigerator); (GotoLocation trashcan); (PutObject bread trashcan); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject bread); (GotoLocation countertop); (CoolObject bread fridge); (GotoLocation trashcan); (PutObject bread trashcan)
propose_plans_for_problems:: Now on problem 24 / 223 ... 
propose_plans_for_problems:: "carry a knife to cut the yellow apple in the fridge.":
[Plan 0 / 5]
  (GotoLocation cabinet); (PickupObject knife); (GotoLocation fridge); (PickupObject apple); (GotoLocation countertop); (CutObject apple knife); (PlaceObject apple countertop); 
[Plan 1 / 5]
  (GotoLocation knifeblock); (PickupObject knife); (GotoLocation fridge); (PickupObject apple); (GotoLocation countertop); (CutObject apple knife); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject knife); (GotoLocation fridge); (PickupObject apple); (CutObject apple knife); 
[Plan 3 / 5]
  (GotoLocation cabinet); (PickupObject knife); (GotoLocation fridge); (PickupObject apple); (GotoLocation countertop); (CutObject apple knife); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject knife); (GotoLocation countertop); (GotoLocation fridge); (PickupObject apple); (GotoLocation countertop); (CutObject apple knife); 
propose_plans_for_problems:: Now on problem 25 / 223 ... 
propose_plans_for_problems:: "put a cold potato in the garbage.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject potato); (PutObject potato garbage); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject potato); (GotoLocation garbage); (PutObject potato garbage); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject potato); (GoToLocation garbage); (PutObject potato garbage); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation fridge); (PutObject potato fridge); (GotoLocation garbage); (PutObject potato garbage); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject potato); (GotoLocation garbage); (PutObject potato garbage); 
propose_plans_for_problems:: Now on problem 26 / 223 ... 
propose_plans_for_problems:: "put a hot slice of bread in a bin.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation bin); (PutObject bread bin); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation toaster); (ToastObject bread toaster); (GotoLocation bin); (PutObject bread bin); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject breadslice); (HeatObject breadslice); (GotoLocation bin); (PutObject breadslice bin); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation toaster); (ToastObject bread toaster); (GotoLocation bin); (PutObject bread bin); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation toaster); (ToastObject bread toaster); (GotoLocation bin); (PutObject bread bin); 
propose_plans_for_problems:: Now on problem 27 / 223 ... 
propose_plans_for_problems:: "place a chilled mug in a coffee maker.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject mug); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject mug); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject mug); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject mug); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject mug); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
propose_plans_for_problems:: Now on problem 28 / 223 ... 
propose_plans_for_problems:: "put a slice of bread on a stand.":
[Plan 0 / 5]
  (GotoLocation cabinet); (PickupObject bread); (GotoLocation stand); (PutObject bread stand); 
[Plan 1 / 5]
  (GotoLocation cabinet); (PickupObject bread); (GotoLocation stand); (PutObject bread stand); 
[Plan 2 / 5]
  (GotoLocation table); (GotoLocation breadbasket); (PickupObject bread); (GotoLocation stand); (PutObject bread stand); 
[Plan 3 / 5]
  (GotoLocation cabinet); (PickupObject stand); (GotoLocation countertop); (PickupObject bread); (GotoLocation stand); (PutObject bread stand); 
[Plan 4 / 5]
  (GotoLocation counter); (PickupObject bread); (GotoLocation stand); (PutObject bread stand); 
propose_plans_for_problems:: Now on problem 29 / 223 ... 
propose_plans_for_problems:: "place a heated mug on a coffee maker.":
[Plan 0 / 5]
  (GotoLocation cupboard); (PickupObject mug); (GotoLocation microwave); (HeatObject mug microwave); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 1 / 5]
  (GotoLocation cabinet); (PickupObject mug); (GotoLocation microwave); (HeatObject mug microwave); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 2 / 5]
  (GotoLocation microwave); (PutObject mug microwave); (HeatObject mug microwave); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 3 / 5]
  (GotoLocation kitchen); (PickupObject mug); (GotoLocation microwave); (HeatObject mug microwave); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject mug); (GotoLocation microwave); (HeatObject mug microwave); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
propose_plans_for_problems:: Now on problem 30 / 223 ... 
propose_plans_for_problems:: "examine a notebook computer by the light of a lamp.":
[Plan 0 / 5]
  (GotoLocation desk); (PickupObject notebook); (GotoLocation lamp); (TurnOnObject lamp); (ExamineObject notebook); (TurnOffObject lamp); 
[Plan 1 / 5]
  (GotoLocation desk); (GotoLocation lamp); (RestartObject lamp); (GotoLocation desk); (PickupObject notebookcomputer); (GotoLocation lamp); (ExamineObject notebookcomputer lamp); 
[Plan 2 / 5]
  (GotoLocation desk); (TurnOnObject lamp); (GotoLocation bookshelf); (PickupObject notebook); (GotoLocation desk); (ExamineObject notebook); 
[Plan 3 / 5]
  (GotoLocation desk); (TurnOnObject lamp); (GotoLocation notebook); (TurnOnObject computer_screen lamp); 
[Plan 4 / 5]
  (GotoLocation desk); (PickupObject notebook); (GotoLocation lamp); (TurnOnObject lamp); (ExamineObject notebook lamp); 
propose_plans_for_problems:: Now on problem 31 / 223 ... 
propose_plans_for_problems:: "move a remote control to a chair.":
[Plan 0 / 5]
  (GotoLocation tvstand); (PickupObject remote); (GotoLocation chair); (PutObject remote chair); 
[Plan 1 / 5]
  (GotoLocation livingroom); (PickupObject remote); (GotoLocation chair); (PutObject remote chair); 
[Plan 2 / 5]
  (GotoLocation coffee_table); (PickupObject remote_control); (GotoLocation chair); (PutObject remote_control chair); 
[Plan 3 / 5]
  (GotoLocation coffeetable); (PickupObject remotecontrol); (GotoLocation chair); (PutObject remotecontrol chair); 
[Plan 4 / 5]
  (GotoLocation couch); (PickupObject remote); (GotoLocation chair); (PutObject remote chair); 
propose_plans_for_problems:: Now on problem 32 / 223 ... 
propose_plans_for_problems:: "to place a chilled mug in the coffee maker.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject mug); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject mug); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject mug); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject mug); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject mug); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
propose_plans_for_problems:: Now on problem 33 / 223 ... 
propose_plans_for_problems:: "put the chilled glass in the sink.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject glass); (GotoLocation fridge); (PickupObject ice); (PutObject ice glass); (GotoLocation sink); (PutObject glass sink); 
[Plan 1 / 5]
  (GotoLocation diningtable); (PickupObject glass); (GotoLocation fridge); (PickupObject chilled-glass); (GotoLocation sink); (PutObject chilled-glass sink)
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject glass); (GotoLocation fridge); (PutObject glass fridge); (GotoLocation sink); (PutObject glass sink); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject glass); (GotoLocation fridge); (PickupObject ice); (GotoLocation sink); (FillObject sink); (GotoLocation countertop); (PutObject ice glass); (PutObject glass sink); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject glass); (GotoLocation sink); (PutObject glass sink); 
propose_plans_for_problems:: Now on problem 34 / 223 ... 
propose_plans_for_problems:: "put a microwaved egg in the garbage.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject egg); (GotoLocation microwave); (MicrowaveObject egg microwave); (GotoLocation garbage); (PutObject egg garbage); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject egg); (GotoLocation microwave); (CookObject egg microwave); (GotoLocation garbage); (PutObject egg garbage); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject egg); (MicrowaveObject egg); (GotoLocation garbage); (PutObject egg garbage); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject egg); (GotoLocation microwave); (MicrowaveObject egg microwave); (GotoLocation garbage); (PutObject egg garbage); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject egg); (GotoLocation microwave); (MicrowaveObject egg microwave); (GotoLocation garbage); (PutObject egg garbage); 
propose_plans_for_problems:: Now on problem 35 / 223 ... 
propose_plans_for_problems:: "put a cold head of lettuce in the garbage.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation garbage); (PutObject lettuce garbage); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation garbage); (PutObject lettuce garbage); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation garbage); (PutObject lettuce garbage); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation garbage); (PutObject lettuce garbage); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation garbage); (PutObject lettuce garbage); 
propose_plans_for_problems:: Now on problem 36 / 223 ... 
propose_plans_for_problems:: "cool down the cup on the small black table.":
[Plan 0 / 5]
  (GotoLocation kitchen); (GotoLocation smallblacktable); (GotoLocation cabinet); (PickupObject cup); (GotoLocation refrigerator); (OpenObject refrigerator); (PutObject cup refrigerator); (CloseObject refrigerator); (GotoLocation smallblacktable); (PickupObject cup); (GotoLocation sink); (FillObject sink); (GotoLocation smallblacktable); (PutObject cup smallblacktable); 
[Plan 1 / 5]
  (GotoLocation smallblacktable); (PickupObject cup); (GotoLocation fridge); (PutObject cup fridge); (GotoLocation smallblacktable); (PickupObject cup); (GotoLocation sink); (FillObject sinkbasin); (PutObject cup sinkbasin); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject cup); (GotoLocation smallblacktable); (PutObject cup smallblacktable); (GotoLocation freezer); (CoolObject cup freezer); 
[Plan 3 / 5]
  (GotoLocation kitchen); (GotoLocation countertop); (PickupObject cup); (GotoLocation smallblacktable); (PutObject cup smallblacktable); (GotoLocation fridge); (OpenObject fridge); (PutObject cup fridge); (CloseObject fridge); 
[Plan 4 / 5]
  (GotoLocation sink); (FillObject sink); (GotoLocation countertop); (PickupObject cup); (GotoLocation smallblacktable); (PutObject cup smallblacktable); 
propose_plans_for_problems:: Now on problem 37 / 223 ... 
propose_plans_for_problems:: "remove the tomato from the fridge and cut it up on the table.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation diningtable); (PutObject tomato diningtable); (GotoLocation cabinet); (PickupObject knife); (GotoLocation diningtable); (CutObject tomato knife); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation diningtable); (PutObject tomato diningtable); (GotoLocation countertop); (CutObject tomato countertop); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation countertop); (PutObject tomato countertop); (GotoLocation cabinet); (PickupObject knife); (GotoLocation countertop); (CutObject tomato knife); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation diningtable); (PutObject tomato diningtable); (GotoLocation cabinet); (PickupObject knife); (GotoLocation diningtable); (CutObject tomato knife); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation table); (CutObject tomato); 
propose_plans_for_problems:: Now on problem 38 / 223 ... 
propose_plans_for_problems:: "place a clean pan on the electric cooker.":
[Plan 0 / 5]
  (GotoLocation sink); (PickupObject pan); (GotoLocation electriccooker); (PutObject pan electriccooker); 
[Plan 1 / 5]
  (GotoLocation sink); (PickupObject pan); (GotoLocation countertop); (PutObject pan countertop); (GotoLocation electriccooker); (PutObject pan electriccooker); 
[Plan 2 / 5]
  (GotoLocation sink); (FillObject sink); (GotoLocation cabinet); (PickupObject pan); (GotoLocation cooker); (PutObject pan cooker); 
[Plan 3 / 5]
  (GotoLocation cabinet); (PickupObject pan); (GotoLocation electriccooker); (PutObject pan electriccooker); 
[Plan 4 / 5]
  (GotoLocation cabinet); (PickupObject pan); (GotoLocation cookertop); (PutObject pan cookertop); 
propose_plans_for_problems:: Now on problem 39 / 223 ... 
propose_plans_for_problems:: "put a hot chunk of apple in the freezer.":
[Plan 0 / 5]
  (GotoLocation sidetable); (PickupObject apple); (GotoLocation oven); (BakeObject apple oven); (GotoLocation freezer); (PutObject apple freezer); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation oven); (BakeObject apple oven); (GotoLocation freezer); (PutObject apple freezer); 
[Plan 2 / 5]
  (GotoLocation oven); (PickupObject apple); (GotoLocation freezer); (PutObject apple freezer); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation oven); (BakeObject apple oven); (GotoLocation freezer); (PutObject apple freezer); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation oven); (BakeObject apple oven); (GotoLocation freezer); (PutObject apple freezer); 
propose_plans_for_problems:: Now on problem 40 / 223 ... 
propose_plans_for_problems:: "put the clean knife in the cabinet drawer.":
[Plan 0 / 5]
  (GotoLocation sink); (PickupObject knife); (GotoLocation cabinet); (PutObject knife cabinet); 
[Plan 1 / 5]
  (GotoLocation sink); (WashObject knife sink); (GotoLocation cabinet); (PutObject knife cabinet); 
[Plan 2 / 5]
  (GotoLocation dishwasher); (PickupObject knife); (GotoLocation cabinet); (OpenDrawer cabinetdrawer); (PutObject knife cabinetdrawer); 
[Plan 3 / 5]
  (GotoLocation sink); (PutObject knife sink); (GotoLocation cabinet); (PickupObject knife); (GotoLocation cabinet_drawer); (PutObject knife cabinet_drawer); 
[Plan 4 / 5]
  (GotoLocation sink); (PickupObject knife); (GotoLocation cabinet); (OpenObject drawer); (PutObject knife drawer); (CloseObject drawer); 
propose_plans_for_problems:: Now on problem 41 / 223 ... 
propose_plans_for_problems:: "put a clean bar of soap in a small green bin.":
[Plan 0 / 5]
  (GotoLocation bathroom); (PickupObject soap); (GotoLocation smallgreenbin); (PutObject soap smallgreenbin); 
[Plan 1 / 5]
  (GotoLocation bathroom); (PickupObject soap); (GotoLocation kitchen); (GotoLocation sink); (WashObject soap); (GotoLocation cabinet); (PickupObject bin); (GotoLocation bathroom); (PutObject soap bin); 
[Plan 2 / 5]
  (GotoLocation bathroom); (GotoLocation cabinet); (PickupObject soap); (GotoLocation bin); (PutObject soap bin); 
[Plan 3 / 5]
  (GotoLocation bathroom); (PickupObject soap); (GotoLocation bin); (PutObject soap bin); 
[Plan 4 / 5]
  (GotoLocation bathroomshelf); (PickupObject soap); (GotoLocation smallgreenbin); (PutObject soap smallgreenbin); 
propose_plans_for_problems:: Now on problem 42 / 223 ... 
propose_plans_for_problems:: "place a cleaned head of lettuce on a small side table.":
[Plan 0 / 5]
  (GotoLocation kitchen); (PickupObject lettuce); (GotoLocation sinkbasin); (FillObject sinkbasin); (WashObject lettuce sinkbasin); (GotoLocation sidetable); (PutObject lettuce sidetable); 
[Plan 1 / 5]
  (GotoLocation refrigerator); (PickupObject lettuce); (GotoLocation sink); (CleanObject lettuce); (GotoLocation sidetable); (PutObject lettuce sidetable); 
[Plan 2 / 5]
  (GotoLocation kitchen); (PickupObject lettuce); (GotoLocation sink); (WashObject lettuce); (GotoLocation sidetable); (PutObject lettuce sidetable); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation sink); (CleanObject lettuce sink); (GotoLocation sidetable); (PutObject lettuce sidetable); 
[Plan 4 / 5]
  (GotoLocation kitchen); (PickupObject lettuce); (GotoLocation sink); (CleanObject lettuce); (GotoLocation sidetable); (PutObject lettuce sidetable); 
propose_plans_for_problems:: Now on problem 43 / 223 ... 
propose_plans_for_problems:: "move the remote from the table to a chair.":
[Plan 0 / 5]
  (GotoLocation table); (PickupObject remote); (GotoLocation chair); (PutObject remote chair); 
[Plan 1 / 5]
  (GotoLocation table); (PickupObject remote); (GotoLocation chair); (PutObject remote chair); 
[Plan 2 / 5]
  (GotoLocation table); (PickupObject remote); (GotoLocation chair); (PutObject remote chair); 
[Plan 3 / 5]
  (GotoLocation table); (PickupObject remote); (GotoLocation chair); (PutObject remote chair); 
[Plan 4 / 5]
  (GotoLocation table); (PickupObject remote); (GotoLocation chair); (PutObject remote chair); 
propose_plans_for_problems:: Now on problem 44 / 223 ... 
propose_plans_for_problems:: "put a chilled tomato slice on the table.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation countertop); (SliceObject tomato); (GotoLocation diningtable); (PutObject tomato diningtable); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation diningtable); (PutObject tomato diningtable); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation countertop); (SliceObject tomato); (GotoLocation diningtable); (PutObject tomato diningtable); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation countertop); (SliceObject tomato); (GotoLocation table); (PutObject tomato table); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation table); (PutObject tomato table); 
propose_plans_for_problems:: Now on problem 45 / 223 ... 
propose_plans_for_problems:: "put a warm potato in the sink.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation oven); (BakeObject potato oven); (GotoLocation sinkbasin); (PutObject potato sinkbasin); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation sinkbasin); (PutObject potato sinkbasin); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject potato); (WarmObject potato); (GotoLocation sinkbasin); (PutObject potato sinkbasin); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation oven); (BakeObject potato oven); (GotoLocation sinkbasin); (PutObject potato sinkbasin); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject potato); (BakeObject potato oven); (GotoLocation sink); (PutObject potato sink); 
propose_plans_for_problems:: Now on problem 46 / 223 ... 
propose_plans_for_problems:: "put a clean head of lettuce on the table.":
[Plan 0 / 5]
  (GotoLocation cabinet); (PickupObject lettuce); (GotoLocation diningtable); (PutObject lettuce diningtable); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation diningtable); (PutObject lettuce diningtable); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation diningtable); (PutObject lettuce diningtable); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation diningtable); (PutObject lettuce diningtable); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation diningtable); (PutObject lettuce diningtable); 
propose_plans_for_problems:: Now on problem 47 / 223 ... 
propose_plans_for_problems:: "place a rinsed towel inside a tub.":
[Plan 0 / 5]
  (GotoLocation sink); (FillObject sink); (GotoLocation towelrack); (PickupObject towel); (GotoLocation tub); (PutObject towel tub); 
[Plan 1 / 5]
  (GotoLocation laundryroom); (PickupObject towel); (GotoLocation bathroom); (PutObject towel tub); 
[Plan 2 / 5]
  (GotoLocation sink); (PickupObject towel); (GotoLocation bathtub); (PutObject towel bathtub); 
[Plan 3 / 5]
  (GotoLocation laundryroom); (GotoLocation cabinet); (PickupObject towel); (GotoLocation bathroom); (GotoLocation tub); (PutObject towel tub); 
[Plan 4 / 5]
  (GotoLocation linen-closet); (PickupObject towel); (GotoLocation bathroom); (FillObject tub); (PutObject towel tub); 
propose_plans_for_problems:: Now on problem 48 / 223 ... 
propose_plans_for_problems:: "carry a pencil while turning on a lamp.":
[Plan 0 / 5]
  (GotoLocation table); (PickupObject pencil); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 1 / 5]
  (GotoLocation desk); (PickupObject pencil); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 2 / 5]
  (GotoLocation desk); (PickupObject pencil); (GotoLocation lamp); (TurnOnObject lamp); (CarryObject pencil); 
[Plan 3 / 5]
  (GotoLocation desk); (PickupObject pencil); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 4 / 5]
  (GotoLocation desk); (PickupObject pencil); (GotoLocation lamp); (TurnOnObject lamp); 
propose_plans_for_problems:: Now on problem 49 / 223 ... 
propose_plans_for_problems:: "examine a pen next to the light of a lamp.":
[Plan 0 / 5]
  (GotoLocation lamp); (GotoLocation pen); (ExamineObject pen)
[Plan 1 / 5]
  (GotoLocation lamp); (ExamineObject pen lamp); 
[Plan 2 / 5]
  (GotoLocation lamp); (GotoLocation pen); (ExamineObject pen); 
[Plan 3 / 5]
  (GotoLocation lamp); (InspectObject pen lamp); 
[Plan 4 / 5]
  (GotoLocation desk); (PickupObject lamp); (RestartObject lamp); (GotoLocation desk); (ExamineObject pen desk); (GotoLocation desk); (PutObject lamp desk); 
propose_plans_for_problems:: Now on problem 50 / 223 ... 
propose_plans_for_problems:: "hold a credit card while turning on a lamp.":
[Plan 0 / 5]
  (GotoLocation wallet); (PickupObject creditcard); (GotoLocation desklamp); (TurnOnObject desklamp creditcard); 
[Plan 1 / 5]
  (GotoLocation wallet); (PickupObject credit_card); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 2 / 5]
  (PickupObject creditcard); (GotoLocation desklamp); (TurnOnObject desklamp); 
[Plan 3 / 5]
  (GotoLocation wallet); (PickupObject creditcard); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 4 / 5]
  (GotoLocation wallet); (PickupObject creditcard); (GotoLocation lamp); (TurnOnObject lamp); 
propose_plans_for_problems:: Now on problem 51 / 223 ... 
propose_plans_for_problems:: "cut a tomato on the counter.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation cuttingboard); (CutObject tomato cuttingboard); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation countertop); (UseObject knife); (CutObject tomato knife); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation countertop); (CutObject tomato)
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation countertop); (CutObject tomato countertop); 
[Plan 4 / 5]
  (GotoLocation cabinet); (PickupObject knife); (GotoLocation countertop); (PickupObject tomato); (CutObject tomato knife); 
propose_plans_for_problems:: Now on problem 52 / 223 ... 
propose_plans_for_problems:: "place a cooled slice of apple in the black bin.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation cuttingboard); (CoolObject apple cuttingboard); (GotoLocation blackbin); (PutObject apple blackbin); 
[Plan 1 / 5]
  (GotoLocation diningtable); (PickupObject apple); (GotoLocation sink); (WashObject apple sink); (GotoLocation countertop); (CoolObject apple); (GotoLocation blackbin); (PutObject apple blackbin); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject apple); (GotoLocation countertop); (GrateObject apple grater); (GotoLocation sink); (CoolObject apple sink); (GotoLocation blackbin); (PutObject apple blackbin); 
[Plan 3 / 5]
  (GotoLocation diningtable); (PickupObject apple); (GotoLocation sink); (CoolObject apple sink); (GotoLocation blackbin); (PutObject apple blackbin); 
[Plan 4 / 5]
  (GotoLocation countertop); (PutObject apple countertop); (GotoLocation fridge); (PickupObject slice); (GotoLocation blackbin); (PutObject slice blackbin); 
propose_plans_for_problems:: Now on problem 53 / 223 ... 
propose_plans_for_problems:: "throw away a rinsed egg.":
[Plan 0 / 5]
  (GotoLocation sink); (PickupObject egg); (GotoLocation trashcan); (PutObject egg trashcan); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject egg); (GotoLocation sink); (RinseObject egg sink); (GotoLocation trashcan); (ThrowObject egg trashcan); 
[Plan 2 / 5]
  (GotoLocation sink); (PickupObject egg); (RinseObject egg); (GotoLocation trashcan); (PutObject egg trashcan); 
[Plan 3 / 5]
  (GotoLocation sink); (RinseObject egg); (GotoLocation trashcan); (ThrowAwayObject egg); 
[Plan 4 / 5]
  (GotoLocation sink); (PickupObject egg); (RinseObject egg); (GotoLocation trashcan); (PutObject egg trashcan); 
propose_plans_for_problems:: Now on problem 54 / 223 ... 
propose_plans_for_problems:: "chill a pan in the fridge and put it on the counter.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject pan); (PutObject pan fridge); (GotoLocation countertop); (PutObject pan countertop); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject pan); (PutObject pan fridge); (GotoLocation countertop); (PutObject pan countertop); 
[Plan 2 / 5]
  (GotoLocation kitchen); (PickupObject pan); (GotoLocation fridge); (PutObject pan fridge); (GotoLocation countertop); (PutObject pan countertop); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject pan); (GotoLocation fridge); (PutObject pan fridge); (GotoLocation countertop); (PutObject pan countertop); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject pan); (PutObject pan fridge); (GotoLocation countertop); (PutObject pan countertop); 
propose_plans_for_problems:: Now on problem 55 / 223 ... 
propose_plans_for_problems:: "pick up a pan from the stove , refrigerate it , put in on the table.":
[Plan 0 / 5]
  (GotoLocation stove); (PickupObject pan); (GotoLocation fridge); (PutObject pan fridge); (GotoLocation diningtable); (PutObject pan diningtable); 
[Plan 1 / 5]
  (GotoLocation stove); (PickupObject pan); (GotoLocation fridge); (PutObject pan fridge); (GotoLocation diningtable); (PutObject pan diningtable); 
[Plan 2 / 5]
  (GotoLocation stove); (PickupObject pan); (GotoLocation fridge); (PutObject pan fridge); (GotoLocation diningtable); (PutObject pan diningtable); 
[Plan 3 / 5]
  (GotoLocation stove); (PickupObject pan); (GotoLocation fridge); (PutObject pan fridge); (GotoLocation diningtable); (PutObject pan diningtable); 
[Plan 4 / 5]
  (GotoLocation stove); (PickupObject pan); (GotoLocation fridge); (PutObject pan fridge); (GotoLocation diningtable); (PutObject pan diningtable); 
propose_plans_for_problems:: Now on problem 56 / 223 ... 
propose_plans_for_problems:: "examine a pen by the light of a lamp on a small table.":
[Plan 0 / 5]
  (GotoLocation smalltable); (GotoLocation lamp); (TurnOnObject lamp); (GotoLocation cabinet); (PickupObject pen); (GotoLocation lamp); (ExamineObject pen lamp); 
[Plan 1 / 5]
  (GotoLocation smalltable); (GotoLocation lamp); (TurnOnObject lamp); (GotoLocation pen); (ExamineObject pen); 
[Plan 2 / 5]
  (GotoLocation smalltable); (GotoLocation lamp); (TurnOnObject lamp); (GotoLocation desk); (GotoLocation pen); (ExamineObject pen); 
[Plan 3 / 5]
  (GotoLocation smalltable); (PickupObject lamp); (StartObject lamp); (GotoLocation desk); (PickupObject pen); (ExamineObject pen lamp); 
[Plan 4 / 5]
  (GotoLocation smalltable); (GotoLocation lamp); (TurnOnObject lamp); (GotoLocation pen); (ExamineObject pen); 
propose_plans_for_problems:: Now on problem 57 / 223 ... 
propose_plans_for_problems:: "pick up knife , cut tomato , place into fridge , remove from fridge , place on table.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject knife); (GotoLocation fridge); (PickupObject tomato); (GotoLocation countertop); (CutObject tomato knife); (GotoLocation fridge); (PutObject tomato fridge); (GotoLocation fridge); (PickupObject tomato); (GotoLocation countertop); (PutObject tomato countertop); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject knife); (GotoLocation refrigerator); (PickupObject tomato); (CutObject knife tomato); (GotoLocation refrigerator); (PutObject tomato refrigerator); (GotoLocation refrigerator); (PickupObject tomato); (GotoLocation countertop); (PutObject tomato countertop); 
[Plan 2 / 5]
  (GotoLocation kitchen); (PickupObject knife); (GotoLocation countertop); (CutObject tomato knife); (GotoLocation fridge); (PutObject tomato fridge); (GotoLocation fridge); (PickupObject tomato); (GotoLocation countertop); (PutObject tomato countertop); 
[Plan 3 / 5]
  (GotoLocation kitchen); (PickupObject knife); (GotoLocation countertop); (CutObject tomato knife); (GotoLocation fridge); (PutObject tomato fridge); (GotoLocation fridge); (PickupObject tomato); (GotoLocation countertop); (PlaceObject tomato countertop); (GotoLocation diningtable); (PutObject tomato diningtable); 
[Plan 4 / 5]
  (GotoLocation drawer); (PickupObject knife); (GotoLocation countertop); (CutObject tomato knife); (GotoLocation fridge); (PutObject tomato fridge); (GotoLocation fridge); (PickupObject tomato); (GotoLocation countertop); (PutObject tomato countertop); 
propose_plans_for_problems:: Now on problem 58 / 223 ... 
propose_plans_for_problems:: "slice a potato , cook it in the microwave , and put it in the refrigerator.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject potato); (SliceObject potato); (GotoLocation microwave); (MicrowaveObject potato); (GotoLocation fridge); (PutObject potato fridge); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation cuttingboard); (SliceObject potato cuttingboard); (GotoLocation microwave); (CookObject potato microwave); (GotoLocation fridge); (PutObject potato fridge); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation cuttingboard); (SliceObject potato cuttingboard); (GotoLocation microwave); (CookObject potato microwave); (GotoLocation fridge); (PutObject potato fridge); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject potato); (SliceObject potato); (GotoLocation microwave); (CookObject potato microwave); (GotoLocation fridge); (PutObject potato fridge); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject potato); (SliceObject potato); (GotoLocation microwave); (CookObject potato microwave); (GotoLocation fridge); (PutObject potato fridge); 
propose_plans_for_problems:: Now on problem 59 / 223 ... 
propose_plans_for_problems:: "place a heated apple on a counter.":
[Plan 0 / 5]
  (GotoLocation sidetable); (PickupObject apple); (GotoLocation oven); (BakeObject apple oven); (GotoLocation countertop); (PutObject apple countertop); 
[Plan 1 / 5]
  (GotoLocation oven); (PickupObject apple); (GotoLocation countertop); (PutObject apple countertop); 
[Plan 2 / 5]
  (GotoLocation oven); (PickupObject apple); (GoToLocation countertop); (PutObject apple countertop); 
[Plan 3 / 5]
  (GotoLocation sidetable); (PickupObject apple); (GotoLocation oven); (BakeObject apple oven); (GotoLocation countertop); (PutObject apple countertop); 
[Plan 4 / 5]
  (GotoLocation oven); (PickupObject apple); (BakeObject apple oven); (GotoLocation countertop); (PutObject apple countertop); 
propose_plans_for_problems:: Now on problem 60 / 223 ... 
propose_plans_for_problems:: "cut a slice of tomato , chill it , then cook it in the microwave.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject knife); (GotoLocation fridge); (PickupObject tomato); (CutObject tomato knife); (ChillObject tomato fridge); (GotoLocation microwave); (PutObject tomato microwave); (CookObject tomato microwave); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject knife); (CutObject tomato knife); (GotoLocation fridge); (PutObject tomato fridge); (GotoLocation countertop); (PickupObject tomato); (GotoLocation microwave); (CookObject tomato microwave); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject knife); (GotoLocation fridge); (PickupObject tomato); (CutObject tomato knife); (GotoLocation fridge); (PutObject tomato fridge); (GotoLocation microwave); (PutObject knife microwave); (StartMicrowave); (GotoLocation fridge); (PickupObject tomato); (PutObject tomato countertop); (MicrowaveObject tomato microwave); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject tomato); (CutObject tomato); (GotoLocation fridge); (PutObject tomato fridge); (GotoLocation microwave); (CookObject tomato microwave); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject knife); (GotoLocation fridge); (PickupObject tomato); (CutObject tomato knife); (GotoLocation fridge); (PutObject tomato fridge); (GotoLocation fridge); (PickupObject plate); (GotoLocation kitchen); (ChillObject plate kitchen); (GotoLocation microwave); (PutObject plate microwave); (CookObject microwave); 
propose_plans_for_problems:: Now on problem 61 / 223 ... 
propose_plans_for_problems:: "slice the potato and cool it down in the refrigerator so it can be returned to the counter top.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject potato); (SliceObject potato); (GotoLocation fridge); (PutObject potato fridge); 
[Plan 1 / 5]
  (GotoLocation cabinet); (PickupObject knife); (GotoLocation countertop); (SliceObject potato knife); (GotoLocation fridge); (PutObject potato fridge); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation cuttingboard); (SliceObject potato cuttingboard); (GotoLocation fridge); (PutObject potato fridge); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation cuttingboard); (SliceObject potato cuttingboard); (GotoLocation fridge); (PutObject potato fridge); (GotoLocation countertop); (PickupObject potato); (GotoLocation fridge); (PutObject potato fridge); 
[Plan 4 / 5]
  (GotoLocation cabinet); (PickupObject knife); (GotoLocation countertop); (SliceObject potato knife); (GotoLocation fridge); (CoolObject potato fridge); (GotoLocation countertop); (PutObject potato countertop); 
propose_plans_for_problems:: Now on problem 62 / 223 ... 
propose_plans_for_problems:: "place a rinsed knife in a drawer.":
[Plan 0 / 5]
  (FillObject sinkbasin); (GotoLocation sink); (PutObject knife sinkbasin); (GotoLocation drawer); (PutObject knife drawer); 
[Plan 1 / 5]
  (GotoLocation sinkbasin); (PickupObject knife); (GotoLocation drawer); (PutObject knife drawer); 
[Plan 2 / 5]
  (GotoLocation sink); (PickupObject knife); (GotoLocation drawer); (PutObject knife drawer); 
[Plan 3 / 5]
  (GotoLocation sink); (PickupObject knife); (GotoLocation drawer); (PutObject knife drawer); 
[Plan 4 / 5]
  (GotoLocation sink); (PickupObject knife); (GotoLocation drawer); (PutObject knife drawer); 
propose_plans_for_problems:: Now on problem 63 / 223 ... 
propose_plans_for_problems:: "chill a pot and place it on the counter.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject pot); (GotoLocation countertop); (ChillObject pot); (PutObject pot countertop); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject pot); (GotoLocation counter); (ChillObject pot); (PutObject pot counter); 
[Plan 2 / 5]
  (GotoLocation stove); (PickupObject pot); (GotoLocation sink); (ChillObject pot sink); (GotoLocation countertop); (PutObject pot countertop); 
[Plan 3 / 5]
  (GotoLocation cabinet); (PickupObject pot); (GotoLocation fridge); (ChillObject pot); (GotoLocation countertop); (PutObject pot countertop); 
[Plan 4 / 5]
  (GotoLocation sink); (FillObject sinkbasin); (GotoLocation sinkbasin); (PutObject pot sinkbasin); (GotoLocation countertop); (PutObject pot countertop); 
propose_plans_for_problems:: Now on problem 64 / 223 ... 
propose_plans_for_problems:: "put in the chilled bowl inside the cabinet.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject bowl); (GotoLocation cabinet); (PutObject bowl cabinet); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject bowl); (GotoLocation cabinet); (PutObject bowl cabinet); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject bowl); (GotoLocation cabinet); (PutObject bowl cabinet); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject bowl); (GotoLocation fridge); (PickupObject chilledbowl); (GotoLocation cabinet); (PutObject chilledbowl cabinet); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject bowl); (GotoLocation countertop); (PutObject bowl countertop); (GotoLocation cabinet); (PutObject bowl cabinet); 
propose_plans_for_problems:: Now on problem 65 / 223 ... 
propose_plans_for_problems:: "slice a tomato on the black table.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation countertop); (SliceObject tomato countertop); (PutObject tomato countertop); (GotoLocation blacktable); (PutObject tomato blacktable); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation countertop); (SliceObject tomato); (GotoLocation diningtable); (PutObject tomato diningtable); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation blacktable); (SliceObject tomato knife); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation blacktable); (SliceObject tomato blacktable); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation blacktable); (SliceObject tomato); (PutObject tomato blacktable); 
propose_plans_for_problems:: Now on problem 66 / 223 ... 
propose_plans_for_problems:: "heat a glass and put it in the cabinet.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject glass); (GotoLocation stove); (HeatObject glass stove); (GotoLocation cabinet); (PutObject glass cabinet); 
[Plan 1 / 5]
  (GotoLocation sink); (FillObject sinkbasin); (PickupObject glass); (GotoLocation stove); (HeatObject glass stove); (GotoLocation cabinet); (PutObject glass cabinet); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject glass); (GotoLocation microwave); (HeatObject glass microwave); (GotoLocation cabinet); (PutObject glass cabinet); 
[Plan 3 / 5]
  (GotoLocation sink); (FillObject sinkbasin); (GotoLocation cabinet); (PickupObject glass); (GotoLocation sinkbasin); (DrainObject sinkbasin); (GotoLocation stovetop); (HeatObject glass stovetop); (GotoLocation cabinet); (PutObject glass cabinet); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject glass); (GotoLocation stove); (HeatObject glass stove); (GotoLocation cabinet); (PutObject glass cabinet); 
propose_plans_for_problems:: Now on problem 67 / 223 ... 
propose_plans_for_problems:: "use the knife on the table by the stove to slice the cabbage on the white table.":
[Plan 0 / 5]
  (GotoLocation tablebystove); (PickupObject knife); (GotoLocation white table); (PickupObject cabbage); (SliceObject cabbage knife); 
[Plan 1 / 5]
  (GotoLocation table); (GotoLocation stove); (PickupObject knife); (GotoLocation table); (SliceObject cabbage knife); (GotoLocation whitetable); (PutObject cabbage whitetable); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject knife); (GotoLocation stove); (GotoLocation table); (SliceObject cabbage knife); (PutObject cabbage table); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject knife); (GotoLocation stove); (GotoLocation table); (SliceObject cabbage knife); (GotoLocation countertop); (PutObject knife countertop); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject knife); (GotoLocation stove); (GotoLocation whiteTable); (PickupObject cabbage); (SliceObject cabbage knife); (PutObject cabbage whiteTable); 
propose_plans_for_problems:: Now on problem 68 / 223 ... 
propose_plans_for_problems:: "put a warm apple on the table.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation microwave); (BakeObject apple microwave); (GotoLocation diningtable); (PutObject apple diningtable); 
[Plan 1 / 5]
  (GotoLocation sidetable); (PickupObject apple); (GotoLocation oven); (BakeObject apple oven); (GotoLocation diningtable); (PutObject apple diningtable); 
[Plan 2 / 5]
  (GotoLocation oven); (PickupObject apple); (GotoLocation diningtable); (PutObject apple diningtable); 
[Plan 3 / 5]
  (GotoLocation sidetable); (PickupObject apple); (GotoLocation oven); (BakeObject apple oven); (GotoLocation diningtable); (PutObject apple diningtable); 
[Plan 4 / 5]
  (GotoLocation sidetable); (PickupObject apple); (GotoLocation oven); (BakeObject apple oven); (GotoLocation diningtable); (PutObject apple diningtable); 
propose_plans_for_problems:: Now on problem 69 / 223 ... 
propose_plans_for_problems:: "use a butter knife to slice up an apple that is in the microwave.":
[Plan 0 / 5]
  (GotoLocation microwave); (PutObject knife microwave); (GotoLocation fridge); (PickupObject apple); (GotoLocation microwave); (SliceObject apple knife); 
[Plan 1 / 5]
  (GotoLocation microwave); (PutObject apple microwave); (GotoLocation drawer); (PickupObject butterknife); (GotoLocation microwave); (SliceObject apple butterknife); 
[Plan 2 / 5]
  (GotoLocation microwave); (PutObject apple microwave); (GotoLocation drawer); (PickupObject butterknife); (RestartObject microwave); (GotoLocation microwave); (SliceObject apple butterknife); 
[Plan 3 / 5]
  (GotoLocation microwave); (PutObject apple microwave); (GotoLocation cabinet); (PickupObject butterknife); (GotoLocation microwave); (SliceObject apple butterknife); 
[Plan 4 / 5]
  (GotoLocation kitchen); (GotoLocation microwave); (PutObject apple microwave); (GotoLocation drawer); (PickupObject butter_knife); (GotoLocation microwave); (SliceObject apple butter_knife); 
propose_plans_for_problems:: Now on problem 70 / 223 ... 
propose_plans_for_problems:: "to see the tissue box in the lamp light.":
[Plan 0 / 5]
  (GotoLocation tissuebox); (GotoLocation desklamp); (TurnOnObject desklamp); (GotoLocation tissuebox); 
[Plan 1 / 5]
  (GotoLocation couch); (GoToLocation desklamp); (TurnOnLamp desklamp); (GoToLocation coffeetable); (PickupObject tissuebox); (GoToLocation desklamp); (PutObject tissuebox desklamp); 
[Plan 2 / 5]
  (GotoLocation lamp); (RestartObject lamp); (GotoLocation table); (PickupObject tissuebox); (GotoLocation lamp); (PutObject tissuebox lamp); 
[Plan 3 / 5]
  (GotoLocation lamp); (TurnOnLight lamp); (GotoLocation tissuebox); (TurnOnLight lamp); (MoveObject tissuebox lamp); 
[Plan 4 / 5]
  (TurnOnObject lamp); (GotoLocation desk); (PickupObject tissuebox); (GotoLocation lamp); (PutObject tissuebox lamp); (TurnOffObject lamp); 
propose_plans_for_problems:: Now on problem 71 / 223 ... 
propose_plans_for_problems:: "turn a lamp on with a remote in hand.":
[Plan 0 / 5]
  (GotoLocation livingroom); (GotoLocation desk); (PickupObject remote); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 1 / 5]
  (GotoLocation remotecontrol); (PickupObject remotecontrol); (GotoLocation lamp); (TurnOnObject lamp remotecontrol); 
[Plan 2 / 5]
  (GotoLocation lamp); (PickupObject remote); (TurnOnObject lamp remote); 
[Plan 3 / 5]
  (GotoLocation livingroom); (PickupObject remote); (GotoLocation lamp); (TurnOnObject lamp remote); 
[Plan 4 / 5]
  (GotoLocation livingroom); (PickupObject remote); (GotoLocation lamp); (TurnOnObject lamp remote); 
propose_plans_for_problems:: Now on problem 72 / 223 ... 
propose_plans_for_problems:: "examine the cd under the light of the table lamp.":
[Plan 0 / 5]
  (GotoLocation desk); (PickupObject tablelamp); (GotoLocation cd); (GoUnderLight); 
[Plan 1 / 5]
  (GotoLocation table); (TurnOnObject lamp); (GotoLocation cd); (ExamineObject cd); 
[Plan 2 / 5]
  (GotoLocation table); (GotoLocation lamp); (TurnOnObject lamp); (GotoLocation cd); (ExamineObject cd); (TurnOffObject lamp); 
[Plan 3 / 5]
  (GotoLocation cdshelf); (PickupObject cd); (GotoLocation tablelamp); (TurnOnObject tablelamp); 
[Plan 4 / 5]
  (GotoLocation table); (PickupObject cd); (GoToLocation tablelamp); (TurnOnObject tablelamp); (ExamineObject cd tablelamp); 
propose_plans_for_problems:: Now on problem 73 / 223 ... 
propose_plans_for_problems:: "put chilled wine in the cabinet.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject wine); (PutObject wine cabinet); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject wine); (GotoLocation cabinet); (PutObject wine cabinet); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject wine); (GotoLocation cabinet); (PutObject wine cabinet); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject wine); (GotoLocation cabinet); (PutObject wine cabinet); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject wine); (GotoLocation cabinet); (PutObject wine cabinet); 
propose_plans_for_problems:: Now on problem 74 / 223 ... 
propose_plans_for_problems:: "put a slice of warm toast in the fridge.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject toast); (GotoLocation fridge); (PutObject toast fridge); 
[Plan 1 / 5]
  (GotoLocation toaster); (PutObject bread toaster); (ToastObject bread toaster); (GotoLocation fridge); (PickupObject toast); (PutObject toast fridge); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject toast); (GotoLocation toaster); (ToastObject toast toaster); (GotoLocation fridge); (PutObject toast fridge); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject toast); (GotoLocation fridge); (PutObject toast fridge); 
[Plan 4 / 5]
  (GotoLocation toaster); (TakeObject toast); (GotoLocation fridge); (PutObject toast fridge); 
propose_plans_for_problems:: Now on problem 75 / 223 ... 
propose_plans_for_problems:: "put a heated mug into a cupboard.":
[Plan 0 / 5]
  (GotoLocation microwave); (PickupObject mug); (GotoLocation cupboard); (PutObject mug cupboard); 
[Plan 1 / 5]
  (GotoLocation microwave); (PickupObject mug); (Gotolocation cupboard); (PutObject mug cupboard); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject mug); (GotoLocation microwave); (HeatObject mug microwave); (GotoLocation cupboard); (PutObject mug cupboard); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject mug); (GotoLocation microwave); (HeatObject mug microwave); (GotoLocation cupboard); (PutObject mug cupboard); 
[Plan 4 / 5]
  (GotoLocation kitchen); (PickupObject mug); (GotoLocation microwave); (HeatObject mug microwave); (GotoLocation cupboard); (PutObject mug cupboard); 
propose_plans_for_problems:: Now on problem 76 / 223 ... 
propose_plans_for_problems:: "put a heated slice of bread in the trash can.":
[Plan 0 / 5]
  (GotoLocation toaster); (PutObject bread toaster); (GotoLocation trashcan); (PutObject bread trashcan); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation toaster); (ToastObject bread toaster); (GotoLocation trashcan); (PutObject bread trashcan); 
[Plan 2 / 5]
  (GotoLocation toaster); (PutObject bread toaster); (HeatObject toaster); (GotoLocation trashcan); (PickupObject bread); (PutObject bread trashcan); 
[Plan 3 / 5]
  (GotoLocation toaster); (PutObject bread toaster); (GotoLocation trashcan); (PickupObject toaster); (PutObject toaster trashcan); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation toaster); (ToastObject bread toaster); (GotoLocation trashcan); (PutObject bread trashcan); 
propose_plans_for_problems:: Now on problem 77 / 223 ... 
propose_plans_for_problems:: "put a slice of cooked apple into the sink.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation cuttingboard); (CutObject apple cuttingboard); (GotoLocation sink); (PutObject apple sink); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation stove); (CookObject apple); (GotoLocation sink); (PutObject apple sink); 
[Plan 2 / 5]
  (GotoLocation diningtable); (PickupObject apple); (GotoLocation oven); (BakeObject apple oven); (GotoLocation sinkbasin); (PutObject apple sinkbasin); 
[Plan 3 / 5]
  (GotoLocation sidetable); (PickupObject plate); (GotoLocation diningtable); (PickupObject apple); (CookObject apple); (GotoLocation sink); (PutObject apple sink); 
[Plan 4 / 5]
  (GotoLocation diningtable); (PickupObject apple); (GotoLocation oven); (BakeObject apple oven); (GotoLocation sinkbasin); (PutObject apple sinkbasin); 
propose_plans_for_problems:: Now on problem 78 / 223 ... 
propose_plans_for_problems:: "place a cooked tomato slice in the refrigerator.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation stove); (CookObject tomato stove); (GotoLocation fridge); (PutObject tomato fridge); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation stove); (CookObject tomato); (GotoLocation fridge); (PutObject tomato fridge); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject tomato); (SliceObject tomato); (GotoLocation stove); (CookObject tomato stove); (GotoLocation fridge); (PutObject tomato fridge); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation fryingpan); (CookObject tomato fryingpan); (GotoLocation fridge); (PutObject tomato fridge); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation stove); (CookObject tomato stove); (GotoLocation fridge); (PutObject tomato fridge); 
propose_plans_for_problems:: Now on problem 79 / 223 ... 
propose_plans_for_problems:: "place an apple slice inside of the fridge.":
[Plan 0 / 5]
  (GotoLocation cuttingboard); (ChopObject apple cuttingboard); (GotoLocation fridge); (PutObject apple cuttingboard); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject knife); (GotoLocation apple); (SliceObject apple knife); (GotoLocation fridge); (PutObject apple_slice fridge); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject knife); (GotoLocation sidetable); (PickupObject apple); (GotoLocation table); (SliceObject apple knife); (GotoLocation fridge); (PutObject apple fridge); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation cuttingboard); (CutObject apple cuttingboard); (GotoLocation fridge); (PutObject apple_slice fridge); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject apple); (SliceObject apple); (PutObject slice fridge); 
propose_plans_for_problems:: Now on problem 80 / 223 ... 
propose_plans_for_problems:: "put a washed knife on a counter.":
[Plan 0 / 5]
  (GotoLocation sinkbasin); (PickupObject knife); (GotoLocation countertop); (PutObject knife countertop); 
[Plan 1 / 5]
  (GotoLocation sink); (PickupObject knife); (GotoLocation countertop); (PutObject knife countertop); 
[Plan 2 / 5]
  (GotoLocation sinkbasin); (PickupObject knife); (GotoLocation countertop); (PutObject knife countertop); 
[Plan 3 / 5]
  (GotoLocation sink); (PickupObject knife); (GotoLocation countertop); (PutObject knife countertop); 
[Plan 4 / 5]
  (GotoLocation sink); (PickupObject knife); (GotoLocation countertop); (PutObject knife countertop); 
propose_plans_for_problems:: Now on problem 81 / 223 ... 
propose_plans_for_problems:: "put a cold piece of bread in the microwave.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation microwave); (PutObject bread microwave); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation microwave); (PutObject bread microwave); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation microwave); (PutObject bread microwave); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation microwave); (PutObject bread microwave); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation microwave); (PutObject bread microwave); 
propose_plans_for_problems:: Now on problem 82 / 223 ... 
propose_plans_for_problems:: "throw away a chilled apple slice.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject apple); (SliceObject apple); (GotoLocation trashcan); (ThrowObject apple trashcan); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject apple); (SliceObject apple); (GotoLocation trashcan); (PutObject apple trashcan); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject apple); (GotoLocation trashcan); (ThrowObject apple trashcan); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject apple); (SliceObject apple); (GotoLocation trashcan); (ThrowObject apple trashcan); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject apple); (GotoLocation trashcan); (PutObject apple trashcan); 
propose_plans_for_problems:: Now on problem 83 / 223 ... 
propose_plans_for_problems:: "examine a remote control by the light of a tall lamp.":
[Plan 0 / 5]
  (GotoLocation talllamp); (TurnOnObject talllamp); (GotoLocation couch); (PickupObject remotecontrol); (GotoLocation talllamp); (ExamineObject remotecontrol talllamp); 
[Plan 1 / 5]
  (GotoLocation talllamp); (TurnOnObject talllamp); (GotoLocation couch); (ExamineObject remotecontrol); (TurnOffObject talllamp); 
[Plan 2 / 5]
  (GotoLocation livingroom); (GotoLocation table); (GotoLocation talllamp); (GotoLocation remotecontrol); (ExamineObject remotecontrol); 
[Plan 3 / 5]
  (GotoLocation talllamp); (TurnOnLight talllamp); (GotoLocation couch); (PickupObject remotecontrol); (GotoLocation talllamp); (ExamineObject remotecontrol talllamp)
[Plan 4 / 5]
  (GotoLocation talllamp); (TurnOnObject talllamp); (GotoLocation couch); (PickupObject remotecontrol); (GotoLocation talllamp); (ExamineObject remotecontrol talllamp)
propose_plans_for_problems:: Now on problem 84 / 223 ... 
propose_plans_for_problems:: "slice the tomato on the black stand.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation blackstand); (SliceObject tomato); 
[Plan 1 / 5]
  (GotoLocation blackstand); (PickupObject knife); (GotoLocation countertop); (GotoLocation fridge); (PickupObject tomato); (GotoLocation blackstand); (SliceObject tomato knife); (PutObject tomato blackstand); 
[Plan 2 / 5]
  (GotoLocation kitchen); (GotoLocation countertop); (PickupObject tomato); (GotoLocation blackstand); (SliceObject tomato); (PutObject tomato blackstand); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation blackstand); (PlaceObject tomato blackstand); (GotoLocation countertop); (PlaceObject knife countertop); (SliceObject tomato knife); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation blackstand); (PutObject tomato blackstand); (SliceObject tomato); 
propose_plans_for_problems:: Now on problem 85 / 223 ... 
propose_plans_for_problems:: "to heat a mug and put it inside of the cabinet.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject mug); (GotoLocation microwave); (HeatObject mug microwave); (GotoLocation cabinet); (PutObject mug cabinet); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject mug); (GotoLocation microwave); (HeatObject mug microwave); (GotoLocation cabinet); (PutObject mug cabinet); 
[Plan 2 / 5]
  (GotoLocation cabinet); (PickupObject mug); (GotoLocation microwave); (HeatObject mug microwave); (GotoLocation cabinet); (PutObject mug cabinet); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject mug); (GotoLocation microwave); (HeatObject mug microwave); (GotoLocation cabinet); (PutObject mug cabinet); 
[Plan 4 / 5]
  (GotoLocation microwave); (PutObject mug microwave); (HeatObject mug); (GotoLocation cabinet); (PutObject mug cabinet); 
propose_plans_for_problems:: Now on problem 86 / 223 ... 
propose_plans_for_problems:: "put a heated mug in the coffee maker.":
[Plan 0 / 5]
  (GotoLocation microwave); (PickupObject mug); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 1 / 5]
  (GotoLocation microwave); (PickupObject mug); (HeatObject mug microwave); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 2 / 5]
  (GotoLocation microwave); (PickupObject mug); (HeatObject mug microwave); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject mug); (GotoLocation microwave); (HeatObject mug microwave); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 4 / 5]
  (HeatObject mug); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
propose_plans_for_problems:: Now on problem 87 / 223 ... 
propose_plans_for_problems:: "slice a potato in a sink with a knife.":
[Plan 0 / 5]
  (FillObject sinkbasin); (GotoLocation cabinet); (PickupObject knife); (GotoLocation sinkbasin); (PickupObject potato); (SliceObject potato knife); 
[Plan 1 / 5]
  (GotoLocation cabinet); (PickupObject knife); (GotoLocation sinkbasin); (PickupObject potato); (SliceObject potato knife); (PutObject potato sinkbasin); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation sinkbasin); (GoToObject knife); (SliceObject potato knife); (PutObject potato sinkbasin); 
[Plan 3 / 5]
  (GotoLocation cabinet); (PickupObject knife); (GotoLocation sinkbasin); (PutObject knife sinkbasin); (GotoLocation countertop); (PickupObject potato); (GotoLocation sinkbasin); (SliceObject potato knife sinkbasin); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject knife); (GotoLocation sink); (FillObject sink); (GotoLocation countertop); (PickupObject potato); (GotoLocation sink); (SliceObject potato knife); 
propose_plans_for_problems:: Now on problem 88 / 223 ... 
propose_plans_for_problems:: "use a large metal knife to slice up a tomato on the counter.":
[Plan 0 / 5]
  (GotoLocation cabinet); (PickupObject knife); (GotoLocation countertop); (PickupObject tomato); (SliceObject tomato knife); 
[Plan 1 / 5]
  (GotoLocation drawer); (PickupObject knifelarge); (GotoLocation countertop); (PickupObject tomato); (SliceObject tomato knifelarge); 
[Plan 2 / 5]
  (GotoLocation knifeblock); (PickupObject knifeknifeblock); (GotoLocation countertop); (PickupObject tomato); (GotoLocation sink); (WashObject tomato sink); (GotoLocation countertop); (UseKnifeObject knifeknifeblock tomato countertop); 
[Plan 3 / 5]
  (GotoLocation drawer); (PickupObject knifemetal); (GotoLocation countertop); (PickupObject tomato); (SliceObject tomato knifemetal); 
[Plan 4 / 5]
  (GotoLocation cabinet); (PickupObject knife); (GotoLocation countertop); (PickupObject tomato); (SliceObject tomato knife)
propose_plans_for_problems:: Now on problem 89 / 223 ... 
propose_plans_for_problems:: "slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.":
[Plan 0 / 5]
  (GotoLocation cabinet); (PickupObject knife); (GotoLocation countertop); (SliceObject bread knife); (GotoLocation microwave); (PutObject bread microwave); (CookObject microwave); (GotoLocation smallbrowntable); (PutObject bread smallbrowntable); 
[Plan 1 / 5]
  (GotoLocation pantry); (PickupObject loafofbread); (GotoLocation countertop); (PickupObject knife); (GotoLocation loafofbread); (SliceObject loafofbread knife); (GotoLocation microwave); (PutObject loafofbread microwave); (CookObject microwave); (GotoLocation smallbrowntable); (PutObject loafofbread smallbrowntable); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject knife); (GotoLocation bread); (SliceObject bread knife); (GotoLocation microwave); (PutObject bread microwave); (CookObject bread microwave); (GotoLocation smallbrowntable); (PutObject bread smallbrowntable); 
[Plan 3 / 5]
  (GotoLocation cabinet); (PickupObject knife); (GotoLocation countertop); (PutObject knife countertop); (GotoLocation cabinet); (PickupObject bread); (GotoLocation microwave); (CookObject bread microwave); (GotoLocation countertop); (PutObject bread countertop); (GotoLocation smallbrowntable); (PutObject bread smallbrowntable); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject knife); (GotoLocation bread); (SliceObject bread knife); (GotoLocation microwave); (PutObject bread microwave); (CookObject bread microwave); (GotoLocation smallbrowntable); (PutObject bread smallbrowntable); 
propose_plans_for_problems:: Now on problem 90 / 223 ... 
propose_plans_for_problems:: "put a chilled sweet potato in the microwave.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject sweetpotato); (GotoLocation microwave); (PutObject sweetpotato microwave); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject sweetpotato); (GotoLocation microwave); (PutObject sweetpotato microwave); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject sweetpotato); (GotoLocation microwave); (PutObject sweetpotato microwave); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject sweetpotato); (GotoLocation microwave); (PutObject sweetpotato microwave); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject sweetpotato); (GotoLocation microwave); (PutObject sweetpotato microwave); 
propose_plans_for_problems:: Now on problem 91 / 223 ... 
propose_plans_for_problems:: "slice a tomato that is on the microwave stand.":
[Plan 0 / 5]
  (GotoLocation microwavestand); (PickupObject tomato); (GotoLocation countertop); (SliceObject tomato); 
[Plan 1 / 5]
  (GotoLocation microwavestand); (PickupObject tomato); (GotoLocation countertop); (SliceObject tomato); 
[Plan 2 / 5]
  (GotoLocation microwavestand); (PickupObject tomato); (GotoLocation countertop); (SliceObject tomato); <Possible additional actions for cleanup or putting the sliced tomato somewhere>

[Plan 3 / 5]
  (GotoLocation microwavestand); (PickupObject tomato); (GotoLocation countertop); (PutObject tomato countertop); (GotoLocation knifeblock); (PickupObject knife); (GotoLocation countertop); (SliceObject tomato knife); 
[Plan 4 / 5]
  (GotoLocation microwavestand); (PickupObject tomato); (GotoLocation countertop); (PutObject tomato countertop); (SliceObject tomato)
propose_plans_for_problems:: Now on problem 92 / 223 ... 
propose_plans_for_problems:: "place a rinsed tomato on a table.":
[Plan 0 / 5]
  (GotoLocation sink); (PickupObject tomato); (RinseObject tomato); (GotoLocation table); (PutObject tomato table); 
[Plan 1 / 5]
  (GotoLocation sink); (FillObject sinkbasin); (GotoLocation fridge); (PickupObject tomato); (GotoLocation table); (PutObject tomato table); 
[Plan 2 / 5]
  (GotoLocation sinkbasin); (FillObject sinkbasin); (GotoLocation cabinet); (PickupObject tomato); (GotoLocation sinkbasin); (RinseObject tomato sinkbasin); (GotoLocation diningtable); (PutObject tomato diningtable); 
[Plan 3 / 5]
  (GotoLocation sink); (FillObject sinkbasin); (GotoLocation cabinet); (PickupObject tomato); (GotoLocation sinkbasin); (RinseObject tomato); (GotoLocation diningtable); (PutObject tomato diningtable); 
[Plan 4 / 5]
  (GotoLocation sink); (PickupObject tomato); (GotoLocation table); (PutObject tomato table); 
propose_plans_for_problems:: Now on problem 93 / 223 ... 
propose_plans_for_problems:: "examine a towel with a lamp.":
[Plan 0 / 5]
  (GotoLocation cabinet); (PickupObject towel); (GotoLocation lamp); (ExamineObject towel lamp); 
[Plan 1 / 5]
  (GotoLocation bathroom); (PickupObject towel); (GotoLocation bedroom); (GotoLocation lamp); (TurnOnObject lamp); (ExamineObject towel lamp); 
[Plan 2 / 5]
  (GotoLocation cabinet); (PickupObject towel); (GotoLocation lamp); (ExamineObject towel lamp); 
[Plan 3 / 5]
  (GotoLocation bed); (PickupObject towel); (GotoLocation desklamp); (ExamineObject towel desklamp); 
[Plan 4 / 5]
  (GotoLocation cabinet); (PickupObject towel); (GotoLocation lamp); (ExamineObject towel lamp); 
propose_plans_for_problems:: Now on problem 94 / 223 ... 
propose_plans_for_problems:: "place a cooked tomato slice in the refrigerator.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation oven); (BakeObject tomato oven); (GotoLocation fridge); (PutObject tomato fridge); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation stove); (CookObject tomato stove); (GotoLocation fridge); (PutObject tomato fridge); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation stove); (CookSlice tomato stove); (GotoLocation fridge); (PutObject tomato fridge); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation stove); (CookObject tomato stove); (GotoLocation fridge); (PutObject tomato fridge); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation oven); (BakeObject tomato oven); (GotoLocation fridge); (PutObject tomato fridge); 
propose_plans_for_problems:: Now on problem 95 / 223 ... 
propose_plans_for_problems:: "move the cell phone from the shelves to desk.":
[Plan 0 / 5]
  (GotoLocation shelves); (PickupObject cellphone); (GotoLocation desk); (PutObject cellphone desk); 
[Plan 1 / 5]
  (GotoLocation shelves); (PickupObject cellphone); (GotoLocation desk); (PutObject cellphone desk); 
[Plan 2 / 5]
  (GotoLocation shelves); (PickupObject cellphone); (GotoLocation desk); (PutObject cellphone desk); 
[Plan 3 / 5]
  (GotoLocation shelves); (PickupObject cellphone); (GotoLocation desk); (PutObject cellphone desk); 
[Plan 4 / 5]
  (GotoLocation shelves); (PickupObject cellphone); (GotoLocation desk); (PutObject cellphone desk); 
propose_plans_for_problems:: Now on problem 96 / 223 ... 
propose_plans_for_problems:: "inspect a mug with a lamp.":
[Plan 0 / 5]
  (GotoLocation table); (PickupObject lamp); (GotoLocation mug); (InspectObject mug lamp); 
[Plan 1 / 5]
  (GotoLocation desk); (TurnOnObject lamp); (GotoLocation kitchen); (GoToLocation mug); (InspectObject mug lamp); 
[Plan 2 / 5]
  (GotoLocation desk); (GotoLocation lamp); (TurnOnObject lamp); (GotoLocation cabinet); (PickupObject mug); (GotoLocation desk); (InspectObject mug lamp); (TurnOffObject lamp); 
[Plan 3 / 5]
  (GotoLocation cabinet); (PickupObject mug); (GotoLocation desklamp); (InspectObject mug desklamp); 
[Plan 4 / 5]
  (GotoLocation cabinet); (PickupObject mug); (GotoLocation table); (GotoLocation lamp); (InspectObject mug lamp); 
propose_plans_for_problems:: Now on problem 97 / 223 ... 
propose_plans_for_problems:: "col the tomato from the trash in the refrigerator , put the tomato on the table.":
[Plan 0 / 5]
  (GotoLocation trash); (PickupObject tomato); (GotoLocation fridge); (PutObject tomato fridge); (GotoLocation diningtable); (PutObject tomato diningtable); 
[Plan 1 / 5]
  (GotoLocation trash); (PickupObject tomato); (GotoLocation fridge); (PutObject tomato fridge); (GotoLocation diningtable); (PutObject tomato diningtable); 
[Plan 2 / 5]
  (GotoLocation trash); (PickupObject tomato); (GotoLocation refrigerator); (PutObject tomato refrigerator); (GotoLocation diningtable); (PutObject tomato diningtable); 
[Plan 3 / 5]
  (GotoLocation refrigerator); (PickupObject tomato); (GotoLocation trash); (CollectObject tomato trash); (GotoLocation table); (PutObject tomato table); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject tomato) ; (GotoLocation trash); (CollectObject tomato trash); (GotoLocation diningtable); (PutObject tomato diningtable); 

propose_plans_for_problems:: Now on problem 98 / 223 ... 
propose_plans_for_problems:: "turn on the lamp while holding the keys.":
[Plan 0 / 5]
  (GotoLocation keys); (PickupObject keys); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 1 / 5]
  (GotoLocation keys); (PickupObject keys); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 2 / 5]
  (GotoLocation keyholder); (PickupObject keys); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 3 / 5]
  (GotoLocation door); (PickupObject keys); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 4 / 5]
  (GotoLocation keyrack); (PickupObject keys); (GotoLocation lamp); (TurnOnObject lamp); 
propose_plans_for_problems:: Now on problem 99 / 223 ... 
propose_plans_for_problems:: "place a microwaved apple slice on top of the black table.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject apple); (GotoLocation microwave); (MicrowaveObject apple microwave); (GotoLocation blacktable); (PutObject apple blacktable); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject apple); (GotoLocation microwave); (MicrowaveObject apple microwave); (GotoLocation blacktable); (PutObject apple blacktable); 
[Plan 2 / 5]
  (GotoLocation microwave); (PickupObject apple); (MicrowaveObject apple microwave); (GotoLocation blacktable); (PutObject apple blacktable); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject plate); (GotoLocation microwave); (PutObject plate microwave); (MicrowaveObject plate); (GotoLocation countertop); (PickupObject apple); (SliceObject apple); (GotoLocation blacktable); (PutObject apple blacktable); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation microwave); (MicrowaveObject apple microwave); (GotoLocation diningtable); (PutObject apple diningtable); 
propose_plans_for_problems:: Now on problem 100 / 223 ... 
propose_plans_for_problems:: "move the plunger to the cabinet under the sink.":
[Plan 0 / 5]
  (GotoLocation bathroom); (PickupObject plunger); (GotoLocation sink); (PutObject plunger cabinet); 
[Plan 1 / 5]
  (GotoLocation bathroom); (PickupObject plunger); (GotoLocation sinkcabinet); (PutObject plunger sinkcabinet); 
[Plan 2 / 5]
  (GotoLocation bathroom); (PickupObject plunger); (GotoLocation sink); (PutObject plunger sink); (GotoLocation cabinet); (PutObject plunger cabinet); 
[Plan 3 / 5]
  (GotoLocation bathroom); (PickupObject plunger); (GotoLocation cabinet); (PutObject plunger cabinet); 
[Plan 4 / 5]
  (GotoLocation bathroom); (PickupObject plunger); (GotoLocation sinkcabinet); (PutObject plunger sinkcabinet); 
propose_plans_for_problems:: Now on problem 101 / 223 ... 
propose_plans_for_problems:: "place a cooked tomato slice inside the fridge.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject tomato); (CookObject tomato); (GotoLocation fridge); (PutObject tomato fridge); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GoToLocation stove); (CookObject tomato slice stove); (GotoLocation fridge); (PutObject tomato slice fridge); 
[Plan 2 / 5]
  (GotoLocation kitchen); (GotoLocation countertop); (PickupObject tomato); (CookObject tomato); (GotoLocation fridge); (PutObject tomato fridge); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GoToLocation stove); (CookObject tomato stove); (GoToLocation fridge); (PutObject tomato fridge); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation stove); (CookObject tomato stove); (GotoLocation fridge); (PutObject tomato fridge); 
propose_plans_for_problems:: Now on problem 102 / 223 ... 
propose_plans_for_problems:: "put a cooked slice of potato in the middle of the sink.":
[Plan 0 / 5]
  (GotoLocation countertop); (GotoLocation oven); (BakeObject potato oven); (GotoLocation sinkbasin); (PutObject potato sinkbasin); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation stove); (CookObject potato stove); (GotoLocation sinkbasin); (PutObject potato sinkbasin); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation sink); (PutObject potato sink); (ActivateObject sink); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject potato); (GotoLocation oven); (BakeObject potato oven); (GotoLocation sink); (PutObject potato sink); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation oven); (BakeObject potato oven); (GotoLocation sinkbasin); (PutObject potato sinkbasin); 
propose_plans_for_problems:: Now on problem 103 / 223 ... 
propose_plans_for_problems:: "put a vase in a fridge.":
[Plan 0 / 5]
  (GotoLocation table); (PickupObject vase); (GotoLocation fridge); (PutObject vase fridge); 
[Plan 1 / 5]
  (GotoLocation shelf); (PickupObject vase); (GotoLocation fridge); (PutObject vase fridge); 
[Plan 2 / 5]
  (GotoLocation table); (PickupObject vase); (GotoLocation fridge); (PutObject vase fridge); 
[Plan 3 / 5]
  (GotoLocation table); (PickupObject vase); (GotoLocation fridge); (PutObject vase fridge); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject vase); (GotoLocation fridge); (PutObject vase fridge); 
propose_plans_for_problems:: Now on problem 104 / 223 ... 
propose_plans_for_problems:: "inspect a bowl by lamplight.":
[Plan 0 / 5]
  (GotoLocation cabinet); (PickupObject bowl); (GotoLocation desklamp); (TurnOnObject desklamp); (GotoLocation table); (PutObject bowl table); (InspectObject bowl); (TurnOffObject desklamp); 
[Plan 1 / 5]
  (GotoLocation cabinet); (PickupObject bowl); (GotoLocation desklamp); (RestartObject desklamp); (GotoLocation diningtable); (PutObject bowl diningtable); 
[Plan 2 / 5]
  (GotoLocation cabinet); (PickupObject bowl); (GotoLocation desklamp); (InspectObject bowl desklamp); 
[Plan 3 / 5]
  (GotoLocation diningtable); (PickupObject bowl); (GotoLocation desklamp); (TurnOnObject desklamp); (InspectObject bowl desklamp); 
[Plan 4 / 5]
  (GotoLocation cabinet); (PickupObject bowl); (GotoLocation desklamp); (InspectObject bowl desklamp); 
propose_plans_for_problems:: Now on problem 105 / 223 ... 
propose_plans_for_problems:: "pick a pencil in the dustbin and place it on the table.":
[Plan 0 / 5]
  (GotoLocation dustbin); (PickupObject pencil); (GotoLocation table); (PutObject pencil table); 
[Plan 1 / 5]
  (GotoLocation dustbin); (PickupObject pencil); (GotoLocation table); (PutObject pencil table); 
[Plan 2 / 5]
  (GotoLocation dustbin); (PickupObject pencil); (GotoLocation table); (PutObject pencil table); 
[Plan 3 / 5]
  (GotoLocation dustbin); (PickupObject pencil); (GotoLocation table); (PutObject pencil table); 
[Plan 4 / 5]
  (GotoLocation dustbin); (PickupObject pencil); (GotoLocation table); (PutObject pencil table); 
propose_plans_for_problems:: Now on problem 106 / 223 ... 
propose_plans_for_problems:: "examine the plate under the light of the lamp.":
[Plan 0 / 5]
  (GotoLocation cabinet); (PickupObject plate); (GotoLocation desklamp); (TurnOnObject desklamp); (GotoLocation diningtable); (PutObject plate diningtable); (ExamineObject plate desklamp); 
[Plan 1 / 5]
  (GotoLocation diningtable); (PickupObject plate); (GotoLocation desklamp); (ExamineObject plate desklamp); 
[Plan 2 / 5]
  (GotoLocation diningtable); (PickupObject plate); (GotoLocation lamp); (TurnOnObject lamp); (GotoLocation diningtable); (PutObject plate diningtable); 
[Plan 3 / 5]
  (GotoLocation cabinet); (PickupObject plate); (GotoLocation lamp); (ExamineObject plate lamp); 
[Plan 4 / 5]
  (GotoLocation diningtable); (PickupObject plate); (GotoLocation lamplight); (ExamineObject plate lamplight); 
propose_plans_for_problems:: Now on problem 107 / 223 ... 
propose_plans_for_problems:: "put a warmed glass in the cabinet.":
[Plan 0 / 5]
  (GotoLocation counter); (PutObject glass counter); (GotoLocation microwave); (WarmObject glass microwave); (GotoLocation cabinet); (PutObject glass cabinet); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject glass); (GotoLocation microwave); (WarmObject glass microwave); (GotoLocation cabinet); (PutObject glass cabinet); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject glass); (GotoLocation microwave); (WarmObject glass microwave); (GotoLocation cabinet); (PutObject glass cabinet); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject glass); (HeatObject glass); (GotoLocation cabinet); (PutObject glass cabinet); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject glass); (GotoLocation microwave); (WarmObject glass microwave); (GotoLocation cabinet); (PutObject glass cabinet); 
propose_plans_for_problems:: Now on problem 108 / 223 ... 
propose_plans_for_problems:: "place a slice of heated tomato in a sink.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation microwave); (HeatObject tomato microwave); (GotoLocation sinkbasin); (PutObject tomato sinkbasin); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation stove); (HeatObject tomato stove); (GotoLocation sinkbasin); (PutObject tomato sinkbasin); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation stove); (HeatObject tomato stove); (GotoLocation sinkbasin); (PutObject tomato sinkbasin); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation stove); (HeatObject tomato stove); (GotoLocation sinkbasin); (PutObject tomato sinkbasin); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation microwave); (HeatObject tomato microwave); (GotoLocation sink); (PutObject tomato sink); 
propose_plans_for_problems:: Now on problem 109 / 223 ... 
propose_plans_for_problems:: "move a slice of cold bread to the microwave.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation microwave); (PutObject bread microwave); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation microwave); (PutObject bread microwave); 
[Plan 2 / 5]
  (GotoLocation diningtable); (PickupObject breadslice); (GotoLocation microwave); (PutObject breadslice microwave); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation microwave); (PutObject bread microwave); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation microwave); (PutObject bread microwave); 
propose_plans_for_problems:: Now on problem 110 / 223 ... 
propose_plans_for_problems:: "put a cold potato slice in the microwave.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation microwave); (PutObject potato microwave); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject potato); (GotoLocation countertop); (SliceObject potato); (PutObject potato countertop); (GotoLocation microwave); (HeatObject potato microwave); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject potato); (SliceObject potato); (GotoLocation microwave); (PutObject potato microwave); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject potato); (SliceObject potato); (GotoLocation microwave); (PutObject slice microwave); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject potato); (GotoLocation microwave); (PutObject potato microwave); 
propose_plans_for_problems:: Now on problem 111 / 223 ... 
propose_plans_for_problems:: "put a warmed apple in the trash can.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation microwave); (WarmObject apple microwave); (GotoLocation trashcan); (PutObject apple trashcan); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation microwave); (WarmObject apple microwave); (GotoLocation trashcan); (PutObject apple trashcan); 
[Plan 2 / 5]
  (GotoLocation kitchen); (PickupObject apple); (GotoLocation microwave); (WarmObject apple microwave); (GotoLocation trashcan); (PutObject apple trashcan); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation microwave); (WarmObject apple microwave); (GotoLocation trashcan); (PutObject apple trashcan); 
[Plan 4 / 5]
  (GotoLocation microwave); (PickupObject apple); (WarmObject apple microwave); (GotoLocation trashcan); (PutObject apple trashcan); 
propose_plans_for_problems:: Now on problem 112 / 223 ... 
propose_plans_for_problems:: "take the phone from the top of the nightstand and place it in the drawer.":
[Plan 0 / 5]
  (GotoLocation nightstand); (PickupObject phone); (GotoLocation drawer); (PutObject phone drawer); 
[Plan 1 / 5]
  (GotoLocation nightstand); (PickupObject phone); (GotoLocation drawer); (PutObject phone drawer); 
[Plan 2 / 5]
  (GotoLocation nightstand); (PickupObject phone); (GotoLocation drawer); (PutObject phone drawer); 
[Plan 3 / 5]
  (GotoLocation nightstand); (PickupObject phone); (GotoLocation drawer); (PutObject phone drawer); 
[Plan 4 / 5]
  (GotoLocation nightstand); (PickupObject phone); (GotoLocation drawer); (PutObject phone drawer); 
propose_plans_for_problems:: Now on problem 113 / 223 ... 
propose_plans_for_problems:: "heat the white cup from table in the microwave , put it on the shelf.":
[Plan 0 / 5]
  (GotoLocation diningtable); (PickupObject whitecup); (GotoLocation microwave); (HeatObject whitecup microwave); (GotoLocation shelf); (PutObject whitecup shelf); 
[Plan 1 / 5]
  (GotoLocation table); (PickupObject white cup); (GotoLocation microwave); (HeatObject white cup microwave); (GotoLocation shelf); (PutObject white cup shelf); 
[Plan 2 / 5]
  (GotoLocation diningtable); (PickupObject whitecup); (GotoLocation microwave); (HeatObject whitecup microwave); (GotoLocation shelf); (PutObject whitecup shelf); 
[Plan 3 / 5]
  (GotoLocation diningtable); (PickupObject cup); (GotoLocation microwave); (HeatObject cup microwave); (GotoLocation shelf); (PutObject cup shelf); 
[Plan 4 / 5]
  (GotoLocation table); (PickupObject whitecup); (GotoLocation microwave); (HeatObject whitecup microwave); (GotoLocation shelf); (PutObject whitecup shelf); 
propose_plans_for_problems:: Now on problem 114 / 223 ... 
propose_plans_for_problems:: "put a cold pot in the cabinet.":
[Plan 0 / 5]
  (GotoLocation stove); (PickupObject pot); (GotoLocation sink); (FillObject pot); (GotoLocation cabinet); (PutObject pot cabinet); 
[Plan 1 / 5]
  (GotoLocation stove); (PickupObject pot); (GotoLocation sinkbasin); (FillObject sinkbasin); (GotoLocation cabinet); (PutObject pot cabinet); 
[Plan 2 / 5]
  (GotoLocation stove); (PickupObject pot); (GotoLocation sinkbasin); (FillObject sinkbasin); (GotoLocation stove); (PourObject pot sinkbasin); (GotoLocation cabinet); (PutObject pot cabinet); 
[Plan 3 / 5]
  (GotoLocation stove); (PickupObject pot); (GotoLocation sinkbasin); (FillObject sinkbasin); (GotoLocation stove); (PutObject pot stove); (GotoLocation cabinet); (PutObject pot cabinet); 
[Plan 4 / 5]
  (GotoLocation stove); (PickupObject pot); (GotoLocation sinkbasin); (FillObject pot); (GotoLocation cabinet); (PutObject pot cabinet); 
propose_plans_for_problems:: Now on problem 115 / 223 ... 
propose_plans_for_problems:: "place a cooled potato in a garbage bin.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation sink); (FillObject sinkbasin); (GotoLocation garbagebin); (PutObject potato garbagebin); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation sink); (FillObject sinkbasin); (GotoLocation fridge); (PutObject potato fridge); (GotoLocation garbagebin); (PutObject potato garbagebin); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation garbagebin); (PutObject potato garbagebin); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation fridge); (PutObject potato fridge); (GotoLocation countertop); (GotoLocation garbagebin); (PutObject potato garbagebin); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation sink); (FillObject sink); (GotoLocation garbagebin); (PutObject potato garbagebin); 
propose_plans_for_problems:: Now on problem 116 / 223 ... 
propose_plans_for_problems:: "to take a mug from the microwave to put it away in the cabinet.":
[Plan 0 / 5]
  (GotoLocation microwave); (PickupObject mug); (GotoLocation cabinet); (PutObject mug cabinet); 
[Plan 1 / 5]
  (GotoLocation microwave); (PickupObject mug); (GotoLocation cabinet); (PutObject mug cabinet); 
[Plan 2 / 5]
  (GotoLocation microwave); (PickupObject mug); (GotoLocation cabinet); (PutObject mug cabinet); 
[Plan 3 / 5]
  (GotoLocation microwave); (PickupObject mug); (GotoLocation cabinet); (PutObject mug cabinet); 
[Plan 4 / 5]
  (GotoLocation microwave); (PickupObject mug); (GotoLocation cabinet); (PutObject mug cabinet); 
propose_plans_for_problems:: Now on problem 117 / 223 ... 
propose_plans_for_problems:: "put a credit card on the blue chair.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject creditcard); (GotoLocation bluechair); (PutObject creditcard bluechair); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject creditcard); (GotoLocation bluechair); (PutObject creditcard bluechair); 
[Plan 2 / 5]
  (GotoLocation wallet); (PickupObject creditcard); (GotoLocation bluechair); (PutObject creditcard bluechair); 
[Plan 3 / 5]
  (GotoLocation wallet); (PickupObject credit_card); (GotoLocation blue_chair); (PutObject credit_card blue_chair); 
[Plan 4 / 5]
  (GotoLocation table); (PickupObject creditcard); (GotoLocation bluechair); (PutObject creditcard bluechair); 
propose_plans_for_problems:: Now on problem 118 / 223 ... 
propose_plans_for_problems:: "cool the cabbage in the refrigerator , put it back on the table.":
[Plan 0 / 5]
  (GotoLocation diningtable); (PickupObject cabbage); (GotoLocation fridge); (CoolObject cabbage fridge); (PutObject cabbage diningtable); 
[Plan 1 / 5]
  (GotoLocation diningtable); (PickupObject cabbage); (GotoLocation fridge); (PutObject cabbage fridge); (GotoLocation diningtable); (PutObject cabbage diningtable); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject cabbage); (GotoLocation fridge); (PutObject cabbage fridge); (GotoLocation diningtable); (PutObject cabbage diningtable); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject cabbage); (GotoLocation fridge); (PutObject cabbage fridge); (GotoLocation diningtable); (PutObject cabbage diningtable); 
[Plan 4 / 5]
  (GotoLocation table); (PickupObject cabbage); (GotoLocation fridge); (PutObject cabbage fridge); (GotoLocation table); (PutObject cabbage table); 
propose_plans_for_problems:: Now on problem 119 / 223 ... 
propose_plans_for_problems:: "put a box on a table.":
[Plan 0 / 5]
  (GotoLocation cabinet); (PickupObject box); (GotoLocation table); (PutObject box table); 
[Plan 1 / 5]
  (GotoLocation cabinet); (PickupObject box); (GotoLocation table); (PutObject box table); 
[Plan 2 / 5]
  (GotoLocation shelf); (PickupObject box); (GotoLocation table); (PutObject box table); 
[Plan 3 / 5]
  (GotoLocation storage); (PickupObject box); (GotoLocation table); (PutObject box table); 
[Plan 4 / 5]
  (GotoLocation cabinet); (PickupObject box); (GotoLocation table); (PutObject box table); 
propose_plans_for_problems:: Now on problem 120 / 223 ... 
propose_plans_for_problems:: "move a clock to the dresser.":
[Plan 0 / 5]
  (GotoLocation wall); (PickupObject clock); (GotoLocation dresser); (PutObject clock dresser); 
[Plan 1 / 5]
  (GotoLocation wall); (PickupObject clock); (GotoLocation dresser); (PutObject clock dresser); 
[Plan 2 / 5]
  (GotoLocation nightstand); (PickupObject clock); (GotoLocation dresser); (PutObject clock dresser); 
[Plan 3 / 5]
  (GotoLocation wall); (PickupObject clock); (GotoLocation dresser); (PutObject clock dresser); 
[Plan 4 / 5]
  (GotoLocation livingroom); (PickupObject clock); (GotoLocation bedroom); (PutObject clock dresser); 
propose_plans_for_problems:: Now on problem 121 / 223 ... 
propose_plans_for_problems:: "put a cold tomato on the table.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation diningtable); (PutObject tomato diningtable); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation diningtable); (PutObject tomato diningtable); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation diningtable); (PutObject tomato diningtable); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation diningtable); (PutObject tomato diningtable); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation table); (PutObject tomato table); 
propose_plans_for_problems:: Now on problem 122 / 223 ... 
propose_plans_for_problems:: "turn on a lamp while holding a red cushion.":
[Plan 0 / 5]
  (GotoLocation lamp); (GoToLocation shelf); (PickupObject cushion); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 1 / 5]
  (GotoLocation couch); (PickupObject cushion); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 2 / 5]
  (GotoLocation bed); (PickupObject cushion); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 3 / 5]
  (GotoLocation couch); (PickupObject cushion); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 4 / 5]
  (GotoLocation chair); (PickupObject cushion); (GotoLocation lamp); (TurnOnObject lamp); 
propose_plans_for_problems:: Now on problem 123 / 223 ... 
propose_plans_for_problems:: "put a heated potato on the small black table.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation oven); (BakeObject potato oven); (GotoLocation smallblacktable); (PutObject potato smallblacktable); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation oven); (BakeObject potato oven); (GotoLocation smallblacktable); (PutObject potato smallblacktable); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation oven); (BakeObject potato oven); (GotoLocation smallblacktable); (PutObject potato smallblacktable); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation oven); (BakeObject potato oven); (GotoLocation smallblacktable); (PutObject potato smallblacktable); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation oven); (BakeObject potato oven); (GotoLocation smallblacktable); (PutObject potato smallblacktable); 
propose_plans_for_problems:: Now on problem 124 / 223 ... 
propose_plans_for_problems:: "pick up knife , cut potato , place potato in fridge , place potato into trash can.":
[Plan 0 / 5]
  (GotoLocation kitchen); (PickupObject knife); (GotoLocation countertop); (CutObject potato knife); (GotoLocation fridge); (PutObject potato fridge); (GotoLocation trashcan); (PutObject potato trashcan); 
[Plan 1 / 5]
  (GotoLocation kitchen); (PickupObject knife); (GotoLocation countertop); (CutObject potato knife); (GotoLocation fridge); (PutObject potato fridge); (GotoLocation trashcan); (PutObject potato trashcan); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject knife); (GotoLocation fridge); (CutObject potato knife); (GotoLocation countertop); (PickupObject potato); (GotoLocation fridge); (PutObject potato fridge); (GotoLocation countertop); (PickupObject potato); (GotoLocation trashcan); (PutObject potato trashcan); 
[Plan 3 / 5]
  (GotoLocation kitchen); (PickupObject knife); (GotoLocation countertop); (CutObject potato knife); (GotoLocation fridge); (PutObject potato fridge); (GotoLocation trashcan); (PutObject potato trashcan); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject knife); (CutObject potato knife); (GotoLocation fridge); (PutObject potato fridge); (GotoLocation trashcan); (PutObject potato trashcan); 
propose_plans_for_problems:: Now on problem 125 / 223 ... 
propose_plans_for_problems:: "put the keys on the couch.":
[Plan 0 / 5]
  (GotoLocation entryway); (PickupObject keys); (GotoLocation couch); (PutObject keys couch); 
[Plan 1 / 5]
  (GotoLocation entryway); (PickupObject keys); (GotoLocation livingroom); (PutObject keys couch); 
[Plan 2 / 5]
  (GotoLocation entryway); (PickupObject keys); (GotoLocation couch); (PutObject keys couch); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject keys); (GotoLocation couch); (PutObject keys couch); 
[Plan 4 / 5]
  (GotoLocation entryway); (PickupObject keys); (GotoLocation couch); (PutObject keys couch); 
propose_plans_for_problems:: Now on problem 126 / 223 ... 
propose_plans_for_problems:: "chill a loaf of bread and move it to the table.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject bread); (GotoLocation countertop); (PutObject bread countertop); (GotoLocation table); (PutObject bread table); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject loafofbread); (GotoLocation fridge); (PutObject loafofbread fridge); (GotoLocation diningtable); (PutObject loafofbread diningtable); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject bread); (GotoLocation countertop); (PutObject bread countertop); (GotoLocation diningtable); (PutObject bread diningtable); 
[Plan 3 / 5]
  (GotoLocation pantry); (PickupObject bread); (GotoLocation refrigerator); (ChillObject bread refrigerator); (GotoLocation diningtable); (PutObject bread diningtable); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject loafofbread); (GotoLocation table); (PutObject loafofbread table); 
propose_plans_for_problems:: Now on problem 127 / 223 ... 
propose_plans_for_problems:: "place a chilled slice of tomato into a bin.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation countertop); (ChillObject tomato); (GotoLocation bin); (PutObject tomato bin); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation bin); (PutObject tomato bin); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation bin); (PutObject tomato bin); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation bin); (PutObject tomato bin); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation bin); (PutObject tomato bin); 
propose_plans_for_problems:: Now on problem 128 / 223 ... 
propose_plans_for_problems:: "examine the figurine by the light.":
[Plan 0 / 5]
  (GotoLocation cabinet); (PickupObject figurine); (GotoLocation light); (ExamineObject figurine light); 
[Plan 1 / 5]
  (GotoLocation table); (PickupObject figurine); (GotoLocation light); (ExamineObject figurine light); 
[Plan 2 / 5]
  (GotoLocation shelf); (GotoLocation figurine); (GoToLocation lamp); (TurnOnObject lamp); (ExamineObject figurine)
[Plan 3 / 5]
  (GotoLocation table); (GotoLocation light); (ExamineObject figurine light); 
[Plan 4 / 5]
  (GotoLocation table); (PickupObject figurine); (GotoLocation light); (ExamineObject figurine light); 
propose_plans_for_problems:: Now on problem 129 / 223 ... 
propose_plans_for_problems:: "put a bottle in a trash can.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject bottle); (GotoLocation trashcan); (PutObject bottle trashcan); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject bottle); (GotoLocation trashcan); (PutObject bottle trashcan); 
[Plan 2 / 5]
  (GotoLocation table); (PickupObject bottle); (GotoLocation trashcan); (PutObject bottle trashcan); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject bottle); (GotoLocation trashcan); (PutObject bottle trashcan); 
[Plan 4 / 5]
  (GotoLocation table); (PickupObject bottle); (GotoLocation trashcan); (PutObject bottle trashcan); 
propose_plans_for_problems:: Now on problem 130 / 223 ... 
propose_plans_for_problems:: "put the chilled potato in the sink.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject potato); (GotoLocation sink); (PutObject potato sink); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject potato); (GotoLocation sink); (PutObject potato sink); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject potato); (GotoLocation sink); (PutObject potato sink); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject potato); (GotoLocation sink); (PutObject potato sink); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject potato); (GotoLocation sink); (PutObject potato sink); 
propose_plans_for_problems:: Now on problem 131 / 223 ... 
propose_plans_for_problems:: "put a warmed tomato in the sink.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation microwave); (WarmObject tomato microwave); (GotoLocation sinkbasin); (PutObject tomato sinkbasin); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation oven); (WarmObject tomato oven); (GotoLocation sinkbasin); (PutObject tomato sinkbasin); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation microwave); (WarmObject tomato microwave); (GotoLocation sink); (PutObject tomato sink); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation microwave); (WarmObject tomato microwave); (GotoLocation sink); (PutObject tomato sink); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation microwave); (WarmObject tomato microwave); (GotoLocation sinkbasin); (PutObject tomato sinkbasin); 
propose_plans_for_problems:: Now on problem 132 / 223 ... 
propose_plans_for_problems:: "take the box from the kitchen table , put it on the red couch.":
[Plan 0 / 5]
  (GotoLocation kitchentable); (PickupObject box); (GotoLocation redcouch); (PutObject box redcouch); 
[Plan 1 / 5]
  (GotoLocation kitchentable); (PickupObject box); (GotoLocation redcouch); (PutObject box redcouch); 
[Plan 2 / 5]
  (GotoLocation kitchentable); (PickupObject box); (GotoLocation redcouch); (PutObject box redcouch); 
[Plan 3 / 5]
  (GotoLocation kitchentable); (PickupObject box); (GotoLocation redcouch); (PutObject box redcouch); 
[Plan 4 / 5]
  (GotoLocation kitchentable); (PickupObject box); (GotoLocation redcouch); (PutObject box redcouch); 
propose_plans_for_problems:: Now on problem 133 / 223 ... 
propose_plans_for_problems:: "move a pencil to the desk shelf.":
[Plan 0 / 5]
  (GotoLocation desk); (PickupObject pencil); (GotoLocation deskshelf); (PutObject pencil deskshelf); 
[Plan 1 / 5]
  (GotoLocation desk); (PickupObject pencil); (GotoLocation shelf); (PutObject pencil shelf); 
[Plan 2 / 5]
  (GotoLocation desk); (PickupObject pencil); (GotoLocation deskshelf); (PutObject pencil deskshelf); 
[Plan 3 / 5]
  (GotoLocation desk); (PickupObject pencil); (GotoLocation shelf); (PutObject pencil shelf); 
[Plan 4 / 5]
  (GotoLocation desk); (PickupObject pencil); (GotoLocation deskshelf); (PutObject pencil deskshelf); 
propose_plans_for_problems:: Now on problem 134 / 223 ... 
propose_plans_for_problems:: "examine a key chain by the dim natural light of a living room.":
[Plan 0 / 5]
  (GotoLocation livingroom); (GotoLocation table); (PickupObject keychain); (GotoLocation window); (InspectObject keychain window); 
[Plan 1 / 5]
  (GotoLocation livingroom); (GoTowardsObject keychain); (ExamineObject keychain); 
[Plan 2 / 5]
  (TurnOnLight livingroom); (GotoLocation livingroom); (GotoLocation keychain); <GatherDetails>; (TurnOffLight livingroom); 

[Plan 3 / 5]
  (GotoLocation livingroom); (TurnOnObject lightswitch); (GotoLocation keychain); (ExamineObject keychain)
[Plan 4 / 5]
  (GotoLocation livingroom); (GotoLocation shelf); (PickupObject keychain); (GotoLocation window); (ExamineObject keychain window); 
propose_plans_for_problems:: Now on problem 135 / 223 ... 
propose_plans_for_problems:: "place a green candle on a counter.":
[Plan 0 / 5]
  (GotoLocation cabinet); (PickupObject candle); (GotoLocation countertop); (PutObject candle countertop); 
[Plan 1 / 5]
  (GotoLocation shelf); (PickupObject green_candle); (GotoLocation counter); (PutObject green_candle counter); 
[Plan 2 / 5]
  (GotoLocation shelf); (PickupObject green_candle); (GotoLocation counter); (PutObject green_candle counter); 
[Plan 3 / 5]
  (GotoLocation cabinet); (PickupObject green_candle); (GotoLocation countertop); (PutObject green_candle countertop); 
[Plan 4 / 5]
  (GotoLocation cabinet); (PickupObject candle); (GotoLocation countertop); (PutObject candle countertop); 
propose_plans_for_problems:: Now on problem 136 / 223 ... 
propose_plans_for_problems:: "put a cooked piece of potato into the fridge.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation oven); (BakeObject potato oven); (GotoLocation countertop); (PickupObject potato); (GotoLocation fridge); (PutObject potato fridge); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation stove); (CookObject potato stove); (GotoLocation fridge); (PutObject potato fridge); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation oven); (BakeObject potato oven); (GotoLocation fridge); (PutObject potato fridge); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation stove); (CookObject potato stove); (GotoLocation fridge); (PutObject potato fridge); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation oven); (BakeObject potato oven); (GotoLocation fridge); (PutObject potato fridge); 
propose_plans_for_problems:: Now on problem 137 / 223 ... 
propose_plans_for_problems:: "put a blue vase in the safe on the floor.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject bluevase); (GotoLocation safe); (OpenObject safe); (PutObject bluevase safe); (CloseObject safe); 
[Plan 1 / 5]
  (GotoLocation livingroom); (PickupObject bluevase); (GotoLocation floor); (GotoLocation safe); (PutObject bluevase safe); 
[Plan 2 / 5]
  (GotoLocation table); (PickupObject vase); (GotoLocation safe); (PutObject vase safe); 
[Plan 3 / 5]
  (GotoLocation mantel); (PickupObject vase); (GotoLocation floor); (PutObject vase safe); 
[Plan 4 / 5]
  (GotoLocation table); (PickupObject vase); (GotoLocation floor); (PutObject vase safe); 
propose_plans_for_problems:: Now on problem 138 / 223 ... 
propose_plans_for_problems:: "move a pencil from the table to the counter.":
[Plan 0 / 5]
  (GotoLocation table); (PickupObject pencil); (GotoLocation counter); (PutObject pencil counter); 
[Plan 1 / 5]
  (GotoLocation table); (PickupObject pencil); (GotoLocation counter); (PutObject pencil counter); 
[Plan 2 / 5]
  (GotoLocation table); (PickupObject pencil); (GotoLocation counter); (PutObject pencil counter); 
[Plan 3 / 5]
  (GotoLocation table); (PickupObject pencil); (GotoLocation counter); (PutObject pencil counter); 
[Plan 4 / 5]
  (GotoLocation table); (PickupObject pencil); (GotoLocation counter); (PutObject pencil counter); 
propose_plans_for_problems:: Now on problem 139 / 223 ... 
propose_plans_for_problems:: "put a clean mug in the coffee machine.":
[Plan 0 / 5]
  (GotoLocation cabinet); (PickupObject mug); (GotoLocation coffeemachine); (PutObject mug coffeemachine); 
[Plan 1 / 5]
  (GotoLocation cabinet); (PickupObject mug); (GotoLocation coffeemachine); (PutObject mug coffeemachine); 
[Plan 2 / 5]
  (GotoLocation cabinet); (PickupObject mug); (GotoLocation coffeemachine); (PutObject mug coffeemachine); 
[Plan 3 / 5]
  (GotoLocation cabinet); (PickupObject mug); (GotoLocation coffeemachine); (PutObject mug coffeemachine); 
[Plan 4 / 5]
  (GotoLocation cabinet); (PickupObject mug); (GotoLocation coffeemachine); (PutObject mug coffeemachine); 
propose_plans_for_problems:: Now on problem 140 / 223 ... 
propose_plans_for_problems:: "place wet soap in a cabinet.":
[Plan 0 / 5]
  (FillObject sinkbasin); (GotoLocation sinkbasin); (PutObject soap sinkbasin); (GotoLocation cabinet); (PickupObject soap); (PutObject soap cabinet); 
[Plan 1 / 5]
  (GotoLocation sink); (PickupObject soap); (FillObject sink with water); (GotoLocation cabinet); (PutObject soap cabinet); 
[Plan 2 / 5]
  (FillObject sinkbasin); (GotoLocation sinkbasin); (PickupObject soap); (GotoLocation cabinet); (PutObject soap cabinet); 
[Plan 3 / 5]
  (GotoLocation bathroom); (PickupObject soap); (GotoLocation sink); (WetObject soap); (GotoLocation cabinet); (PutObject soap cabinet); 
[Plan 4 / 5]
  (GotoLocation sink); (PickupObject soap); (GotoLocation cabinet); (PutObject soap cabinet); 
propose_plans_for_problems:: Now on problem 141 / 223 ... 
propose_plans_for_problems:: "move pen from desk to shelf.":
[Plan 0 / 5]
  (GotoLocation desk); (PickupObject pen); (GotoLocation shelf); (PutObject pen shelf); 
[Plan 1 / 5]
  (GotoLocation desk); (PickupObject pen); (GotoLocation shelf); (PutObject pen shelf); 
[Plan 2 / 5]
  (GotoLocation desk); (PickupObject pen); (GotoLocation shelf); (PutObject pen shelf); 
[Plan 3 / 5]
  (GotoLocation desk); (PickupObject pen); (GotoLocation shelf); (PutObject pen shelf); 
[Plan 4 / 5]
  (GotoLocation desk); (PickupObject pen); (GotoLocation shelf); (PutObject pen shelf); 
propose_plans_for_problems:: Now on problem 142 / 223 ... 
propose_plans_for_problems:: "move a book into a cabinet.":
[Plan 0 / 5]
  (GotoLocation bookshelf); (PickupObject book); (GotoLocation cabinet); (PutObject book cabinet); 
[Plan 1 / 5]
  (GotoLocation bookshelf); (PickupObject book); (GotoLocation cabinet); (PutObject book cabinet); 
[Plan 2 / 5]
  (GotoLocation bookshelf); (PickupObject book); (GotoLocation cabinet); (PutObject book cabinet); 
[Plan 3 / 5]
  (GotoLocation bookshelf); (PickupObject book); (GotoLocation cabinet); (PutObject book cabinet); 
[Plan 4 / 5]
  (GotoLocation bookshelf); (PickupObject book); (GotoLocation cabinet); (PutObject book cabinet); 
propose_plans_for_problems:: Now on problem 143 / 223 ... 
propose_plans_for_problems:: "pick up a smartphone , turn on a lamp.":
[Plan 0 / 5]
  (GotoLocation table); (PickupObject smartphone); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 1 / 5]
  (GotoLocation couch); (PickupObject smartphone); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 2 / 5]
  (GotoLocation bedroom); (PickupObject smartphone); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject smartphone); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 4 / 5]
  (GotoLocation nightstand); (PickupObject smartphone); (GotoLocation desk); (TurnOnObject lamp); 
propose_plans_for_problems:: Now on problem 144 / 223 ... 
propose_plans_for_problems:: "put a chilled slice of lettuce on the counter.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation countertop); (PutObject lettuce countertop); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation countertop); (PutObject lettuce countertop); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (PutObject lettuce countertop); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation countertop); (PutObject lettuce countertop); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation countertop); (PutObject lettuce countertop); 
propose_plans_for_problems:: Now on problem 145 / 223 ... 
propose_plans_for_problems:: "move the cd that ' s on top of the desk to on top of the dresser.":
[Plan 0 / 5]
  (GotoLocation desk); (PickupObject cd); (GotoLocation dresser); (PutObject cd dresser); 
[Plan 1 / 5]
  (GotoLocation desk); (PickupObject cd); (GotoLocation dresser); (PutObject cd dresser); 
[Plan 2 / 5]
  (GotoLocation desk); (PickupObject cd); (GotoLocation dresser); (PutObject cd dresser); 
[Plan 3 / 5]
  (GotoLocation desk); (PickupObject cd); (GotoLocation dresser); (PutObject cd dresser); 
[Plan 4 / 5]
  (GotoLocation desk); (PickupObject cd); (GotoLocation dresser); (PutObject cd dresser); 
propose_plans_for_problems:: Now on problem 146 / 223 ... 
propose_plans_for_problems:: "put a cleaned fork on the table.":
[Plan 0 / 5]
  (GotoLocation sink); (PickupObject fork); (GotoLocation table); (PutObject fork table); 
[Plan 1 / 5]
  (GotoLocation sink); (PickupObject fork); (GotoLocation diningtable); (PutObject fork diningtable); 
[Plan 2 / 5]
  (GotoLocation sink); (PickupObject fork); (GotoLocation table); (PutObject fork table); 
[Plan 3 / 5]
  (GotoLocation sink); (FillObject sink); (GotoLocation cabinet); (PickupObject fork); (GotoLocation table); (PutObject fork table); 
[Plan 4 / 5]
  (GotoLocation sinkbasin); (PickupObject fork); (GotoLocation table); (PutObject fork table); 
propose_plans_for_problems:: Now on problem 147 / 223 ... 
propose_plans_for_problems:: "place a cooled plate in a cabinet.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject plate); (GotoLocation sink); (FillObject sinkbasin); (GotoLocation sinkbasin); (PutObject plate sinkbasin); (GotoLocation cabinet); (PutObject plate cabinet); 
[Plan 1 / 5]
  (GotoLocation diningtable); (PickupObject plate); (GotoLocation sinkbasin); (FillObject sinkbasin); (GotoLocation countertop); (WashObject plate sinkbasin); (GotoLocation cabinet); (PutObject plate cabinet); 
[Plan 2 / 5]
  (GotoLocation diningtable); (PickupObject plate); (GoToLocation sinkbasin); (FillObject sinkbasin); (PutObject plate sinkbasin); (GotoLocation countertop); (GrateObject cheese grater); (GoToLocation diningtable); (PutObject cheese diningtable); (GoToLocation cabinet); (PickupObject plate); (GoToLocation countertop); (GrateObject apple grater); (GoToLocation diningtable); (PutObject apple diningtable); (GoToLocation sinkbasin); (PickupObject plate); (GoToLocation cabinet); (PutObject plate cabinet); 
[Plan 3 / 5]
  (GotoLocation diningtable); (PickupObject plate); (GotoLocation sinkbasin); (FillObject sinkbasin); (GotoLocation cabinet); (PutObject plate cabinet); 
[Plan 4 / 5]
  (GotoLocation sinkbasin); (PickupObject plate); (GotoLocation countertop); (PutObject plate countertop); (GotoLocation diningtable); (PickupObject towel); (GotoLocation countertop); (WipeObject plate towel); (GotoLocation cabinet); (PutObject plate cabinet); 
propose_plans_for_problems:: Now on problem 148 / 223 ... 
propose_plans_for_problems:: "put a heated apple in the fridge.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation oven); (BakeObject apple oven); (GotoLocation fridge); (PutObject apple fridge); 
[Plan 1 / 5]
  (GotoLocation sidetable); (PickupObject apple); (GotoLocation oven); (BakeObject apple oven); (GotoLocation fridge); (PutObject apple fridge); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation oven); (BakeObject apple oven); (GotoLocation fridge); (PutObject apple fridge); 
[Plan 3 / 5]
  (GotoLocation sidetable); (PickupObject apple); (GotoLocation oven); (BakeObject apple oven); (GotoLocation fridge); (PutObject apple fridge); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation stove); (HeatObject apple stove); (GotoLocation fridge); (PutObject apple fridge); 
propose_plans_for_problems:: Now on problem 149 / 223 ... 
propose_plans_for_problems:: "slice the bell pepper in the fridge.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject bellpepper); (GotoLocation countertop); (SliceObject bellpepper); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject bellpepper); (GotoLocation countertop); (SliceObject bellpepper)
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject bellpepper); (GotoLocation countertop); (SliceObject bellpepper countertop)
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject bellpepper); (GotoLocation countertop); (PutObject bellpepper countertop); (GotoLocation cabinet); (PickupObject knife); (GotoLocation countertop); (SliceObject bellpepper knife); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject bellpepper); (GotoLocation countertop); (SliceObject bellpepper); 
propose_plans_for_problems:: Now on problem 150 / 223 ... 
propose_plans_for_problems:: "put a heated tomato slice in the sink.":
[Plan 0 / 5]
  (GotoLocation oven); (PickupObject tomato); (BakeObject tomato oven); (GotoLocation sink); (PutObject tomato sink); 
[Plan 1 / 5]
  (GotoLocation oven); (PickupObject tomato); (GotoLocation sinkbasin); (PutObject tomato sinkbasin); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation stove); (HeatObject tomato stove); (GotoLocation sinkbasin); (PutObject tomato sinkbasin); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation stove); (HeatObject tomato stove); (GotoLocation sink); (PutObject tomato sink); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation stove); (HeatObject tomato stove); (GotoLocation sinkbasin); (PutObject tomato sinkbasin); 
propose_plans_for_problems:: Now on problem 151 / 223 ... 
propose_plans_for_problems:: "put a chilled mug on the coffee maker.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject mug); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject mug); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject mug); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject mug); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject mug); (GotoLocation countertop); (PutObject mug countertop); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
propose_plans_for_problems:: Now on problem 152 / 223 ... 
propose_plans_for_problems:: "slice lettuce on the table with the knife.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation diningtable); (PutObject lettuce diningtable); (GotoLocation drawer); (PickupObject knife); (GotoLocation diningtable); (SliceObject lettuce knife); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation diningtable); (PutObject lettuce diningtable); (GotoLocation cabinet); (PickupObject knife); (GotoLocation diningtable); (SliceObject lettuce knife); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation diningtable); (PutObject lettuce diningtable); (GotoLocation drawer); (PickupObject knife); (GotoLocation diningtable); (SliceObject lettuce knife); 
[Plan 3 / 5]
  (GotoLocation cabinet); (PickupObject knife); (GotoLocation diningtable); (PickupObject lettuce); (GotoLocation countertop); (SliceObject lettuce knife); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation diningtable); (PickupObject knife); (GotoLocation diningtable); (SliceObject lettuce knife); 
propose_plans_for_problems:: Now on problem 153 / 223 ... 
propose_plans_for_problems:: "to cool a piece of apple and place it on the kitchen table.":
[Plan 0 / 5]
  (GotoLocation oven); (PickupObject apple); (CoolObject apple); (GotoLocation kitchentable); (PutObject apple kitchentable); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation fridge); (PutObject apple fridge); (GotoLocation fridge); (PickupObject apple); (GotoLocation table); (PutObject apple table); 
[Plan 2 / 5]
  (GotoLocation sidetable); (PickupObject apple); (GotoLocation fridge); (PutObject apple fridge); (GotoLocation kitchenTable); (TurnOnObject fan); (GotoLocation fridge); (PickupObject apple); (GotoLocation kitchenTable); (PutObject apple kitchenTable); (TurnOffObject fan); 
[Plan 3 / 5]
  (GotoLocation oven); (PickupObject apple); (BakeObject apple oven); (GotoLocation fridge); (PutObject apple fridge); (GotoLocation kitchentable); (PickupObject apple); (GotoLocation fridge); (TakeObject apple fridge); (PutObject apple kitchentable); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject apple); (GotoLocation kitchenTable); (PutObject apple kitchenTable); 
propose_plans_for_problems:: Now on problem 154 / 223 ... 
propose_plans_for_problems:: "put heated egg on kitchen table.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject egg); (GotoLocation stove); (CookObject egg stove); (GotoLocation countertop); (PutObject egg countertop); (GotoLocation diningtable); (PickupObject plate); (PutObject egg plate); (PutObject plate diningtable); 
[Plan 1 / 5]
  (GotoLocation stove); (PickupObject egg); (GotoLocation kitchenTable); (PutObject egg kitchenTable); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject egg); (GotoLocation stove); (HeatObject egg stove); (GotoLocation kitchentable); (PutObject egg kitchentable); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject egg); (GotoLocation stove); (CookObject egg stove); (GotoLocation kitchentable); (PutObject egg kitchentable); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject egg); (GotoLocation stove); (HeatObject egg stove); (GotoLocation kitchentable); (PutObject egg kitchentable); 
propose_plans_for_problems:: Now on problem 155 / 223 ... 
propose_plans_for_problems:: "clean mug in sink and return to coffee maker.":
[Plan 0 / 5]
  (GotoLocation sink); (PickupObject mug); (GotoLocation sinkbasin); (PutObject mug sinkbasin); (FillObject sinkbasin); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 1 / 5]
  (GotoLocation sinkbasin); (CleanObject mug); (GotoLocation countertop); (PickupObject mug); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 2 / 5]
  (GotoLocation sink); (PutObject mug sink); (FillObject sinkbasin); (WashObject mug sinkbasin); (GotoLocation cabinet); (PickupObject mug); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 3 / 5]
  (GotoLocation sinkbasin); (PickupObject mug); (CleanObject mug); (PutObject mug sinkbasin); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 4 / 5]
  (GotoLocation sink); (PickupObject mug); (WashObject mug sink); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
propose_plans_for_problems:: Now on problem 156 / 223 ... 
propose_plans_for_problems:: "to cool a tomato slice plus place it in the microwave.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation microwave); (PutObject tomato microwave); (CoolObject tomato)
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject tomato); (CoolObject tomato); (GotoLocation microwave); (PutObject tomato microwave); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation countertop); (CoolObject tomato); (GotoLocation microwave); (PutObject tomato microwave); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject tomato); (CoolObject tomato); (GotoLocation microwave); (PutObject tomato microwave); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation fridge); (CoolObject tomato fridge); (GotoLocation microwave); (PutObject tomato microwave); 
propose_plans_for_problems:: Now on problem 157 / 223 ... 
propose_plans_for_problems:: "heat up mug , put mug in cabinet.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject mug); (GotoLocation microwave); (HeatObject mug microwave); (GotoLocation cabinet); (PutObject mug cabinet); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject mug); (GotoLocation microwave); (HeatObject mug microwave); (GotoLocation cabinet); (PutObject mug cabinet); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject mug); (GotoLocation microwave); (HeatObject mug microwave); (GotoLocation cabinet); (PutObject mug cabinet); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject mug); (GotoLocation microwave); (HeatObject mug microwave); (GotoLocation cabinet); (PutObject mug cabinet); 
[Plan 4 / 5]
  (GotoLocation microwave); (PickupObject mug); (HeatObject mug microwave); (GotoLocation cabinet); (PutObject mug cabinet); 
propose_plans_for_problems:: Now on problem 158 / 223 ... 
propose_plans_for_problems:: "put a chilled egg on the counter.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject egg); (GotoLocation countertop); (PutObject egg countertop); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject egg); (GotoLocation countertop); (PutObject egg countertop); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject egg); (GotoLocation countertop); (PutObject egg countertop); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject egg); (GotoLocation countertop); (PutObject egg countertop); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject egg); (GotoLocation countertop); (PutObject egg countertop); 
propose_plans_for_problems:: Now on problem 159 / 223 ... 
propose_plans_for_problems:: "wash the cloth from the tub in the sink , put it back in the tub.":
[Plan 0 / 5]
  (GotoLocation tub); (PickupObject cloth); (GotoLocation sink); (WashObject cloth sink); (GotoLocation tub); (PutObject cloth tub); 
[Plan 1 / 5]
  (GotoLocation tub); (PickupObject cloth); (GotoLocation sinkbasin); (PutObject cloth sinkbasin); (GotoLocation tub); (PutObject cloth tub); 
[Plan 2 / 5]
  (GotoLocation tub); (PickupObject cloth); (GotoLocation sinkbasin); (PutObject cloth sinkbasin); (GotoLocation tub); (PutObject cloth tub); 
[Plan 3 / 5]
  (GotoLocation tub); (PickupObject cloth); (GotoLocation sink); (WashObject cloth sink); (GotoLocation tub); (PutObject cloth tub); 
[Plan 4 / 5]
  (GotoLocation tub); (PickupObject cloth); (GotoLocation sinkbasin); (PutObject cloth sinkbasin); (GotoLocation tub); (PutObject cloth tub); 
propose_plans_for_problems:: Now on problem 160 / 223 ... 
propose_plans_for_problems:: "put a candle on a table.":
[Plan 0 / 5]
  (GotoLocation cabinet); (PickupObject candle); (GotoLocation table); (PutObject candle table); 
[Plan 1 / 5]
  (GotoLocation candleholder); (PickupObject candle); (GotoLocation table); (PutObject candle table); 
[Plan 2 / 5]
  (GotoLocation cabinet); (PickupObject candle); (GotoLocation table); (PutObject candle table); 
[Plan 3 / 5]
  (GotoLocation cabinet); (PickupObject candle); (GotoLocation table); (PutObject candle table); 
[Plan 4 / 5]
  (GotoLocation cabinet); (PickupObject candle); (GotoLocation table); (PutObject candle table); 
propose_plans_for_problems:: Now on problem 161 / 223 ... 
propose_plans_for_problems:: "place a clean tomato on the counter.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation countertop); (PutObject tomato countertop); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation sink); (WashObject tomato); (GotoLocation countertop); (PutObject tomato countertop); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation countertop); (PutObject tomato countertop); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation countertop); (PutObject tomato countertop); 
[Plan 4 / 5]
  (GotoLocation sink); (PickupObject tomato); (WashObject tomato); (GotoLocation countertop); (PutObject tomato countertop); 
propose_plans_for_problems:: Now on problem 162 / 223 ... 
propose_plans_for_problems:: "warm up an egg to put in the fridge.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject egg); (GotoLocation microwave); (HeatObject egg microwave); (GotoLocation fridge); (PutObject egg fridge); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject egg); (GotoLocation microwave); (HeatObject egg microwave); (GotoLocation fridge); (PutObject egg fridge); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject egg); (GotoLocation microwave); (WarmObject egg microwave); (GotoLocation fridge); (PutObject egg fridge); 
[Plan 3 / 5]
  (GotoLocation fridge); (PutObject egg fridge); (GotoLocation microwave); (HeatObject egg microwave); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject egg); (GotoLocation microwave); (WarmObject egg microwave); (GotoLocation fridge); (PutObject egg fridge); 
propose_plans_for_problems:: Now on problem 163 / 223 ... 
propose_plans_for_problems:: "return a washed spatula to a kitchen counter.":
[Plan 0 / 5]
  (GotoLocation sink); (WashObject spatula); (GotoLocation countertop); (PutObject spatula countertop); 
[Plan 1 / 5]
  (GotoLocation sink); (PickupObject spatula); (GotoLocation countertop); (PutObject spatula countertop); 
[Plan 2 / 5]
  (FillObject sinkbasin); (GotoLocation cabinet); (PickupObject spatula); (GotoLocation sinkbasin); (WashObject spatula sinkbasin); (GotoLocation countertop); (PutObject spatula countertop); 
[Plan 3 / 5]
  (GotoLocation sink); (PickupObject spatula); (GotoLocation countertop); (PutObject spatula countertop); 
[Plan 4 / 5]
  (GotoLocation sink); (PickupObject spatula); (GotoLocation countertop); (PutObject spatula countertop); 
propose_plans_for_problems:: Now on problem 164 / 223 ... 
propose_plans_for_problems:: "throw away a cooked slice of potato.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation trashcan); (PutObject potato trashcan); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject slicepotato); (GotoLocation trashcan); (PutObject slicepotato trashcan); 
[Plan 2 / 5]
  (GotoLocation diningtable); (PickupObject plate); (PickupObject potato); (PutObject potato plate); (GotoLocation trashcan); (DiscardObject plate); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject potato); (CookObject potato); (ThrowAwayObject potato); 
[Plan 4 / 5]
  (GotoLocation diningtable); (PickupObject plate); (ThrowObjectAway plate); 
propose_plans_for_problems:: Now on problem 165 / 223 ... 
propose_plans_for_problems:: "putting a hot apple in the sink.":
[Plan 0 / 5]
  (GotoLocation sidetable); (PickupObject apple); (GotoLocation oven); (BakeObject apple oven); (GotoLocation sinkbasin); (PutObject apple sinkbasin); 
[Plan 1 / 5]
  (GotoLocation sidetable); (PickupObject apple); (GotoLocation oven); (BakeObject apple oven); (GotoLocation sinkbasin); (PutObject apple sinkbasin); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation oven); (BakeObject apple oven); (GotoLocation sinkbasin); (PutObject apple sinkbasin); 
[Plan 3 / 5]
  (GotoLocation oven); (PickupObject apple); (GotoLocation sinkbasin); (PutObject apple sinkbasin); 
[Plan 4 / 5]
  (GotoLocation oven); (PickupObject apple); (GotoLocation sinkbasin); (PutObject apple sinkbasin); 
propose_plans_for_problems:: Now on problem 166 / 223 ... 
propose_plans_for_problems:: "examine a pen by the light of a floor lamp.":
[Plan 0 / 5]
  (GotoLocation penholder); (PickupObject pen); (GotoLocation floorlamp); (ExamineObject pen floorlamp); 
[Plan 1 / 5]
  (GotoLocation floorlamp); (GotoLocation desk); (PickupObject pen); (GotoLocation floorlamp); (ExamineObject pen floorlamp); 
[Plan 2 / 5]
  (GotoLocation desk); (PickupObject pen); (GotoLocation floorlamp); (TurnOnObject floorlamp); (GoCloserToObject floorlamp pen); (ExamineObject pen); (TurnOffObject floorlamp); 
[Plan 3 / 5]
  (GotoLocation desk); (PickupObject pen); (GotoLocation floorlamp); (TurnOnObject floorlamp); (ExamineObject pen floorlamp); 
[Plan 4 / 5]
  (GotoLocation desk); (GotoLocation pen); (GotoLocation floorlamp); (PutObject pen floorlamp); (GotoLocation desk); (ExamineObject pen)
propose_plans_for_problems:: Now on problem 167 / 223 ... 
propose_plans_for_problems:: "place a washed kettle on a kitchen counter top.":
[Plan 0 / 5]
  (GotoLocation sink); (FillObject sinkbasin); (GotoLocation sinkbasin); (PutObject kettle sinkbasin); (GotoLocation countertop); (PickupObject kettle); (GotoLocation sink); (EmptyObject kettle sink); (GotoLocation countertop); (PutObject kettle countertop); 
[Plan 1 / 5]
  (GotoLocation sink); (PickupObject kettle); (FillObject kettle); (GotoLocation countertop); (PutObject kettle countertop); 
[Plan 2 / 5]
  (GotoLocation sink); (PickupObject kettle); (GotoLocation countertop); (PutObject kettle countertop); 
[Plan 3 / 5]
  (GotoLocation sink); (PickupObject kettle); (GotoLocation countertop); (PutObject kettle countertop); 
[Plan 4 / 5]
  (GotoLocation sink); (FillObject sink); (GotoLocation kitchencountertop); (PickupObject kettle); (PutObject kettle kitchencountertop); 
propose_plans_for_problems:: Now on problem 168 / 223 ... 
propose_plans_for_problems:: "place a spray bottle on top of a toilet cistern.":
[Plan 0 / 5]
  (GotoLocation bathroom); (GotoLocation cabinet); (PickupObject spraybottle); (GotoLocation toilet); (PutObject spraybottle cistern); 
[Plan 1 / 5]
  (GotoLocation bathroom); (PickupObject spraybottle); (GotoLocation toilet); (PutObject spraybottle cistern); 
[Plan 2 / 5]
  (GotoLocation bathroom); (PickupObject spraybottle); (GotoLocation toiletcistern); (PutObject spraybottle toiletcistern); 
[Plan 3 / 5]
  (GotoLocation bathroom); (PickupObject spraybottle); (GotoLocation toilet); (PutObject spraybottle toilet); 
[Plan 4 / 5]
  (GotoLocation bathroom); (PickupObject spraybottle); (GotoLocation toilet); (PutObject spraybottle toiletcistern); 
propose_plans_for_problems:: Now on problem 169 / 223 ... 
propose_plans_for_problems:: "move a heated piece of apple from the refrigerator to the table.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject apple); (GotoLocation countertop); (HeatObject apple); (GotoLocation diningtable); (PutObject apple diningtable); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject apple); (GotoLocation countertop); (HeatObject apple); (GotoLocation diningtable); (PutObject apple diningtable); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject apple); (GotoLocation countertop); (PutObject apple countertop); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject apple); (GotoLocation oven); (BakeObject apple oven); (GotoLocation fridge); (PutObject apple fridge); (GotoLocation diningtable); (PickupObject apple); (GotoLocation fridge); (GotoLocation diningtable); (PutObject apple diningtable); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject apple); (GotoLocation microwave); (HeatObject apple microwave); (GotoLocation table); (PutObject apple table); 
propose_plans_for_problems:: Now on problem 170 / 223 ... 
propose_plans_for_problems:: "place a chilled piece of apple between the two tomatoes on the table.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject apple); (GotoLocation diningtable); (PickupObject tomato); (GotoLocation diningtable); (PutObject apple diningtable); (GotoLocation diningtable); (PutObject tomato diningtable); (GotoLocation diningtable); (PutObject apple diningtable); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject apple); (GotoLocation diningtable); (PickupObject tomato); (GotoLocation table); (PutObject apple table); (GotoLocation table); (PutObject tomato table); (GotoLocation table); (PutObject apple table); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject apple); (GotoLocation table); (PlaceObject apple between-tomatoes); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject apple); (GotoLocation diningtable); (PutObject apple diningtable); (GotoLocation fridge); (PickupObject tomato); (GotoLocation diningtable); (PutObject tomato diningtable); (GotoLocation diningtable); (PickupObject tomato); (GotoLocation diningtable); (PutObject tomato diningtable); (GotoLocation diningtable); (PickupObject apple); (GotoLocation diningtable); (PutObject apple diningtable); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject apple); (GotoLocation table); (PutObject apple table); (GotoLocation fridge); (PickupObject tomato1); (PutObject tomato1 table); (GotoLocation fridge); (PickupObject tomato2); (PutObject tomato2 table); 
propose_plans_for_problems:: Now on problem 171 / 223 ... 
propose_plans_for_problems:: "pick up the pen from the dresser and turn the lamp on.":
[Plan 0 / 5]
  (GotoLocation dresser); (PickupObject pen); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 1 / 5]
  (GotoLocation dresser); (PickupObject pen); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 2 / 5]
  (GotoLocation dresser); (PickupObject pen); (GotoLocation desk); (TurnOnObject desk lamp); 
[Plan 3 / 5]
  (GotoLocation dresser); (PickupObject pen); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 4 / 5]
  (GotoLocation dresser); (PickupObject pen); (GotoLocation lamp); (TurnOnObject lamp); 
propose_plans_for_problems:: Now on problem 172 / 223 ... 
propose_plans_for_problems:: "move a rag from a cabinet to the sink.":
[Plan 0 / 5]
  (GotoLocation cabinet); (PickupObject rag); (GotoLocation sink); (PutObject rag sink); 
[Plan 1 / 5]
  (GotoLocation cabinet); (PickupObject rag); (GotoLocation sinkbasin); (PutObject rag sinkbasin); 
[Plan 2 / 5]
  (GotoLocation cabinet); (PickupObject rag); (GotoLocation sink); (PutObject rag sink); 
[Plan 3 / 5]
  (GotoLocation cabinet); (PickupObject rag); (GotoLocation sinkbasin); (PutObject rag sinkbasin); 
[Plan 4 / 5]
  (GotoLocation cabinet); (PickupObject rag); (GotoLocation sinkbasin); (PutObject rag sinkbasin); 
propose_plans_for_problems:: Now on problem 173 / 223 ... 
propose_plans_for_problems:: "examine a remote in the light of a tall lamp.":
[Plan 0 / 5]
  (GotoLocation livingroom); (GotoLocation talllamp); (TurnOnObject talllamp); (GotoLocation coffeeTable); (PickupObject remote); (GotoLocation talllamp); (ExamineObject remote talllamp); 
[Plan 1 / 5]
  (GotoLocation desk); (PickupObject remote); (GotoLocation talllamp); (TurnOnObject talllamp); (GotoLocation desk); (ExamineObject remote desk); 
[Plan 2 / 5]
  (GotoLocation couch); (PickupObject remote); (GotoLocation lamptable); (TurnOnObject lamp); (GotoLocation lamptable); (PutObject remote lamptable); 
[Plan 3 / 5]
  (GotoLocation livingroom); (GotoLocation talllamp); (TurnOnObject talllamp); (GotoLocation couch); (PickupObject remote); (GotoLocation talllamp); (ExamineObject remote talllamp); 
[Plan 4 / 5]
  (GotoLocation talllamp); (GotoLocation tvcabinet); (PickupObject remote); (GotoLocation talllamp); (ExamineObject remote talllamp); 
propose_plans_for_problems:: Now on problem 174 / 223 ... 
propose_plans_for_problems:: "put a cooked potato in the trash can.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation oven); (BakeObject potato oven); (GotoLocation countertop); (PutObject potato countertop); (GotoLocation trashcan); (PutObject potato trashcan); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation oven); (BakeObject potato oven); (GotoLocation trashcan); (PutObject potato trashcan); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation oven); (BakeObject potato oven); (GotoLocation trashcan); (PutObject potato trashcan); 
[Plan 3 / 5]
  (GotoLocation oven); (CookObject potato oven); (GotoLocation trashcan); (PutObject potato trashcan); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation trashcan); (PutObject potato trashcan); 
propose_plans_for_problems:: Now on problem 175 / 223 ... 
propose_plans_for_problems:: "put a heated slice of bred in a bin.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation oven); (BakeObject bread oven); (GotoLocation bin); (PutObject bread bin); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation toaster); (HeatObject bread toaster); (GotoLocation bin); (PutObject bread bin); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation toaster); (HeatObject bread toaster); (GotoLocation bin); (PutObject bread bin); 
[Plan 3 / 5]
  (GotoLocation toaster); (PutObject bread toaster); (HeatObject toaster); (GotoLocation bin); (PutObject bread bin); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation toaster); (ToastObject bread toaster); (GotoLocation bin); (PutObject bread bin); 
propose_plans_for_problems:: Now on problem 176 / 223 ... 
propose_plans_for_problems:: "pick up a credit card and turn a lamp on.":
[Plan 0 / 5]
  (GotoLocation wallet); (PickupObject creditcard); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 1 / 5]
  (GotoLocation drawer); (PickupObject creditcard); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 2 / 5]
  (GotoLocation table); (PickupObject creditcard); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 3 / 5]
  (GotoLocation kitchen); (PickupObject creditcard); (GotoLocation livingroom); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 4 / 5]
  (GotoLocation table); (PickupObject credit_card); (GotoLocation lamp); (TurnOnObject lamp); 
propose_plans_for_problems:: Now on problem 177 / 223 ... 
propose_plans_for_problems:: "put the heated cup on the shelf.":
[Plan 0 / 5]
  (GotoLocation table); (PickupObject cup); (GotoLocation microwave); (HeatObject cup microwave); (GotoLocation shelf); (PutObject cup shelf); 
[Plan 1 / 5]
  (GotoLocation shelf); (PickupObject cup); (GotoLocation microwave); (HeatObject cup microwave); (GotoLocation shelf); (PutObject cup shelf); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject cup); (GotoLocation microwave); (HeatObject cup microwave); (GotoLocation shelf); (PutObject cup shelf); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject cup); (GotoLocation microwave); (HeatObject cup microwave); (GotoLocation shelf); (PutObject cup shelf); 
[Plan 4 / 5]
  (GotoLocation microwave); (PickupObject cup); (GotoLocation shelf); (PutObject cup shelf); 
propose_plans_for_problems:: Now on problem 178 / 223 ... 
propose_plans_for_problems:: "turn on desk lamp with clock in hand.":
[Plan 0 / 5]
  (GotoLocation clock); (PickupObject clock); (GotoLocation desklamp); (TurnOnObject desklamp clock); 
[Plan 1 / 5]
  (GotoLocation table); (PickupObject clock); (GotoLocation desklamp); (TurnOnObject desklamp); 
[Plan 2 / 5]
  (GotoLocation table); (PickupObject clock); (GotoLocation desklamp); (TurnOnObject desklamp); 
[Plan 3 / 5]
  (GotoLocation desk); (PickupObject clock); (GotoLocation desklamp); (TurnOnObject desklamp); 
[Plan 4 / 5]
  (GotoLocation desk); (PickupObject clock); (GotoLocation desklamp); (TurnOnObject desklamp); 
propose_plans_for_problems:: Now on problem 179 / 223 ... 
propose_plans_for_problems:: "use the knife to cut the lettuce on the table.":
[Plan 0 / 5]
  (GotoLocation cupboard); (PickupObject knife); (GotoLocation table); (CutObject lettuce knife); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject knife); (GotoLocation diningtable); (PickupObject lettuce); (CutObject lettuce knife); (PutObject lettuce diningtable); 
[Plan 2 / 5]
  (GotoLocation cabinet); (PickupObject knife); (GotoLocation diningtable); (PickupObject lettuce); (GotoLocation diningtable); (CutObject lettuce knife); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject knife); (GotoLocation diningtable); (CutObject lettuce knife); 
[Plan 4 / 5]
  (GotoLocation cabinet); (PickupObject knife); (GotoLocation diningtable); (PickupObject lettuce); (GotoLocation countertop); (CutObject lettuce knife); 
propose_plans_for_problems:: Now on problem 180 / 223 ... 
propose_plans_for_problems:: "place a hot plate on top of the shelves in the corner of the kitchen.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject plate); (GotoLocation corner); (PutObject plate shelves); (GotoLocation stove); (TurnOnObject stove); (GotoLocation countertop); (PickupObject hotplate); (GotoLocation corner); (PutObject hotplate shelves); 
[Plan 1 / 5]
  (GotoLocation kitchen); (PickupObject hotplate); (GotoLocation shelves); (PutObject hotplate shelves); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject plate); (GotoLocation stove); (HeatObject plate stove); (GotoLocation shelves); (PutObject plate shelves); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject plate); (GotoLocation kitchencorner); (PutObject plate shelves); (GotoLocation stove); (TurnOnObject stove); (GotoLocation countertop); (PickupObject hotplate); (GotoLocation kitchencorner); (PutObject hotplate shelves); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject plate); (GotoLocation oven); (BakeObject plate oven); (GotoLocation shelves); (PutObject plate shelves); 
propose_plans_for_problems:: Now on problem 181 / 223 ... 
propose_plans_for_problems:: "put a chilled head of lettuce on a black table.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation countertop); (PutObject lettuce countertop); (GotoLocation blacktable); (PutObject lettuce blacktable); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation blacktable); (PutObject lettuce blacktable); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation tabletop); (PutObject lettuce tabletop); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation blackTable); (PutObject lettuce blackTable); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject lettuce); (GotoLocation countertop); (PutObject lettuce countertop); (GotoLocation blacktable); (PutObject lettuce blacktable); 
propose_plans_for_problems:: Now on problem 182 / 223 ... 
propose_plans_for_problems:: "put washed tomato in fridge.":
[Plan 0 / 5]
  (GotoLocation sink); (PickupObject tomato); (GotoLocation countertop); (WashObject tomato); (GotoLocation fridge); (PutObject tomato fridge); 
[Plan 1 / 5]
  (GotoLocation sink); (PutObject tomato sink); (FillObject sink); (GotoLocation fridge); (PutObject tomato fridge); 
[Plan 2 / 5]
  (GotoLocation sink); (PickupObject tomato); (GotoLocation fridge); (PutObject tomato fridge); 
[Plan 3 / 5]
  (GotoLocation sink); (PickupObject tomato); (GotoLocation fridge); (PutObject tomato fridge); 
[Plan 4 / 5]
  (GotoLocation sink); (GotoLocation fridge); (PutObject tomato fridge); 
propose_plans_for_problems:: Now on problem 183 / 223 ... 
propose_plans_for_problems:: "place a clean knife in the large sink.":
[Plan 0 / 5]
  (FillObject largeSink); (GotoLocation drawer); (PickupObject knife); (GotoLocation largeSink); (PutObject knife largeSink); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject knife); (GotoLocation sinkbasin); (PutObject knife sinkbasin); 
[Plan 2 / 5]
  (FillObject largesink); (GotoLocation kitchencounter); (PickupObject knife); (GotoLocation largesink); (PutObject knife largesink); 
[Plan 3 / 5]
  (GotoLocation knifeblock); (PickupObject knife); (GotoLocation sinkbasin); (PutObject knife sinkbasin); 
[Plan 4 / 5]
  (FillObject sink); (GoToLocation cabinet); (PickupObject knife); (GoToLocation sink); (PutObject knife sink); 
propose_plans_for_problems:: Now on problem 184 / 223 ... 
propose_plans_for_problems:: "to place an apple in the microwave and cut it into three slices.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation microwave); (PutObject apple microwave); (GotoLocation knifeblock); (PickupObject knife); (GotoLocation microwave); (CutObject apple knife); (CutObject apple knife); (CutObject apple knife); 
[Plan 1 / 5]
  (GotoLocation kitchen); (GotoLocation refrigerator); (PickupObject apple); (GotoLocation microwave); (PutObject apple microwave); (GotoLocation knife); (PickupObject knife); (GotoLocation countertop); (CutObject apple knife); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation microwave); (PutObject apple microwave); (GotoLocation countertop); (PickupObject knife); (CutObject apple knife); (CutObject apple knife); (CutObject apple knife); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation microwave); (PutObject apple microwave); (GotoLocation countertop); (PickupObject knife); (CutObject apple knife 3); (GotoLocation microwave); (OpenObject microwave); (GoInsideObject microwave); (PutObject apple microwave); (CloseObject microwave); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation microwave); (PutObject apple microwave); (GotoLocation countertop); (PickupObject knife); (GotoLocation microwave); (CutObject apple knife); (GotoLocation countertop); (PutObject apple countertop); (CutObject apple knife); (GotoLocation microwave); (PutObject apple microwave); (GotoLocation countertop); (PutObject apple countertop); (CutObject apple knife); (GotoLocation microwave); (PutObject apple microwave); 
propose_plans_for_problems:: Now on problem 185 / 223 ... 
propose_plans_for_problems:: "put a cold apple in the microwave.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject apple); (GotoLocation microwave); (PutObject apple microwave); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject apple); (GotoLocation microwave); (PutObject apple microwave); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation microwave); (PutObject apple microwave); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject apple); (GotoLocation microwave); (PutObject apple microwave); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject apple); (GotoLocation microwave); (PutObject apple microwave); 
propose_plans_for_problems:: Now on problem 186 / 223 ... 
propose_plans_for_problems:: "place a heated coffee mug in a coffeemaker.":
[Plan 0 / 5]
  (GotoLocation microwave); (PickupObject mug); (GotoLocation coffeemaker); (HeatObject mug microwave); (PutObject mug coffeemaker); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject coffee_mug); (GotoLocation coffeemaker); (PutObject coffee_mug coffeemaker); (GotoLocation countertop); (HeatObject coffee_mug); 
[Plan 2 / 5]
  (GotoLocation microwave); (PickupObject mug); (GotoLocation coffeemaker); (PutObject mug coffeemaker); 
[Plan 3 / 5]
  (GotoLocation cabinet); (PickupObject coffeeMug); (GotoLocation microwave); (HeatObject coffeeMug microwave); (GotoLocation coffeemaker); (PutObject coffeeMug coffeemaker); 
[Plan 4 / 5]
  (GotoLocation cupboard); (PickupObject coffeeMug); (GotoLocation microwave); (HeatObject coffeeMug microwave); (GotoLocation coffeemaker); (PutObject coffeeMug coffeemaker); 
propose_plans_for_problems:: Now on problem 187 / 223 ... 
propose_plans_for_problems:: "place a washed spoon in a drawer with the fork.":
[Plan 0 / 5]
  (GotoLocation sink); (PickupObject spoon); (GotoLocation drawer); (PutObject spoon drawer); 
[Plan 1 / 5]
  (GotoLocation sink); (PickupObject spoon); (GotoLocation drawer); (PutObject spoon drawer); 
[Plan 2 / 5]
  (GotoLocation sink); (WashObject spoon); (GotoLocation drawer); (PickupObject fork); (PutObject spoon drawer); 
[Plan 3 / 5]
  (GotoLocation sink); (PickupObject spoon); (GotoLocation drawer); (PutObject spoon drawer); 
[Plan 4 / 5]
  (GotoLocation sinkbasin); (PickupObject spoon); (GotoLocation drawer); (PutObject spoon drawer); 
propose_plans_for_problems:: Now on problem 188 / 223 ... 
propose_plans_for_problems:: "put a clean fork in the drawer.":
[Plan 0 / 5]
  (GotoLocation dishwasher); (PickupObject fork); (GotoLocation drawer); (PutObject fork drawer); 
[Plan 1 / 5]
  (GotoLocation sink); (WashObject fork); (GotoLocation drawer); (PutObject fork drawer); 
[Plan 2 / 5]
  (FillObject sinkbasin); (GotoLocation drawer); (PickupObject fork); (GotoLocation sinkbasin); (WashObject fork sinkbasin); (GotoLocation drawer); (PutObject fork drawer); 
[Plan 3 / 5]
  (GotoLocation sink); (WashObject fork sink); (GotoLocation drawer); (PutObject fork drawer); 
[Plan 4 / 5]
  (GotoLocation dishwasher); (PickupObject fork); (GotoLocation drawer); (PutObject fork drawer); 
propose_plans_for_problems:: Now on problem 189 / 223 ... 
propose_plans_for_problems:: "pick up the keys and then turn the lamp on behind the blue chair.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject keys); (GotoLocation bluechair); (TurnOnObject lamp); 
[Plan 1 / 5]
  (GotoLocation entryway); (PickupObject keys); (GotoLocation bluechair); (TurnOnObject lamp bluechair); 
[Plan 2 / 5]
  (GotoLocation entryway); (PickupObject keys); (GotoLocation bluechair); (TurnOnObject lamp); 
[Plan 3 / 5]
  (GotoLocation entryway); (PickupObject keys); (GotoLocation bluechair); (TurnOnObject lamp)
[Plan 4 / 5]
  (GotoLocation hallway); (PickupObject keys); (GotoLocation bluechair); (TurnObjectOn lamplight)
propose_plans_for_problems:: Now on problem 190 / 223 ... 
propose_plans_for_problems:: "place a cooked slice of potato in the sink.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation oven); (BakeObject potato oven); (GotoLocation sinkbasin); (PutObject potato sinkbasin); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation stove); (CookObject potato stove); (GotoLocation sinkbasin); (PutObject potato sinkbasin); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation oven); (BakeObject potato oven); (GotoLocation sinkbasin); (PutObject potato sinkbasin); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation oven); (BakeObject potato oven); (GotoLocation sinkbasin); (PutObject potato sinkbasin); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation oven); (BakeObject potato oven); (GotoLocation countertop); (GotoLocation sinkbasin); (PutObject potato sinkbasin); 
propose_plans_for_problems:: Now on problem 191 / 223 ... 
propose_plans_for_problems:: "place a heated cup inside the refrigerator.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject cup); (GotoLocation microwave); (HeatObject cup microwave); (GotoLocation fridge); (PutObject cup fridge); 
[Plan 1 / 5]
  (GotoLocation cabinet); (PickupObject cup); (GotoLocation microwave); (HeatObject cup microwave); (GotoLocation fridge); (PutObject cup fridge); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject cup); (GoToLocation microwave); (HeatObject cup microwave); (GotoLocation fridge); (PutObject cup fridge); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject cup); (GotoLocation microwave); (HeatObject cup microwave); (GotoLocation fridge); (PutObject cup fridge); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject cup); (GotoLocation microwave); (HeatObject cup microwave); (GotoLocation fridge); (PutObject cup fridge); 
propose_plans_for_problems:: Now on problem 192 / 223 ... 
propose_plans_for_problems:: "put a heated potato in the sink.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation oven); (BakeObject potato oven); (GotoLocation sinkbasin); (PutObject potato sinkbasin); 
[Plan 1 / 5]
  (GotoLocation oven); (PickupObject potato); (GotoLocation sinkbasin); (PutObject potato sinkbasin)
[Plan 2 / 5]
  (GotoLocation oven); (PickupObject potato); (GotoLocation sink); (PutObject potato sink); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation oven); (BakeObject potato oven); (GotoLocation sinkbasin); (PutObject potato sinkbasin); 
[Plan 4 / 5]
  (GotoLocation oven); (PickupObject potato); (BakeObject potato oven); (GotoLocation sinkbasin); (PutObject potato sinkbasin); 
propose_plans_for_problems:: Now on problem 193 / 223 ... 
propose_plans_for_problems:: "putting a cold potato slice in the microwave.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject potato); (SliceObject potato); (GotoLocation microwave); (PutObject potato microwave); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject potato); (GotoLocation countertop); (SliceObject potato); (GotoLocation microwave); (PutObject potato microwave); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject potato); (GotoLocation countertop); (SliceObject potato); (GotoLocation microwave); (PutObject potato microwave); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject potato); (SliceObject potato); (GotoLocation microwave); (PutObject potato microwave)
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject potato); (SliceObject potato); (GotoLocation microwave); (PutObject slicedpotato microwave); 
propose_plans_for_problems:: Now on problem 194 / 223 ... 
propose_plans_for_problems:: "put a heated tomato on the small black table.":
[Plan 0 / 5]
  (GotoLocation countertop); (GotoLocation stove); (PickupObject tomato); (HeatObject tomato stove); (GotoLocation smallblacktable); (PutObject tomato smallblacktable); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation microwave); (HeatObject tomato microwave); (GotoLocation smallblacktable); (PutObject tomato smallblacktable); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation stove); (HeatObject tomato stove); (GotoLocation smallblacktable); (PutObject tomato smallblacktable); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation microwave); (HeatObject tomato microwave); (GotoLocation smallblacktable); (PutObject tomato smallblacktable); 
[Plan 4 / 5]
  (GoToLocation countertop); (PickupObject tomato); (GoToLocation stove); (HeatObject tomato stove); (GoToLocation smallblacktable); (PutObject tomato smallblacktable); 
propose_plans_for_problems:: Now on problem 195 / 223 ... 
propose_plans_for_problems:: "put a heated egg in the trash can.":
[Plan 0 / 5]
  (GotoLocation stovetop); (PickupObject egg); (CookObject egg stovetop); (GotoLocation trashcan); (PutObject egg trashcan); 
[Plan 1 / 5]
  (HeatObject egg stove); (GotoLocation trashcan); (PutObject egg trashcan); 
[Plan 2 / 5]
  (GotoLocation stove); (PickupObject egg); (HeatObject egg stove); (GotoLocation trashcan); (PutObject egg trashcan); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject egg); (GotoLocation stove); (HeatObject egg stove); (GotoLocation trashcan); (PutObject egg trashcan); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject egg); (GotoLocation stove); (HeatObject egg stove); (GotoLocation trashcan); (PutObject egg trashcan); 
propose_plans_for_problems:: Now on problem 196 / 223 ... 
propose_plans_for_problems:: "throw away a slice of heated tomato in the trash bin.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject tomato); (HeatObject tomato); (GotoLocation trashbin); (DiscardObject tomato); 
[Plan 1 / 5]
  (GotoLocation diningtable); (PickupObject plate); (SearchObject slice tomato plate); (HeatObject slice tomato); (GotoLocation trashbin); (PutObject slice tomato trashbin); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation oven); (BakeObject tomato oven); (GotoLocation trashbin); (PutObject tomato trashbin); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation oven); (HeatObject tomato oven); (GotoLocation trashbin); (PutObject tomato trashbin); 
[Plan 4 / 5]
  (GotoLocation diningtable); (PickupObject tomato); (GotoLocation oven); (HeatObject tomato oven); (GotoLocation trashbin); (PutObject tomato trashbin); 
propose_plans_for_problems:: Now on problem 197 / 223 ... 
propose_plans_for_problems:: "place a slice of tomato in the fridge.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation fridge); (PutObject tomato fridge); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation fridge); (PutObject tomato fridge); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation fridge); (PutObject tomato fridge); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation fridge); (PutObject tomato fridge); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation fridge); (PutObject tomato fridge); 
propose_plans_for_problems:: Now on problem 198 / 223 ... 
propose_plans_for_problems:: "to heat a tomato slice and place it in the sink.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation stove); (HeatObject tomato stove); (GotoLocation sink); (PutObject tomato sink); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation stove); (HeatObject tomato stove); (GotoLocation sinkbasin); (PutObject tomato sinkbasin); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation microwave); (HeatObject tomato microwave); (GotoLocation sink); (PutObject tomato sink); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject tomato); (HeatObject tomato); (GotoLocation sink); (PutObject tomato sink); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation oven); (BakeObject tomato oven); (GotoLocation sinkbasin); (PutObject tomato sinkbasin); 
propose_plans_for_problems:: Now on problem 199 / 223 ... 
propose_plans_for_problems:: "look at the pillow in the light.":
[Plan 0 / 5]
  (GotoLocation bed); (LookObject pillow light); 
[Plan 1 / 5]
  (GotoLocation bed); (GotoLocation lightswitch); (TurnOnLight lightswitch); (GotoLocation pillow)
[Plan 2 / 5]
  (GotoLocation bed); (PickupObject pillow); (GotoLocation light); (ExamineObject pillow); 
[Plan 3 / 5]
  (GotoLocation bed); (GotoLocation lamp); (TurnOnObject lamp); (LookAtObject pillow); (TurnOffObject lamp); 
[Plan 4 / 5]
  (GotoLocation bed); (LookObject pillow); (GotoLocation lamp); (LightObject lamp); 
propose_plans_for_problems:: Now on problem 200 / 223 ... 
propose_plans_for_problems:: "place a cooled pan down on the kitchen counter corner.":
[Plan 0 / 5]
  (GotoLocation stove); (PickupObject pan); (CoolObject pan); (GotoLocation kitchencounter); (PutObject pan kitchencounter)
[Plan 1 / 5]
  (GotoLocation cabinet); (PickupObject pan); (GotoLocation sinkbasin); (FillObject sinkbasin); (GotoLocation stovetop); (PutObject pan stovetop); (GotoLocation countertopcorner); (PutObject pan countertopcorner); 
[Plan 2 / 5]
  (GotoLocation stove); (PickupObject pan); (GotoLocation sinkbasin); (FillObject sinkbasin); (GotoLocation stove); (PutObject pan stove); (CoolObject pan); (GotoLocation countertop); (PutObject pan countertop); 
[Plan 3 / 5]
  (GotoLocation stove); (PickupObject pan); (CoolObject pan); (GotoLocation kitchencounter); (PutObject pan kitchencounter); 
[Plan 4 / 5]
  (GotoLocation stove); (PickupObject pan); (GotoLocation sink); (FillObject sinkbasin); (GotoLocation stove); (PutObject pan stove); (TurnOffObject stove); (GotoLocation countertop_corner); (PutObject pan countertop_corner); 
propose_plans_for_problems:: Now on problem 201 / 223 ... 
propose_plans_for_problems:: "slice the bread , cook a slice put it on the table.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject knife); (GotoLocation bread); (SliceObject bread knife); (GotoLocation stove); (CookObject bread stove); (GotoLocation diningtable); (PutObject bread diningtable); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject bread); (SliceObject bread); (GotoLocation stove); (CookObject bread stove); (GotoLocation diningtable); (PutObject bread diningtable); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation cuttingboard); (SliceObject bread cuttingboard); (GotoLocation stovetop); (CookObject bread stovetop); (GotoLocation diningtable); (PutObject bread diningtable); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject bread); (GotoLocation cuttingboard); (SliceObject bread cuttingboard); (GotoLocation stove); (CookObject bread stove); (GotoLocation diningtable); (PutObject bread diningtable); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject bread); (SliceObject bread); (GotoLocation stove); (CookObject slice stove); (GotoLocation diningtable); (PutObject slice diningtable); 
propose_plans_for_problems:: Now on problem 202 / 223 ... 
propose_plans_for_problems:: "put a heated slice of tomato on the table.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation oven); (BakeObject tomato oven); (GotoLocation diningtable); (PutObject tomato diningtable); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation stove); (HeatObject tomato stove); (GotoLocation diningtable); (PutObject tomato diningtable); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation stove); (HeatObject tomato stove); (GotoLocation diningtable); (PutObject tomato diningtable); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation oven); (BakeObject tomato oven); (GotoLocation diningtable); (PutObject tomato diningtable); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation stove); (HeatObject tomato stove); (GotoLocation diningtable); (PutObject tomato diningtable); 
propose_plans_for_problems:: Now on problem 203 / 223 ... 
propose_plans_for_problems:: "to cool an apple piece as well as place it in the microwave.":
[Plan 0 / 5]
  (GotoLocation sidetable); (PickupObject apple); (GotoLocation microwave); (PutObject apple microwave); (CoolObject apple); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject apple); (CutObject apple); (CoolObject apple); (GotoLocation microwave); (PutObject apple microwave); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject apple); (CutObject apple); (GotoLocation fridge); (PutObject apple fridge); (GotoLocation microwave); (PutObject cutting board microwave); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject apple); (CoolObject apple); (GotoLocation microwave); (PutObject apple microwave); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject apple); (CutObject apple); (GotoLocation fridge); (CoolObject apple); (GotoLocation microwave); (PutObject apple microwave); 
propose_plans_for_problems:: Now on problem 204 / 223 ... 
propose_plans_for_problems:: "put a clean bar of soap in the trash can.":
[Plan 0 / 5]
  (GotoLocation bathroom); (GotoLocation cabinet); (PickupObject soap); (PutObject soap trashcan); 
[Plan 1 / 5]
  (GotoLocation bathroom); (PickupObject soap); (GotoLocation trashcan); (PutObject soap trashcan); 
[Plan 2 / 5]
  (GotoLocation bathroom); (PickupObject soap); (GotoLocation trashcan); (PutObject soap trashcan); 
[Plan 3 / 5]
  (GotoLocation bathroom); (PickupObject soap); (GotoLocation trashcan); (PutObject soap trashcan); 
[Plan 4 / 5]
  (GotoLocation bathroom); (PickupObject soap); (GotoLocation trashcan); (PutObject soap trashcan); 
propose_plans_for_problems:: Now on problem 205 / 223 ... 
propose_plans_for_problems:: "to put an empty roll on the toilet paper holder on the wall.":
[Plan 0 / 5]
  (GotoLocation bathroomcabinet); (PickupObject toiletpaperroll); (GotoLocation toiletpaperholder); (PutObject toiletpaperroll toiletpaperholder); 
[Plan 1 / 5]
  (GotoLocation cabinet); (PickupObject toilet_paper); (GotoLocation toilet_paper_holder); (PutObject toilet_paper toilet_paper_holder); 
[Plan 2 / 5]
  (GotoLocation bathroom); (GotoLocation toiletpaperholder); (GotoLocation cabinet); (PickupObject roll); (GotoLocation toiletpaperholder); (PutObject roll toiletpaperholder); 
[Plan 3 / 5]
  (GotoLocation bathroom); (GotoLocation cabinet); (PickupObject roll); (GotoLocation toiletpaperholder); (PutObject roll toiletpaperholder); 
[Plan 4 / 5]
  (GotoLocation bathroomcabinet); (PickupObject roll); (GotoLocation toiletpaperholder); (PutObject roll toiletpaperholder); 
propose_plans_for_problems:: Now on problem 206 / 223 ... 
propose_plans_for_problems:: "turn on the lamp on the desk while holding the bowl.":
[Plan 0 / 5]
  (GotoLocation desk); (TurnOnObject lamp); 
[Plan 1 / 5]
  (GotoLocation desk); (PickupObject bowl); (GotoLocation desklamp); (TurnOnObject desklamp); 
[Plan 2 / 5]
  (GotoLocation bed); (PickupObject bowl); (GotoLocation desk); (PutObject bowl desk); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 3 / 5]
  (GotoLocation desk); (PickupObject bowl); (GotoLocation desklamp); (TurnOnObject desklamp); 
[Plan 4 / 5]
  (GotoLocation desk); (PickupObject bowl); (GotoLocation desklamp); (TurnOnObject desklamp); 
propose_plans_for_problems:: Now on problem 207 / 223 ... 
propose_plans_for_problems:: "place a chilled potato slice inside the microwave.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject potato); (GotoLocation countertop); (SliceObject potato); (GotoLocation microwave); (PutObject slice microwave); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject potato); (GotoLocation microwave); (BakeObject potato microwave); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject potato); (SliceObject potato); (GotoLocation microwave); (PutObject potato microwave); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject potato); (SliceObject potato); (GotoLocation microwave); (PutObjectSlice potato microwave); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject potato); (SliceObject potato); (GotoLocation microwave); (PutObject slice microwave); 
propose_plans_for_problems:: Now on problem 208 / 223 ... 
propose_plans_for_problems:: "put a microwaved slice of bread on the counter by the stove top.":
[Plan 0 / 5]
  (GotoLocation pantry); (PickupObject bread); (GotoLocation microwave); (MicrowaveObject bread); (GotoLocation countertop); (PutObject bread countertop); (GotoLocation stovetop); 
[Plan 1 / 5]
  (GotoLocation microwave); (PickupObject bread); (MicrowaveObject bread microwave); (GotoLocation countertop); (PutObject bread countertop); (GotoLocation stovetop); (PutObject bread stovetop); 
[Plan 2 / 5]
  (GotoLocation microwave); (PutObject bread microwave); (MicrowaveObject bread microwave); (GotoLocation countertop); (PutObject bread countertop bystovetop); 
[Plan 3 / 5]
  (GotoLocation breadbin); (PickupObject bread); (GotoLocation microwave); (MicrowaveObject bread microwave); (GotoLocation countertop); (PutObject bread countertop); (GotoLocation stove); (PutObject bread stove); 
[Plan 4 / 5]
  (GotoLocation microwave); (PickupObject bread); (MicrowaveObject bread microwave); (GotoLocation countertop); (PutObject bread countertop); 
propose_plans_for_problems:: Now on problem 209 / 223 ... 
propose_plans_for_problems:: "to cool a slice of potato and place it on the table.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation sink); (FillObject sinkbasin); (PutObject potato sinkbasin); (GotoLocation table); (PutObject potato table); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject potato); (GotoLocation countertop); (CoolObject potato); (GotoLocation diningtable); (PutObject potato diningtable); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject potato); (GotoLocation countertop); (BakeObject potato oven); (GotoLocation fridge); (PutObject potato fridge); (GotoLocation diningtable); (PickupObject plate); (PutObject potato plate); (CoolObject potato); (PutObject plate diningtable); 
[Plan 3 / 5]
  (GotoLocation oven); (BakeObject potato oven); (GotoLocation countertop); (PickupObject potato); (CoolObject potato); (GotoLocation diningtable); (PutObject potato diningtable); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject potato); (GotoLocation fridge); (PutObject potato fridge); (GotoLocation table); (PickupObject plate); (GotoLocation fridge); (PutObject plate fridge); (GotoLocation table); (PickupObject potato); 
propose_plans_for_problems:: Now on problem 210 / 223 ... 
propose_plans_for_problems:: "put a microwaved tomato slice on the counter.":
[Plan 0 / 5]
  (GotoLocation microwave); (PutObject tomato microwave); (GotoLocation countertop); (PickupObject tomato); (GotoLocation microwave); (TakeObject tomato microwave); (GotoLocation countertop); (PutObject tomato countertop); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation microwave); (HeatObject tomato microwave); (GotoLocation countertop); (PutObject tomato countertop); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation microwave); (MicrowaveObject tomato microwave); (GotoLocation countertop); (PutObject tomato countertop); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation microwave); (MicrowaveObject tomato microwave); (GotoLocation countertop); (PutObject tomato countertop); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject tomato); (GotoLocation microwave); (MicrowaveObject tomato microwave); (GotoLocation countertop); (PutObject tomato countertop); 
propose_plans_for_problems:: Now on problem 211 / 223 ... 
propose_plans_for_problems:: "put the tomato in the microwave.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation microwave); (PutObject tomato microwave); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation microwave); (PutObject tomato microwave); 
[Plan 2 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation microwave); (PutObject tomato microwave); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation microwave); (PutObject tomato microwave); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject tomato); (GotoLocation microwave); (PutObject tomato microwave); 
propose_plans_for_problems:: Now on problem 212 / 223 ... 
propose_plans_for_problems:: "move the plunger from next to the toilet to the cupboard under the sink.":
[Plan 0 / 5]
  (GotoLocation toiletnext); (PickupObject plunger); (GotoLocation sinkcupboard); (PutObject plunger sinkcupboard); 
[Plan 1 / 5]
  (GotoLocation toilet); (PickupObject plunger); (GotoLocation sink); (PutObject plunger sink); (GotoLocation cupboard); (PutObject plunger cupboard); 
[Plan 2 / 5]
  (GotoLocation toilet); (PickupObject plunger); (GotoLocation sink); (PutObject plunger sink); 
[Plan 3 / 5]
  (GotoLocation toilet); (PickupObject plunger); (GotoLocation sink); (PutObject plunger sink); (GotoLocation cupboard); (PutObject plunger cupboard); 
[Plan 4 / 5]
  (GotoLocation toilet); (PickupObject plunger); (GotoLocation cupboard); (PutObject plunger cupboard); 
propose_plans_for_problems:: Now on problem 213 / 223 ... 
propose_plans_for_problems:: "turn a lamp on with a bowl in hand.":
[Plan 0 / 5]
  (GotoLocation cabinet); (PickupObject bowl); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 1 / 5]
  (GotoLocation cabinet); (PickupObject bowl); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 2 / 5]
  (GotoLocation livingroom); (PickupObject bowl); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 3 / 5]
  (GotoLocation cabinet); (PickupObject bowl); (GotoLocation lamp); (TurnOnObject lamp); 
[Plan 4 / 5]
  (GotoLocation cabinet); (PickupObject bowl); (GotoLocation lamp); (TurnOnObject lamp); 
propose_plans_for_problems:: Now on problem 214 / 223 ... 
propose_plans_for_problems:: "put the chilled mug in the cabinet.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject mug); (GotoLocation cabinet); (PutObject mug cabinet); 
[Plan 1 / 5]
  (GotoLocation sink); (PickupObject mug); (GotoLocation fridge); (PickupObject chilledmug); (GotoLocation cabinet); (PutObject chilledmug cabinet); 
[Plan 2 / 5]
  (GotoLocation diningtable); (PickupObject mug); (GotoLocation fridge); (PutObject mug fridge); (GotoLocation cabinet); (PutObject mug cabinet); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject mug); (GotoLocation fridge); (PutObject mug fridge); (GotoLocation cabinet); (PutObject mug cabinet); 
[Plan 4 / 5]
  (GotoLocation diningtable); (PickupObject mug); (GoToLocation fridge); (PickupObject chilledmug); (GotoLocation cabinet); (PutObject chilledmug cabinet); 
propose_plans_for_problems:: Now on problem 215 / 223 ... 
propose_plans_for_problems:: "chill bottle in refrigerator , throw in trash can to front left of paper towels.":
[Plan 0 / 5]
  (GotoLocation fridge); (PickupObject bottle); (PutObject bottle fridge); (GotoLocation paper towels); (ThrowObject bottle paper towels front left); 
[Plan 1 / 5]
  (GotoLocation fridge); (PickupObject bottle); (GotoLocation trashcan); (PutObject bottle trashcan); (GotoLocation papertowels); (PutObject bottle papertowels); 
[Plan 2 / 5]
  (GotoLocation refrigerator); (PickupObject bottle); (PutObject bottle refrigerator); (GotoLocation paper towels); (ThrowObject bottle paper towels); (GotoLocation trash can); (ThrowObject bottle trash can); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject bottle); (PutObject bottle fridge); (GotoLocation trashcan); (ThrowObject bottle trashcan); (GotoLocation papertowels); (GotoLocation frontleft); (ThrowObject bottle trashcan); 
[Plan 4 / 5]
  (GotoLocation refrigerator); (PickupObject bottle); (GotoLocation refrigerator); (PutObject bottle refrigerator); (GotoLocation trashcan); (PutObject bottle trashcan); (GoToFrontLeftOfObject trashcan papertowels); (PutObject bottle trashcan); 
propose_plans_for_problems:: Now on problem 216 / 223 ... 
propose_plans_for_problems:: "put the book in the desk cabinet.":
[Plan 0 / 5]
  (GotoLocation desk); (PickupObject book); (GotoLocation cabinet); (PutObject book cabinet); 
[Plan 1 / 5]
  (GotoLocation shelf); (PickupObject book); (GotoLocation desk); (PutObject book deskcabinet); 
[Plan 2 / 5]
  (GotoLocation bookshelf); (PickupObject book); (GotoLocation desk); (GotoLocation deskcabinet); (PutObject book deskcabinet); 
[Plan 3 / 5]
  (GotoLocation bookshelf); (PickupObject book); (GotoLocation desk); (GotoLocation deskcabinet); (PutObject book deskcabinet); 
[Plan 4 / 5]
  (GotoLocation bookshelf); (PickupObject book); (GotoLocation desk); (PutObject book deskcabinet); 
propose_plans_for_problems:: Now on problem 217 / 223 ... 
propose_plans_for_problems:: "put a cleaned apple in the fridge.":
[Plan 0 / 5]
  (GotoLocation sink); (CleanObject apple); (GotoLocation fridge); (PutObject apple fridge); 
[Plan 1 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation sinkbasin); (CleanObject apple); (GotoLocation fridge); (PutObject apple fridge); 
[Plan 2 / 5]
  (GotoLocation sidetable); (PickupObject apple); (GotoLocation sinkbasin); (CleanObject apple sinkbasin); (GotoLocation fridge); (PutObject apple fridge); 
[Plan 3 / 5]
  (GotoLocation sinkbasin); (PickupObject apple); (GotoLocation fridge); (PutObject apple fridge); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject apple); (GotoLocation sink); (CleanObject apple); (GotoLocation fridge); (PutObject apple fridge); 
propose_plans_for_problems:: Now on problem 218 / 223 ... 
propose_plans_for_problems:: "place a warm glass in the cabinet.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject glass); (GoToLocation sink); (FillObject glass); (GotoLocation oven); (HeatObject glass oven); (GotoLocation cabinet); (PutObject glass cabinet); 
[Plan 1 / 5]
  (GotoLocation sink); (PickupObject glass); (FillObject sink); (GotoLocation cabinet); (PutObject glass cabinet); 
[Plan 2 / 5]
  (GoToLocation countertop); (PickupObject glass); (GoToLocation microwave); (HeatObject glass microwave); (GoToLocation cabinet); (PutObject glass cabinet); 
[Plan 3 / 5]
  (GotoLocation countertop); (PickupObject glass); (GotoLocation microwave); (HeatObject glass microwave); (GotoLocation cabinet); (PutObject glass cabinet); 
[Plan 4 / 5]
  (GotoLocation countertop); (PickupObject glass); (GotoLocation oven); (BakeObject glass oven); (GotoLocation cabinet); (PutObject glass cabinet); 
propose_plans_for_problems:: Now on problem 219 / 223 ... 
propose_plans_for_problems:: "put a cleaned cloth in a drawer.":
[Plan 0 / 5]
  (GotoLocation laundryroom); (GotoLocation dryer); (PickupObject cloth); (GotoLocation bedroom); (GoToLocation drawer); (PutObject cloth drawer); 
[Plan 1 / 5]
  (GotoLocation sink); (UseObject sinkcloth sink); (GotoLocation cabinet); (PickupObject cloth); (GotoLocation drawer); (PutObject cloth drawer); 
[Plan 2 / 5]
  (GotoLocation laundryroom); (PickupObject cloth); (GotoLocation bedroom); (OpenObject drawer); (PutObject cloth drawer); (CloseObject drawer); 
[Plan 3 / 5]
  (GotoLocation laundryroom); (PickupObject cloth); (GotoLocation bedroom); (GotoLocation drawer); (PutObject cloth drawer); 
[Plan 4 / 5]
  (GotoLocation laundryroom); (PickupObject cloth); (GotoLocation kitchen); (CleanObject cloth); (GotoLocation cabinet); (PutObject cloth drawer); 
propose_plans_for_problems:: Now on problem 220 / 223 ... 
propose_plans_for_problems:: "place a cold potato slice in the sink.":
[Plan 0 / 5]
  (GotoLocation countertop); (PickupObject potato); (SliceObject potato); (GotoLocation sink); (PutObject potato sink); 
[Plan 1 / 5]
  (GoToLocation cabinet); (PickupObject potato); (GoToLocation countertop); (SliceObject potato); (GoToLocation sink); (FillObject sink); (GoToLocation sink); (PutObject potato sink); 
[Plan 2 / 5]
  (GotoLocation fridge); (PickupObject potato); (GotoLocation cuttingboard); (SliceObject potato cuttingboard); (GotoLocation sinkbasin); (PutObject slice sinkbasin); 
[Plan 3 / 5]
  (GotoLocation fridge); (PickupObject potato); (SliceObject potato); (GotoLocation sinkbasin); (PutObject potato sinkbasin); 
[Plan 4 / 5]
  (GotoLocation fridge); (PickupObject potato); (GotoLocation countertop); (ChopObject potato); (GotoLocation sinkbasin); (PutObject potato sinkbasin); 
propose_plans_for_problems:: Now on problem 221 / 223 ... 
propose_plans_for_problems:: "put a cd in the book shelf.":
[Plan 0 / 5]
  (GotoLocation table); (PickupObject cd); (GotoLocation bookshelf); (PutObject cd bookshelf); 
[Plan 1 / 5]
  (GotoLocation desk); (PickupObject cd); (GotoLocation bookshelf); (PutObject cd bookshelf); 
[Plan 2 / 5]
  (GotoLocation table); (PickupObject cd); (GotoLocation bookshelf); (PutObject cd bookshelf); 
[Plan 3 / 5]
  (GotoLocation desk); (PickupObject cd); (GotoLocation bookshelf); (PutObject cd bookshelf); 
[Plan 4 / 5]
  (GotoLocation entertainmentcenter); (PickupObject cd); (GotoLocation bookshelf); (PutObject cd bookshelf); 
propose_plans_for_problems:: Now on problem 222 / 223 ... 
propose_plans_for_problems:: "place wet soap on the edge of the bathtub.":
[Plan 0 / 5]
  (GotoLocation sink); (PickupObject soap); (GotoLocation bathtub); (PutObject soap bathtub); 
[Plan 1 / 5]
  (GotoLocation sink); (PickupObject soap); (GotoLocation bathtub); (PutObject soap bathtub); (WipeObject soap); (GotoLocation bathtub); (PutObject soap bathtub); 
[Plan 2 / 5]
  (GotoLocation sink); (GetObject soap); (GotoLocation bathtub); (PutObject soap edge); 
[Plan 3 / 5]
  (GotoLocation sink); (PickupObject soap); (GotoLocation bathtub); (PutObject soap edge); 
[Plan 4 / 5]
  (GotoLocation sink); (PickupObject soap); (GotoLocation bathtub); (PutObject soap bathtub); 
propose_plans_for_problems:: proposed plans for 223 / 223
Logging proposed plans: generated/alfred_cot_250_filtered_2_912023/0/alfred_cot_250_filtered_2_912023_codex_plans.csv

propose_operators_for_problems:: proposing for 30 operators.
['TurnOnObject', 'ExamineObject', 'TurnOffObject', 'TurnOnLight', 'CookObject', 'HeatObject', 'WashObject', 'CoolObject', 'SliceObject', 'DropObject', 'MicrowaveObject', 'CleanObject', 'LookAtObject', 'ThrowAwayObject', 'ThrowObject', 'ChillObject', 'CutObject', 'PlaceObject', 'ToastObject', 'OpenObject', 'CloseObject', 'WarmObject', 'InspectObject', 'UseObject', 'RinseObject', 'TakeObject', 'ChopObject', 'WipeObject', 'DiscardObject', 'LookObject']
propose_operator_definition:: operator_name_to_define - TurnOnObject
propose_operator_definition:: completion for TurnOnObject
[Operator TurnOnObject 1/3]

;; Operator, TurnOnObject 1.
;; TurnOnObject 1 takes any object to turn on.
;; This action is applicable to any toggleable object that is not already toggled on.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be turned on.
;; Preconditions: The agent is at a location and the object is at the same location, the object is toggleable, and the object is not already toggled on.
;; Postconditions: the ?o object is now toggled on.
(:action TurnOnObject1
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (toggleable ?o)
            (not (isToggled ?o))
        )
        :effect (and
            (isToggled ?o)
        )
)

[Operator TurnOnObject 2/3]

;; Operator, TurnOnObject 2.
;; TurnOnObject 2 takes any object to turn on and a specific tool of type LightSwitchType.
;; LightSwitchType is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be turned on, ?toolobject - object to turn on the ?o object.
;; Preconditions: The toolobject is a LightSwitchType, the agent is at a location and the object is at the same location, the object is toggleable, the object is not already toggled on, and the agent is holding the tool.
;; Postconditions: the ?o object is now toggled on.
(:action TurnOnObject2
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject LightSwitchType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (toggleable ?o)
            (not (isToggled ?o))
            (holds ?a ?toolobject)
        )
        :effect (and
            (isToggled ?o)
        )
)

[Operator TurnOnObject 3/3]

;; Operator, TurnOnObject 3.
;; TurnOnObject 3 takes a specific tool receptacle of type LightSwitchType.
;; LightSwitchType is an rtype. Therefore, the tool receptacle is a receptacle.
;; Parameters: ?a - agent, ?l - location of the tool receptacle; ?r - tool receptacle to turn on.
;; Preconditions: The ?r receptacle is a LightSwitchType, the agent is at a location and the receptacle is at the same location, and the receptacle is toggleable.
;; Postconditions: the ?r receptacle is now toggled on.
(:action TurnOnObject3
        :parameters (?a - agent ?l - location ?r - receptacle)
        :precondition (and
            (receptacleType ?r LightSwitchType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?r ?l)
            (toggleable ?r)
        )
        :effect (and
            (isToggled ?r)
        )
)

propose_operator_definition:: operator_name_to_define - ExamineObject
propose_operator_definition:: completion for ExamineObject
[Operator ExamineObject 1/3]

;; Operator, ExamineObject 1.
;; ExamineObject 1 takes an object to examine and a specific tool of type MirrorType.
;; MirrorType is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of object to be examined; ?o - object to be examined, ?toolobject - object to examine with.
;; Preconditions: The toolobject is a MirrorType, the agent is at a location and the object to be examined is at the same location, and the agent is holding the tool.
;; Postconditions: None.
(:action ExamineObject1
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject MirrorType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?toolobject)
        )
        :effect
        )
    )

[Operator ExamineObject 2/3]

;; Operator, ExamineObject 2.
;; ExamineObject 2 takes an object to examine and a specific tool of type BookType.
;; BookType is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of object to be examined; ?o - object to be examined, ?toolobject - object to examine with.
;; Preconditions: The toolobject is a BookType, the agent is at a location and the object to be examined is at the same location, and the agent is holding the tool.
;; Postconditions: None.
(:action ExamineObject2
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject BookType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?toolobject)
        )
        :effect
        )
    )

[Operator ExamineObject 3/3]

;; Operator, ExamineObject 3.
;; ExamineObject 3 takes an object to examine and does not require any tool.
;; Parameters: ?a - agent, ?l - location of object to be examined; ?o - object to be examined.
;; Preconditions: The agent is at a location and the object to be examined is at the same location.
;; Postconditions: None.
(:action ExamineObject3
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
        )
        :effect
        )
    )

propose_operator_definition:: operator_name_to_define - TurnOffObject
propose_operator_definition:: completion for TurnOffObject
[Operator TurnOffObject 1/3]

;; Operator, TurnOffObject - No tool required
;; TurnOffObject takes any object to turn off.
;; This action is applicable to any toggleable object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be turned off.
;; Preconditions: The agent is at a location and the object is at the same location, and the object is toggleable and is toggled on.
;; Postconditions: the ?o object is now turned off.
(:action TurnOffObjectNoTool
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (toggleable ?o)
            (isToggled ?o)
        )
        :effect (and
            (not (isToggled ?o))
        )
    )

[Operator TurnOffObject 2/3]

;; Operator, TurnOffObject - With tool object
;; TurnOffObject takes any object to turn off with a specific tool object of type LightSwitchType.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be turned off, ?toolobject - object to turn off the other object.
;; Preconditions: The toolobject is a LightSwitchType, the agent is at a location and the object and toolobject are at the same location, the object is toggleable and is toggled on, and the agent is holding the toolobject.
;; Postconditions: the ?o object is now turned off.
(:action TurnOffObjectWithToolObject
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject LightSwitchType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (toggleable ?o)
            (isToggled ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (not (isToggled ?o))
        )
    )

[Operator TurnOffObject 3/3]

;; Operator, TurnOffObject - With tool receptacle
;; TurnOffObject takes any object to turn off with a specific tool receptacle of type LightSwitchType.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be turned off, ?toolreceptacle - receptacle to turn off the other object.
;; Preconditions: The toolreceptacle is a LightSwitchType, the agent is at a location and the object and toolreceptacle are at the same location, the object is toggleable and is toggled on, and the agent is holding the object to be turned off.
;; Postconditions: the ?o object is now turned off.
(:action TurnOffObjectWithToolReceptacle
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle LightSwitchType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (toggleable ?o)
            (isToggled ?o)
            (holds ?a ?o)
        )
        :effect (and
            (not (isToggled ?o))
        )
    )

propose_operator_definition:: operator_name_to_define - TurnOnLight
propose_operator_definition:: completion for TurnOnLight
[Operator TurnOnLight 1/3]

(:action TurnOnLight1
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (toggleable ?o)
            (not (isToggled ?o))
        )
        :effect (and
            (isToggled ?o)
        )
    )

[Operator TurnOnLight 2/3]

(:action TurnOnLight2
        :parameters (?a - agent ?lSwitch - location ?oSwitch - object ?lChair - location ?rChair - receptacle)
        :precondition (and
            (atLocation ?a ?lSwitch)
            (atLocation ?a ?lChair)
            (objectAtLocation ?oSwitch ?lSwitch)
            (receptacleAtLocation ?rChair ?lChair)
            (toggleable ?oSwitch)
            (not (isToggled ?oSwitch))
            (holds ?a ?rChair)
            (receptacleType ?rChair ArmChairType)
        )
        :effect (and
            (isToggled ?oSwitch)
            (inReceptacle ?a ?rChair)
        )
    )

[Operator TurnOnLight 3/3]

(:action TurnOnLight3
        :parameters (?a - agent ?lSwitch - location ?oSwitch - object ?lChair - location ?rChair - receptacle)
        :precondition (and
            (atLocation ?a ?lSwitch)
            (atLocation ?a ?lChair)
            (objectAtLocation ?oSwitch ?lSwitch)
            (receptacleAtLocation ?rChair ?lChair)
            (toggleable ?oSwitch)
            (not (isToggled ?oSwitch))
            (holds ?a ?rChair)
            (receptacleType ?rChair ?rtype)
        )
        :effect (and
            (isToggled ?oSwitch)
            (inReceptacle ?a ?rChair)
        )
    )

propose_operator_definition:: operator_name_to_define - CookObject
propose_operator_definition:: completion for CookObject
[Operator CookObject 1/3]

;; Operator, CookObject 1.
;; CookObject 1 takes an object to cook and a specific tool of type StoveType.
;; StoveType is an rtype. Therefore, the tool is a receptacle.
;; Parameters: ?a - agent, ?l - location of the receptacle; ?o - object to be cooked, ?toolreceptacle - receptacle to cook the object on.
;; Preconditions: The toolreceptacle is a StoveType, the agent is at a location and the receptacle is at the same location, and the agent is holding the object to be cooked.
;; Postconditions: the ?o object is now heated.
(:action CookObject1
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle StoveType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
           (isHot ?o)
        )
    )

[Operator CookObject 2/3]

;; Operator, CookObject 2.
;; CookObject 2 takes an object to cook and a specific tool of type MicrowaveType.
;; MicrowaveType is an rtype. Therefore, the tool is a receptacle.
;; Parameters: ?a - agent, ?l - location of the receptacle; ?o - object to be cooked, ?toolreceptacle - receptacle to cook the object in.
;; Preconditions: The toolreceptacle is a MicrowaveType, the agent is at a location and the receptacle is at the same location, and the agent is holding the object to be cooked.
;; Postconditions: the ?o object is now heated.
(:action CookObject2
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle MicrowaveType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
           (isHot ?o)
        )
    )

[Operator CookObject 3/3]

;; Operator, CookObject 3.
;; CookObject 3 takes an object to cook and does not require any tools.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be cooked.
;; Preconditions: The agent is at a location and the object is at the same location.
;; Postconditions: the ?o object is now heated.
(:action CookObject3
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
        )
        :effect (and
           (isHot ?o)
        )
    )

propose_operator_definition:: operator_name_to_define - HeatObject
propose_operator_definition:: completion for HeatObject
[Operator HeatObject 1/3]

;; Operator, HeatObject (without a tool).
;; HeatObject takes an object to heat, without using a tool.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be heated.
;; Preconditions: The agent is at a location and the object is at the same location, and the object is heatable.
;; Postconditions: the ?o object is now hot.
(:action HeatObjectNoTool
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (heatable ?o)
        )
        :effect (and
            (isHot ?o)
        )
)

[Operator HeatObject 2/3]

;; Operator, HeatObject (with a tool object).
;; HeatObject takes an object to heat, while using a tool object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be heated; ?toolobject - object to heat with.
;; Preconditions: The agent is at a location and the object is at the same location, the object is heatable, and the agent is holding the tool object.
;; Postconditions: the ?o object is now hot.
(:action HeatObjectWithToolObject
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (heatable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (isHot ?o)
        )
)

[Operator HeatObject 3/3]

;; Operator, HeatObject (with a tool receptacle).
;; HeatObject takes an object to heat, while using a tool receptacle.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be heated; ?toolreceptacle - receptacle to heat with.
;; Preconditions: The agent is at a location and the object is at the same location, the object is heatable, and the receptacle is at the same location.
;; Postconditions: the ?o object is now hot.
(:action HeatObjectWithToolReceptacle
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (heatable ?o)
            (receptacleAtLocation ?toolreceptacle ?l)
        )
        :effect (and
            (isHot ?o)
        )
)

propose_operator_definition:: operator_name_to_define - WashObject
propose_operator_definition:: completion for WashObject
[Operator WashObject 1/3]

(:action WashObject1
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (cleanable ?o)
        )
        :effect (and
            (isClean ?o)
        )
)

[Operator WashObject 2/3]

(:action WashObject2
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (cleanable ?o)
            (holds ?a ?toolobject)
            (objectType ?toolobject ScrubBrushType)
        )
        :effect (and
            (isClean ?o)
        )
 )

[Operator WashObject 3/3]

(:action WashObject3
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (cleanable ?o)
            (receptacleType ?toolreceptacle SinkBasinType)
            (receptacleAtLocation ?toolreceptacle ?l)
        )
        :effect (and
            (isClean ?o)
        )
 )

propose_operator_definition:: operator_name_to_define - CoolObject
propose_operator_definition:: completion for CoolObject
[Operator CoolObject 1/3]

(:action CoolObjectWithCoolingObject
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject CoolingObjectType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (coolable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (isCool ?o)
        )
    )

[Operator CoolObject 2/3]

(:action CoolObjectWithCoolingReceptacle
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle CoolingReceptacleType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
           (isCool ?o)
        )
    )

[Operator CoolObject 3/3]

(:action CoolObjectWithoutTool
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (coolable ?o)
        )
        :effect (and
            (isCool ?o)
        )
    )

propose_operator_definition:: operator_name_to_define - SliceObject
propose_operator_definition:: completion for SliceObject
[Operator SliceObject 1/3]

(:action SliceObjectWithKnife
        :parameters (?a - agent ?l - location ?o - object ?knifeObject - object)
        :precondition (and
            (objectType ?knifeObject KnifeType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (sliceable ?o)
            (holds ?a ?knifeObject)
        )
        :effect (and
            (isSliced ?o)
        )
    )

[Operator SliceObject 2/3]

(:action SliceObjectWithCuttingBoard
        :parameters (?a - agent ?l - location ?o - object ?cuttingBoardObject - object)
        :precondition (and
            (objectType ?cuttingBoardObject CuttingBoardType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (sliceable ?o)
            (holds ?a ?cuttingBoardObject)
        )
        :effect (and
            (isSliced ?o)
        )
    )

[Operator SliceObject 3/3]

(:action SliceObjectWithoutTool
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (sliceable ?o)
        )
        :effect (and
            (isSliced ?o)
        )
    )

propose_operator_definition:: operator_name_to_define - DropObject
propose_operator_definition:: completion for DropObject
[Operator DropObject 1/3]

(:action DropObject1
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (holds ?a ?o)
        )
        :effect (and
            (not (holds ?a ?o))
            (objectAtLocation ?o ?l)
        )
)

[Operator DropObject 2/3]

(:action DropObject2
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject TissueBoxType)
            (atLocation ?a ?l)
            (holds ?a ?o)
            (objectAtLocation ?toolobject ?l)
        )
        :effect (and
            (not (holds ?a ?o))
            (inReceptacle ?o ?toolobject)
        )
)

[Operator DropObject 3/3]

(:action DropObject3
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle GarbageCanType)
            (atLocation ?a ?l)
            (holds ?a ?o)
            (receptacleAtLocation ?toolreceptacle ?l)
        )
        :effect (and
            (not (holds ?a ?o))
            (inReceptacle ?o ?toolreceptacle)
        )
)

propose_operator_definition:: operator_name_to_define - MicrowaveObject
propose_operator_definition:: completion for MicrowaveObject
[Operator MicrowaveObject 1/3]

;; Operator, MicrowaveObject - Option 1
;; MicrowaveObject option 1 takes an object to microwave and a specific tool of type MicrowaveType.
;; MicrowaveType is an rtype. Therefore, the tool is a receptacle.
;; Parameters: ?a - agent, ?l - location of the receptacle; ?o - object to be microwaved, ?toolreceptacle - receptacle to microwave the object in.
;; Preconditions: The toolreceptacle is a MicrowaveType, the agent is at a location and the receptacle is at the same location, and the agent is holding the object to be microwaved.
;; Postconditions: the ?o object is now hot.
(:action MicrowaveObjectOption1
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle MicrowaveType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
            (isHot ?o)
        )
    )

[Operator MicrowaveObject 2/3]

;; Operator, MicrowaveObject - Option 2
;; MicrowaveObject option 2 takes an object to microwave without using any tool receptacle.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be microwaved.
;; Preconditions: The agent is at a location and the object is at the same location, and the object is heatable.
;; Postconditions: the ?o object is now hot.
(:action MicrowaveObjectOption2
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (heatable ?o)
        )
        :effect (and
            (isHot ?o)
        )
    )

[Operator MicrowaveObject 3/3]

;; Operator, MicrowaveObject - Option 3
;; MicrowaveObject option 3 takes an object to microwave and a specific tool of type MicrowaveType.
;; MicrowaveType is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be microwaved, ?toolobject - object to microwave the object with.
;; Preconditions: The toolobject is a MicrowaveType, the agent is at a location and the object is at the same location, the object is heatable, and the agent is holding the tool.
;; Postconditions: the ?o object is now hot.
(:action MicrowaveObjectOption3
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject MicrowaveType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (heatable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (isHot ?o)
        )
    )

propose_operator_definition:: operator_name_to_define - CleanObject
propose_operator_definition:: completion for CleanObject
[Operator CleanObject 1/3]

(:action CleanObjectWithTool
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject ScrubBrushType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (cleanable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (isClean ?o)
        )
    )

[Operator CleanObject 2/3]

(:action CleanObjectWithReceptacle
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle SinkBasinType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?o)
        )
        :effect (and
            (isClean ?o)
        )
    )

[Operator CleanObject 3/3]

(:action CleanObjectWithoutTool
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (cleanable ?o)
        )
        :effect (and
            (isClean ?o)
        )
    )

propose_operator_definition:: operator_name_to_define - LookAtObject
propose_operator_definition:: completion for LookAtObject
[Operator LookAtObject 1/3]

;; Operator, LookAtObject.
;; LookAtObject takes an agent and an object to look at.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to look at.
;; Preconditions: The agent is at a location and the object is at the same location.
;; Postconditions: None.
(:action LookAtObject
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
        )
        :effect ()
    )

[Operator LookAtObject 2/3]

;; Operator, LookAtObjectWithTool.
;; LookAtObjectWithTool takes an agent, an object to look at, and a specific tool object of type MirrorType.
;; MirrorType is an otype. Therefore, the tool object is an object of type MirrorType.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to look at, ?toolobject - tool object of type MirrorType.
;; Preconditions: The agent is at a location and the object to look at is at the same location, and the agent is holding the tool object.
;; Postconditions: None.
(:action LookAtObjectWithTool
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?toolobject)
            (objectType ?toolobject MirrorType)
        )
        :effect ()
    )

[Operator LookAtObject 3/3]

;; Operator, LookAtObjectWithToolAndReceptacle.
;; LookAtObjectWithToolAndReceptacle takes an agent, an object to look at, a specific tool object of type CDType, and a specific tool receptacle of type SafeType.
;; CDType is an otype. Therefore, the tool object is an object of type CDType.
;; SafeType is an rtype. Therefore, the tool receptacle is an receptacle of type SafeType.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to look at, ?toolobject - tool object of type CDType; ?toolreceptacle - tool receptacle of type SafeType.
;; Preconditions: The agent is at a location and the object to look at is at the same location, the agent is holding the tool object, and the tool receptacle is at the same location as the agent.
;; Postconditions: None.
(:action LookAtObjectWithToolAndReceptacle
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object ?toolreceptacle - receptacle)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?toolobject)
            (receptacleAtLocation ?toolreceptacle ?l)
            (receptacleType ?toolreceptacle SafeType)
        )
        :effect ()
    )

propose_operator_definition:: operator_name_to_define - ThrowAwayObject
propose_operator_definition:: completion for ThrowAwayObject
[Operator ThrowAwayObject 1/3]

;; Operator, ThrowAwayObject - No Tools or Receptacles
;; ThrowAwayObject takes an object to throw away and does not require any tools or receptacles.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to throw away.
;; Preconditions: The agent is at a location and the object is at the same location.
;; Postconditions: The object is no longer at the location, and no predicates related to the object exist.
(:action ThrowAwayObject_NoToolsNoReceptacles
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
        )
        :effect (and
            (not (objectAtLocation ?o ?l))
            (not (inReceptacle ?o ?r))
            (not (isClean ?o))
            (not (isRestarted ?o))
            (not (isHot ?o))
            (not (isCool ?o))
            (not (isSliced ?o))
            (not (isGrated ?o))
        )
)

[Operator ThrowAwayObject 2/3]

;; Operator, ThrowAwayObject - With Tool Object
;; ThrowAwayObject takes an object to throw away and a specific tool object of type GarbageCanType.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to throw away, ?toolobject - tool object.
;; Preconditions: The toolobject is of type GarbageCanType, the agent is at a location and the object and the tool object are at the same location.
;; Postconditions: The object is no longer at the location, and no predicates related to the object exist.
(:action ThrowAwayObject_WithToolObject
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject GarbageCanType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (atLocation ?toolobject ?l)
        )
        :effect (and
            (not (objectAtLocation ?o ?l))
            (not (inReceptacle ?o ?r))
            (not (isClean ?o))
            (not (isRestarted ?o))
            (not (isHot ?o))
            (not (isCool ?o))
            (not (isSliced ?o))
            (not (isGrated ?o))
        )
)

[Operator ThrowAwayObject 3/3]

;; Operator, ThrowAwayObject - With Tool Receptacle
;; ThrowAwayObject takes an object to throw away and a specific tool receptacle of type GarbageCanType.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to throw away, ?toolreceptacle - tool receptacle.
;; Preconditions: The toolreceptacle is of type GarbageCanType, the agent is at a location and the object is at the same location, the object is in the toolreceptacle.
;; Postconditions: The object is no longer at the location, and no predicates related to the object exist.
(:action ThrowAwayObject_WithToolReceptacle
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle GarbageCanType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (inReceptacle ?o ?toolreceptacle)
        )
        :effect (and
            (not (objectAtLocation ?o ?l))
            (not (inReceptacle ?o ?r))
            (not (isClean ?o))
            (not (isRestarted ?o))
            (not (isHot ?o))
            (not (isCool ?o))
            (not (isSliced ?o))
            (not (isGrated ?o))
        )
)

propose_operator_definition:: operator_name_to_define - ThrowObject
propose_operator_definition:: completion for ThrowObject
[Operator ThrowObject 1/3]

(:action ThrowObject_NoTool
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
        )
        :effect (and
            (not (objectAtLocation ?o ?l))
        )
)

[Operator ThrowObject 2/3]

(:action ThrowObject_WithTool
        :parameters (?a - agent ?l - location ?o - object ?tool - receptacle)
        :precondition (and
            (receptacleType ?tool GarbageCanType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?tool ?l)
            (objectAtLocation ?o ?l)
        )
        :effect (and
            (not (objectAtLocation ?o ?l))
            (inReceptacle ?o ?tool)
        )
)

[Operator ThrowObject 3/3]

(:action ThrowObject_WithToolObject
        :parameters (?a - agent ?l - location ?o - object ?tool - object)
        :precondition (and
            (objectType ?tool BasketBallType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?tool)
        )
        :effect (and
            (not (objectAtLocation ?o ?l))
        )
)

propose_operator_definition:: operator_name_to_define - ChillObject
propose_operator_definition:: completion for ChillObject
[Operator ChillObject 1/3]

;; Operator, ChillObject without a tool.
;; ChillObject takes an object to chill.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be chilled.
;; Preconditions: The agent is at a location and the object is at the same location, and the object is coolable.
;; Postconditions: the ?o object is now cool.
(:action ChillObjectNoTool
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (coolable ?o)
        )
        :effect (and
            (isCool ?o)
        )
    )

[Operator ChillObject 2/3]

;; Operator, ChillObject with a tool object.
;; ChillObject takes an object to chill and a specific tool of type IceBucketType.
;; IceBucketType is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of the object to be chilled; ?o - object to be chilled, ?toolobject - object to chill with.
;; Preconditions: The toolobject is an IceBucketType, the agent is at a location and the object to be chilled is at the same location, the object is coolable, and the agent is holding the tool.
;; Postconditions: the ?o object is now cool.
(:action ChillObjectWithTool
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject IceBucketType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (coolable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (isCool ?o)
        )
    )

[Operator ChillObject 3/3]

;; Operator, ChillObject with a tool receptacle.
;; ChillObject takes an object to chill and a specific tool of type FreezerType.
;; FreezerType is an rtype. Therefore, the tool is a receptacle.
;; Parameters: ?a - agent, ?l - location of the object to be chilled; ?o - object to be chilled, ?toolreceptacle - receptacle to chill the object in.
;; Preconditions: The toolreceptacle is a FreezerType, the agent is at a location and the object to be chilled is at the same location, and the agent is holding the object to be chilled.
;; Postconditions: the ?o object is now cool.
(:action ChillObjectWithToolReceptacle
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle FreezerType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?o)
        )
        :effect (and
            (isCool ?o)
        )
    )

propose_operator_definition:: operator_name_to_define - CutObject
propose_operator_definition:: completion for CutObject
[Operator CutObject 1/3]

(:action CutObjectOption1
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject KnifeType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (sliceable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (isSliced ?o)
        )
    )

[Operator CutObject 2/3]

(:action CutObjectOption2
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle CuttingBoardType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (objectAtLocation ?o ?l)
            (sliceable ?o)
            (holds ?a ?o)
        )
        :effect (and
            (isSliced ?o)
        )
    )

[Operator CutObject 3/3]

(:action CutObjectOption3
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (sliceable ?o)
        )
        :effect (and
            (isSliced ?o)
        )
    )

propose_operator_definition:: operator_name_to_define - PlaceObject
propose_operator_definition:: completion for PlaceObject
[Operator PlaceObject 1/3]

;; Operator, PlaceObject.
;; PlaceObject takes an object and a specific receptacle.
;; Parameters: ?a - agent, ?l - location of the receptacle; ?o - object to place, ?r - receptacle to place the object in.
;; Preconditions: The agent is at a location and the receptacle is at the same location, and the agent is holding the object.
;; Postconditions: the ?o object is now in the ?r receptacle.
(:action PlaceObject
        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)
        :precondition (and
            (atLocation ?a ?l)
            (receptacleAtLocation ?r ?l)
            (holds ?a ?o)
        )
        :effect (and
            (inReceptacle ?o ?r)
        )
)

[Operator PlaceObject 2/3]

;; Operator, PlaceObjectWithTool.
;; PlaceObjectWithTool takes an object, a specific receptacle, and a specific tool object.
;; Parameters: ?a - agent, ?l - location of the receptacle; ?o - object to place, ?r - receptacle to place the object in, ?toolobject - tool object to use.
;; Preconditions: The agent is at a location and the receptacle is at the same location, the agent is holding the object and the tool object is gratable, and the agent is holding the tool object.
;; Postconditions: the ?o object is now in the ?r receptacle and the tool object is grated.
(:action PlaceObjectWithTool
        :parameters (?a - agent ?l - location ?o - object ?r - receptacle ?toolobject - object)
        :precondition (and
            (atLocation ?a ?l)
            (receptacleAtLocation ?r ?l)
            (holds ?a ?o)
            (gratable ?toolobject)
            (holds ?a ?toolobject)
        )
        :effect (and
            (inReceptacle ?o ?r)
            (isGrated ?toolobject)
        )
)

[Operator PlaceObject 3/3]

;; Operator, PlaceObjectWithToolReceptacle.
;; PlaceObjectWithToolReceptacle takes an object, a specific receptacle, and a specific tool receptacle.
;; Parameters: ?a - agent, ?l - location of the receptacle; ?o - object to place, ?r - receptacle to place the object in, ?toolreceptacle - tool receptacle to use.
;; Preconditions: The agent is at a location and the receptacle is at the same location, the agent is holding the object and the tool receptacle is fillable, and the agent is holding the tool receptacle.
;; Postconditions: the ?o object is now in the ?r receptacle and the tool receptacle is filled.
(:action PlaceObjectWithToolReceptacle
        :parameters (?a - agent ?l - location ?o - object ?r - receptacle ?toolreceptacle - receptacle)
        :precondition (and
            (atLocation ?a ?l)
            (receptacleAtLocation ?r ?l)
            (holds ?a ?o)
            (fillable ?toolreceptacle)
            (holds ?a ?toolreceptacle)
        )
        :effect (and
            (inReceptacle ?o ?r)
            (isFilled ?toolreceptacle)
        )
)

propose_operator_definition:: operator_name_to_define - ToastObject
propose_operator_definition:: completion for ToastObject
[Operator ToastObject 1/3]

(:action ToastObjectWithToaster
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject ToasterType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?toolobject)
            (toastable ?o)
        )
        :effect (and
            (isToasted ?o)
        )
    )

[Operator ToastObject 2/3]

(:action ToastObjectWithOven
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle OvenType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
            (isToasted ?o)
        )
    )

[Operator ToastObject 3/3]

(:action ToastObjectWithoutTool
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (toastable ?o)
        )
        :effect (and
            (isToasted ?o)
        )
    )

propose_operator_definition:: operator_name_to_define - OpenObject
propose_operator_definition:: completion for OpenObject
[Operator OpenObject 1/3]

;; Operator, OpenObject1.
;; OpenObject1 takes an object to open.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be opened.
;; Preconditions: The agent is at a location and the object is at the same location, and the object is openable.
;; Postconditions: the ?o object is now opened.
(:action OpenObject1
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (openable ?o)
        )
        :effect (and
            (opened ?o)
        )
    )

[Operator OpenObject 2/3]

;; Operator, OpenObject2.
;; OpenObject2 takes an object to open and a specific tool of type butterknifeType.
;; butterknifeType is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be opened, ?toolobject - object to open with.
;; Preconditions: The toolobject is a butterknifeType, the agent is at a location and the object is at the same location, the object is openable, and the agent is holding the tool.
;; Postconditions: the ?o object is now opened.
(:action OpenObject2
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject butterknifeType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (openable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (opened ?o)
        )
    )

[Operator OpenObject 3/3]

;; Operator, OpenObject3.
;; OpenObject3 takes a receptacle to open and a specific tool of type SafeType.
;; SafeType is an rtype. Therefore, the tool is a receptacle.
;; Parameters: ?a - agent, ?l - location of the receptacle; ?r - receptacle to be opened, ?toolreceptacle - receptacle to open with.
;; Preconditions: The toolreceptacle is a SafeType, the agent is at a location and the receptacle is at the same location, and the agent is holding the receptacle to be opened.
;; Postconditions: the ?r object is now opened.
(:action OpenObject3
        :parameters (?a - agent ?l - location ?r - receptacle ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle SafeType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?r ?l)
            (holds ?a ?r)
        )
        :effect (and
            (opened ?r)
        )
    )

propose_operator_definition:: operator_name_to_define - CloseObject
propose_operator_definition:: completion for CloseObject
[Operator CloseObject 1/3]

(:action CloseObjectWithTool
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject ButterknifeType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (openable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (not (opened ?o))
        )
)

[Operator CloseObject 2/3]

(:action CloseObjectWithToolReceptacle
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle SafeType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (openable ?o)
            (holds ?a ?o)
        )
        :effect (and
            (not (opened ?o))
        )
)

[Operator CloseObject 3/3]

(:action CloseObjectWithoutTool
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (openable ?o)
        )
        :effect (and
            (not (opened ?o))
        )
)

propose_operator_definition:: operator_name_to_define - WarmObject
propose_operator_definition:: completion for WarmObject
[Operator WarmObject 1/3]

;; Operator, WarmObject using a tool object
;; WarmObject takes an object to warm and a specific tool of type MicrowaveType.
;; MicrowaveType is an rtype. Therefore, the tool is a receptacle.
;; Parameters: ?a - agent, ?l - location of the receptacle; ?o - object to be warmed, ?toolreceptacle - receptacle that can warm the object.
;; Preconditions: The toolreceptacle is a MicrowaveType, the agent is at a location and the receptacle is at the same location, and the agent is holding the object to be warmed.
;; Postconditions: the ?o object is now hot.
(:action WarmObjectWithMicrowave
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle MicrowaveType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
            (isHot ?o)
        )
    )

[Operator WarmObject 2/3]

;; Operator, WarmObject using a tool receptacle
;; WarmObject takes an object to warm and a specific tool of type ToasterType.
;; ToasterType is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be warmed, ?toolobject - object that can warm the object.
;; Preconditions: The toolobject is a ToasterType, the agent is at a location and the object is at the same location, the object is heatable, and the agent is holding the tool.
;; Postconditions: the ?o object is now hot.
(:action WarmObjectWithToaster
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject ToasterType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (heatable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (isHot ?o)
        )
    )

[Operator WarmObject 3/3]

;; Operator, WarmObject without using any tools
;; WarmObject takes any object to warm.
;; This action is applicable to any heatable object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be warmed.
;; Preconditions: The agent is at a location and the object is at the same location, and the object is heatable.
;; Postconditions: the ?o object is now hot.
(:action WarmObjectWithoutTool
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (heatable ?o)
        )
        :effect (and
            (isHot ?o)
        )
)

propose_operator_definition:: operator_name_to_define - InspectObject
propose_operator_definition:: completion for InspectObject
[Operator InspectObject 1/3]

(:action InspectObject1
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject FlashlightType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?toolobject)
        )
        :effect (and
        )
    )

[Operator InspectObject 2/3]

(:action InspectObject2
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle MagnifyingGlassType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
        )
        :effect (and
        )
    )

[Operator InspectObject 3/3]

(:action InspectObject3
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
        )
        :effect (and
        )
    )

propose_operator_definition:: operator_name_to_define - UseObject
propose_operator_definition:: completion for UseObject
[Operator UseObject 1/3]

;; Operator, UseObject 1
;; UseObject1 takes an object to use and a specific tool object of type ScrubBrushType.
;; ScrubBrushType is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be used, ?toolobject - object to use with.
;; Preconditions: The toolobject is a ScrubBrushType, the agent is at a location and the object to be used is at the same location, the object is cleanable, and the agent is holding the tool.
;; Postconditions: the ?o object is now clean.
(:action UseObject1
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject ScrubBrushType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (cleanable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (isClean ?o)
        )
    )

[Operator UseObject 2/3]

;; Operator, UseObject 2
;; UseObject2 takes an object to use and a specific tool receptacle of type FridgeType.
;; FridgeType is an rtype. Therefore, the tool is a receptacle.
;; Parameters: ?a - agent, ?l - location of the receptacle; ?o - object to be used, ?toolreceptacle - receptacle to use with.
;; Preconditions: The toolreceptacle is a FridgeType, the agent is at a location and the receptacle is at the same location, and the agent is holding the object to be used.
;; Postconditions: the ?o object is now cool.
(:action UseObject2
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle FridgeType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
           (isCool ?o)
        )
    )

[Operator UseObject 3/3]

;; Operator, UseObject 3
;; UseObject3 takes an object to use, a specific tool object of type CandleType and a specific tool receptacle of type ArmChairType.
;; CandleType and ArmChairType are otypes and rtypes respectively. Therefore, the tool objects are objects and the tool receptacles are receptacles.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be used, ?toolobject - object to use with, ?toolreceptacle - receptacle to use with.
;; Preconditions: The toolobject is a CandleType, the toolreceptacle is an ArmChairType, the agent is at a location and the object to be used is at the same location, the object is toggleable, the toolreceptacle is openable, and the agent is holding both the toolobject and the toolreceptacle.
;; Postconditions: the ?o object is now toggled and the ?toolreceptacle is now opened.
(:action UseObject3
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object ?toolreceptacle - receptacle)
        :precondition (and
            (objectType ?toolobject CandleType)
            (receptacleType ?toolreceptacle ArmChairType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (toggleable ?o)
            (openable ?toolreceptacle)
            (holds ?a ?toolobject)
            (holds ?a ?toolreceptacle)
        )
        :effect (and
            (isToggled ?o)
            (opened ?toolreceptacle)
        )
    )


propose_operator_definition:: operator_name_to_define - RinseObject
propose_operator_definition:: completion for RinseObject
[Operator RinseObject 1/3]

;; Operator, RinseObject Variant 1.
;; RinseObject1 takes an object to rinse and a specific tool of type SinkBasinType that is filled with water.
;; SinkBasinType is an rtype. Therefore, the tool is a receptacle.
;; Parameters: ?a - agent, ?l - location of the sink basin, ?o - object to be rinsed, ?toolreceptacle - receptacle filled with water to rinse the object.
;; Preconditions: The toolreceptacle is a SinkBasinType, is filled with water, the agent is at a location and the receptacle is at the same location, and the agent is holding the object to be rinsed.
;; Postconditions: the ?o object is now clean.
(:action RinseObject1
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle SinkBasinType)
            (isFilled ?toolreceptacle)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
            (isClean ?o)
        )
    )

[Operator RinseObject 2/3]

;; Operator, RinseObject Variant 2.
;; RinseObject2 takes an object to rinse and a specific tool of type ClothType.
;; ClothType is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of the object to be rinsed, ?o - object to be rinsed, ?toolobject - cloth to rinse the object.
;; Preconditions: The toolobject is a ClothType, the agent is at a location and the object to be rinsed is at the same location, and the agent is holding the cloth.
;; Postconditions: the ?o object is now clean.
(:action RinseObject2
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject ClothType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?toolobject)
        )
        :effect (and
            (isClean ?o)
        )
    )

[Operator RinseObject 3/3]

;; Operator, RinseObject Variant 3.
;; RinseObject3 takes an object to rinse without any tools.
;; Parameters: ?a - agent, ?l - location of the object to be rinsed, ?o - object to be rinsed.
;; Preconditions: The agent is at a location and the object to be rinsed is at the same location.
;; Postconditions: the ?o object is now clean.
(:action RinseObject3
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
        )
        :effect (and
            (isClean ?o)
        )
    )

propose_operator_definition:: operator_name_to_define - TakeObject
propose_operator_definition:: completion for TakeObject
[Operator TakeObject 1/3]

;; Operator, TakeObject.
;; TakeObject takes an object to take.
;; This action is applicable to any object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be taken.
;; Preconditions: The agent is at a location and the object is at the same location.
;; Postconditions: The object is now held by the agent.
(:action TakeObject
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
        )
        :effect (and
            (holds ?a ?o)
        )
)

[Operator TakeObject 2/3]

;; Operator, TakeObjectWithTool.
;; TakeObjectWithTool takes an object to take and a specific tool to use.
;; This action is applicable to any object and any tool object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be taken, ?toolobject - object to use as a tool.
;; Preconditions: The agent is at a location and the object is at the same location, and the agent is holding the tool object.
;; Postconditions: The object is now held by the agent.
(:action TakeObjectWithTool
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?toolobject)
        )
        :effect (and
            (holds ?a ?o)
        )
)

[Operator TakeObject 3/3]

;; Operator, TakeObjectFromReceptacle.
;; TakeObjectFromReceptacle takes an object to take and a receptacle to take it from.
;; This action is applicable to any object and any receptacle.
;; Parameters: ?a - agent, ?l - location of the receptacle; ?o - object to be taken, ?r - receptacle to take the object from.
;; Preconditions: The agent is at a location and the receptacle is at the same location, the object is in the receptacle, and the agent has the ability to open the receptacle.
;; Postconditions: The object is now held by the agent and is no longer in the receptacle.
(:action TakeObjectFromReceptacle
        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)
        :precondition (and
            (atLocation ?a ?l)
            (receptacleAtLocation ?r ?l)
            (inReceptacle ?o ?r)
            (openable ?r)
            (opened ?r)
        )
        :effect (and
            (holds ?a ?o)
            (not (inReceptacle ?o ?r))
        )
)

propose_operator_definition:: operator_name_to_define - ChopObject
propose_operator_definition:: completion for ChopObject
[Operator ChopObject 1/3]

(:action ChopObject1
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject KnifeType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (sliceable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (isSliced ?o)
        )
    )

[Operator ChopObject 2/3]

(:action ChopObject2
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject ButterKnifeType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (sliceable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (isSliced ?o)
        )
    )

[Operator ChopObject 3/3]

(:action ChopObject3
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle CuttingBoardType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
            (isSliced ?o)
            (objectAtLocation ?o ?l)
        )
    )

propose_operator_definition:: operator_name_to_define - WipeObject
propose_operator_definition:: completion for WipeObject
[Operator WipeObject 1/3]

(:action WipeObject1
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject ClothType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (cleanable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (isClean ?o)
        )
    )

[Operator WipeObject 2/3]

(:action WipeObject2
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - object)
        :precondition (and
            (objectType ?toolreceptacle DishSpongeType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (openable ?toolreceptacle)
            (opened ?toolreceptacle)
            (cleanable ?o)
            (holds ?a ?toolreceptacle)
        )
        :effect (and
            (isClean ?o)
        )
    )

[Operator WipeObject 3/3]

(:action WipeObject3
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (cleanable ?o)
        )
        :effect (and
            (isClean ?o)
        )
    )

propose_operator_definition:: operator_name_to_define - DiscardObject
propose_operator_definition:: completion for DiscardObject
[Operator DiscardObject 1/3]

(:action DiscardObject
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
        )
        :effect (and
            (not (holds ?a ?o))
            (not (objectAtLocation ?o ?l))
        )
)

[Operator DiscardObject 2/3]

(:action DiscardObjectWithTool
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject MugType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?toolobject)
        )
        :effect (and
            (not (holds ?a ?o))
            (not (objectAtLocation ?o ?l))
        )
)

[Operator DiscardObject 3/3]

(:action DiscardObjectWithReceptacle
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle GarbageCanType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?o)
        )
        :effect (and
            (not (holds ?a ?o))
            (inReceptacle ?o ?toolreceptacle)
        )
)

propose_operator_definition:: operator_name_to_define - LookObject
propose_operator_definition:: completion for LookObject
[Operator LookObject 1/3]

;; Operator, LookObject.
;; LookObject takes an object to look at.
;; This action is applicable to any object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to look at.
;; Preconditions: The agent is at a location, and the object is at the same location.
;; Postconditions: None.
(:action LookObject
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
        )
        :effect (and
        )
)

[Operator LookObject 2/3]

;; Operator, LookObjectWithTool.
;; LookObjectWithTool takes an object to look at, as well as a specific tool of type MirrorType.
;; MirrorType is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to look at, ?toolobject - object to use for looking.
;; Preconditions: The toolobject is a MirrorType, the agent is at a location and the object to look at is at the same location, and the agent is holding the tool.
;; Postconditions: None.
(:action LookObjectWithTool
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject MirrorType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?toolobject)
        )
        :effect (and
        )
)

[Operator LookObject 3/3]

;; Operator, LookObjectWithToolReceptacle.
;; LookObjectWithToolReceptacle takes an object to look at, as well as a specific tool of type MirrorType.
;; MirrorType is an rtype. Therefore, the tool is a receptacle.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to look at, ?toolreceptacle - receptacle to use for looking.
;; Preconditions: The toolreceptacle is a MirrorType, the agent is at a location and the object to look at is at the same location, and the agent is holding the tool.
;; Postconditions: None.
(:action LookObjectWithToolReceptacle
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle MirrorType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?toolreceptacle)
        )
        :effect (and
        )
)


propose_operators_for_problems: proposed operators for 30 / 30
preprocess_operators:: preprocessing 30 operators.
['TurnOnObject', 'ExamineObject', 'TurnOffObject', 'TurnOnLight', 'CookObject', 'HeatObject', 'WashObject', 'CoolObject', 'SliceObject', 'DropObject', 'MicrowaveObject', 'CleanObject', 'LookAtObject', 'ThrowAwayObject', 'ThrowObject', 'ChillObject', 'CutObject', 'PlaceObject', 'ToastObject', 'OpenObject', 'CloseObject', 'WarmObject', 'InspectObject', 'UseObject', 'RinseObject', 'TakeObject', 'ChopObject', 'WipeObject', 'DiscardObject', 'LookObject']
Logging preprocessed operators: generated/alfred_cot_250_filtered_2_912023/0/alfred_cot_250_filtered_2_912023_preprocessed_operators.csv

Attempting task and motion planning on all problems.
task_planner.attempt_task_plan_for_problem: attempt 0 / 223 ID=train/look_at_obj_in_light-AlarmClock-None-DeskLamp-309/trial_T20190908_062755_880343 AttemptIdx=0 GoalIdx=0
Conservative operator proposal; only returning operators above threshold.
  Now attempting to plan for goal: 0 / 1
    Running planner with existing operators + 0 proposed operators: 
    Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
    Proposed Operators: set()
    Language: examine an alarm clock by the light of a table lamp.
    Ground truth goal: (:goal (exists (?a - agent) (exists (?r - receptacle) (exists (?o - object) (exists (?ot - object) (exists (?l - location) (and (objectType ?ot DeskLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o AlarmClockType) (holds ?a ?o) ) ))))))
    Proposed goal: (:goal (exists (?r2 - receptacle) (exists (?r1 - receptacle) (exists (?o - object) (exists (?l2 - location) (exists (?a - agent) (and (objectType ?o AlarmClockType) (receptacleType ?r2 DiningTableType) (inReceptacle ?o ?r1) (atLocation ?a ?l2) (objectAtLocation ?o ?l2))))))) )
Instantiating FD with --alias "lama-first" 
    Plan success: False
    Plan string:  Plan not found with FD! Error: INFO planner time limit: None INFO planner memory limit: None INFO Running translator. INFO translator stdin: None INFO translator time limit: None INFO translator memory limit: None INFO translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpgcur2koq /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp3at9t7hy --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp1mkxo458 Parsing... Parsing: [0.000s CPU, 0.001s wall-clock] Normalizing task... [0.000s CPU, 0.000s wall-clock] Instantiating... Generating Datalog program... [0.010s CPU, 0.001s wall-clock] Normalizing Datalog program... Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock] Preparing model... [0.000s CPU, 0.002s wall-clock] Generated 45 rules. Computing model... [0.010s CPU, 0.007s wall-clock] 1731 relevant atoms 797 auxiliary atoms 2528 final queue length 4016 total queue pushes Completing instantiation... [0.000s CPU, 0.010s wall-clock] Instantiating: [0.020s CPU, 0.021s wall-clock] No relaxed solution! Generating unsolvable task... Translator variables: 1 Translator derived variables: 0 Translator facts: 2 Translator goal facts: 1 Translator mutex groups: 0 Translator total mutex groups size: 0 Translator operators: 0 Translator axioms: 0 Translator task size: 4 warning: could not determine peak memory Writing output... [0.000s CPU, 0.000s wall-clock] Done! [0.030s CPU, 0.022s wall-clock] translate exit code: 0 INFO Running search (release). INFO search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp1mkxo458 INFO search time limit: None INFO search memory limit: None INFO search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp1mkxo458 [t=0.00214606s, 408509680 KB] reading input... [t=0.00244893s, 408509680 KB] done reading input! [t=0.0067126s, 408509680 KB] Initializing landmark sum heuristic... [t=0.00672023s, 408509680 KB] Generating landmark graph... [t=0.00673568s, 408509680 KB] Building a landmark graph with reasonable orders. [t=0.00673917s, 408509680 KB] Initializing Exploration... [t=0.0068937s, 408509680 KB] Generating landmarks using the RPG/SAS+ approach [t=0.00702859s, 408509680 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00715183s, 408509680 KB] Landmarks generation time: 0.000416273s [t=0.00715655s, 408509680 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00715971s, 408509680 KB] 1 edges [t=0.0071618s, 408509680 KB] approx. reasonable orders [t=0.00716409s, 408509680 KB] approx. obedient reasonable orders [t=0.00716672s, 408509680 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00716914s, 408509680 KB] Landmarks generation time: 0.000446777s [t=0.00717455s, 408509680 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00717668s, 408509680 KB] 1 edges [t=0.00717857s, 408509680 KB] Landmark graph generation time: 0.000459569s [t=0.00718107s, 408509680 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00718365s, 408509680 KB] Landmark graph contains 1 orderings. [t=0.00719156s, 408509680 KB] Simplifying 0 unary operators... done! [0 unary operators] [t=0.00719529s, 408509680 KB] time to simplify: 5.084e-06s [t=0.00719817s, 408509680 KB] Initializing additive heuristic... [t=0.00720013s, 408509680 KB] Initializing FF heuristic... [t=0.0073654s, 408509680 KB] Building successor generator...done! [t=0.00737098s, 408509680 KB] peak memory difference for successor generator creation: 0 KB [t=0.00737348s, 408509680 KB] time for successor generation creation: 5.33e-07s [t=0.00737594s, 408509680 KB] Variables: 1 [t=0.00737824s, 408509680 KB] FactPairs: 2 [t=0.00738012s, 408509680 KB] Bytes per state: 4 [t=0.00740645s, 408509680 KB] Conducting lazy best first search, (real) bound = 2147483647 [t=0.0074103s, 408509680 KB] 1 initial landmarks, 1 goal landmarks [t=0.00754133s, 408509680 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity [t=0.0075447s, 408509680 KB] Completely explored state space -- no solution! [t=0.00754662s, 408509680 KB] Actual search time: 0.000134767s [t=0.00754876s, 408509680 KB] Expanded 0 state(s). [t=0.00754876s, 408509680 KB] Reopened 0 state(s). [t=0.00754876s, 408509680 KB] Evaluated 1 state(s). [t=0.00754876s, 408509680 KB] Evaluations: 1 [t=0.00754876s, 408509680 KB] Generated 0 state(s). [t=0.00754876s, 408509680 KB] Dead ends: 1 state(s). [t=0.00754876s, 408509680 KB] Number of registered states: 1 [t=0.00754876s, 408509680 KB] Int hash set load factor: 1/1 = 1 [t=0.00754876s, 408509680 KB] Int hash set resizes: 0 [t=0.00754876s, 408509680 KB] Search time: 0.000142393s [t=0.00754876s, 408509680 KB] Total time: 0.00754876s Search stopped without finding a solution. Peak memory: 408509680 KB search exit code: 12 Driver aborting after search INFO Planner time: 0.07s
    Plan time: 0.248s
Conservative operator proposal; attempting with new choice: CoolObject_0
  Now attempting to plan for goal: 0 / 1
    Running planner with existing operators + 1 proposed operators: 
    Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
    Proposed Operators: {'CoolObject_0'}
    Language: examine an alarm clock by the light of a table lamp.
    Ground truth goal: (:goal (exists (?a - agent) (exists (?r - receptacle) (exists (?o - object) (exists (?ot - object) (exists (?l - location) (and (objectType ?ot DeskLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o AlarmClockType) (holds ?a ?o) ) ))))))
    Proposed goal: (:goal (exists (?r2 - receptacle) (exists (?r1 - receptacle) (exists (?o - object) (exists (?l2 - location) (exists (?a - agent) (and (objectType ?o AlarmClockType) (receptacleType ?r2 DiningTableType) (inReceptacle ?o ?r1) (atLocation ?a ?l2) (objectAtLocation ?o ?l2))))))) )
Instantiating FD with --alias "lama-first" 
    Plan success: False
    Plan string:  Plan not found with FD! Error: INFO planner time limit: None INFO planner memory limit: None INFO Running translator. INFO translator stdin: None INFO translator time limit: None INFO translator memory limit: None INFO translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpf9p3hhp7 /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpg6cd2yuy --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpwi6n_t1_ Parsing... Parsing: [0.000s CPU, 0.001s wall-clock] Normalizing task... [0.000s CPU, 0.000s wall-clock] Instantiating... Generating Datalog program... [0.000s CPU, 0.001s wall-clock] Normalizing Datalog program... Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock] Preparing model... [0.000s CPU, 0.002s wall-clock] Generated 53 rules. Computing model... [0.010s CPU, 0.008s wall-clock] 1731 relevant atoms 888 auxiliary atoms 2619 final queue length 4109 total queue pushes Completing instantiation... [0.010s CPU, 0.010s wall-clock] Instantiating: [0.020s CPU, 0.022s wall-clock] No relaxed solution! Generating unsolvable task... Translator variables: 1 Translator derived variables: 0 Translator facts: 2 Translator goal facts: 1 Translator mutex groups: 0 Translator total mutex groups size: 0 Translator operators: 0 Translator axioms: 0 Translator task size: 4 warning: could not determine peak memory Writing output... [0.000s CPU, 0.000s wall-clock] Done! [0.020s CPU, 0.024s wall-clock] translate exit code: 0 INFO Running search (release). INFO search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpwi6n_t1_ INFO search time limit: None INFO search memory limit: None INFO search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpwi6n_t1_ [t=9.6063e-05s, 408500464 KB] reading input... [t=0.000149568s, 408500464 KB] done reading input! [t=0.00371698s, 408500464 KB] Initializing landmark sum heuristic... [t=0.00372178s, 408500464 KB] Generating landmark graph... [t=0.00372624s, 408500464 KB] Building a landmark graph with reasonable orders. [t=0.00372858s, 408500464 KB] Initializing Exploration... [t=0.00373149s, 408500464 KB] Generating landmarks using the RPG/SAS+ approach [t=0.00374346s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00374687s, 408500464 KB] Landmarks generation time: 2.0008e-05s [t=0.00374925s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00375388s, 408500464 KB] 1 edges [t=0.00375605s, 408500464 KB] approx. reasonable orders [t=0.0037622s, 408500464 KB] approx. obedient reasonable orders [t=0.00376495s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00376696s, 408500464 KB] Landmarks generation time: 4.3829e-05s [t=0.00376942s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.003772s, 408500464 KB] 1 edges [t=0.00377393s, 408500464 KB] Landmark graph generation time: 5.3423e-05s [t=0.00377807s, 408500464 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.0037802s, 408500464 KB] Landmark graph contains 1 orderings. [t=0.00378885s, 408500464 KB] Simplifying 0 unary operators... done! [0 unary operators] [t=0.0037927s, 408500464 KB] time to simplify: 5.535e-06s [t=0.00379517s, 408500464 KB] Initializing additive heuristic... [t=0.00379709s, 408500464 KB] Initializing FF heuristic... [t=0.00381862s, 408500464 KB] Building successor generator...done! [t=0.00382542s, 408500464 KB] peak memory difference for successor generator creation: 0 KB [t=0.00382813s, 408500464 KB] time for successor generation creation: 1.64e-06s [t=0.00383055s, 408500464 KB] Variables: 1 [t=0.00383284s, 408500464 KB] FactPairs: 2 [t=0.00383469s, 408500464 KB] Bytes per state: 4 [t=0.00385322s, 408500464 KB] Conducting lazy best first search, (real) bound = 2147483647 [t=0.00385855s, 408500464 KB] 1 initial landmarks, 1 goal landmarks [t=0.00386573s, 408500464 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity [t=0.0038695s, 408500464 KB] Completely explored state space -- no solution! [t=0.00387179s, 408500464 KB] Actual search time: 1.1521e-05s [t=0.00387393s, 408500464 KB] Expanded 0 state(s). [t=0.00387393s, 408500464 KB] Reopened 0 state(s). [t=0.00387393s, 408500464 KB] Evaluated 1 state(s). [t=0.00387393s, 408500464 KB] Evaluations: 1 [t=0.00387393s, 408500464 KB] Generated 0 state(s). [t=0.00387393s, 408500464 KB] Dead ends: 1 state(s). [t=0.00387393s, 408500464 KB] Number of registered states: 1 [t=0.00387393s, 408500464 KB] Int hash set load factor: 1/1 = 1 [t=0.00387393s, 408500464 KB] Int hash set resizes: 0 [t=0.00387393s, 408500464 KB] Search time: 2.0869e-05s [t=0.00387393s, 408500464 KB] Total time: 0.00387393s Search stopped without finding a solution. Peak memory: 408500464 KB search exit code: 12 Driver aborting after search INFO Planner time: 0.07s
    Plan time: 0.131s
Conservative operator proposal; attempting with new choice: HeatObject_0
  Now attempting to plan for goal: 0 / 1
    Running planner with existing operators + 1 proposed operators: 
    Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
    Proposed Operators: {'HeatObject_0'}
    Language: examine an alarm clock by the light of a table lamp.
    Ground truth goal: (:goal (exists (?a - agent) (exists (?r - receptacle) (exists (?o - object) (exists (?ot - object) (exists (?l - location) (and (objectType ?ot DeskLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o AlarmClockType) (holds ?a ?o) ) ))))))
    Proposed goal: (:goal (exists (?r2 - receptacle) (exists (?r1 - receptacle) (exists (?o - object) (exists (?l2 - location) (exists (?a - agent) (and (objectType ?o AlarmClockType) (receptacleType ?r2 DiningTableType) (inReceptacle ?o ?r1) (atLocation ?a ?l2) (objectAtLocation ?o ?l2))))))) )
Instantiating FD with --alias "lama-first" 
    Plan success: False
    Plan string:  Plan not found with FD! Error: INFO planner time limit: None INFO planner memory limit: None INFO Running translator. INFO translator stdin: None INFO translator time limit: None INFO translator memory limit: None INFO translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpwnq4z3uf /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpgro_8n9f --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmphhjmvboo Parsing... Parsing: [0.000s CPU, 0.001s wall-clock] Normalizing task... [0.010s CPU, 0.000s wall-clock] Instantiating... Generating Datalog program... [0.000s CPU, 0.001s wall-clock] Normalizing Datalog program... Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock] Preparing model... [0.000s CPU, 0.002s wall-clock] Generated 51 rules. Computing model... [0.010s CPU, 0.008s wall-clock] 1731 relevant atoms 848 auxiliary atoms 2579 final queue length 4067 total queue pushes Completing instantiation... [0.010s CPU, 0.010s wall-clock] Instantiating: [0.020s CPU, 0.022s wall-clock] No relaxed solution! Generating unsolvable task... Translator variables: 1 Translator derived variables: 0 Translator facts: 2 Translator goal facts: 1 Translator mutex groups: 0 Translator total mutex groups size: 0 Translator operators: 0 Translator axioms: 0 Translator task size: 4 warning: could not determine peak memory Writing output... [0.000s CPU, 0.000s wall-clock] Done! [0.030s CPU, 0.023s wall-clock] translate exit code: 0 INFO Running search (release). INFO search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmphhjmvboo INFO search time limit: None INFO search memory limit: None INFO search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmphhjmvboo [t=8.7945e-05s, 408500464 KB] reading input... [t=0.000143705s, 408500464 KB] done reading input! [t=0.00364797s, 408500464 KB] Initializing landmark sum heuristic... [t=0.00365351s, 408500464 KB] Generating landmark graph... [t=0.0036572s, 408500464 KB] Building a landmark graph with reasonable orders. [t=0.0036595s, 408500464 KB] Initializing Exploration... [t=0.00366245s, 408500464 KB] Generating landmarks using the RPG/SAS+ approach [t=0.00367454s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00367778s, 408500464 KB] Landmarks generation time: 1.9885e-05s [t=0.00368012s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00368356s, 408500464 KB] 1 edges [t=0.00368594s, 408500464 KB] approx. reasonable orders [t=0.00368832s, 408500464 KB] approx. obedient reasonable orders [t=0.00369078s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00369283s, 408500464 KB] Landmarks generation time: 3.8581e-05s [t=0.00369537s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00369767s, 408500464 KB] 1 edges [t=0.00369955s, 408500464 KB] Landmark graph generation time: 4.7396e-05s [t=0.00370332s, 408500464 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00370591s, 408500464 KB] Landmark graph contains 1 orderings. [t=0.00371632s, 408500464 KB] Simplifying 0 unary operators... done! [0 unary operators] [t=0.00371972s, 408500464 KB] time to simplify: 5.002e-06s [t=0.00372206s, 408500464 KB] Initializing additive heuristic... [t=0.00372378s, 408500464 KB] Initializing FF heuristic... [t=0.00374543s, 408500464 KB] Building successor generator...done! [t=0.00375125s, 408500464 KB] peak memory difference for successor generator creation: 0 KB [t=0.00375343s, 408500464 KB] time for successor generation creation: 1.599e-06s [t=0.00375581s, 408500464 KB] Variables: 1 [t=0.00375814s, 408500464 KB] FactPairs: 2 [t=0.00376007s, 408500464 KB] Bytes per state: 4 [t=0.00377893s, 408500464 KB] Conducting lazy best first search, (real) bound = 2147483647 [t=0.00378491s, 408500464 KB] 1 initial landmarks, 1 goal landmarks [t=0.00379201s, 408500464 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity [t=0.00379451s, 408500464 KB] Completely explored state space -- no solution! [t=0.00379648s, 408500464 KB] Actual search time: 1.0004e-05s [t=0.00379844s, 408500464 KB] Expanded 0 state(s). [t=0.00379844s, 408500464 KB] Reopened 0 state(s). [t=0.00379844s, 408500464 KB] Evaluated 1 state(s). [t=0.00379844s, 408500464 KB] Evaluations: 1 [t=0.00379844s, 408500464 KB] Generated 0 state(s). [t=0.00379844s, 408500464 KB] Dead ends: 1 state(s). [t=0.00379844s, 408500464 KB] Number of registered states: 1 [t=0.00379844s, 408500464 KB] Int hash set load factor: 1/1 = 1 [t=0.00379844s, 408500464 KB] Int hash set resizes: 0 [t=0.00379844s, 408500464 KB] Search time: 1.9803e-05s [t=0.00379844s, 408500464 KB] Total time: 0.00379844s Search stopped without finding a solution. Peak memory: 408500464 KB search exit code: 12 Driver aborting after search INFO Planner time: 0.05s
    Plan time: 0.125s
Conservative operator proposal; attempting with new choice: PlaceObject_0
  Now attempting to plan for goal: 0 / 1
    Running planner with existing operators + 1 proposed operators: 
    Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
    Proposed Operators: {'PlaceObject_0'}
    Language: examine an alarm clock by the light of a table lamp.
    Ground truth goal: (:goal (exists (?a - agent) (exists (?r - receptacle) (exists (?o - object) (exists (?ot - object) (exists (?l - location) (and (objectType ?ot DeskLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o AlarmClockType) (holds ?a ?o) ) ))))))
    Proposed goal: (:goal (exists (?r2 - receptacle) (exists (?r1 - receptacle) (exists (?o - object) (exists (?l2 - location) (exists (?a - agent) (and (objectType ?o AlarmClockType) (receptacleType ?r2 DiningTableType) (inReceptacle ?o ?r1) (atLocation ?a ?l2) (objectAtLocation ?o ?l2))))))) )
Instantiating FD with --alias "lama-first" 
    Plan success: False
    Plan string:  Plan not found with FD! Error: INFO planner time limit: None INFO planner memory limit: None INFO Running translator. INFO translator stdin: None INFO translator time limit: None INFO translator memory limit: None INFO translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmprguswsa8 /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpyrz941zh --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpxxge28sl Parsing... Parsing: [0.000s CPU, 0.001s wall-clock] Normalizing task... [0.000s CPU, 0.000s wall-clock] Instantiating... Generating Datalog program... [0.010s CPU, 0.001s wall-clock] Normalizing Datalog program... Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock] Preparing model... [0.000s CPU, 0.002s wall-clock] Generated 52 rules. Computing model... [0.010s CPU, 0.008s wall-clock] 1761 relevant atoms 886 auxiliary atoms 2647 final queue length 4167 total queue pushes Completing instantiation... [0.010s CPU, 0.010s wall-clock] Instantiating: [0.030s CPU, 0.022s wall-clock] No relaxed solution! Generating unsolvable task... Translator variables: 1 Translator derived variables: 0 Translator facts: 2 Translator goal facts: 1 Translator mutex groups: 0 Translator total mutex groups size: 0 Translator operators: 0 Translator axioms: 0 Translator task size: 4 warning: could not determine peak memory Writing output... [0.000s CPU, 0.000s wall-clock] Done! [0.030s CPU, 0.023s wall-clock] translate exit code: 0 INFO Running search (release). INFO search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpxxge28sl INFO search time limit: None INFO search memory limit: None INFO search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpxxge28sl [t=9.102e-05s, 408500464 KB] reading input... [t=0.000151249s, 408500464 KB] done reading input! [t=0.0036852s, 408500464 KB] Initializing landmark sum heuristic... [t=0.0036898s, 408500464 KB] Generating landmark graph... [t=0.00369693s, 408500464 KB] Building a landmark graph with reasonable orders. [t=0.00369939s, 408500464 KB] Initializing Exploration... [t=0.00370226s, 408500464 KB] Generating landmarks using the RPG/SAS+ approach [t=0.00371456s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00371821s, 408500464 KB] Landmarks generation time: 2.05e-05s [t=0.00372096s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00372391s, 408500464 KB] 1 edges [t=0.00372624s, 408500464 KB] approx. reasonable orders [t=0.0037292s, 408500464 KB] approx. obedient reasonable orders [t=0.00373174s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00373375s, 408500464 KB] Landmarks generation time: 3.9811e-05s [t=0.00373617s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00373834s, 408500464 KB] 1 edges [t=0.00374027s, 408500464 KB] Landmark graph generation time: 5.1701e-05s [t=0.00374268s, 408500464 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00374551s, 408500464 KB] Landmark graph contains 1 orderings. [t=0.00375449s, 408500464 KB] Simplifying 0 unary operators... done! [0 unary operators] [t=0.00375777s, 408500464 KB] time to simplify: 4.633e-06s [t=0.00375974s, 408500464 KB] Initializing additive heuristic... [t=0.00376142s, 408500464 KB] Initializing FF heuristic... [t=0.00378336s, 408500464 KB] Building successor generator...done! [t=0.00378861s, 408500464 KB] peak memory difference for successor generator creation: 0 KB [t=0.0037964s, 408500464 KB] time for successor generation creation: 1.353e-06s [t=0.00379898s, 408500464 KB] Variables: 1 [t=0.00380074s, 408500464 KB] FactPairs: 2 [t=0.0038025s, 408500464 KB] Bytes per state: 4 [t=0.00382399s, 408500464 KB] Conducting lazy best first search, (real) bound = 2147483647 [t=0.00382829s, 408500464 KB] 1 initial landmarks, 1 goal landmarks [t=0.00383514s, 408500464 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity [t=0.00383793s, 408500464 KB] Completely explored state space -- no solution! [t=0.00383973s, 408500464 KB] Actual search time: 1.0209e-05s [t=0.00384166s, 408500464 KB] Expanded 0 state(s). [t=0.00384166s, 408500464 KB] Reopened 0 state(s). [t=0.00384166s, 408500464 KB] Evaluated 1 state(s). [t=0.00384166s, 408500464 KB] Evaluations: 1 [t=0.00384166s, 408500464 KB] Generated 0 state(s). [t=0.00384166s, 408500464 KB] Dead ends: 1 state(s). [t=0.00384166s, 408500464 KB] Number of registered states: 1 [t=0.00384166s, 408500464 KB] Int hash set load factor: 1/1 = 1 [t=0.00384166s, 408500464 KB] Int hash set resizes: 0 [t=0.00384166s, 408500464 KB] Search time: 1.804e-05s [t=0.00384166s, 408500464 KB] Total time: 0.00384166s Search stopped without finding a solution. Peak memory: 408500464 KB search exit code: 12 Driver aborting after search INFO Planner time: 0.05s
    Plan time: 0.123s
Conservative operator proposal; attempting with new choice: DiscardObject_0
  Now attempting to plan for goal: 0 / 1
    Running planner with existing operators + 1 proposed operators: 
    Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
    Proposed Operators: {'DiscardObject_0'}
    Language: examine an alarm clock by the light of a table lamp.
    Ground truth goal: (:goal (exists (?a - agent) (exists (?r - receptacle) (exists (?o - object) (exists (?ot - object) (exists (?l - location) (and (objectType ?ot DeskLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o AlarmClockType) (holds ?a ?o) ) ))))))
    Proposed goal: (:goal (exists (?r2 - receptacle) (exists (?r1 - receptacle) (exists (?o - object) (exists (?l2 - location) (exists (?a - agent) (and (objectType ?o AlarmClockType) (receptacleType ?r2 DiningTableType) (inReceptacle ?o ?r1) (atLocation ?a ?l2) (objectAtLocation ?o ?l2))))))) )
Instantiating FD with --alias "lama-first" 
    Plan success: False
    Plan string:  Plan not found with FD! Error: INFO planner time limit: None INFO planner memory limit: None INFO Running translator. INFO translator stdin: None INFO translator time limit: None INFO translator memory limit: None INFO translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpi_wtbvkv /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp9w6s6wx3 --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpficfwkgo Parsing... Parsing: [0.000s CPU, 0.002s wall-clock] Normalizing task... [0.000s CPU, 0.000s wall-clock] Instantiating... Generating Datalog program... [0.000s CPU, 0.001s wall-clock] Normalizing Datalog program... Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock] Preparing model... [0.000s CPU, 0.002s wall-clock] Generated 49 rules. Computing model... [0.010s CPU, 0.009s wall-clock] 1763 relevant atoms 880 auxiliary atoms 2643 final queue length 4163 total queue pushes Completing instantiation... [0.010s CPU, 0.011s wall-clock] Instantiating: [0.020s CPU, 0.024s wall-clock] No relaxed solution! Generating unsolvable task... Translator variables: 1 Translator derived variables: 0 Translator facts: 2 Translator goal facts: 1 Translator mutex groups: 0 Translator total mutex groups size: 0 Translator operators: 0 Translator axioms: 0 Translator task size: 4 warning: could not determine peak memory Writing output... [0.000s CPU, 0.000s wall-clock] Done! [0.020s CPU, 0.027s wall-clock] translate exit code: 0 INFO Running search (release). INFO search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpficfwkgo INFO search time limit: None INFO search memory limit: None INFO search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpficfwkgo [t=0.000103976s, 408500464 KB] reading input... [t=0.000162278s, 408500464 KB] done reading input! [t=0.00373666s, 408500464 KB] Initializing landmark sum heuristic... [t=0.00374318s, 408500464 KB] Generating landmark graph... [t=0.00374691s, 408500464 KB] Building a landmark graph with reasonable orders. [t=0.00374912s, 408500464 KB] Initializing Exploration... [t=0.00375236s, 408500464 KB] Generating landmarks using the RPG/SAS+ approach [t=0.00376552s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00377069s, 408500464 KB] Landmarks generation time: 2.3329e-05s [t=0.0037729s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.0037752s, 408500464 KB] 1 edges [t=0.00377721s, 408500464 KB] approx. reasonable orders [t=0.00378053s, 408500464 KB] approx. obedient reasonable orders [t=0.00378463s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00378647s, 408500464 KB] Landmarks generation time: 4.2599e-05s [t=0.00378836s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00379041s, 408500464 KB] 1 edges [t=0.00379221s, 408500464 KB] Landmark graph generation time: 5.0348e-05s [t=0.00379574s, 408500464 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00379918s, 408500464 KB] Landmark graph contains 1 orderings. [t=0.00380902s, 408500464 KB] Simplifying 0 unary operators... done! [0 unary operators] [t=0.0038139s, 408500464 KB] time to simplify: 6.191e-06s [t=0.00381599s, 408500464 KB] Initializing additive heuristic... [t=0.00381763s, 408500464 KB] Initializing FF heuristic... [t=0.00383916s, 408500464 KB] Building successor generator...done! [t=0.00384642s, 408500464 KB] peak memory difference for successor generator creation: 0 KB [t=0.00384924s, 408500464 KB] time for successor generation creation: 1.476e-06s [t=0.00385191s, 408500464 KB] Variables: 1 [t=0.00385585s, 408500464 KB] FactPairs: 2 [t=0.00385773s, 408500464 KB] Bytes per state: 4 [t=0.00387811s, 408500464 KB] Conducting lazy best first search, (real) bound = 2147483647 [t=0.0038845s, 408500464 KB] 1 initial landmarks, 1 goal landmarks [t=0.00389111s, 408500464 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity [t=0.00389566s, 408500464 KB] Completely explored state space -- no solution! [t=0.00389762s, 408500464 KB] Actual search time: 1.1972e-05s [t=0.00389951s, 408500464 KB] Expanded 0 state(s). [t=0.00389951s, 408500464 KB] Reopened 0 state(s). [t=0.00389951s, 408500464 KB] Evaluated 1 state(s). [t=0.00389951s, 408500464 KB] Evaluations: 1 [t=0.00389951s, 408500464 KB] Generated 0 state(s). [t=0.00389951s, 408500464 KB] Dead ends: 1 state(s). [t=0.00389951s, 408500464 KB] Number of registered states: 1 [t=0.00389951s, 408500464 KB] Int hash set load factor: 1/1 = 1 [t=0.00389951s, 408500464 KB] Int hash set resizes: 0 [t=0.00389951s, 408500464 KB] Search time: 2.1484e-05s [t=0.00389951s, 408500464 KB] Total time: 0.00389951s Search stopped without finding a solution. Peak memory: 408500464 KB search exit code: 12 Driver aborting after search INFO Planner time: 0.08s
    Plan time: 0.151s
Conservative operator proposal; attempting with new choice: CookObject_2
  Now attempting to plan for goal: 0 / 1
    Running planner with existing operators + 1 proposed operators: 
    Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
    Proposed Operators: {'CookObject_2'}
    Language: examine an alarm clock by the light of a table lamp.
    Ground truth goal: (:goal (exists (?a - agent) (exists (?r - receptacle) (exists (?o - object) (exists (?ot - object) (exists (?l - location) (and (objectType ?ot DeskLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o AlarmClockType) (holds ?a ?o) ) ))))))
    Proposed goal: (:goal (exists (?r2 - receptacle) (exists (?r1 - receptacle) (exists (?o - object) (exists (?l2 - location) (exists (?a - agent) (and (objectType ?o AlarmClockType) (receptacleType ?r2 DiningTableType) (inReceptacle ?o ?r1) (atLocation ?a ?l2) (objectAtLocation ?o ?l2))))))) )
Instantiating FD with --alias "lama-first" 
    Plan success: False
    Plan string:  Plan not found with FD! Error: INFO planner time limit: None INFO planner memory limit: None INFO Running translator. INFO translator stdin: None INFO translator time limit: None INFO translator memory limit: None INFO translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpvf6fvulj /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp9bs7fj6j --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpnxvbluja Parsing... Parsing: [0.000s CPU, 0.001s wall-clock] Normalizing task... [0.000s CPU, 0.000s wall-clock] Instantiating... Generating Datalog program... [0.010s CPU, 0.001s wall-clock] Normalizing Datalog program... Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock] Preparing model... [0.000s CPU, 0.002s wall-clock] Generated 50 rules. Computing model... [0.010s CPU, 0.008s wall-clock] 1765 relevant atoms 880 auxiliary atoms 2645 final queue length 4195 total queue pushes Completing instantiation... [0.010s CPU, 0.010s wall-clock] Instantiating: [0.030s CPU, 0.022s wall-clock] No relaxed solution! Generating unsolvable task... Translator variables: 1 Translator derived variables: 0 Translator facts: 2 Translator goal facts: 1 Translator mutex groups: 0 Translator total mutex groups size: 0 Translator operators: 0 Translator axioms: 0 Translator task size: 4 warning: could not determine peak memory Writing output... [0.000s CPU, 0.000s wall-clock] Done! [0.030s CPU, 0.023s wall-clock] translate exit code: 0 INFO Running search (release). INFO search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpnxvbluja INFO search time limit: None INFO search memory limit: None INFO search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpnxvbluja [t=9.676e-05s, 408500464 KB] reading input... [t=0.000150429s, 408500464 KB] done reading input! [t=0.00362526s, 408500464 KB] Initializing landmark sum heuristic... [t=0.00362989s, 408500464 KB] Generating landmark graph... [t=0.0036335s, 408500464 KB] Building a landmark graph with reasonable orders. [t=0.00363588s, 408500464 KB] Initializing Exploration... [t=0.00363883s, 408500464 KB] Generating landmarks using the RPG/SAS+ approach [t=0.00365089s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00365404s, 408500464 KB] Landmarks generation time: 1.9844e-05s [t=0.00365642s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00365888s, 408500464 KB] 1 edges [t=0.00366118s, 408500464 KB] approx. reasonable orders [t=0.00366392s, 408500464 KB] approx. obedient reasonable orders [t=0.00366614s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00366843s, 408500464 KB] Landmarks generation time: 3.7843e-05s [t=0.00367057s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00367286s, 408500464 KB] 1 edges [t=0.00367475s, 408500464 KB] Landmark graph generation time: 4.6084e-05s [t=0.00367721s, 408500464 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00367959s, 408500464 KB] Landmark graph contains 1 orderings. [t=0.00368906s, 408500464 KB] Simplifying 0 unary operators... done! [0 unary operators] [t=0.0036923s, 408500464 KB] time to simplify: 4.797e-06s [t=0.00369447s, 408500464 KB] Initializing additive heuristic... [t=0.00369615s, 408500464 KB] Initializing FF heuristic... [t=0.00371792s, 408500464 KB] Building successor generator...done! [t=0.00372354s, 408500464 KB] peak memory difference for successor generator creation: 0 KB [t=0.00372567s, 408500464 KB] time for successor generation creation: 1.558e-06s [t=0.00372809s, 408500464 KB] Variables: 1 [t=0.00373002s, 408500464 KB] FactPairs: 2 [t=0.00373244s, 408500464 KB] Bytes per state: 4 [t=0.00375142s, 408500464 KB] Conducting lazy best first search, (real) bound = 2147483647 [t=0.0037563s, 408500464 KB] 1 initial landmarks, 1 goal landmarks [t=0.00376302s, 408500464 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity [t=0.00376552s, 408500464 KB] Completely explored state space -- no solution! [t=0.00376737s, 408500464 KB] Actual search time: 9.799e-06s [t=0.00376929s, 408500464 KB] Expanded 0 state(s). [t=0.00376929s, 408500464 KB] Reopened 0 state(s). [t=0.00376929s, 408500464 KB] Evaluated 1 state(s). [t=0.00376929s, 408500464 KB] Evaluations: 1 [t=0.00376929s, 408500464 KB] Generated 0 state(s). [t=0.00376929s, 408500464 KB] Dead ends: 1 state(s). [t=0.00376929s, 408500464 KB] Number of registered states: 1 [t=0.00376929s, 408500464 KB] Int hash set load factor: 1/1 = 1 [t=0.00376929s, 408500464 KB] Int hash set resizes: 0 [t=0.00376929s, 408500464 KB] Search time: 1.8081e-05s [t=0.00376929s, 408500464 KB] Total time: 0.00376929s Search stopped without finding a solution. Peak memory: 408500464 KB search exit code: 12 Driver aborting after search INFO Planner time: 0.05s
    Plan time: 0.123s
Conservative operator proposal; attempting with new choice: CookObject_0
  Now attempting to plan for goal: 0 / 1
    Running planner with existing operators + 1 proposed operators: 
    Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
    Proposed Operators: {'CookObject_0'}
    Language: examine an alarm clock by the light of a table lamp.
    Ground truth goal: (:goal (exists (?a - agent) (exists (?r - receptacle) (exists (?o - object) (exists (?ot - object) (exists (?l - location) (and (objectType ?ot DeskLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o AlarmClockType) (holds ?a ?o) ) ))))))
    Proposed goal: (:goal (exists (?r2 - receptacle) (exists (?r1 - receptacle) (exists (?o - object) (exists (?l2 - location) (exists (?a - agent) (and (objectType ?o AlarmClockType) (receptacleType ?r2 DiningTableType) (inReceptacle ?o ?r1) (atLocation ?a ?l2) (objectAtLocation ?o ?l2))))))) )
Instantiating FD with --alias "lama-first" 
    Plan success: False
    Plan string:  Plan not found with FD! Error: INFO planner time limit: None INFO planner memory limit: None INFO Running translator. INFO translator stdin: None INFO translator time limit: None INFO translator memory limit: None INFO translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp0c0na7k5 /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp50isap35 --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpwtl4_eor Parsing... Parsing: [0.000s CPU, 0.001s wall-clock] Normalizing task... [0.000s CPU, 0.000s wall-clock] Instantiating... Generating Datalog program... [0.010s CPU, 0.001s wall-clock] Normalizing Datalog program... Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock] Preparing model... [0.000s CPU, 0.002s wall-clock] Generated 52 rules. Computing model... [0.010s CPU, 0.008s wall-clock] 1763 relevant atoms 886 auxiliary atoms 2649 final queue length 4167 total queue pushes Completing instantiation... [0.010s CPU, 0.010s wall-clock] Instantiating: [0.030s CPU, 0.022s wall-clock] No relaxed solution! Generating unsolvable task... Translator variables: 1 Translator derived variables: 0 Translator facts: 2 Translator goal facts: 1 Translator mutex groups: 0 Translator total mutex groups size: 0 Translator operators: 0 Translator axioms: 0 Translator task size: 4 warning: could not determine peak memory Writing output... [0.000s CPU, 0.000s wall-clock] Done! [0.030s CPU, 0.023s wall-clock] translate exit code: 0 INFO Running search (release). INFO search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpwtl4_eor INFO search time limit: None INFO search memory limit: None INFO search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpwtl4_eor [t=0.000109265s, 408500464 KB] reading input... [t=0.000161294s, 408500464 KB] done reading input! [t=0.00364318s, 408500464 KB] Initializing landmark sum heuristic... [t=0.00364797s, 408500464 KB] Generating landmark graph... [t=0.00365232s, 408500464 KB] Building a landmark graph with reasonable orders. [t=0.00365453s, 408500464 KB] Initializing Exploration... [t=0.00365761s, 408500464 KB] Generating landmarks using the RPG/SAS+ approach [t=0.00366983s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00367303s, 408500464 KB] Landmarks generation time: 2.009e-05s [t=0.0036752s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00367782s, 408500464 KB] 1 edges [t=0.00368082s, 408500464 KB] approx. reasonable orders [t=0.00368323s, 408500464 KB] approx. obedient reasonable orders [t=0.00368574s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00368779s, 408500464 KB] Landmarks generation time: 3.8499e-05s [t=0.00369029s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00369238s, 408500464 KB] 1 edges [t=0.00369455s, 408500464 KB] Landmark graph generation time: 4.7847e-05s [t=0.00369681s, 408500464 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00369939s, 408500464 KB] Landmark graph contains 1 orderings. [t=0.00370841s, 408500464 KB] Simplifying 0 unary operators... done! [0 unary operators] [t=0.00371161s, 408500464 KB] time to simplify: 4.592e-06s [t=0.00371378s, 408500464 KB] Initializing additive heuristic... [t=0.00371554s, 408500464 KB] Initializing FF heuristic... [t=0.00373719s, 408500464 KB] Building successor generator...done! [t=0.00374281s, 408500464 KB] peak memory difference for successor generator creation: 0 KB [t=0.0037449s, 408500464 KB] time for successor generation creation: 1.599e-06s [t=0.00374773s, 408500464 KB] Variables: 1 [t=0.0037497s, 408500464 KB] FactPairs: 2 [t=0.00375162s, 408500464 KB] Bytes per state: 4 [t=0.00377307s, 408500464 KB] Conducting lazy best first search, (real) bound = 2147483647 [t=0.00377733s, 408500464 KB] 1 initial landmarks, 1 goal landmarks [t=0.0037843s, 408500464 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity [t=0.00378672s, 408500464 KB] Completely explored state space -- no solution! [t=0.00378869s, 408500464 KB] Actual search time: 9.922e-06s [t=0.00379057s, 408500464 KB] Expanded 0 state(s). [t=0.00379057s, 408500464 KB] Reopened 0 state(s). [t=0.00379057s, 408500464 KB] Evaluated 1 state(s). [t=0.00379057s, 408500464 KB] Evaluations: 1 [t=0.00379057s, 408500464 KB] Generated 0 state(s). [t=0.00379057s, 408500464 KB] Dead ends: 1 state(s). [t=0.00379057s, 408500464 KB] Number of registered states: 1 [t=0.00379057s, 408500464 KB] Int hash set load factor: 1/1 = 1 [t=0.00379057s, 408500464 KB] Int hash set resizes: 0 [t=0.00379057s, 408500464 KB] Search time: 1.7753e-05s [t=0.00379057s, 408500464 KB] Total time: 0.00379057s Search stopped without finding a solution. Peak memory: 408500464 KB search exit code: 12 Driver aborting after search INFO Planner time: 0.05s
    Plan time: 0.122s
Conservative operator proposal; attempting with new choice: SliceObject_2
  Now attempting to plan for goal: 0 / 1
    Running planner with existing operators + 1 proposed operators: 
    Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
    Proposed Operators: {'SliceObject_2'}
    Language: examine an alarm clock by the light of a table lamp.
    Ground truth goal: (:goal (exists (?a - agent) (exists (?r - receptacle) (exists (?o - object) (exists (?ot - object) (exists (?l - location) (and (objectType ?ot DeskLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o AlarmClockType) (holds ?a ?o) ) ))))))
    Proposed goal: (:goal (exists (?r2 - receptacle) (exists (?r1 - receptacle) (exists (?o - object) (exists (?l2 - location) (exists (?a - agent) (and (objectType ?o AlarmClockType) (receptacleType ?r2 DiningTableType) (inReceptacle ?o ?r1) (atLocation ?a ?l2) (objectAtLocation ?o ?l2))))))) )
Instantiating FD with --alias "lama-first" 
    Plan success: False
    Plan string:  Plan not found with FD! Error: INFO planner time limit: None INFO planner memory limit: None INFO Running translator. INFO translator stdin: None INFO translator time limit: None INFO translator memory limit: None INFO translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmplk1njhqo /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmptbjx51jy --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp0jxnnxbp Parsing... Parsing: [0.000s CPU, 0.001s wall-clock] Normalizing task... [0.000s CPU, 0.000s wall-clock] Instantiating... Generating Datalog program... [0.010s CPU, 0.001s wall-clock] Normalizing Datalog program... Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock] Preparing model... [0.000s CPU, 0.002s wall-clock] Generated 51 rules. Computing model... [0.010s CPU, 0.008s wall-clock] 1731 relevant atoms 848 auxiliary atoms 2579 final queue length 4067 total queue pushes Completing instantiation... [0.010s CPU, 0.010s wall-clock] Instantiating: [0.030s CPU, 0.021s wall-clock] No relaxed solution! Generating unsolvable task... Translator variables: 1 Translator derived variables: 0 Translator facts: 2 Translator goal facts: 1 Translator mutex groups: 0 Translator total mutex groups size: 0 Translator operators: 0 Translator axioms: 0 Translator task size: 4 warning: could not determine peak memory Writing output... [0.000s CPU, 0.000s wall-clock] Done! [0.030s CPU, 0.023s wall-clock] translate exit code: 0 INFO Running search (release). INFO search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp0jxnnxbp INFO search time limit: None INFO search memory limit: None INFO search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp0jxnnxbp [t=9.0856e-05s, 408500464 KB] reading input... [t=0.000144443s, 408500464 KB] done reading input! [t=0.00363818s, 408500464 KB] Initializing landmark sum heuristic... [t=0.00364346s, 408500464 KB] Generating landmark graph... [t=0.00364847s, 408500464 KB] Building a landmark graph with reasonable orders. [t=0.00365076s, 408500464 KB] Initializing Exploration... [t=0.00365367s, 408500464 KB] Generating landmarks using the RPG/SAS+ approach [t=0.00366589s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00366893s, 408500464 KB] Landmarks generation time: 1.9844e-05s [t=0.00367672s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00368332s, 408500464 KB] 1 edges [t=0.00368852s, 408500464 KB] approx. reasonable orders [t=0.00369344s, 408500464 KB] approx. obedient reasonable orders [t=0.00369771s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00370009s, 408500464 KB] Landmarks generation time: 5.494e-05s [t=0.00370238s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00370734s, 408500464 KB] 1 edges [t=0.00370907s, 408500464 KB] Landmark graph generation time: 6.7199e-05s [t=0.00371157s, 408500464 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00371366s, 408500464 KB] Landmark graph contains 1 orderings. [t=0.0037333s, 408501488 KB] Simplifying 0 unary operators... done! [0 unary operators] [t=0.00373719s, 408501488 KB] time to simplify: 5.535e-06s [t=0.00373957s, 408501488 KB] Initializing additive heuristic... [t=0.00374137s, 408501488 KB] Initializing FF heuristic... [t=0.00376708s, 408501488 KB] Building successor generator...done! [t=0.00377315s, 408501488 KB] peak memory difference for successor generator creation: 0 KB [t=0.00377524s, 408501488 KB] time for successor generation creation: 1.558e-06s [t=0.00377741s, 408501488 KB] Variables: 1 [t=0.00377918s, 408501488 KB] FactPairs: 2 [t=0.00378106s, 408501488 KB] Bytes per state: 4 [t=0.0038066s, 408509680 KB] Conducting lazy best first search, (real) bound = 2147483647 [t=0.00381128s, 408509680 KB] 1 initial landmarks, 1 goal landmarks [t=0.00381923s, 408509680 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity [t=0.00382173s, 408509680 KB] Completely explored state space -- no solution! [t=0.00382366s, 408509680 KB] Actual search time: 1.0742e-05s [t=0.00382563s, 408509680 KB] Expanded 0 state(s). [t=0.00382563s, 408509680 KB] Reopened 0 state(s). [t=0.00382563s, 408509680 KB] Evaluated 1 state(s). [t=0.00382563s, 408509680 KB] Evaluations: 1 [t=0.00382563s, 408509680 KB] Generated 0 state(s). [t=0.00382563s, 408509680 KB] Dead ends: 1 state(s). [t=0.00382563s, 408509680 KB] Number of registered states: 1 [t=0.00382563s, 408509680 KB] Int hash set load factor: 1/1 = 1 [t=0.00382563s, 408509680 KB] Int hash set resizes: 0 [t=0.00382563s, 408509680 KB] Search time: 1.9434e-05s [t=0.00382563s, 408509680 KB] Total time: 0.00382563s Search stopped without finding a solution. Peak memory: 408509680 KB search exit code: 12 Driver aborting after search INFO Planner time: 0.05s
    Plan time: 0.121s
Conservative operator proposal; attempting with new choice: HeatObject_0
  Now attempting to plan for goal: 0 / 1
    Running planner with existing operators + 1 proposed operators: 
    Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
    Proposed Operators: {'HeatObject_0'}
    Language: examine an alarm clock by the light of a table lamp.
    Ground truth goal: (:goal (exists (?a - agent) (exists (?r - receptacle) (exists (?o - object) (exists (?ot - object) (exists (?l - location) (and (objectType ?ot DeskLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o AlarmClockType) (holds ?a ?o) ) ))))))
    Proposed goal: (:goal (exists (?r2 - receptacle) (exists (?r1 - receptacle) (exists (?o - object) (exists (?l2 - location) (exists (?a - agent) (and (objectType ?o AlarmClockType) (receptacleType ?r2 DiningTableType) (inReceptacle ?o ?r1) (atLocation ?a ?l2) (objectAtLocation ?o ?l2))))))) )
Instantiating FD with --alias "lama-first" 
    Plan success: False
    Plan string:  Plan not found with FD! Error: INFO planner time limit: None INFO planner memory limit: None INFO Running translator. INFO translator stdin: None INFO translator time limit: None INFO translator memory limit: None INFO translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpgb7us573 /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp3yuz8s13 --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpqz252xjb Parsing... Parsing: [0.010s CPU, 0.001s wall-clock] Normalizing task... [0.000s CPU, 0.000s wall-clock] Instantiating... Generating Datalog program... [0.000s CPU, 0.001s wall-clock] Normalizing Datalog program... Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock] Preparing model... [0.000s CPU, 0.002s wall-clock] Generated 51 rules. Computing model... [0.010s CPU, 0.008s wall-clock] 1731 relevant atoms 848 auxiliary atoms 2579 final queue length 4067 total queue pushes Completing instantiation... [0.010s CPU, 0.010s wall-clock] Instantiating: [0.020s CPU, 0.023s wall-clock] No relaxed solution! Generating unsolvable task... Translator variables: 1 Translator derived variables: 0 Translator facts: 2 Translator goal facts: 1 Translator mutex groups: 0 Translator total mutex groups size: 0 Translator operators: 0 Translator axioms: 0 Translator task size: 4 warning: could not determine peak memory Writing output... [0.000s CPU, 0.000s wall-clock] Done! [0.030s CPU, 0.025s wall-clock] translate exit code: 0 INFO Running search (release). INFO search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpqz252xjb INFO search time limit: None INFO search memory limit: None INFO search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpqz252xjb [t=9.0118e-05s, 408500464 KB] reading input... [t=0.000146903s, 408500464 KB] done reading input! [t=0.00372341s, 408500464 KB] Initializing landmark sum heuristic... [t=0.00373121s, 408500464 KB] Generating landmark graph... [t=0.00373559s, 408500464 KB] Building a landmark graph with reasonable orders. [t=0.00374154s, 408500464 KB] Initializing Exploration... [t=0.00374465s, 408500464 KB] Generating landmarks using the RPG/SAS+ approach [t=0.0037574s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00376081s, 408500464 KB] Landmarks generation time: 2.1115e-05s [t=0.00376376s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00376618s, 408500464 KB] 1 edges [t=0.00376839s, 408500464 KB] approx. reasonable orders [t=0.00377085s, 408500464 KB] approx. obedient reasonable orders [t=0.00377335s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.0037754s, 408500464 KB] Landmarks generation time: 4.2968e-05s [t=0.00377786s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00378008s, 408500464 KB] 1 edges [t=0.00378196s, 408500464 KB] Landmark graph generation time: 5.207e-05s [t=0.00378446s, 408500464 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00378672s, 408500464 KB] Landmark graph contains 1 orderings. [t=0.00379611s, 408500464 KB] Simplifying 0 unary operators... done! [0 unary operators] [t=0.00379951s, 408500464 KB] time to simplify: 4.756e-06s [t=0.00380152s, 408500464 KB] Initializing additive heuristic... [t=0.00380312s, 408500464 KB] Initializing FF heuristic... [t=0.0038253s, 408500464 KB] Building successor generator...done! [t=0.00383096s, 408500464 KB] peak memory difference for successor generator creation: 0 KB [t=0.00384137s, 408500464 KB] time for successor generation creation: 1.599e-06s [t=0.00384801s, 408500464 KB] Variables: 1 [t=0.00385359s, 408500464 KB] FactPairs: 2 [t=0.00385576s, 408500464 KB] Bytes per state: 4 [t=0.0038918s, 408508656 KB] Conducting lazy best first search, (real) bound = 2147483647 [t=0.00389734s, 408508656 KB] 1 initial landmarks, 1 goal landmarks [t=0.00390615s, 408508656 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity [t=0.00390886s, 408508656 KB] Completely explored state space -- no solution! [t=0.00392472s, 408508656 KB] Actual search time: 3.4932e-05s [t=0.00393875s, 408508656 KB] Expanded 0 state(s). [t=0.00393875s, 408508656 KB] Reopened 0 state(s). [t=0.00393875s, 408508656 KB] Evaluated 1 state(s). [t=0.00393875s, 408508656 KB] Evaluations: 1 [t=0.00393875s, 408508656 KB] Generated 0 state(s). [t=0.00393875s, 408508656 KB] Dead ends: 1 state(s). [t=0.00393875s, 408508656 KB] Number of registered states: 1 [t=0.00393875s, 408508656 KB] Int hash set load factor: 1/1 = 1 [t=0.00393875s, 408508656 KB] Int hash set resizes: 0 [t=0.00393875s, 408508656 KB] Search time: 4.7273e-05s [t=0.00393875s, 408508656 KB] Total time: 0.00393875s Search stopped without finding a solution. Peak memory: 408508656 KB search exit code: 12 Driver aborting after search INFO Planner time: 0.06s
    Plan time: 0.128s
Conservative operator proposal; attempting with new choice: SliceObject_1
  Now attempting to plan for goal: 0 / 1
    Running planner with existing operators + 1 proposed operators: 
    Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
    Proposed Operators: {'SliceObject_1'}
    Language: examine an alarm clock by the light of a table lamp.
    Ground truth goal: (:goal (exists (?a - agent) (exists (?r - receptacle) (exists (?o - object) (exists (?ot - object) (exists (?l - location) (and (objectType ?ot DeskLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o AlarmClockType) (holds ?a ?o) ) ))))))
    Proposed goal: (:goal (exists (?r2 - receptacle) (exists (?r1 - receptacle) (exists (?o - object) (exists (?l2 - location) (exists (?a - agent) (and (objectType ?o AlarmClockType) (receptacleType ?r2 DiningTableType) (inReceptacle ?o ?r1) (atLocation ?a ?l2) (objectAtLocation ?o ?l2))))))) )
Instantiating FD with --alias "lama-first" 
    Plan success: False
    Plan string:  Plan not found with FD! Error: INFO planner time limit: None INFO planner memory limit: None INFO Running translator. INFO translator stdin: None INFO translator time limit: None INFO translator memory limit: None INFO translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpfeofzv82 /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpu908rh7u --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp9nwade4y Parsing... Parsing: [0.010s CPU, 0.001s wall-clock] Normalizing task... [0.000s CPU, 0.000s wall-clock] Instantiating... Generating Datalog program... [0.000s CPU, 0.001s wall-clock] Normalizing Datalog program... Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock] Preparing model... [0.000s CPU, 0.002s wall-clock] Generated 53 rules. Computing model... [0.010s CPU, 0.008s wall-clock] 1731 relevant atoms 888 auxiliary atoms 2619 final queue length 4109 total queue pushes Completing instantiation... [0.010s CPU, 0.010s wall-clock] Instantiating: [0.020s CPU, 0.022s wall-clock] No relaxed solution! Generating unsolvable task... Translator variables: 1 Translator derived variables: 0 Translator facts: 2 Translator goal facts: 1 Translator mutex groups: 0 Translator total mutex groups size: 0 Translator operators: 0 Translator axioms: 0 Translator task size: 4 warning: could not determine peak memory Writing output... [0.000s CPU, 0.000s wall-clock] Done! [0.030s CPU, 0.024s wall-clock] translate exit code: 0 INFO Running search (release). INFO search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp9nwade4y INFO search time limit: None INFO search memory limit: None INFO search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp9nwade4y [t=9.8072e-05s, 408500464 KB] reading input... [t=0.000156087s, 408500464 KB] done reading input! [t=0.00363768s, 408500464 KB] Initializing landmark sum heuristic... [t=0.00364224s, 408500464 KB] Generating landmark graph... [t=0.00364674s, 408500464 KB] Building a landmark graph with reasonable orders. [t=0.00364929s, 408500464 KB] Initializing Exploration... [t=0.00365224s, 408500464 KB] Generating landmarks using the RPG/SAS+ approach [t=0.00366425s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00366745s, 408500464 KB] Landmarks generation time: 1.9926e-05s [t=0.0036702s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00367274s, 408500464 KB] 1 edges [t=0.00367512s, 408500464 KB] approx. reasonable orders [t=0.00367774s, 408500464 KB] approx. obedient reasonable orders [t=0.00367991s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00368213s, 408500464 KB] Landmarks generation time: 3.8499e-05s [t=0.00368414s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00368639s, 408500464 KB] 1 edges [t=0.00368811s, 408500464 KB] Landmark graph generation time: 4.7068e-05s [t=0.00369008s, 408500464 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00369221s, 408500464 KB] Landmark graph contains 1 orderings. [t=0.00370103s, 408500464 KB] Simplifying 0 unary operators... done! [0 unary operators] [t=0.00370402s, 408500464 KB] time to simplify: 4.469e-06s [t=0.0037066s, 408500464 KB] Initializing additive heuristic... [t=0.00370861s, 408500464 KB] Initializing FF heuristic... [t=0.00373051s, 408500464 KB] Building successor generator...done! [t=0.00373629s, 408500464 KB] peak memory difference for successor generator creation: 0 KB [t=0.00373846s, 408500464 KB] time for successor generation creation: 1.517e-06s [t=0.00374059s, 408500464 KB] Variables: 1 [t=0.0037424s, 408500464 KB] FactPairs: 2 [t=0.00374433s, 408500464 KB] Bytes per state: 4 [t=0.0037631s, 408500464 KB] Conducting lazy best first search, (real) bound = 2147483647 [t=0.00376741s, 408500464 KB] 1 initial landmarks, 1 goal landmarks [t=0.00377389s, 408500464 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity [t=0.00377676s, 408500464 KB] Completely explored state space -- no solution! [t=0.00377872s, 408500464 KB] Actual search time: 1.0086e-05s [t=0.00378069s, 408500464 KB] Expanded 0 state(s). [t=0.00378069s, 408500464 KB] Reopened 0 state(s). [t=0.00378069s, 408500464 KB] Evaluated 1 state(s). [t=0.00378069s, 408500464 KB] Evaluations: 1 [t=0.00378069s, 408500464 KB] Generated 0 state(s). [t=0.00378069s, 408500464 KB] Dead ends: 1 state(s). [t=0.00378069s, 408500464 KB] Number of registered states: 1 [t=0.00378069s, 408500464 KB] Int hash set load factor: 1/1 = 1 [t=0.00378069s, 408500464 KB] Int hash set resizes: 0 [t=0.00378069s, 408500464 KB] Search time: 1.7753e-05s [t=0.00378069s, 408500464 KB] Total time: 0.00378069s Search stopped without finding a solution. Peak memory: 408500464 KB search exit code: 12 Driver aborting after search INFO Planner time: 0.05s
    Plan time: 0.125s
Conservative operator proposal; attempting with new choice: CleanObject_0
  Now attempting to plan for goal: 0 / 1
    Running planner with existing operators + 1 proposed operators: 
    Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
    Proposed Operators: {'CleanObject_0'}
    Language: examine an alarm clock by the light of a table lamp.
    Ground truth goal: (:goal (exists (?a - agent) (exists (?r - receptacle) (exists (?o - object) (exists (?ot - object) (exists (?l - location) (and (objectType ?ot DeskLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o AlarmClockType) (holds ?a ?o) ) ))))))
    Proposed goal: (:goal (exists (?r2 - receptacle) (exists (?r1 - receptacle) (exists (?o - object) (exists (?l2 - location) (exists (?a - agent) (and (objectType ?o AlarmClockType) (receptacleType ?r2 DiningTableType) (inReceptacle ?o ?r1) (atLocation ?a ?l2) (objectAtLocation ?o ?l2))))))) )
Instantiating FD with --alias "lama-first" 
    Plan success: False
    Plan string:  Plan not found with FD! Error: INFO planner time limit: None INFO planner memory limit: None INFO Running translator. INFO translator stdin: None INFO translator time limit: None INFO translator memory limit: None INFO translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpyz1t1kwy /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpm7enmki0 --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmptue3qfug Parsing... Parsing: [0.010s CPU, 0.001s wall-clock] Normalizing task... [0.000s CPU, 0.000s wall-clock] Instantiating... Generating Datalog program... [0.000s CPU, 0.001s wall-clock] Normalizing Datalog program... Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock] Preparing model... [0.000s CPU, 0.002s wall-clock] Generated 55 rules. Computing model... [0.010s CPU, 0.008s wall-clock] 1731 relevant atoms 848 auxiliary atoms 2579 final queue length 4067 total queue pushes Completing instantiation... [0.010s CPU, 0.010s wall-clock] Instantiating: [0.020s CPU, 0.022s wall-clock] No relaxed solution! Generating unsolvable task... Translator variables: 1 Translator derived variables: 0 Translator facts: 2 Translator goal facts: 1 Translator mutex groups: 0 Translator total mutex groups size: 0 Translator operators: 0 Translator axioms: 0 Translator task size: 4 warning: could not determine peak memory Writing output... [0.000s CPU, 0.000s wall-clock] Done! [0.030s CPU, 0.024s wall-clock] translate exit code: 0 INFO Running search (release). INFO search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmptue3qfug INFO search time limit: None INFO search memory limit: None INFO search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmptue3qfug [t=9.2414e-05s, 408500464 KB] reading input... [t=0.000150019s, 408500464 KB] done reading input! [t=0.00364248s, 408500464 KB] Initializing landmark sum heuristic... [t=0.00364716s, 408500464 KB] Generating landmark graph... [t=0.00365154s, 408500464 KB] Building a landmark graph with reasonable orders. [t=0.00365404s, 408500464 KB] Initializing Exploration... [t=0.00365695s, 408500464 KB] Generating landmarks using the RPG/SAS+ approach [t=0.00366966s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.0036729s, 408500464 KB] Landmarks generation time: 2.0664e-05s [t=0.00367549s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00367807s, 408500464 KB] 1 edges [t=0.00368057s, 408500464 KB] approx. reasonable orders [t=0.00368303s, 408500464 KB] approx. obedient reasonable orders [t=0.00368922s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00369123s, 408500464 KB] Landmarks generation time: 4.2722e-05s [t=0.0036932s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00369541s, 408500464 KB] 1 edges [t=0.0036973s, 408500464 KB] Landmark graph generation time: 5.1537e-05s [t=0.00369951s, 408500464 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.0037023s, 408500464 KB] Landmark graph contains 1 orderings. [t=0.00371144s, 408500464 KB] Simplifying 0 unary operators... done! [0 unary operators] [t=0.00371452s, 408500464 KB] time to simplify: 4.551e-06s [t=0.00371665s, 408500464 KB] Initializing additive heuristic... [t=0.00371833s, 408500464 KB] Initializing FF heuristic... [t=0.00373998s, 408500464 KB] Building successor generator...done! [t=0.00374654s, 408500464 KB] peak memory difference for successor generator creation: 0 KB [t=0.00374875s, 408500464 KB] time for successor generation creation: 1.599e-06s [t=0.00375117s, 408500464 KB] Variables: 1 [t=0.00375314s, 408500464 KB] FactPairs: 2 [t=0.00375503s, 408500464 KB] Bytes per state: 4 [t=0.00377331s, 408500464 KB] Conducting lazy best first search, (real) bound = 2147483647 [t=0.00377905s, 408500464 KB] 1 initial landmarks, 1 goal landmarks [t=0.00378557s, 408500464 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity [t=0.00378807s, 408500464 KB] Completely explored state space -- no solution! [t=0.00379024s, 408500464 KB] Actual search time: 1.0455e-05s [t=0.00379258s, 408500464 KB] Expanded 0 state(s). [t=0.00379258s, 408500464 KB] Reopened 0 state(s). [t=0.00379258s, 408500464 KB] Evaluated 1 state(s). [t=0.00379258s, 408500464 KB] Evaluations: 1 [t=0.00379258s, 408500464 KB] Generated 0 state(s). [t=0.00379258s, 408500464 KB] Dead ends: 1 state(s). [t=0.00379258s, 408500464 KB] Number of registered states: 1 [t=0.00379258s, 408500464 KB] Int hash set load factor: 1/1 = 1 [t=0.00379258s, 408500464 KB] Int hash set resizes: 0 [t=0.00379258s, 408500464 KB] Search time: 1.9434e-05s [t=0.00379258s, 408500464 KB] Total time: 0.00379258s Search stopped without finding a solution. Peak memory: 408500464 KB search exit code: 12 Driver aborting after search INFO Planner time: 0.06s
    Plan time: 0.123s

Logging scored operators: generated/alfred_cot_250_filtered_2_912023/0/alfred_cot_250_filtered_2_912023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_filtered_2_912023/0/alfred_cot_250_filtered_2_912023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_filtered_2_912023/0/alfred_cot_250_filtered_2_912023_motion_plans.json

Experiment Summary
================================================================================
Iteration: 0
Evaluated successful motion plans: 0 / 1 problems so far.
Overall successful motion plans: 0 / 223 problems.
Total problems: 223
Current operators: 223

task_planner.attempt_task_plan_for_problem: attempt 1 / 223 ID=train/look_at_obj_in_light-Laptop-None-FloorLamp-205/trial_T20190907_130015_600297 AttemptIdx=0 GoalIdx=0
Conservative operator proposal; only returning operators above threshold.
  Now attempting to plan for goal: 0 / 1
    Running planner with existing operators + 0 proposed operators: 
    Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
    Proposed Operators: set()
    Language: examine a laptop by the dim light of a living room.
    Ground truth goal: (:goal (exists (?a - agent) (exists (?r - receptacle) (exists (?o - object) (exists (?ot - object) (exists (?l - location) (and (objectType ?ot FloorLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o LaptopType) (holds ?a ?o) ) ))))))
    Proposed goal: (:goal (exists (?ot - object) (exists (?o - object) (exists (?l - location) (exists (?a - agent) (and (objectType ?ot FloorLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o LaptopType) (holds ?a ?o)))))) )
Instantiating FD with --alias "lama-first" 
    Plan success: False
    Plan string:  Plan not found with FD! Error: INFO planner time limit: None INFO planner memory limit: None INFO Running translator. INFO translator stdin: None INFO translator time limit: None INFO translator memory limit: None INFO translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpz7iid_qz /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpfv60kxym --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpf2xsbigh Parsing... Parsing: [0.000s CPU, 0.001s wall-clock] Normalizing task... [0.000s CPU, 0.000s wall-clock] Instantiating... Generating Datalog program... [0.010s CPU, 0.001s wall-clock] Normalizing Datalog program... Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock] Preparing model... [0.000s CPU, 0.002s wall-clock] Generated 46 rules. Computing model... [0.000s CPU, 0.006s wall-clock] 1542 relevant atoms 465 auxiliary atoms 2007 final queue length 3234 total queue pushes Completing instantiation... [0.010s CPU, 0.008s wall-clock] Instantiating: [0.020s CPU, 0.018s wall-clock] No relaxed solution! Generating unsolvable task... Translator variables: 1 Translator derived variables: 0 Translator facts: 2 Translator goal facts: 1 Translator mutex groups: 0 Translator total mutex groups size: 0 Translator operators: 0 Translator axioms: 0 Translator task size: 4 warning: could not determine peak memory Writing output... [0.000s CPU, 0.000s wall-clock] Done! [0.020s CPU, 0.020s wall-clock] translate exit code: 0 INFO Running search (release). INFO search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpf2xsbigh INFO search time limit: None INFO search memory limit: None INFO search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpf2xsbigh [t=8.7248e-05s, 408500464 KB] reading input... [t=0.000138949s, 408500464 KB] done reading input! [t=0.00360599s, 408500464 KB] Initializing landmark sum heuristic... [t=0.00361095s, 408500464 KB] Generating landmark graph... [t=0.00361497s, 408500464 KB] Building a landmark graph with reasonable orders. [t=0.0036178s, 408500464 KB] Initializing Exploration... [t=0.00362079s, 408500464 KB] Generating landmarks using the RPG/SAS+ approach [t=0.00363301s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00363621s, 408500464 KB] Landmarks generation time: 2.0172e-05s [t=0.00363896s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00364224s, 408500464 KB] 1 edges [t=0.00364474s, 408500464 KB] approx. reasonable orders [t=0.0036472s, 408500464 KB] approx. obedient reasonable orders [t=0.00364978s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00365183s, 408500464 KB] Landmarks generation time: 3.9934e-05s [t=0.00365429s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00365658s, 408500464 KB] 1 edges [t=0.00365872s, 408500464 KB] Landmark graph generation time: 4.9036e-05s [t=0.00366118s, 408500464 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00366347s, 408500464 KB] Landmark graph contains 1 orderings. [t=0.00367315s, 408500464 KB] Simplifying 0 unary operators... done! [0 unary operators] [t=0.00367655s, 408500464 KB] time to simplify: 4.797e-06s [t=0.0036786s, 408500464 KB] Initializing additive heuristic... [t=0.00368041s, 408500464 KB] Initializing FF heuristic... [t=0.00370242s, 408500464 KB] Building successor generator...done! [t=0.00370857s, 408500464 KB] peak memory difference for successor generator creation: 0 KB [t=0.00371107s, 408500464 KB] time for successor generation creation: 1.558e-06s [t=0.00371349s, 408500464 KB] Variables: 1 [t=0.00371599s, 408500464 KB] FactPairs: 2 [t=0.003718s, 408500464 KB] Bytes per state: 4 [t=0.00373666s, 408500464 KB] Conducting lazy best first search, (real) bound = 2147483647 [t=0.00374145s, 408500464 KB] 1 initial landmarks, 1 goal landmarks [t=0.00374859s, 408500464 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity [t=0.00375121s, 408500464 KB] Completely explored state space -- no solution! [t=0.00375314s, 408500464 KB] Actual search time: 1.0004e-05s [t=0.00375507s, 408500464 KB] Expanded 0 state(s). [t=0.00375507s, 408500464 KB] Reopened 0 state(s). [t=0.00375507s, 408500464 KB] Evaluated 1 state(s). [t=0.00375507s, 408500464 KB] Evaluations: 1 [t=0.00375507s, 408500464 KB] Generated 0 state(s). [t=0.00375507s, 408500464 KB] Dead ends: 1 state(s). [t=0.00375507s, 408500464 KB] Number of registered states: 1 [t=0.00375507s, 408500464 KB] Int hash set load factor: 1/1 = 1 [t=0.00375507s, 408500464 KB] Int hash set resizes: 0 [t=0.00375507s, 408500464 KB] Search time: 1.8737e-05s [t=0.00375507s, 408500464 KB] Total time: 0.00375507s Search stopped without finding a solution. Peak memory: 408500464 KB search exit code: 12 Driver aborting after search INFO Planner time: 0.05s
    Plan time: 0.119s
Conservative operator proposal; attempting with new choice: ChopObject_0
  Now attempting to plan for goal: 0 / 1
    Running planner with existing operators + 1 proposed operators: 
    Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
    Proposed Operators: {'ChopObject_0'}
    Language: examine a laptop by the dim light of a living room.
    Ground truth goal: (:goal (exists (?a - agent) (exists (?r - receptacle) (exists (?o - object) (exists (?ot - object) (exists (?l - location) (and (objectType ?ot FloorLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o LaptopType) (holds ?a ?o) ) ))))))
    Proposed goal: (:goal (exists (?ot - object) (exists (?o - object) (exists (?l - location) (exists (?a - agent) (and (objectType ?ot FloorLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o LaptopType) (holds ?a ?o)))))) )
Instantiating FD with --alias "lama-first" 
    Plan success: False
    Plan string:  Plan not found with FD! Error: INFO planner time limit: None INFO planner memory limit: None INFO Running translator. INFO translator stdin: None INFO translator time limit: None INFO translator memory limit: None INFO translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpzavm27kl /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp3e2hugqb --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpvlyp6f6q Parsing... Parsing: [0.000s CPU, 0.001s wall-clock] Normalizing task... [0.010s CPU, 0.000s wall-clock] Instantiating... Generating Datalog program... [0.000s CPU, 0.001s wall-clock] Normalizing Datalog program... Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock] Preparing model... [0.000s CPU, 0.002s wall-clock] Generated 56 rules. Computing model... [0.010s CPU, 0.007s wall-clock] 1542 relevant atoms 510 auxiliary atoms 2052 final queue length 3279 total queue pushes Completing instantiation... [0.000s CPU, 0.008s wall-clock] Instantiating: [0.010s CPU, 0.019s wall-clock] No relaxed solution! Generating unsolvable task... Translator variables: 1 Translator derived variables: 0 Translator facts: 2 Translator goal facts: 1 Translator mutex groups: 0 Translator total mutex groups size: 0 Translator operators: 0 Translator axioms: 0 Translator task size: 4 warning: could not determine peak memory Writing output... [0.000s CPU, 0.000s wall-clock] Done! [0.020s CPU, 0.021s wall-clock] translate exit code: 0 INFO Running search (release). INFO search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpvlyp6f6q INFO search time limit: None INFO search memory limit: None INFO search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpvlyp6f6q [t=8.6469e-05s, 408500464 KB] reading input... [t=0.000142106s, 408500464 KB] done reading input! [t=0.0036212s, 408500464 KB] Initializing landmark sum heuristic... [t=0.00362592s, 408500464 KB] Generating landmark graph... [t=0.00362961s, 408500464 KB] Building a landmark graph with reasonable orders. [t=0.00363198s, 408500464 KB] Initializing Exploration... [t=0.00363559s, 408500464 KB] Generating landmarks using the RPG/SAS+ approach [t=0.00364806s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00365175s, 408500464 KB] Landmarks generation time: 2.1443e-05s [t=0.00365437s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.0036574s, 408500464 KB] 1 edges [t=0.00366052s, 408500464 KB] approx. reasonable orders [t=0.00366294s, 408500464 KB] approx. obedient reasonable orders [t=0.00366643s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00366848s, 408500464 KB] Landmarks generation time: 4.182e-05s [t=0.00367089s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00367307s, 408500464 KB] 1 edges [t=0.00367479s, 408500464 KB] Landmark graph generation time: 5.0061e-05s [t=0.00367676s, 408500464 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00367881s, 408500464 KB] Landmark graph contains 1 orderings. [t=0.00368783s, 408500464 KB] Simplifying 0 unary operators... done! [0 unary operators] [t=0.00369107s, 408500464 KB] time to simplify: 4.92e-06s [t=0.0036934s, 408500464 KB] Initializing additive heuristic... [t=0.00369508s, 408500464 KB] Initializing FF heuristic... [t=0.00371661s, 408500464 KB] Building successor generator...done! [t=0.00372383s, 408500464 KB] peak memory difference for successor generator creation: 0 KB [t=0.00372624s, 408500464 KB] time for successor generation creation: 1.476e-06s [t=0.00372854s, 408500464 KB] Variables: 1 [t=0.00373047s, 408500464 KB] FactPairs: 2 [t=0.00373223s, 408500464 KB] Bytes per state: 4 [t=0.00375154s, 408500464 KB] Conducting lazy best first search, (real) bound = 2147483647 [t=0.00375605s, 408500464 KB] 1 initial landmarks, 1 goal landmarks [t=0.00376314s, 408500464 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity [t=0.00376585s, 408500464 KB] Completely explored state space -- no solution! [t=0.00376774s, 408500464 KB] Actual search time: 1.0045e-05s [t=0.00376962s, 408500464 KB] Expanded 0 state(s). [t=0.00376962s, 408500464 KB] Reopened 0 state(s). [t=0.00376962s, 408500464 KB] Evaluated 1 state(s). [t=0.00376962s, 408500464 KB] Evaluations: 1 [t=0.00376962s, 408500464 KB] Generated 0 state(s). [t=0.00376962s, 408500464 KB] Dead ends: 1 state(s). [t=0.00376962s, 408500464 KB] Number of registered states: 1 [t=0.00376962s, 408500464 KB] Int hash set load factor: 1/1 = 1 [t=0.00376962s, 408500464 KB] Int hash set resizes: 0 [t=0.00376962s, 408500464 KB] Search time: 1.8409e-05s [t=0.00376962s, 408500464 KB] Total time: 0.00376962s Search stopped without finding a solution. Peak memory: 408500464 KB search exit code: 12 Driver aborting after search INFO Planner time: 0.05s
    Plan time: 0.120s
Conservative operator proposal; attempting with new choice: CleanObject_0
  Now attempting to plan for goal: 0 / 1
    Running planner with existing operators + 1 proposed operators: 
    Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
    Proposed Operators: {'CleanObject_0'}
    Language: examine a laptop by the dim light of a living room.
    Ground truth goal: (:goal (exists (?a - agent) (exists (?r - receptacle) (exists (?o - object) (exists (?ot - object) (exists (?l - location) (and (objectType ?ot FloorLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o LaptopType) (holds ?a ?o) ) ))))))
    Proposed goal: (:goal (exists (?ot - object) (exists (?o - object) (exists (?l - location) (exists (?a - agent) (and (objectType ?ot FloorLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o LaptopType) (holds ?a ?o)))))) )
Instantiating FD with --alias "lama-first" 
    Plan success: False
    Plan string:  Plan not found with FD! Error: INFO planner time limit: None INFO planner memory limit: None INFO Running translator. INFO translator stdin: None INFO translator time limit: None INFO translator memory limit: None INFO translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpbqqxp14t /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpd4hk_9zc --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpd6gm0o2t Parsing... Parsing: [0.000s CPU, 0.001s wall-clock] Normalizing task... [0.000s CPU, 0.000s wall-clock] Instantiating... Generating Datalog program... [0.010s CPU, 0.001s wall-clock] Normalizing Datalog program... Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock] Preparing model... [0.000s CPU, 0.002s wall-clock] Generated 56 rules. Computing model... [0.010s CPU, 0.007s wall-clock] 1542 relevant atoms 510 auxiliary atoms 2052 final queue length 3279 total queue pushes Completing instantiation... [0.000s CPU, 0.008s wall-clock] Instantiating: [0.020s CPU, 0.019s wall-clock] No relaxed solution! Generating unsolvable task... Translator variables: 1 Translator derived variables: 0 Translator facts: 2 Translator goal facts: 1 Translator mutex groups: 0 Translator total mutex groups size: 0 Translator operators: 0 Translator axioms: 0 Translator task size: 4 warning: could not determine peak memory Writing output... [0.000s CPU, 0.000s wall-clock] Done! [0.020s CPU, 0.021s wall-clock] translate exit code: 0 INFO Running search (release). INFO search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpd6gm0o2t INFO search time limit: None INFO search memory limit: None INFO search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpd6gm0o2t [t=8.6715e-05s, 408500464 KB] reading input... [t=0.000142393s, 408500464 KB] done reading input! [t=0.00361161s, 408500464 KB] Initializing landmark sum heuristic... [t=0.00361702s, 408500464 KB] Generating landmark graph... [t=0.00362063s, 408500464 KB] Building a landmark graph with reasonable orders. [t=0.00362297s, 408500464 KB] Initializing Exploration... [t=0.00362637s, 408500464 KB] Generating landmarks using the RPG/SAS+ approach [t=0.00363834s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00364141s, 408500464 KB] Landmarks generation time: 2.0336e-05s [t=0.00364416s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00364658s, 408500464 KB] 1 edges [t=0.00364937s, 408500464 KB] approx. reasonable orders [t=0.00365183s, 408500464 KB] approx. obedient reasonable orders [t=0.00365376s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00365577s, 408500464 KB] Landmarks generation time: 3.8171e-05s [t=0.00365835s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00366056s, 408500464 KB] 1 edges [t=0.00366245s, 408500464 KB] Landmark graph generation time: 4.6658e-05s [t=0.0036647s, 408500464 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00366716s, 408500464 KB] Landmark graph contains 1 orderings. [t=0.00367639s, 408500464 KB] Simplifying 0 unary operators... done! [0 unary operators] [t=0.00367959s, 408500464 KB] time to simplify: 4.756e-06s [t=0.00368168s, 408500464 KB] Initializing additive heuristic... [t=0.00368328s, 408500464 KB] Initializing FF heuristic... [t=0.00370472s, 408500464 KB] Building successor generator...done! [t=0.00371042s, 408500464 KB] peak memory difference for successor generator creation: 0 KB [t=0.00371239s, 408500464 KB] time for successor generation creation: 1.599e-06s [t=0.00371509s, 408500464 KB] Variables: 1 [t=0.00371702s, 408500464 KB] FactPairs: 2 [t=0.00371903s, 408500464 KB] Bytes per state: 4 [t=0.00373764s, 408500464 KB] Conducting lazy best first search, (real) bound = 2147483647 [t=0.00374236s, 408500464 KB] 1 initial landmarks, 1 goal landmarks [t=0.00374896s, 408500464 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity [t=0.00375158s, 408500464 KB] Completely explored state space -- no solution! [t=0.00375339s, 408500464 KB] Actual search time: 9.922e-06s [t=0.00375535s, 408500464 KB] Expanded 0 state(s). [t=0.00375535s, 408500464 KB] Reopened 0 state(s). [t=0.00375535s, 408500464 KB] Evaluated 1 state(s). [t=0.00375535s, 408500464 KB] Evaluations: 1 [t=0.00375535s, 408500464 KB] Generated 0 state(s). [t=0.00375535s, 408500464 KB] Dead ends: 1 state(s). [t=0.00375535s, 408500464 KB] Number of registered states: 1 [t=0.00375535s, 408500464 KB] Int hash set load factor: 1/1 = 1 [t=0.00375535s, 408500464 KB] Int hash set resizes: 0 [t=0.00375535s, 408500464 KB] Search time: 1.7999e-05s [t=0.00375535s, 408500464 KB] Total time: 0.00375535s Search stopped without finding a solution. Peak memory: 408500464 KB search exit code: 12 Driver aborting after search INFO Planner time: 0.05s
    Plan time: 0.121s
Conservative operator proposal; attempting with new choice: CleanObject_0
  Now attempting to plan for goal: 0 / 1
    Running planner with existing operators + 1 proposed operators: 
    Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
    Proposed Operators: {'CleanObject_0'}
    Language: examine a laptop by the dim light of a living room.
    Ground truth goal: (:goal (exists (?a - agent) (exists (?r - receptacle) (exists (?o - object) (exists (?ot - object) (exists (?l - location) (and (objectType ?ot FloorLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o LaptopType) (holds ?a ?o) ) ))))))
    Proposed goal: (:goal (exists (?ot - object) (exists (?o - object) (exists (?l - location) (exists (?a - agent) (and (objectType ?ot FloorLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o LaptopType) (holds ?a ?o)))))) )
Instantiating FD with --alias "lama-first" 
    Plan success: False
    Plan string:  Plan not found with FD! Error: INFO planner time limit: None INFO planner memory limit: None INFO Running translator. INFO translator stdin: None INFO translator time limit: None INFO translator memory limit: None INFO translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp55xqvpme /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpj4shnky7 --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp0ajo_2ov Parsing... Parsing: [0.000s CPU, 0.001s wall-clock] Normalizing task... [0.010s CPU, 0.000s wall-clock] Instantiating... Generating Datalog program... [0.000s CPU, 0.001s wall-clock] Normalizing Datalog program... Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock] Preparing model... [0.000s CPU, 0.002s wall-clock] Generated 56 rules. Computing model... [0.010s CPU, 0.007s wall-clock] 1542 relevant atoms 510 auxiliary atoms 2052 final queue length 3279 total queue pushes Completing instantiation... [0.000s CPU, 0.008s wall-clock] Instantiating: [0.010s CPU, 0.019s wall-clock] No relaxed solution! Generating unsolvable task... Translator variables: 1 Translator derived variables: 0 Translator facts: 2 Translator goal facts: 1 Translator mutex groups: 0 Translator total mutex groups size: 0 Translator operators: 0 Translator axioms: 0 Translator task size: 4 warning: could not determine peak memory Writing output... [0.000s CPU, 0.000s wall-clock] Done! [0.020s CPU, 0.021s wall-clock] translate exit code: 0 INFO Running search (release). INFO search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp0ajo_2ov INFO search time limit: None INFO search memory limit: None INFO search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp0ajo_2ov [t=9.2865e-05s, 408500464 KB] reading input... [t=0.000149568s, 408500464 KB] done reading input! [t=0.00368733s, 408500464 KB] Initializing landmark sum heuristic... [t=0.00369373s, 408500464 KB] Generating landmark graph... [t=0.00369771s, 408500464 KB] Building a landmark graph with reasonable orders. [t=0.00370017s, 408500464 KB] Initializing Exploration... [t=0.00370316s, 408500464 KB] Generating landmarks using the RPG/SAS+ approach [t=0.00371591s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00372551s, 408500464 KB] Landmarks generation time: 3.1119e-05s [t=0.00373244s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00373612s, 408500464 KB] 1 edges [t=0.00373899s, 408500464 KB] approx. reasonable orders [t=0.00374683s, 408500464 KB] approx. obedient reasonable orders [t=0.00375175s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00375437s, 408500464 KB] Landmarks generation time: 5.9983e-05s [t=0.00375662s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00375913s, 408500464 KB] 1 edges [t=0.00376101s, 408500464 KB] Landmark graph generation time: 6.8634e-05s [t=0.00376331s, 408500464 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00376548s, 408500464 KB] Landmark graph contains 1 orderings. [t=0.00378664s, 408501488 KB] Simplifying 0 unary operators... done! [0 unary operators] [t=0.00379176s, 408501488 KB] time to simplify: 6.601e-06s [t=0.00379414s, 408501488 KB] Initializing additive heuristic... [t=0.00379615s, 408501488 KB] Initializing FF heuristic... [t=0.00382239s, 408501488 KB] Building successor generator...done! [t=0.0038285s, 408501488 KB] peak memory difference for successor generator creation: 0 KB [t=0.00383079s, 408501488 KB] time for successor generation creation: 1.599e-06s [t=0.00383325s, 408501488 KB] Variables: 1 [t=0.00383518s, 408501488 KB] FactPairs: 2 [t=0.0038369s, 408501488 KB] Bytes per state: 4 [t=0.00385999s, 408509680 KB] Conducting lazy best first search, (real) bound = 2147483647 [t=0.00386634s, 408509680 KB] 1 initial landmarks, 1 goal landmarks [t=0.00387442s, 408509680 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity [t=0.00387725s, 408509680 KB] Completely explored state space -- no solution! [t=0.0038793s, 408509680 KB] Actual search time: 1.1808e-05s [t=0.00388135s, 408509680 KB] Expanded 0 state(s). [t=0.00388135s, 408509680 KB] Reopened 0 state(s). [t=0.00388135s, 408509680 KB] Evaluated 1 state(s). [t=0.00388135s, 408509680 KB] Evaluations: 1 [t=0.00388135s, 408509680 KB] Generated 0 state(s). [t=0.00388135s, 408509680 KB] Dead ends: 1 state(s). [t=0.00388135s, 408509680 KB] Number of registered states: 1 [t=0.00388135s, 408509680 KB] Int hash set load factor: 1/1 = 1 [t=0.00388135s, 408509680 KB] Int hash set resizes: 0 [t=0.00388135s, 408509680 KB] Search time: 2.173e-05s [t=0.00388135s, 408509680 KB] Total time: 0.00388135s Search stopped without finding a solution. Peak memory: 408509680 KB search exit code: 12 Driver aborting after search INFO Planner time: 0.05s
    Plan time: 0.119s
Conservative operator proposal; attempting with new choice: CutObject_2
  Now attempting to plan for goal: 0 / 1
    Running planner with existing operators + 1 proposed operators: 
    Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
    Proposed Operators: {'CutObject_2'}
    Language: examine a laptop by the dim light of a living room.
    Ground truth goal: (:goal (exists (?a - agent) (exists (?r - receptacle) (exists (?o - object) (exists (?ot - object) (exists (?l - location) (and (objectType ?ot FloorLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o LaptopType) (holds ?a ?o) ) ))))))
    Proposed goal: (:goal (exists (?ot - object) (exists (?o - object) (exists (?l - location) (exists (?a - agent) (and (objectType ?ot FloorLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o LaptopType) (holds ?a ?o)))))) )
Instantiating FD with --alias "lama-first" 
    Plan success: False
    Plan string:  Plan not found with FD! Error: INFO planner time limit: None INFO planner memory limit: None INFO Running translator. INFO translator stdin: None INFO translator time limit: None INFO translator memory limit: None INFO translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp8zhobyli /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp4zm79fto --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpwi7ha1e9 Parsing... Parsing: [0.000s CPU, 0.001s wall-clock] Normalizing task... [0.000s CPU, 0.000s wall-clock] Instantiating... Generating Datalog program... [0.000s CPU, 0.001s wall-clock] Normalizing Datalog program... Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock] Preparing model... [0.000s CPU, 0.002s wall-clock] Generated 52 rules. Computing model... [0.000s CPU, 0.007s wall-clock] 1542 relevant atoms 510 auxiliary atoms 2052 final queue length 3279 total queue pushes Completing instantiation... [0.000s CPU, 0.008s wall-clock] Instantiating: [0.010s CPU, 0.019s wall-clock] No relaxed solution! Generating unsolvable task... Translator variables: 1 Translator derived variables: 0 Translator facts: 2 Translator goal facts: 1 Translator mutex groups: 0 Translator total mutex groups size: 0 Translator operators: 0 Translator axioms: 0 Translator task size: 4 warning: could not determine peak memory Writing output... [0.000s CPU, 0.000s wall-clock] Done! [0.020s CPU, 0.021s wall-clock] translate exit code: 0 INFO Running search (release). INFO search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpwi7ha1e9 INFO search time limit: None INFO search memory limit: None INFO search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpwi7ha1e9 [t=0.000127551s, 408500464 KB] reading input... [t=0.000185115s, 408500464 KB] done reading input! [t=0.00366638s, 408500464 KB] Initializing landmark sum heuristic... [t=0.0036711s, 408500464 KB] Generating landmark graph... [t=0.00367471s, 408500464 KB] Building a landmark graph with reasonable orders. [t=0.00367713s, 408500464 KB] Initializing Exploration... [t=0.00367995s, 408500464 KB] Generating landmarks using the RPG/SAS+ approach [t=0.00369238s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.00369558s, 408500464 KB] Landmarks generation time: 2.0213e-05s [t=0.00369832s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00370086s, 408500464 KB] 1 edges [t=0.00370345s, 408500464 KB] approx. reasonable orders [t=0.0037057s, 408500464 KB] approx. obedient reasonable orders [t=0.00370771s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders [t=0.0037096s, 408500464 KB] Landmarks generation time: 3.772e-05s [t=0.00371226s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.00371444s, 408500464 KB] 1 edges [t=0.00371636s, 408500464 KB] Landmark graph generation time: 4.6535e-05s [t=0.00371854s, 408500464 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive. [t=0.0037212s, 408500464 KB] Landmark graph contains 1 orderings. [t=0.00373059s, 408500464 KB] Simplifying 0 unary operators... done! [0 unary operators] [t=0.00373371s, 408500464 KB] time to simplify: 4.592e-06s [t=0.00373588s, 408500464 KB] Initializing additive heuristic... [t=0.00373752s, 408500464 KB] Initializing FF heuristic... [t=0.00375925s, 408500464 KB] Building successor generator...done! [t=0.00376491s, 408500464 KB] peak memory difference for successor generator creation: 0 KB [t=0.003767s, 408500464 KB] time for successor generation creation: 1.599e-06s [t=0.00376925s, 408500464 KB] Variables: 1 [t=0.00377138s, 408500464 KB] FactPairs: 2 [t=0.00377356s, 408500464 KB] Bytes per state: 4 [t=0.00379541s, 408500464 KB] Conducting lazy best first search, (real) bound = 2147483647 [t=0.00379992s, 408500464 KB] 1 initial landmarks, 1 goal landmarks [t=0.00380656s, 408500464 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity [t=0.00380919s, 408500464 KB] Completely explored state space -- no solution! [t=0.00381091s, 408500464 KB] Actual search time: 9.758e-06s [t=0.00381288s, 408500464 KB] Expanded 0 state(s). [t=0.00381288s, 408500464 KB] Reopened 0 state(s). [t=0.00381288s, 408500464 KB] Evaluated 1 state(s). [t=0.00381288s, 408500464 KB] Evaluations: 1 [t=0.00381288s, 408500464 KB] Generated 0 state(s). [t=0.00381288s, 408500464 KB] Dead ends: 1 state(s). [t=0.00381288s, 408500464 KB] Number of registered states: 1 [t=0.00381288s, 408500464 KB] Int hash set load factor: 1/1 = 1 [t=0.00381288s, 408500464 KB] Int hash set resizes: 0 [t=0.00381288s, 408500464 KB] Search time: 1.7671e-05s [t=0.00381288s, 408500464 KB] Total time: 0.00381288s Search stopped without finding a solution. Peak memory: 408500464 KB search exit code: 12 Driver aborting after search INFO Planner time: 0.05s
    Plan time: 0.118s
Conservative operator proposal; attempting with new choice: TurnOnLight_0
  Now attempting to plan for goal: 0 / 1
    Running planner with existing operators + 1 proposed operators: 
    Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
    Proposed Operators: {'TurnOnLight_0'}
    Language: examine a laptop by the dim light of a living room.
    Ground truth goal: (:goal (exists (?a - agent) (exists (?r - receptacle) (exists (?o - object) (exists (?ot - object) (exists (?l - location) (and (objectType ?ot FloorLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o LaptopType) (holds ?a ?o) ) ))))))
    Proposed goal: (:goal (exists (?ot - object) (exists (?o - object) (exists (?l - location) (exists (?a - agent) (and (objectType ?ot FloorLampType) (toggleable ?ot) (isToggled ?ot) (objectAtLocation ?ot ?l) (atLocation ?a ?l) (objectType ?o LaptopType) (holds ?a ?o)))))) )
Instantiating FD with --alias "lama-first" 
    Plan success: True
    Plan string:  (gotolocation agent1 loc_bar__minus_18_bar_8_bar_2_bar_30 loc_bar__minus_15_bar_22_bar_3_bar_60) (pickupobjectinreceptacle agent1 loc_bar__minus_15_bar_22_bar_3_bar_60 laptop__minus_17_dot_52397728_comma__minus_17_dot_52397728_comma_22_dot_226812_comma_22_dot_226812_comma_1_dot_9030988_comma_1_dot_9030988 sofa__minus_17_dot_702484_comma__minus_17_dot_702484_comma_20_dot_248_comma_20_dot_248_comma_0_dot_039098684_comma_0_dot_039098684) (gotolocation agent1 loc_bar__minus_15_bar_22_bar_3_bar_60 loc_bar__minus_19_bar_12_bar_0_bar_0) (turnonlight_0 agent1 loc_bar__minus_19_bar_12_bar_0_bar_0 floorlamp__minus_18_dot_884_comma__minus_18_dot_884_comma_14_dot_748_comma_14_dot_748_comma_0_dot_000504732132_comma_0_dot_000504732132)
    Plan time: 0.167s
[Counter] Loaded counter tree from pickle.
[Counter] Stored Goals: 1371
motion_planner.attempt_motion_plan_for_problem: attempt 1 / 223 ID=train/look_at_obj_in_light-Laptop-None-FloorLamp-205/trial_T20190907_130015_600297 AttemptIdx=0
Motion planning for: train/look_at_obj_in_light-Laptop-None-FloorLamp-205/trial_T20190907_130015_600297
Proposed goal is: 
(:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o LaptopType)
		(holds ?a ?o))))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o LaptopType)
                (holds ?a ?o)
            )
    ))))))
Attempting to execute the following motion plan:
{'action': 'PickupObjectInReceptacle', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['laptop', 'sofa'], 'is_neg': True}, {'predicate_name': 'holds', 'arguments': ['laptop'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['laptop', 'sofa'], 'is_neg': False}]}

{'action': 'TurnOnLight_0', 'postcondition_ground_predicates': [{'predicate_name': 'isToggled', 'arguments': ['floorlamp'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'toggleable', 'arguments': ['floorlamp'], 'is_neg': False}, {'predicate_name': 'isToggled', 'arguments': ['floorlamp'], 'is_neg': True}]}

Ground truth PDDL plan is: 
(GotoLocation sofa)
(PickupObject laptop)
(GotoLocation floorlamp)
(ToggleObject floorlamp)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'toggleable', 'arguments': ['floorlamp'], 'is_neg': False}

{'predicate_name': 'isToggled', 'arguments': ['floorlamp'], 'is_neg': False}

{'predicate_name': 'holds', 'arguments': ['?a', 'laptop'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'PickupObjectInReceptacle',
 'postcondition_ground_predicates': [{'arguments': ['laptop', 'sofa'],
                                      'is_neg': True,
                                      'predicate_name': 'inReceptacle'},
                                     {'arguments': ['laptop'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': [{'arguments': ['laptop', 'sofa'],
                                     'is_neg': False,
                                     'predicate_name': 'inReceptacle'}]}

GOAL OBJECT SET:
[('Laptop|-04.38|+00.48|+05.56', 'Sofa|-04.43|+00.01|+05.06')]

PERMISSIBLE OBJECT SET:
[('Laptop|-04.38|+00.48|+05.56', 'Sofa|-04.43|+00.01|+05.06')]


Permissible Objects:
('Laptop|-04.38|+00.48|+05.56', 'Sofa|-04.43|+00.01|+05.06')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Laptop|-04.38|+00.48|+05.56"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Laptop|-04.38|+00.48|+05.56"})]
Action feasible: True

OPERATOR:
{'action': 'TurnOnLight_0',
 'postcondition_ground_predicates': [{'arguments': ['floorlamp'],
                                      'is_neg': False,
                                      'predicate_name': 'isToggled'}],
 'precondition_ground_predicates': [{'arguments': ['floorlamp'],
                                     'is_neg': False,
                                     'predicate_name': 'toggleable'},
                                    {'arguments': ['floorlamp'],
                                     'is_neg': True,
                                     'predicate_name': 'isToggled'}]}

GOAL OBJECT SET:
[('FloorLamp|-04.72|+00.00|+03.69',), ('FloorLamp|-04.72|+00.00|+03.69',)]

PERMISSIBLE OBJECT SET:
[('FloorLamp|-04.72|+00.00|+03.69',),
 ('FloorLamp|-04.72|+00.00|+03.69', 'Laptop|-04.38|+00.48|+05.56')]


Permissible Objects:
('FloorLamp|-04.72|+00.00|+03.69',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "FloorLamp|-04.72|+00.00|+03.69"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "FloorLamp|-04.72|+00.00|+03.69"})]
Action feasible: True


Motion plan operator success!: {'action': 'TurnOnLight_0', 'postcondition_ground_predicates': [{'predicate_name': 'isToggled', 'arguments': ['floorlamp'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'toggleable', 'arguments': ['floorlamp'], 'is_neg': False}, {'predicate_name': 'isToggled', 'arguments': ['floorlamp'], 'is_neg': True}]}
  Motion plan result: task_success: True
  Total Actions Taken: 2
  Total Time Taken: 5.208s
update_pddl_domain_and_problem::re-scored operators:
  TurnOnLight_0 1.05 / 1.5 = 0.7000000000000001
  PickupObjectInReceptacle 1.05 / 1.5 = 0.7000000000000001
  TurnOnObject_0 0.05 / 0.5 = 0.1
  TurnOnObject_1 0.05 / 0.5 = 0.1
  TurnOffObject_0 0.05 / 0.5 = 0.1
  TurnOffObject_1 0.05 / 0.5 = 0.1
  TurnOffObject_2 0.05 / 0.5 = 0.1
  CookObject_0 0.05 / 0.5 = 0.1
  CookObject_1 0.05 / 0.5 = 0.1
  CookObject_2 0.05 / 0.5 = 0.1
  HeatObject_0 0.05 / 0.5 = 0.1
  HeatObject_1 0.05 / 0.5 = 0.1
  HeatObject_2 0.05 / 0.5 = 0.1
  WashObject_0 0.05 / 0.5 = 0.1
  WashObject_1 0.05 / 0.5 = 0.1
  WashObject_2 0.05 / 0.5 = 0.1
  CoolObject_0 0.05 / 0.5 = 0.1
  CoolObject_1 0.05 / 0.5 = 0.1
  CoolObject_2 0.05 / 0.5 = 0.1
  SliceObject_0 0.05 / 0.5 = 0.1
  SliceObject_1 0.05 / 0.5 = 0.1
  SliceObject_2 0.05 / 0.5 = 0.1
  DropObject_0 0.05 / 0.5 = 0.1
  DropObject_2 0.05 / 0.5 = 0.1
  MicrowaveObject_0 0.05 / 0.5 = 0.1
  MicrowaveObject_1 0.05 / 0.5 = 0.1
  MicrowaveObject_2 0.05 / 0.5 = 0.1
  CleanObject_0 0.05 / 0.5 = 0.1
  CleanObject_1 0.05 / 0.5 = 0.1
  CleanObject_2 0.05 / 0.5 = 0.1
  ThrowAwayObject_0 0.05 / 0.5 = 0.1
  ThrowObject_0 0.05 / 0.5 = 0.1
  ThrowObject_1 0.05 / 0.5 = 0.1
  ThrowObject_2 0.05 / 0.5 = 0.1
  ChillObject_0 0.05 / 0.5 = 0.1
  ChillObject_1 0.05 / 0.5 = 0.1
  ChillObject_2 0.05 / 0.5 = 0.1
  CutObject_0 0.05 / 0.5 = 0.1
  CutObject_1 0.05 / 0.5 = 0.1
  CutObject_2 0.05 / 0.5 = 0.1
  PlaceObject_0 0.05 / 0.5 = 0.1
  OpenObject_2 0.05 / 0.5 = 0.1
  WarmObject_0 0.05 / 0.5 = 0.1
  WarmObject_1 0.05 / 0.5 = 0.1
  WarmObject_2 0.05 / 0.5 = 0.1
  UseObject_0 0.05 / 0.5 = 0.1
  UseObject_1 0.05 / 0.5 = 0.1
  RinseObject_0 0.05 / 0.5 = 0.1
  RinseObject_1 0.05 / 0.5 = 0.1
  RinseObject_2 0.05 / 0.5 = 0.1
  TakeObject_0 0.05 / 0.5 = 0.1
  TakeObject_1 0.05 / 0.5 = 0.1
  TakeObject_2 0.05 / 0.5 = 0.1
  ChopObject_0 0.05 / 0.5 = 0.1
  ChopObject_1 0.05 / 0.5 = 0.1
  ChopObject_2 0.05 / 0.5 = 0.1
  WipeObject_0 0.05 / 0.5 = 0.1
  WipeObject_1 0.05 / 0.5 = 0.1
  WipeObject_2 0.05 / 0.5 = 0.1
  DiscardObject_0 0.05 / 0.5 = 0.1
  DiscardObject_1 0.05 / 0.5 = 0.1
  DiscardObject_2 0.05 / 0.5 = 0.1
task_planner.attempt_task_plan_for_problem: attempt 2 / 223 ID=train/pick_and_place_simple-Bowl-None-CoffeeTable-201/trial_T20190907_171714_885383 AttemptIdx=0 GoalIdx=0
Conservative operator proposal; only returning operators above threshold.
  Now attempting to plan for goal: 0 / 4
    Running planner with existing operators + 1 proposed operators: 
    Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
    Proposed Operators: {'TurnOnLight_0'}
    Language: set the bowl on the coffee table.
    Ground truth goal: (:goal (exists (?r - receptacle) (exists (?o - object) (and (objectType ?o BowlType) (receptacleType ?r CoffeeTableType) (inReceptacle ?o ?r) ) )))
    Proposed goal: (:goal (exists (?r - receptacle) (exists (?o - object) (and (objectType ?o BowlType) (receptacleType ?r CoffeeTableType) (inReceptacle ?o ?r)))) )
Instantiating FD with --alias "lama-first" 
    Plan success: True
    Plan string:  (gotolocation agent1 loc_bar__minus_19_bar_3_bar_3_bar_30 loc_bar__minus_10_bar_10_bar_2_bar_45) (pickupobjectinreceptacle agent1 loc_bar__minus_10_bar_10_bar_2_bar_45 bowl__minus_9_dot_963684_comma__minus_9_dot_963684_comma_6_dot_68079712_comma_6_dot_68079712_comma_2_dot_7551336_comma_2_dot_7551336 diningtable__minus_9_dot_076_comma__minus_9_dot_076_comma_5_dot_692_comma_5_dot_692_comma__minus_0_dot_0633479952_comma__minus_0_dot_0633479952) (gotolocation agent1 loc_bar__minus_10_bar_10_bar_2_bar_45 loc_bar__minus_14_bar_18_bar_1_bar_60) (putobjectinreceptacle agent1 loc_bar__minus_14_bar_18_bar_1_bar_60 bowltype bowl__minus_9_dot_963684_comma__minus_9_dot_963684_comma_6_dot_68079712_comma_6_dot_68079712_comma_2_dot_7551336_comma_2_dot_7551336 coffeetable__minus_9_dot_275952_comma__minus_9_dot_275952_comma_19_dot_548292_comma_19_dot_548292_comma_0_dot_0136_comma_0_dot_0136)
    Plan time: 0.154s
motion_planner.attempt_motion_plan_for_problem: attempt 2 / 223 ID=train/pick_and_place_simple-Bowl-None-CoffeeTable-201/trial_T20190907_171714_885383 AttemptIdx=0
Motion planning for: train/pick_and_place_simple-Bowl-None-CoffeeTable-201/trial_T20190907_171714_885383
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'PickupObjectInReceptacle', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['bowl', 'diningtable'], 'is_neg': True}, {'predicate_name': 'holds', 'arguments': ['bowl'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['bowl', 'diningtable'], 'is_neg': False}]}

{'action': 'PutObjectInReceptacle', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['bowl', 'coffeetable'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['bowl'], 'is_neg': True}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['coffeetable', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['bowl'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation bowl)
(PickupObject bowl)
(GotoLocation coffeetable)
(PutObject bowl coffeetable)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['bowl', 'coffeetable'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'PickupObjectInReceptacle',
 'postcondition_ground_predicates': [{'arguments': ['bowl', 'diningtable'],
                                      'is_neg': True,
                                      'predicate_name': 'inReceptacle'},
                                     {'arguments': ['bowl'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': [{'arguments': ['bowl', 'diningtable'],
                                     'is_neg': False,
                                     'predicate_name': 'inReceptacle'}]}

GOAL OBJECT SET:
[('Bowl|-02.49|+00.69|+01.67', 'DiningTable|-03.20|+00.59|+00.21'),
 ('Bowl|-02.49|+00.69|+01.67', 'DiningTable|-02.27|-00.02|+01.42'),
 ('Bowl|-02.77|+00.72|+06.13', 'DiningTable|-03.20|+00.59|+00.21'),
 ('Bowl|-02.77|+00.72|+06.13', 'DiningTable|-02.27|-00.02|+01.42')]

PERMISSIBLE OBJECT SET:
[('Bowl|-02.49|+00.69|+01.67', 'DiningTable|-03.20|+00.59|+00.21'),
 ('Bowl|-02.49|+00.69|+01.67', 'DiningTable|-02.27|-00.02|+01.42'),
 ('Bowl|-02.77|+00.72|+06.13', 'DiningTable|-03.20|+00.59|+00.21'),
 ('Bowl|-02.77|+00.72|+06.13', 'DiningTable|-02.27|-00.02|+01.42')]


Permissible Objects:
('Bowl|-02.49|+00.69|+01.67', 'DiningTable|-03.20|+00.59|+00.21')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bowl|-02.49|+00.69|+01.67"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bowl|-02.49|+00.69|+01.67"})]
Action feasible: True

OPERATOR:
{'action': 'PutObjectInReceptacle',
 'postcondition_ground_predicates': [{'arguments': ['bowl', 'coffeetable'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'},
                                     {'arguments': ['bowl'],
                                      'is_neg': True,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': [{'arguments': ['coffeetable', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['bowl'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Bowl|-02.49|+00.69|+01.67', 'CoffeeTable|-02.32|+00.00|+04.89'),
 ('Bowl|-02.77|+00.72|+06.13', 'CoffeeTable|-02.32|+00.00|+04.89'),
 ('Bowl|-02.77|+00.72|+06.13', 'CoffeeTable|-02.32|+00.00|+04.89')]

PERMISSIBLE OBJECT SET:
[('Bowl|-02.49|+00.69|+01.67', 'CoffeeTable|-02.32|+00.00|+04.89'),
 ('Bowl|-02.77|+00.72|+06.13', 'CoffeeTable|-02.32|+00.00|+04.89'),
 ('Bowl|-02.77|+00.72|+06.13',
  'CoffeeTable|-02.32|+00.00|+04.89',
  'Bowl|-02.49|+00.69|+01.67')]


Permissible Objects:
('Bowl|-02.49|+00.69|+01.67', 'CoffeeTable|-02.32|+00.00|+04.89')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Bowl|-02.49|+00.69|+01.67", "receptacle_object_id": "CoffeeTable|-02.32|+00.00|+04.89"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Bowl|-02.49|+00.69|+01.67", "receptacle_object_id": "CoffeeTable|-02.32|+00.00|+04.89"})]
Action feasible: True


Motion plan operator success!: {'action': 'PutObjectInReceptacle', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['bowl', 'coffeetable'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['bowl'], 'is_neg': True}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['coffeetable', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['bowl'], 'is_neg': False}]}
  Motion plan result: task_success: True
  Total Actions Taken: 2
  Total Time Taken: 3.181s
update_pddl_domain_and_problem::re-scored operators:
  PickupObjectInReceptacle 2.05 / 2.5 = 0.82
  TurnOnLight_0 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle 1.05 / 1.5 = 0.7000000000000001
  TurnOnObject_0 0.05 / 0.5 = 0.1
  TurnOnObject_1 0.05 / 0.5 = 0.1
  TurnOffObject_0 0.05 / 0.5 = 0.1
  TurnOffObject_1 0.05 / 0.5 = 0.1
  TurnOffObject_2 0.05 / 0.5 = 0.1
  CookObject_0 0.05 / 0.5 = 0.1
  CookObject_1 0.05 / 0.5 = 0.1
  CookObject_2 0.05 / 0.5 = 0.1
  HeatObject_0 0.05 / 0.5 = 0.1
  HeatObject_1 0.05 / 0.5 = 0.1
  HeatObject_2 0.05 / 0.5 = 0.1
  WashObject_0 0.05 / 0.5 = 0.1
  WashObject_1 0.05 / 0.5 = 0.1
  WashObject_2 0.05 / 0.5 = 0.1
  CoolObject_0 0.05 / 0.5 = 0.1
  CoolObject_1 0.05 / 0.5 = 0.1
  CoolObject_2 0.05 / 0.5 = 0.1
  SliceObject_0 0.05 / 0.5 = 0.1
  SliceObject_1 0.05 / 0.5 = 0.1
  SliceObject_2 0.05 / 0.5 = 0.1
  DropObject_0 0.05 / 0.5 = 0.1
  DropObject_2 0.05 / 0.5 = 0.1
  MicrowaveObject_0 0.05 / 0.5 = 0.1
  MicrowaveObject_1 0.05 / 0.5 = 0.1
  MicrowaveObject_2 0.05 / 0.5 = 0.1
  CleanObject_0 0.05 / 0.5 = 0.1
  CleanObject_1 0.05 / 0.5 = 0.1
  CleanObject_2 0.05 / 0.5 = 0.1
  ThrowAwayObject_0 0.05 / 0.5 = 0.1
  ThrowObject_0 0.05 / 0.5 = 0.1
  ThrowObject_1 0.05 / 0.5 = 0.1
  ThrowObject_2 0.05 / 0.5 = 0.1
  ChillObject_0 0.05 / 0.5 = 0.1
  ChillObject_1 0.05 / 0.5 = 0.1
  ChillObject_2 0.05 / 0.5 = 0.1
  CutObject_0 0.05 / 0.5 = 0.1
  CutObject_1 0.05 / 0.5 = 0.1
  CutObject_2 0.05 / 0.5 = 0.1
  PlaceObject_0 0.05 / 0.5 = 0.1
  OpenObject_2 0.05 / 0.5 = 0.1
  WarmObject_0 0.05 / 0.5 = 0.1
  WarmObject_1 0.05 / 0.5 = 0.1
  WarmObject_2 0.05 / 0.5 = 0.1
  UseObject_0 0.05 / 0.5 = 0.1
  UseObject_1 0.05 / 0.5 = 0.1
  RinseObject_0 0.05 / 0.5 = 0.1
  RinseObject_1 0.05 / 0.5 = 0.1
  RinseObject_2 0.05 / 0.5 = 0.1
  TakeObject_0 0.05 / 0.5 = 0.1
  TakeObject_1 0.05 / 0.5 = 0.1
  TakeObject_2 0.05 / 0.5 = 0.1
  ChopObject_0 0.05 / 0.5 = 0.1
  ChopObject_1 0.05 / 0.5 = 0.1
  ChopObject_2 0.05 / 0.5 = 0.1
  WipeObject_0 0.05 / 0.5 = 0.1
  WipeObject_1 0.05 / 0.5 = 0.1
  WipeObject_2 0.05 / 0.5 = 0.1
  DiscardObject_0 0.05 / 0.5 = 0.1
  DiscardObject_1 0.05 / 0.5 = 0.1
  DiscardObject_2 0.05 / 0.5 = 0.1

Logging scored operators: generated/alfred_cot_250_filtered_2_912023/0/alfred_cot_250_filtered_2_912023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_filtered_2_912023/0/alfred_cot_250_filtered_2_912023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_filtered_2_912023/0/alfred_cot_250_filtered_2_912023_motion_plans.json

Experiment Summary
================================================================================
Iteration: 0
Evaluated successful motion plans: 2 / 3 problems so far.
Overall successful motion plans: 2 / 223 problems.
Total problems: 223
Current operators: 223

task_planner.attempt_task_plan_for_problem: attempt 3 / 223 ID=train/pick_and_place_simple-Box-None-Sofa-220/trial_T20190907_165527_462462 AttemptIdx=0 GoalIdx=0
Conservative operator proposal; only returning operators above threshold.
  Now attempting to plan for goal: 0 / 1
    Running planner with existing operators + 1 proposed operators: 
    Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
    Proposed Operators: {'TurnOnLight_0'}
    Language: take the box from the table , put it on the couch.
    Ground truth goal: (:goal (exists (?r - receptacle) (exists (?o - object) (and (objectType ?o BoxType) (receptacleType ?r SofaType) (inReceptacle ?o ?r) ) )))
    Proposed goal: (:goal (exists (?r - receptacle) (exists (?o - object) (and (objectType ?o BoxType) (receptacleType ?r SofaType) (inReceptacle ?o ?r)))) )
Instantiating FD with --alias "lama-first" 
    Plan success: True
    Plan string:  (gotolocation agent1 loc_bar__minus_19_bar_7_bar_1_bar_30 loc_bar__minus_11_bar_2_bar_2_bar_60) (gotolocation agent1 loc_bar__minus_11_bar_2_bar_2_bar_60 loc_bar__minus_9_bar_7_bar_2_bar_60) (pickupobjectinreceptacle agent1 loc_bar__minus_9_bar_7_bar_2_bar_60 box__minus_9_dot_05871392_comma__minus_9_dot_05871392_comma_5_dot_0059352_comma_5_dot_0059352_comma_2_dot_668_comma_2_dot_668 coffeetable__minus_10_dot_584_comma__minus_10_dot_584_comma_4_dot_6012_comma_4_dot_6012_comma__minus_0_dot_002000009408_comma__minus_0_dot_002000009408) (gotolocation agent1 loc_bar__minus_9_bar_7_bar_2_bar_60 loc_bar__minus_11_bar_2_bar_2_bar_60) (putobjectinreceptacle agent1 loc_bar__minus_11_bar_2_bar_2_bar_60 boxtype box__minus_9_dot_05871392_comma__minus_9_dot_05871392_comma_5_dot_0059352_comma_5_dot_0059352_comma_2_dot_668_comma_2_dot_668 sofa__minus_10_dot_732_comma__minus_10_dot_732_comma__minus_0_dot_4984_comma__minus_0_dot_4984_comma__minus_0_dot_184_comma__minus_0_dot_184)
    Plan time: 0.142s
motion_planner.attempt_motion_plan_for_problem: attempt 3 / 223 ID=train/pick_and_place_simple-Box-None-Sofa-220/trial_T20190907_165527_462462 AttemptIdx=0
Motion planning for: train/pick_and_place_simple-Box-None-Sofa-220/trial_T20190907_165527_462462
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BoxType)
		(receptacleType ?r SofaType)
		(inReceptacle ?o ?r))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'PickupObjectInReceptacle', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['box', 'coffeetable'], 'is_neg': True}, {'predicate_name': 'holds', 'arguments': ['box'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['box', 'coffeetable'], 'is_neg': False}]}

{'action': 'PutObjectInReceptacle', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['box', 'sofa'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['box'], 'is_neg': True}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['sofa', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['box'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation coffeetable)
(PickupObject box)
(GotoLocation sofa)
(PutObject box sofa)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['box', 'sofa'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'PickupObjectInReceptacle',
 'postcondition_ground_predicates': [{'arguments': ['box', 'coffeetable'],
                                      'is_neg': True,
                                      'predicate_name': 'inReceptacle'},
                                     {'arguments': ['box'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': [{'arguments': ['box', 'coffeetable'],
                                     'is_neg': False,
                                     'predicate_name': 'inReceptacle'}]}

GOAL OBJECT SET:
[('Box|-02.26|+00.67|+01.25', 'CoffeeTable|-02.65|00.00|+01.15')]

PERMISSIBLE OBJECT SET:
[('Box|-02.26|+00.67|+01.25', 'CoffeeTable|-02.65|00.00|+01.15')]


Permissible Objects:
('Box|-02.26|+00.67|+01.25', 'CoffeeTable|-02.65|00.00|+01.15')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Box|-02.26|+00.67|+01.25"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Box|-02.26|+00.67|+01.25"})]
Action feasible: True

OPERATOR:
{'action': 'PutObjectInReceptacle',
 'postcondition_ground_predicates': [{'arguments': ['box', 'sofa'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'},
                                     {'arguments': ['box'],
                                      'is_neg': True,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': [{'arguments': ['sofa', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['box'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89'),
 ('Box|-02.26|+00.67|+01.25', 'Sofa|-02.68|-00.05|-00.12')]

PERMISSIBLE OBJECT SET:
[('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89'),
 ('Box|-02.26|+00.67|+01.25', 'Sofa|-02.68|-00.05|-00.12')]


Permissible Objects:
('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Box|-02.26|+00.67|+01.25", "receptacle_object_id": "Sofa|-03.79|+00.01|+03.89"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Box|-02.26|+00.67|+01.25", "receptacle_object_id": "Sofa|-03.79|+00.01|+03.89"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False
	 Fluent(predicate='holds', objects=('Box|-02.26|+00.67|+01.25',)) False
	 State: True

