{"mine-wood": ["(:action mine-wood\n        :parameters (?targetinv - inventory ?woodtool - object ?toolinv - inventory ?t - tile ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(inventory-holding ?toolinv ?woodtool)\n\t\t(object-of-type ?woodtool Axe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Wood)\n\t\t)\n)"], "mine-wool1": ["(:action mine-wool1\n        :parameters (?tool - object ?targetinv - inventory ?toolinv - inventory ?t - tile ?target - object ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x Sheep)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Shears)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Wool)\n\t\t)\n)"], "mine-sugar-cane": ["(:action mine-sugar-cane\n        :parameters (?tool - object ?targetinv - inventory ?toolinv - inventory ?t - tile ?target - object ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x SugarCanePlant)\n\t\t(not (inventory-empty ?toolinv))\n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Shears)\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target SugarCane)\n\t\t)\n)"], "mine-potato": ["(:action mine-potato\n        :parameters (?tool - object ?targetinv - inventory ?toolinv - inventory ?t - tile ?target - object ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x PotatoPlant)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Axe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Potato)\n\t\t)\n)"], "mine-sugar1": ["(:action mine-sugar1\n        :parameters (?tool - object ?targetinv - inventory ?toolinv - inventory ?t - tile ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x SugarCanePlant)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Shears)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?tool)\n\t\t(inventory-holding ?targetinv ?x)\n\t\t(inventory-holding ?targetinv ?x)\n\t\t(inventory-holding ?targetinv ?x)\n\t\t(inventory-holding ?targetinv ?x)\n\t\t(not (object-at ?x ?t))\n\t\t)\n)"], "mine-gold-ore": ["(:action mine-gold-ore\n        :parameters (?tool - object ?targetinv - inventory ?toolinv - inventory ?t - tile ?target - object ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x GoldOreVein)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Pickaxe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target GoldOre)\n\t\t)\n)"], "mine-beetroot": ["(:action mine-beetroot\n        :parameters (?tool - object ?targetinv - inventory ?toolinv - inventory ?t - tile ?target - object ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x BeetrootCrop)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Shears)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Beetroot)\n\t\t)\n)"], "craft-stick": ["(:action craft-stick\n        :parameters (?tool - object ?targetinv - inventory ?toolinv - inventory ?t - tile ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Waxe)\n\t\t(object-of-type ?target ToyCar)\n\t\t(inventory-holding ?toolinv WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t)\n)"], "drop-off": ["(:action drop-off\n        :parameters (?t - tile ?i - inventory ?x - object)\n\n        :precondition (and \n\t\t(object-at Trash ?t)\n\t\t(inventory-holding ?i ?x)\n\t\t(not (inventory-empty ?i))\n\t\t)\n        :effect (and \n\t\t(object-at ?x ?t)\n\t\t(not (inventory-holding ?i ?x))\n\t\t(inventory-empty ?i)\n\t\t)\n)"], "mine-cobblestone": ["(:action mine-cobblestone\n        :parameters (?tool - object ?targetinv - inventory ?toolinv - inventory ?t - tile ?target - object ?x - object)\n\n        :precondition (and \n\t\t(object-at ?x ?t)\n\t\t(agent-at ?t)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Pickaxe)\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(object-of-type ?target Trash)\n\t\t(object-of-type ?x CobblestoneStash)\n\t\t)\n        :effect (and \n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (inventory-holding ?targetinv ?target))\n\t\t(object-of-type ?target Cobblestone)\n\t\t(object-of-type ?x CobblestoneStash)\n\t\t)\n)"], "mine-feather": ["(:action mine-feather\n        :parameters (?tool - object ?targetinv - inventory ?toolinv - inventory ?t - tile ?target - object ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-of-type ?x Chicken)\n\t\t(object-at ?x ?t)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Shears)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(object-of-type ?target Feather)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(not (object-at ?x ?t))\n\t\t)\n)"], "place-entity": ["(:action place-entity\n        :parameters (?t - tile ?i - inventory ?x - object)\n\n        :precondition (and \n\t\t(inventory-holding ?i ?x)\n\t\t(agent-at ?t)\n\t\t)\n        :effect (and \n\t\t(object-at ?x ?t)\n\t\t(not (inventory-holding ?i ?x))\n\t\t)\n)"], "drop": ["(:action drop\n        :parameters (?t - tile ?i - inventory ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(inventory-holding ?i ?x)\n\t\t)\n        :effect (and \n\t\t(object-at ?x ?t)\n\t\t(inventory-empty ?i)\n\t\t)\n)"], "up": ["(:action up\n        :parameters (?t2 - tile ?t1 - tile)\n\n        :precondition (and \n\t\t(agent-at ?t1)\n\t\t(tile-up ?t1 ?t2)\n\t\t)\n        :effect (and \n\t\t(agent-at ?t2)\n\t\t(not (agent-at ?t1))\n\t\t)\n)"], "down": ["(:action down\n        :parameters (?t2 - tile ?t1 - tile)\n\n        :precondition (and \n\t\t(agent-at ?t1)\n\t\t(tile-down ?t1 ?t2)\n\t\t)\n        :effect (and \n\t\t(agent-at ?t2)\n\t\t(not (agent-at ?t1))\n\t\t)\n)"], "mine-gold": ["(:action mine-gold\n        :parameters (?tool - object ?targetinv - inventory ?toolinv - inventory ?t - tile ?target - object ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x GoldOreVein)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Pickaxe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target GoldOre)\n\t\t)\n)"], "mine-cane": ["(:action mine-cane\n        :parameters (?tool - object ?targetinv - inventory ?toolinv - inventory ?t - tile ?target - object ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x SugarCanePlant)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Shears)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target SugarCane)\n\t\t)\n)"], "mine-iron": ["(:action mine-iron\n        :parameters (?tool - object ?targetinv - inventory ?toolinv - inventory ?t - tile ?target - object ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x IronOreVein)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Pickaxe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronOre)\n\t\t)\n)"], "harvest-sugar-cane": ["(:action harvest-sugar-cane\n        :parameters (?w - object ?tool - object ?wt - tile ?tf - tile ?targetinv - inventory ?toolinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?wt)\n\t\t(agent-at ?tf)\n\t\t(object-at ?w ?wt)\n\t\t(object-of-type ?w SugarCanePlant)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Shears)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target SugarCane)\n\t\t)\n)"], "mine-wool": ["(:action mine-wool\n        :parameters (?tool - object ?targetinv - inventory ?toolinv - inventory ?t - tile ?target - object ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x Sheep)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Shears)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Wool)\n\t\t)\n)"], "drive": ["(:action drive\n        :parameters (?t - tile ?car - object ?i - inventory)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(inventory-holding ?i ?car)\n\t\t(object-of-type ?car Boat)\n\t\t)\n        :effect (and \n\t\t(agent-at ?t)\n\t\t)\n)"], "leave": ["(:action leave\n        :parameters (?t - tile ?i - inventory ?x - object)\n\n        :precondition (and \n\t\t(object-of-type ?x Hypothetical)\n\t\t(agent-at ?t)\n\t\t(inventory-holding ?i ?x)\n\t\t)\n        :effect (and \n\t\t(object-at ?x ?t)\n\t\t(not (inventory-holding ?i ?x))\n\t\t(inventory-empty ?i)\n\t\t)\n)"], "mine-potato1": ["(:action mine-potato1\n        :parameters (?tool - object ?targetinv - inventory ?toolinv - inventory ?t - tile ?target - object ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x PotatoPlant)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Shears)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (inventory-empty ?targetinv))\n\t\t(object-of-type ?target Potato)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t)\n)"], "harvest-beetroot": ["(:action harvest-beetroot\n        :parameters (?tool - object ?targetinv - inventory ?toolinv - inventory ?t - tile ?target - object ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x BeetrootCrop)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Shears)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Beetroot)\n\t\t)\n)"], "crave-wood": ["(:action crave-wood\n        :parameters (?i5 - inventory ?t5 - tile ?x4 - object ?i3 - inventory)\n\n        :precondition (and \n\t\t(agent-at ?t5)\n\t\t(inventory-holding ?i3 ?x4)\n\t\t(inventory-empty ?i5)\n\t\t)\n        :effect (and \n\t\t(inventory-holding ?i5 ?x4)\n\t\t(not (inventory-empty ?i5))\n\t\t)\n)"], "mine-potatoes": ["(:action mine-potatoes\n        :parameters (?tool - object ?targetinv - inventory ?toolinv - inventory ?t - tile ?target - object ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x PotatoPlant)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Hoe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Potato)\n\t\t)\n)"], "mine-iron-ore2": ["(:action mine-iron-ore2\n        :parameters (?tool - object ?targetinv - inventory ?toolinv - inventory ?t - tile ?target - object ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x IronOreVein)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Pickaxe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronOre)\n\t\t)\n)"], "mine-gold-ore1": ["(:action mine-gold-ore1\n        :parameters (?tool - object ?targetinv - inventory ?toolinv - inventory ?t - tile ?target - object ?x - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x GoldOreVein)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool YellowPickaxe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target GoldOre)\n\t\t)\n)"], "mine-feather1": ["(:action mine-feather1\n        :parameters (?targetinv - inventory ?toolinv - inventory ?x - object)\n\n        :precondition (and \n\t\t(agent-at t7)\n\t\t(object-at ?x t7)\n\t\t(object-of-type ?x Chicken)\n\t\t(inventory-empty ?targetinv)\n\t\t(inventory-holding ?toolinv Shears)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv Feather)\n\t\t(object-at Feather Chicken)\n\t\t)\n)"]}