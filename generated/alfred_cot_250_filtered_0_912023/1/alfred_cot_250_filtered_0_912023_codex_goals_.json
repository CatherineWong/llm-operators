{"train/look_at_obj_in_light-Cloth-None-DeskLamp-303/trial_T20190908_131610_591705": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine a towel with a lamp.\n;; PDDL guess 1 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a towel with a lamp.\n;; PDDL guess 1 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a towel with a lamp.\n;; PDDL guess 1 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a towel with a lamp.\n;; PDDL guess 1 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a towel with a lamp.\n;; PDDL guess 1 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a towel with a lamp.\n;; PDDL guess 1 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a towel with a lamp.\n;; PDDL guess 1 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a towel with a lamp.\n;; PDDL guess 1 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a towel with a lamp.\n;; PDDL guess 1 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a towel with a lamp.\n;; PDDL guess 1 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine a towel with a lamp.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n", "\n;; PDDL guess 2 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n", "\n;; PDDL guess 3 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n", "\n;; PDDL guess 4 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n"]}, "train/pick_cool_then_place_in_recep-Mug-None-CoffeeMachine-20/trial_T20190906_161428_039508": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a chilled mug on the coffee maker.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n", "\n;; PDDL guess 2 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-CupType-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n", "\n;; PDDL guess 3 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-MugType-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n", "\n;; PDDL guess 4 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-CoffeeCupType-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CoffeeCupType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n"]}, "train/look_at_obj_in_light-TissueBox-None-FloorLamp-225/trial_T20190907_150815_536818": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nto see the tissue box in the lamp light.\n;; PDDL guess 1 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nto see the tissue box in the lamp light.\n;; PDDL guess 1 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nto see the tissue box in the lamp light.\n;; PDDL guess 1 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nto see the tissue box in the lamp light.\n;; PDDL guess 1 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nto see the tissue box in the lamp light.\n;; PDDL guess 1 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nto see the tissue box in the lamp light.\n;; PDDL guess 1 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nto see the tissue box in the lamp light.\n;; PDDL guess 1 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nto see the tissue box in the lamp light.\n;; PDDL guess 1 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nto see the tissue box in the lamp light.\n;; PDDL guess 1 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nto see the tissue box in the lamp light.\n;; PDDL guess 1 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.to see the tissue box in the lamp light.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n", "\n;; PDDL guess 2 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n", "\n;; PDDL guess 3 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n", "\n;; PDDL guess 4 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n"]}, "train/pick_cool_then_place_in_recep-WineBottle-None-GarbageCan-16/trial_T20190907_015045_510934": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.chill bottle in refrigerator , throw in trash can to front left of paper towels.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"chill bottle in refrigerator , throw in trash can to front left of paper towels.\"\n;; Official goal name: pick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n", "\n;; PDDL guess 2 for \"chill bottle in refrigerator , throw in trash can to front left of paper towels.\"\n;; Official goal name: pick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n", "\n;; PDDL guess 3 for \"chill bottle in refrigerator , throw in trash can to front left of paper towels.\"\n;; Official goal name: pick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n", "\n;; PDDL guess 4 for \"chill bottle in refrigerator , throw in trash can to front left of paper towels.\"\n;; Official goal name: pick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType)\n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n"]}, "train/pick_heat_then_place_in_recep-Mug-None-Cabinet-6/trial_T20190908_034437_632398": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.to take a mug from the microwave to put it away in the cabinet.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"to take a mug from the microwave to put it away in the cabinet.\"\n;; Official goal name: pick_and_place_simple-Mug-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n)))\n", "\n;; PDDL guess 2 for \"to take a mug from the microwave to put it away in the cabinet.\"\n;; Official goal name: pick_and_place_simple-CupType-None-CabinetType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n)))\n", "\n;; PDDL guess 3 for \"to take a mug from the microwave to put it away in the cabinet.\"\n;; Official goal name: pick_and_place_simple-MugType-None-CupboardType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r) \n            )\n)))\n", "\n;; PDDL guess 4 for \"to take a mug from the microwave to put it away in the cabinet.\"\n;; Official goal name: pick_and_place_simple-CupType-None-CupboardType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r) \n            )\n)))\n"]}, "train/look_at_obj_in_light-Mug-None-DeskLamp-301/trial_T20190908_155916_103990": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\ninspect a mug with a lamp.\n;; PDDL guess 1 for 'inspect a mug with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Mug-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a mug with a lamp.\n;; PDDL guess 1 for 'inspect a mug with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Mug-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a mug with a lamp.\n;; PDDL guess 1 for 'inspect a mug with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Mug-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a mug with a lamp.\n;; PDDL guess 1 for 'inspect a mug with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Mug-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a mug with a lamp.\n;; PDDL guess 1 for 'inspect a mug with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Mug-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a mug with a lamp.\n;; PDDL guess 1 for 'inspect a mug with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Mug-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a mug with a lamp.\n;; PDDL guess 1 for 'inspect a mug with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Mug-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a mug with a lamp.\n;; PDDL guess 1 for 'inspect a mug with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Mug-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a mug with a lamp.\n;; PDDL guess 1 for 'inspect a mug with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Mug-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a mug with a lamp.\n;; PDDL guess 1 for 'inspect a mug with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Mug-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.inspect a mug with a lamp.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"inspect a mug with a lamp.\"\n;; Official goal name: look_at_obj_in_light-Mug-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 2 for \"inspect a mug with a lamp.\"\n;; Official goal name: look_at_obj_in_light-Mug-None-FloorLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 3 for \"inspect a mug with a lamp.\"\n;; Official goal name: look_at_obj_in_light-Mug-None-TableLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot TableLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 4 for \"inspect a mug with a lamp.\"\n;; Official goal name: look_at_obj_in_light-Mug-None-BedsideLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot BedsideLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n"]}, "train/look_at_obj_in_light-RemoteControl-None-FloorLamp-229/trial_T20190907_184408_159194": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nturn a lamp on with a remote in hand.\n;; PDDL guess 1 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a remote in hand.\n;; PDDL guess 1 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a remote in hand.\n;; PDDL guess 1 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a remote in hand.\n;; PDDL guess 1 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a remote in hand.\n;; PDDL guess 1 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a remote in hand.\n;; PDDL guess 1 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a remote in hand.\n;; PDDL guess 1 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a remote in hand.\n;; PDDL guess 1 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a remote in hand.\n;; PDDL guess 1 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a remote in hand.\n;; PDDL guess 1 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.turn a lamp on with a remote in hand.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 2 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 3 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 4 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n"]}, "train/pick_heat_then_place_in_recep-Mug-None-CoffeeMachine-11/trial_T20190907_164503_292853": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a heated mug in the coffee maker.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n"]}, "train/pick_and_place_simple-Glassbottle-None-Fridge-16/trial_T20190908_045933_322597": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a vase in a fridge.\n;; PDDL guess 1 for 'put a vase in a fridge.'\n;; Simplified Goal: \npick_and_place_simple-Glassbottle-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a vase in a fridge.\n;; PDDL guess 1 for 'put a vase in a fridge.'\n;; Simplified Goal: \npick_and_place_simple-Glassbottle-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a vase in a fridge.\n;; PDDL guess 1 for 'put a vase in a fridge.'\n;; Simplified Goal: \npick_and_place_simple-Glassbottle-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a vase in a fridge.\n;; PDDL guess 1 for 'put a vase in a fridge.'\n;; Simplified Goal: \npick_and_place_simple-Glassbottle-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a vase in a fridge.\n;; PDDL guess 1 for 'put a vase in a fridge.'\n;; Simplified Goal: \npick_and_place_simple-Glassbottle-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a vase in a fridge.\n;; PDDL guess 1 for 'put a vase in a fridge.'\n;; Simplified Goal: \npick_and_place_simple-Glassbottle-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a vase in a fridge.\n;; PDDL guess 1 for 'put a vase in a fridge.'\n;; Simplified Goal: \npick_and_place_simple-Glassbottle-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a vase in a fridge.\n;; PDDL guess 1 for 'put a vase in a fridge.'\n;; Simplified Goal: \npick_and_place_simple-Glassbottle-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a vase in a fridge.\n;; PDDL guess 1 for 'put a vase in a fridge.'\n;; Simplified Goal: \npick_and_place_simple-Glassbottle-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a vase in a fridge.\n;; PDDL guess 1 for 'put a vase in a fridge.'\n;; Simplified Goal: \npick_and_place_simple-Glassbottle-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a vase in a fridge.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"put a vase in a fridge.\"\n;; Official goal name: pick_and_place_simple-VaseType-None-FridgeType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n", "\n;; PDDL guess 2 for \"put a vase in a fridge.\"\n;; Official goal name: pick_and_place_simple-CandleType-None-FridgeType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"put a vase in a fridge.\"\n;; Official goal name: pick_and_place_simple-HousePlantType-None-FridgeType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o HousePlantType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"put a vase in a fridge.\"\n;; Official goal name: pick_and_place_simple-FloorLampType-None-FridgeType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o FloorLampType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n"]}, "train/pick_heat_then_place_in_recep-BreadSliced-None-Fridge-2/trial_T20190909_075013_874186": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a slice of warm toast in the fridge.\n;; PDDL guess 1 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of warm toast in the fridge.\n;; PDDL guess 1 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of warm toast in the fridge.\n;; PDDL guess 1 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of warm toast in the fridge.\n;; PDDL guess 1 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of warm toast in the fridge.\n;; PDDL guess 1 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of warm toast in the fridge.\n;; PDDL guess 1 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of warm toast in the fridge.\n;; PDDL guess 1 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of warm toast in the fridge.\n;; PDDL guess 1 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of warm toast in the fridge.\n;; PDDL guess 1 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of warm toast in the fridge.\n;; PDDL guess 1 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a slice of warm toast in the fridge.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"put a slice of warm toast in the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 2 for \"put a slice of warm toast in the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 3 for \"put a slice of warm toast in the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 4 for \"put a slice of warm toast in the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"]}, "train/pick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin-13/trial_T20190919_030951_364977": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a cold potato slice in the sink.\n;; PDDL guess 1 for 'place a cold potato slice in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cold potato slice in the sink.\n;; PDDL guess 1 for 'place a cold potato slice in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cold potato slice in the sink.\n;; PDDL guess 1 for 'place a cold potato slice in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cold potato slice in the sink.\n;; PDDL guess 1 for 'place a cold potato slice in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cold potato slice in the sink.\n;; PDDL guess 1 for 'place a cold potato slice in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cold potato slice in the sink.\n;; PDDL guess 1 for 'place a cold potato slice in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cold potato slice in the sink.\n;; PDDL guess 1 for 'place a cold potato slice in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cold potato slice in the sink.\n;; PDDL guess 1 for 'place a cold potato slice in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cold potato slice in the sink.\n;; PDDL guess 1 for 'place a cold potato slice in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cold potato slice in the sink.\n;; PDDL guess 1 for 'place a cold potato slice in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a cold potato slice in the sink.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"place a cold potato slice in the sink.\"\n;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 2 for \"place a cold potato slice in the sink.\"\n;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-Sink\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 3 for \"place a cold potato slice in the sink.\"\n;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-KitchenSinkType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r KitchenSinkType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 4 for \"place a cold potato slice in the sink.\"\n;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-KitchenSinkBasinType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r KitchenSinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"]}, "train/pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin-4/trial_T20190909_064937_166184": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nto heat a tomato slice and place it in the sink.\n;; PDDL guess 1 for 'to heat a tomato slice and place it in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a tomato slice and place it in the sink.\n;; PDDL guess 1 for 'to heat a tomato slice and place it in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a tomato slice and place it in the sink.\n;; PDDL guess 1 for 'to heat a tomato slice and place it in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a tomato slice and place it in the sink.\n;; PDDL guess 1 for 'to heat a tomato slice and place it in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a tomato slice and place it in the sink.\n;; PDDL guess 1 for 'to heat a tomato slice and place it in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a tomato slice and place it in the sink.\n;; PDDL guess 1 for 'to heat a tomato slice and place it in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a tomato slice and place it in the sink.\n;; PDDL guess 1 for 'to heat a tomato slice and place it in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a tomato slice and place it in the sink.\n;; PDDL guess 1 for 'to heat a tomato slice and place it in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a tomato slice and place it in the sink.\n;; PDDL guess 1 for 'to heat a tomato slice and place it in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a tomato slice and place it in the sink.\n;; PDDL guess 1 for 'to heat a tomato slice and place it in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.to heat a tomato slice and place it in the sink.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"to heat a tomato slice and place it in the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 2 for \"to heat a tomato slice and place it in the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 3 for \"to heat a tomato slice and place it in the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 4 for \"to heat a tomato slice and place it in the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"]}, "train/pick_cool_then_place_in_recep-PotatoSliced-None-Microwave-2/trial_T20190909_094553_729319": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nputting a cold potato slice in the microwave.\n;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a cold potato slice in the microwave.\n;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a cold potato slice in the microwave.\n;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a cold potato slice in the microwave.\n;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a cold potato slice in the microwave.\n;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a cold potato slice in the microwave.\n;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a cold potato slice in the microwave.\n;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a cold potato slice in the microwave.\n;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a cold potato slice in the microwave.\n;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a cold potato slice in the microwave.\n;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.putting a cold potato slice in the microwave.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 2 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 3 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 4 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"]}, "train/look_at_obj_in_light-Bowl-None-DeskLamp-302/trial_T20190908_030636_661532": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nturn a lamp on with a bowl in hand.\n;; PDDL guess 1 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a bowl in hand.\n;; PDDL guess 1 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a bowl in hand.\n;; PDDL guess 1 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a bowl in hand.\n;; PDDL guess 1 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a bowl in hand.\n;; PDDL guess 1 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a bowl in hand.\n;; PDDL guess 1 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a bowl in hand.\n;; PDDL guess 1 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a bowl in hand.\n;; PDDL guess 1 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a bowl in hand.\n;; PDDL guess 1 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a bowl in hand.\n;; PDDL guess 1 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.turn a lamp on with a bowl in hand.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"turn a lamp on with a bowl in hand.\"\n;; Official goal name: look_at_obj_in_light-Bowl-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 2 for \"turn a lamp on with a bowl in hand.\"\n;; Official goal name: look_at_obj_in_light-CupType-None-DeskLampType\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CupType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 3 for \"turn a lamp on with a bowl in hand.\"\n;; Official goal name: look_at_obj_in_light-BowlType-None-ShelfType\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot ShelfType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 4 for \"turn a lamp on with a bowl in hand.\"\n;; Official goal name: look_at_obj_in_light-CoffeeMugType-None-DeskLampType\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CoffeeMugType)\n                (holds ?a ?o)\n            )\n    ))))))\n"]}, "train/look_at_obj_in_light-Bowl-None-DeskLamp-327/trial_T20190907_094422_792919": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nturn on the lamp on the desk while holding the bowl.\n;; PDDL guess 1 for 'turn on the lamp on the desk while holding the bowl.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp on the desk while holding the bowl.\n;; PDDL guess 1 for 'turn on the lamp on the desk while holding the bowl.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp on the desk while holding the bowl.\n;; PDDL guess 1 for 'turn on the lamp on the desk while holding the bowl.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp on the desk while holding the bowl.\n;; PDDL guess 1 for 'turn on the lamp on the desk while holding the bowl.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp on the desk while holding the bowl.\n;; PDDL guess 1 for 'turn on the lamp on the desk while holding the bowl.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp on the desk while holding the bowl.\n;; PDDL guess 1 for 'turn on the lamp on the desk while holding the bowl.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp on the desk while holding the bowl.\n;; PDDL guess 1 for 'turn on the lamp on the desk while holding the bowl.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp on the desk while holding the bowl.\n;; PDDL guess 1 for 'turn on the lamp on the desk while holding the bowl.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp on the desk while holding the bowl.\n;; PDDL guess 1 for 'turn on the lamp on the desk while holding the bowl.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp on the desk while holding the bowl.\n;; PDDL guess 1 for 'turn on the lamp on the desk while holding the bowl.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.turn on the lamp on the desk while holding the bowl.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'turn on the lamp on the desk while holding the bowl.'\n;; Official goal name: look_at_obj_in_light-Bowl-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 2 for 'turn on the lamp on the desk while holding the bowl.'\n;; Official goal name: look_at_obj_in_light-Bowl-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 3 for 'turn on the lamp on the desk while holding the bowl.'\n;; Official goal name: look_at_obj_in_light-Bowl-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 4 for 'turn on the lamp on the desk while holding the bowl.'\n;; Official goal name: look_at_obj_in_light-Bowl-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n"]}, "train/pick_cool_then_place_in_recep-Mug-None-CoffeeMachine-20/trial_T20190906_161453_754806": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a chilled mug in a coffee maker.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"place a chilled mug in a coffee maker.\"\n;; Official goal name: pick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n)))\n", "\n;; PDDL guess 2 for \"place a chilled mug in a coffee maker.\"\n;; Official goal name: pick_cool_then_place_in_recep-Cup-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n)))\n", "\n;; PDDL guess 3 for \"place a chilled mug in a coffee maker.\"\n;; Official goal name: pick_cool_then_place_in_recep-Tumbler-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TumblerType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n)))\n", "\n;; PDDL guess 4 for \"place a chilled mug in a coffee maker.\"\n;; Official goal name: pick_cool_then_place_in_recep-TravelMug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TravelMugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n)))\n"]}, "train/pick_and_place_simple-TomatoSliced-None-Fridge-6/trial_T20190918_162404_957531": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a slice of tomato in the fridge.\n;; PDDL guess 1 for 'place a slice of tomato in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of tomato in the fridge.\n;; PDDL guess 1 for 'place a slice of tomato in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of tomato in the fridge.\n;; PDDL guess 1 for 'place a slice of tomato in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of tomato in the fridge.\n;; PDDL guess 1 for 'place a slice of tomato in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of tomato in the fridge.\n;; PDDL guess 1 for 'place a slice of tomato in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of tomato in the fridge.\n;; PDDL guess 1 for 'place a slice of tomato in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of tomato in the fridge.\n;; PDDL guess 1 for 'place a slice of tomato in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of tomato in the fridge.\n;; PDDL guess 1 for 'place a slice of tomato in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of tomato in the fridge.\n;; PDDL guess 1 for 'place a slice of tomato in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of tomato in the fridge.\n;; PDDL guess 1 for 'place a slice of tomato in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a slice of tomato in the fridge.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"place a slice of tomato in the fridge.\"\n;; Official goal name: pick_and_place_simple-TomatoSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for \"place a slice of tomato in the fridge.\"\n;; Official goal name: pick_and_place_simple-AppleSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"place a slice of tomato in the fridge.\"\n;; Official goal name: pick_and_place_simple-CucumberSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CucumberType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"place a slice of tomato in the fridge.\"\n;; Official goal name: pick_and_place_simple-OnionSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o OnionType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n"]}, "train/look_at_obj_in_light-Laptop-None-FloorLamp-205/trial_T20190907_130015_600297": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine a laptop by the dim light of a living room.\n;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a laptop by the dim light of a living room.\n;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a laptop by the dim light of a living room.\n;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a laptop by the dim light of a living room.\n;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a laptop by the dim light of a living room.\n;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a laptop by the dim light of a living room.\n;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a laptop by the dim light of a living room.\n;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a laptop by the dim light of a living room.\n;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a laptop by the dim light of a living room.\n;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a laptop by the dim light of a living room.\n;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine a laptop by the dim light of a living room.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n", "\n;; PDDL guess 2 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n", "\n;; PDDL guess 3 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n", "\n;; PDDL guess 4 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n"]}, "train/pick_and_place_simple-CD-None-Dresser-323/trial_T20190908_005459_168199": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nmove the cd that ' s on top of the desk to on top of the dresser.\n;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cd that ' s on top of the desk to on top of the dresser.\n;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cd that ' s on top of the desk to on top of the dresser.\n;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cd that ' s on top of the desk to on top of the dresser.\n;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cd that ' s on top of the desk to on top of the dresser.\n;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cd that ' s on top of the desk to on top of the dresser.\n;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cd that ' s on top of the desk to on top of the dresser.\n;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cd that ' s on top of the desk to on top of the dresser.\n;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cd that ' s on top of the desk to on top of the dresser.\n;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cd that ' s on top of the desk to on top of the dresser.\n;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.move the cd that ' s on top of the desk to on top of the dresser.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Official goal name: pick_and_place_simple-CD-None-Dresser\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n", "\n;; PDDL guess 2 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Official goal name: pick_and_place_simple-Statue-None-Dresser\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o StatueType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n", "\n;; PDDL guess 3 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Official goal name: pick_and_place_simple-TennisRacket-None-Dresser\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TennisRacketType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n", "\n;; PDDL guess 4 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Official goal name: pick_and_place_simple-Painting-None-Dresser\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PaintingType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n"]}, "train/pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan-2/trial_T20190908_105707_315068": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a heated slice of bread in the trash can.\n;; PDDL guess 1 for 'put a heated slice of bread in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bread in the trash can.\n;; PDDL guess 1 for 'put a heated slice of bread in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bread in the trash can.\n;; PDDL guess 1 for 'put a heated slice of bread in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bread in the trash can.\n;; PDDL guess 1 for 'put a heated slice of bread in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bread in the trash can.\n;; PDDL guess 1 for 'put a heated slice of bread in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bread in the trash can.\n;; PDDL guess 1 for 'put a heated slice of bread in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bread in the trash can.\n;; PDDL guess 1 for 'put a heated slice of bread in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bread in the trash can.\n;; PDDL guess 1 for 'put a heated slice of bread in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bread in the trash can.\n;; PDDL guess 1 for 'put a heated slice of bread in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bread in the trash can.\n;; PDDL guess 1 for 'put a heated slice of bread in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a heated slice of bread in the trash can.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"put a heated slice of bread in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 2 for \"put a heated slice of bread in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-BaguetteSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BaguetteType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 3 for \"put a heated slice of bread in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-RollSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RollType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 4 for \"put a heated slice of bread in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-ToastSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToastType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"]}, "train/pick_clean_then_place_in_recep-Mug-None-CoffeeMachine-25/trial_T20190907_223942_379753": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.clean mug in sink and return to coffee maker.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Official goal name: pick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for 'clean mug in sink and return to coffee maker.'\n;; Official goal name: pick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for 'clean mug in sink and return to coffee maker.'\n;; Official goal name: pick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for 'clean mug in sink and return to coffee maker.'\n;; Official goal name: pick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n"]}, "train/pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan-16/trial_T20190907_232412_371318": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a hot slice of bread in a bin.\n;; PDDL guess 1 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot slice of bread in a bin.\n;; PDDL guess 1 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot slice of bread in a bin.\n;; PDDL guess 1 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot slice of bread in a bin.\n;; PDDL guess 1 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot slice of bread in a bin.\n;; PDDL guess 1 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot slice of bread in a bin.\n;; PDDL guess 1 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot slice of bread in a bin.\n;; PDDL guess 1 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot slice of bread in a bin.\n;; PDDL guess 1 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot slice of bread in a bin.\n;; PDDL guess 1 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot slice of bread in a bin.\n;; PDDL guess 1 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a hot slice of bread in a bin.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"put a hot slice of bread in a bin.\"\n;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 2 for \"put a hot slice of bread in a bin.\"\n;; Official goal name: pick_heat_then_place_in_recep-Cheese-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CheeseType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"put a hot slice of bread in a bin.\"\n;; Official goal name: pick_heat_then_place_in_recep-BreadType-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"put a hot slice of bread in a bin.\"\n;; Official goal name: pick_heat_then_place_in_recep-BreadType-None-TrashCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r TrashCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n"]}, "train/pick_cool_then_place_in_recep-Pot-None-DiningTable-23/trial_T20190909_061357_391676": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.chill a pan in the fridge and put it on the counter.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"chill a pan in the fridge and put it on the counter.\"\n;; Official goal name: pick_cool_then_place_in_recep-Pot-None-DiningTable\n(:goal\n        (and \n            (exists (?r - receptacle)\n            (exists (?o - object)\n                (and \n                    (objectType ?o PotType) \n                    (receptacleType ?r DiningTableType)\n                    (inReceptacle ?o ?r)\n                    (coolable ?o)\n                    (isCool ?o) \n                )\n            ))\n            (exists (?r - receptacle)\n            (exists (?o - object)\n                (and \n                    (objectType ?o PotType) \n                    (receptacleType ?r DiningTableType)\n                    (atLocation ?o ?r)\n                ))\n            )\n        )\n)\n", "\n;; PDDL guess 2 for \"chill a pan in the fridge and put it on the counter.\"\n;; Official goal name: pick_cool_then_place_in_recep-Pot-None-DiningTable\n(:goal\n        (and \n            (exists (?r1 - receptacle)\n            (exists (?o - object)\n                (and \n                    (objectType ?o PotType) \n                    (receptacleType ?r1 FridgeType)\n                    (inReceptacle ?o ?r1)\n                    (coolable ?o)\n                    (isCool ?o) \n                )\n            ))\n            (exists (?r2 - receptacle)\n            (exists (?o - object)\n                (and \n                    (objectType ?o PotType) \n                    (receptacleType ?r2 DiningTableType)\n                    (atLocation ?o ?r2)\n                ))\n            )\n        )\n)\n", "\n;; PDDL guess 3 for \"chill a pan in the fridge and put it on the counter.\"\n;; Official goal name: pick_cool_then_place_in_recep-Bowl-None-DiningTableType\n(:goal\n        (and \n            (exists (?r1 - receptacle)\n            (exists (?o - object)\n                (and \n                    (objectType ?o BowlType) \n                    (receptacleType ?r1 FridgeType)\n                    (inReceptacle ?o ?r1)\n                    (coolable ?o)\n                    (isCool ?o) \n                )\n            ))\n            (exists (?r2 - receptacle)\n            (exists (?o - object)\n                (and \n                    (objectType ?o BowlType) \n                    (receptacleType ?r2 DiningTableType)\n                    (atLocation ?o ?r2)\n                ))\n            )\n        )\n)\n", "\n;; PDDL guess 4 for \"chill a pan in the fridge and put it on the counter.\"\n;; Official goal name: pick_cool_then_place_in_recep-Bowl-None-DiningTableType\n(:goal\n        (and \n            (exists (?r1 - receptacle)\n            (exists (?o - object)\n                (and \n                    (objectType ?o BowlType) \n                    (receptacleType ?r1 FridgeType)\n                    (inReceptacle ?o ?r1)\n                    (coolable ?o)\n                    (isCool ?o) \n                )\n            ))\n            (exists (?r2 - receptacle)\n            (exists (?o - object)\n                (and \n                    (objectType ?o BowlType) \n                    (receptacleType ?r2 DiningTableType)\n                    (atLocation ?o ?r2)\n                ))\n            )\n        )\n)\n"]}, "train/look_at_obj_in_light-KeyChain-None-FloorLamp-205/trial_T20190909_114633_189769": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine a key chain by the dim natural light of a living room.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"examine a key chain by the dim natural light of a living room.\"\n;; Official goal name: look_at_obj_in_light-KeyChain-None-FloorLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))\n", "\n;; PDDL guess 2 for \"examine a key chain by the dim natural light of a living room.\"\n;; Official goal name: look_at_obj_in_light-KeyChain-None-Lamp\n(:goal\n        (exists (?a - agent)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot LampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))\n", "\n;; PDDL guess 3 for \"examine a key chain by the dim natural light of a living room.\"\n;; Official goal name: look_at_obj_in_light-KeyChain-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))\n", "\n;; PDDL guess 4 for \"examine a key chain by the dim natural light of a living room.\"\n;; Official goal name: look_at_obj_in_light-KeyChain-None-LivingRoomLight\n(:goal\n        (exists (?a - agent)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot LivingRoomLightType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))\n"]}, "train/look_at_obj_in_light-CreditCard-None-FloorLamp-228/trial_T20190908_113131_743545": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\npick up a credit card and turn a lamp on.\n;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a credit card and turn a lamp on.\n;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a credit card and turn a lamp on.\n;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a credit card and turn a lamp on.\n;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a credit card and turn a lamp on.\n;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a credit card and turn a lamp on.\n;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a credit card and turn a lamp on.\n;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a credit card and turn a lamp on.\n;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a credit card and turn a lamp on.\n;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a credit card and turn a lamp on.\n;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.pick up a credit card and turn a lamp on.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 2 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 3 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 4 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n"]}, "train/pick_heat_then_place_in_recep-TomatoSliced-None-Fridge-15/trial_T20190909_005143_132045": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a cooked tomato slice in the refrigerator.\n;; PDDL guess 1 for 'place a cooked tomato slice in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice in the refrigerator.\n;; PDDL guess 1 for 'place a cooked tomato slice in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice in the refrigerator.\n;; PDDL guess 1 for 'place a cooked tomato slice in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice in the refrigerator.\n;; PDDL guess 1 for 'place a cooked tomato slice in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice in the refrigerator.\n;; PDDL guess 1 for 'place a cooked tomato slice in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice in the refrigerator.\n;; PDDL guess 1 for 'place a cooked tomato slice in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice in the refrigerator.\n;; PDDL guess 1 for 'place a cooked tomato slice in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice in the refrigerator.\n;; PDDL guess 1 for 'place a cooked tomato slice in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice in the refrigerator.\n;; PDDL guess 1 for 'place a cooked tomato slice in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice in the refrigerator.\n;; PDDL guess 1 for 'place a cooked tomato slice in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a cooked tomato slice in the refrigerator.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"place a cooked tomato slice in the refrigerator.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n", "\n;; PDDL guess 2 for \"place a cooked tomato slice in the refrigerator.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n", "\n;; PDDL guess 3 for \"place a cooked tomato slice in the refrigerator.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n", "\n;; PDDL guess 4 for \"place a cooked tomato slice in the refrigerator.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n"]}, "train/look_at_obj_in_light-Bowl-None-DeskLamp-302/trial_T20190907_190751_819937": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\ninspect a bowl by lamplight.\n;; PDDL guess 1 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a bowl by lamplight.\n;; PDDL guess 1 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a bowl by lamplight.\n;; PDDL guess 1 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a bowl by lamplight.\n;; PDDL guess 1 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a bowl by lamplight.\n;; PDDL guess 1 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a bowl by lamplight.\n;; PDDL guess 1 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a bowl by lamplight.\n;; PDDL guess 1 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a bowl by lamplight.\n;; PDDL guess 1 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a bowl by lamplight.\n;; PDDL guess 1 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a bowl by lamplight.\n;; PDDL guess 1 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.inspect a bowl by lamplight.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 2 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-PlateType-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 3 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-CupType-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CupType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 4 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-MugType-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n"]}, "train/pick_cool_then_place_in_recep-BreadSliced-None-Microwave-6/trial_T20190909_115420_904817": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a cold piece of bread in the microwave.\n;; PDDL guess 1 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold piece of bread in the microwave.\n;; PDDL guess 1 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold piece of bread in the microwave.\n;; PDDL guess 1 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold piece of bread in the microwave.\n;; PDDL guess 1 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold piece of bread in the microwave.\n;; PDDL guess 1 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold piece of bread in the microwave.\n;; PDDL guess 1 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold piece of bread in the microwave.\n;; PDDL guess 1 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold piece of bread in the microwave.\n;; PDDL guess 1 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold piece of bread in the microwave.\n;; PDDL guess 1 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold piece of bread in the microwave.\n;; PDDL guess 1 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a cold piece of bread in the microwave.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"put a cold piece of bread in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-BreadType-None-MicrowaveType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n               (objectType ?o BreadType) \n               (receptacleType ?r MicrowaveType)\n               (inReceptacle ?o ?r)\n               (coolable ?o)\n               (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for \"put a cold piece of bread in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-BreadType-None-CoffeeMachineType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n               (objectType ?o BreadType) \n               (receptacleType ?r CoffeeMachineType)\n               (inReceptacle ?o ?r)\n               (coolable ?o)\n               (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"put a cold piece of bread in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-BreadType-None-CounterTopType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n               (objectType ?o BreadType) \n               (receptacleType ?r CounterTopType)\n               (inReceptacle ?o ?r)\n               (coolable ?o)\n               (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"put a cold piece of bread in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-BreadType-None-SinkBasinType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n               (objectType ?o BreadType) \n               (receptacleType ?r SinkBasinType)\n               (inReceptacle ?o ?r)\n               (coolable ?o)\n               (isCool ?o) \n            )\n    )))\n"]}, "train/look_at_obj_in_light-RemoteControl-None-FloorLamp-210/trial_T20190909_005614_868994": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine a remote in the light of a tall lamp.\n;; PDDL guess 1 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a remote in the light of a tall lamp.\n;; PDDL guess 1 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a remote in the light of a tall lamp.\n;; PDDL guess 1 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a remote in the light of a tall lamp.\n;; PDDL guess 1 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a remote in the light of a tall lamp.\n;; PDDL guess 1 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a remote in the light of a tall lamp.\n;; PDDL guess 1 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a remote in the light of a tall lamp.\n;; PDDL guess 1 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a remote in the light of a tall lamp.\n;; PDDL guess 1 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a remote in the light of a tall lamp.\n;; PDDL guess 1 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a remote in the light of a tall lamp.\n;; PDDL guess 1 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine a remote in the light of a tall lamp.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'examine a remote in the light of a tall lamp.'\n;; Official goal name: look_in_light-RemoteControl-None-FloorLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?o RemoteControlType)\n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot)\n                (atLocation ?a ?l)\n                (holds ?a ?o)\n                (objectAtLocation ?ot ?l)\n            )\n    )))))\n", "\n;; PDDL guess 2 for 'examine a remote in the light of a tall lamp.'\n;; Official goal name: look_at_obj_in_light-RemoteControl-None-FloorLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?o RemoteControlType)\n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot)\n                (atLocation ?a ?l)\n                (holds ?a ?o)\n                (objectAtLocation ?ot ?l)\n            )\n    )))))\n", "\n;; PDDL guess 3 for 'examine a remote in the light of a tall lamp.'\n;; Official goal name: look_at_in_obj-RemoteControl-FloorLampType\n(:goal\n        (exists (?a - agent)\n        (exists (?o - object)\n        (exists (?ot - object)\n            (and \n                (objectType ?o RemoteControlType)\n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot)\n                (holds ?a ?o)\n                (isOn ?ot)  \n            )\n    ))))\n", "\n;; PDDL guess 4 for 'examine a remote in the light of a tall lamp.'\n;; Official goal name: look_at_obj_in_light-RemoteControl-None-Lamp\n(:goal\n        (exists (?a - agent)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?o RemoteControlType)\n                (objectType ?ot LampType)\n                (toggleable ?ot)\n                (isToggled ?ot)\n                (atLocation ?a ?l)\n                (holds ?a ?o)\n                (objectAtLocation ?ot ?l)\n            )\n    )))))\n"]}, "train/look_at_obj_in_light-CreditCard-None-FloorLamp-216/trial_T20190907_160540_519104": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nhold a credit card while turning on a lamp.\n;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nhold a credit card while turning on a lamp.\n;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nhold a credit card while turning on a lamp.\n;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nhold a credit card while turning on a lamp.\n;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nhold a credit card while turning on a lamp.\n;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nhold a credit card while turning on a lamp.\n;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nhold a credit card while turning on a lamp.\n;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nhold a credit card while turning on a lamp.\n;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nhold a credit card while turning on a lamp.\n;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nhold a credit card while turning on a lamp.\n;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.hold a credit card while turning on a lamp.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 2 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 3 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 4 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n"]}, "train/pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan-23/trial_T20190909_034745_393039": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nthrow away a slice of heated tomato in the trash bin.\n;; PDDL guess 1 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a slice of heated tomato in the trash bin.\n;; PDDL guess 1 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a slice of heated tomato in the trash bin.\n;; PDDL guess 1 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a slice of heated tomato in the trash bin.\n;; PDDL guess 1 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a slice of heated tomato in the trash bin.\n;; PDDL guess 1 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a slice of heated tomato in the trash bin.\n;; PDDL guess 1 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a slice of heated tomato in the trash bin.\n;; PDDL guess 1 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a slice of heated tomato in the trash bin.\n;; PDDL guess 1 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a slice of heated tomato in the trash bin.\n;; PDDL guess 1 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a slice of heated tomato in the trash bin.\n;; PDDL guess 1 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.throw away a slice of heated tomato in the trash bin.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n", "\n;; PDDL guess 2 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: pick_then_put-TomatoSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType)\n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)\n                (heatable ?o)\n                (isHot ?o)\n            )\n        ))\n)\n", "\n;; PDDL guess 3 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: pick_then_put-TomatoSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType)\n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)\n                (heatable ?o)\n                (isHot ?o)\n            )\n        ))\n)\n", "\n;; PDDL guess 4 for 'throw away a slice of heated tomato in the trash bin.'\n;;  Simplified Goal: pick_then_put-TomatoSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType)\n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)\n                (heatable ?o)\n                (isHot ?o)\n            )\n        ))\n)\n"]}, "train/look_at_obj_in_light-Pen-None-FloorLamp-212/trial_T20190907_000516_042741": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\ngrab the pen from the table , turn on the floor lamp.\n;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ngrab the pen from the table , turn on the floor lamp.\n;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ngrab the pen from the table , turn on the floor lamp.\n;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ngrab the pen from the table , turn on the floor lamp.\n;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ngrab the pen from the table , turn on the floor lamp.\n;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ngrab the pen from the table , turn on the floor lamp.\n;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ngrab the pen from the table , turn on the floor lamp.\n;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ngrab the pen from the table , turn on the floor lamp.\n;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ngrab the pen from the table , turn on the floor lamp.\n;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ngrab the pen from the table , turn on the floor lamp.\n;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.grab the pen from the table , turn on the floor lamp.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'\n;; Official goal name: look_at_obj_in_light-Pen-None-FloorLamp\n;; PDDL goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 2 for 'grab the pen from the table , turn on the floor lamp.'\n;; Official goal name: look_at_obj_in_light-Pen-None-FloorLamp\n;; PDDL goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 3 for 'grab the pen from the table , turn on the floor lamp.'\n;; Official goal name: look_at_obj_in_light-Pen-None-FloorLamp\n;; PDDL goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 4 for 'grab the pen from the table , turn on the floor lamp.'\n;; Official goal name: look_at_obj_in_light-Pen-None-FloorLamp\n;; PDDL goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n"]}, "train/pick_clean_then_place_in_recep-Mug-None-CoffeeMachine-24/trial_T20190906_185346_459023": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a clean mug in the coffee machine.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"put a clean mug in the coffee machine.\"\n;; Official goal name: pick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for \"put a clean mug in the coffee machine.\"\n;; Official goal name: pick_clean_then_place_in_recep-Cup-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"put a clean mug in the coffee machine.\"\n;; Official goal name: pick_clean_then_place_in_recep-Cup-None-MicrowaveType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"put a clean mug in the coffee machine.\"\n;; Official goal name: pick_clean_then_place_in_recep-Cup-None-FridgeType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n"]}, "train/pick_cool_then_place_in_recep-TomatoSliced-None-DiningTable-18/trial_T20190914_033809_050650": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\npick up knife , cut tomato , place into fridge , remove from fridge , place on table.\n;; PDDL guess 1 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut tomato , place into fridge , remove from fridge , place on table.\n;; PDDL guess 1 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut tomato , place into fridge , remove from fridge , place on table.\n;; PDDL guess 1 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut tomato , place into fridge , remove from fridge , place on table.\n;; PDDL guess 1 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut tomato , place into fridge , remove from fridge , place on table.\n;; PDDL guess 1 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut tomato , place into fridge , remove from fridge , place on table.\n;; PDDL guess 1 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut tomato , place into fridge , remove from fridge , place on table.\n;; PDDL guess 1 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut tomato , place into fridge , remove from fridge , place on table.\n;; PDDL guess 1 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut tomato , place into fridge , remove from fridge , place on table.\n;; PDDL guess 1 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut tomato , place into fridge , remove from fridge , place on table.\n;; PDDL guess 1 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.pick up knife , cut tomato , place into fridge , remove from fridge , place on table.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n", "\n;; PDDL guess 2 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n", "\n;; PDDL guess 3 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n", "\n;; PDDL guess 4 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n"]}, "train/look_at_obj_in_light-Laptop-None-DeskLamp-323/trial_T20190908_014226_839563": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine a notebook computer by the light of a lamp.\n;; PDDL guess 1 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a notebook computer by the light of a lamp.\n;; PDDL guess 1 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a notebook computer by the light of a lamp.\n;; PDDL guess 1 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a notebook computer by the light of a lamp.\n;; PDDL guess 1 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a notebook computer by the light of a lamp.\n;; PDDL guess 1 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a notebook computer by the light of a lamp.\n;; PDDL guess 1 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a notebook computer by the light of a lamp.\n;; PDDL guess 1 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a notebook computer by the light of a lamp.\n;; PDDL guess 1 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a notebook computer by the light of a lamp.\n;; PDDL guess 1 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a notebook computer by the light of a lamp.\n;; PDDL guess 1 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine a notebook computer by the light of a lamp.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 2 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 3 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 4 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n"]}, "train/look_at_obj_in_light-CellPhone-None-DeskLamp-318/trial_T20190909_005934_726946": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\npick up a smartphone , turn on a lamp.\n;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a smartphone , turn on a lamp.\n;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a smartphone , turn on a lamp.\n;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a smartphone , turn on a lamp.\n;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a smartphone , turn on a lamp.\n;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a smartphone , turn on a lamp.\n;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a smartphone , turn on a lamp.\n;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a smartphone , turn on a lamp.\n;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a smartphone , turn on a lamp.\n;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a smartphone , turn on a lamp.\n;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.pick up a smartphone , turn on a lamp.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n", "\n;; PDDL guess 2 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \npick-and-take-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?o - object)\n        (exists (?ot - object)\n            (and \n                (objectType ?o CellPhoneType)\n                (objectType ?ot DeskLampType)\n                (holds ?a ?o)\n                (atLocation ?a ?l)\n                (objectAtLocation ?ot ?l)\n            )\n))))\n", "\n;; PDDL guess 3 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \npick-and-take-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?o - object)\n        (exists (?ot - object)\n            (and \n                (objectType ?o CellPhoneType)\n                (objectType ?ot DeskLampType)\n                (holds ?a ?o)\n                (atLocation ?a ?l)\n                (objectAtLocation ?ot ?l)\n            )\n))))\n", "\n;; PDDL guess 4 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \npick-and-take-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?o - object)\n        (exists (?ot - object)\n            (and \n                (objectType ?o CellPhoneType)\n                (objectType ?ot DeskLampType)\n                (holds ?a ?o)\n                (atLocation ?a ?l)\n                (objectAtLocation ?ot ?l)\n            )\n))))\n"]}, "train/look_at_obj_in_light-KeyChain-None-FloorLamp-203/trial_T20190909_060210_354107": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\npick up the keys and then turn the lamp on behind the blue chair.\n;; PDDL guess 1 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the keys and then turn the lamp on behind the blue chair.\n;; PDDL guess 1 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the keys and then turn the lamp on behind the blue chair.\n;; PDDL guess 1 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the keys and then turn the lamp on behind the blue chair.\n;; PDDL guess 1 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the keys and then turn the lamp on behind the blue chair.\n;; PDDL guess 1 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the keys and then turn the lamp on behind the blue chair.\n;; PDDL guess 1 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the keys and then turn the lamp on behind the blue chair.\n;; PDDL guess 1 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the keys and then turn the lamp on behind the blue chair.\n;; PDDL guess 1 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the keys and then turn the lamp on behind the blue chair.\n;; PDDL guess 1 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the keys and then turn the lamp on behind the blue chair.\n;; PDDL guess 1 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.pick up the keys and then turn the lamp on behind the blue chair.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 2 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 3 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 4 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n"]}, "train/look_at_obj_in_light-Pillow-None-DeskLamp-314/trial_T20190908_115844_093537": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nlook at the pillow in the light.\n;; PDDL guess 1 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at the pillow in the light.\n;; PDDL guess 1 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at the pillow in the light.\n;; PDDL guess 1 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at the pillow in the light.\n;; PDDL guess 1 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at the pillow in the light.\n;; PDDL guess 1 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at the pillow in the light.\n;; PDDL guess 1 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at the pillow in the light.\n;; PDDL guess 1 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at the pillow in the light.\n;; PDDL guess 1 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at the pillow in the light.\n;; PDDL guess 1 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at the pillow in the light.\n;; PDDL guess 1 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.look at the pillow in the light.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n;; Official goal name: look_at_obj_in_light-Pillow-None-DeskLamp\n(:goal\n\t(and\n\t\t(objectType PillowType)\n\t\t(receptacleType DeskLampType)\n\t\t(objectAtLocation PillowType DeskLampType)\n\t\t(isToggled DeskLampType)\n\t\t(atLocation ?a - agent ?l - location)\n\t\t(holds ?a - agent PillowType)\n\t)\n)\n", "\n;; PDDL guess 2 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n;; Official goal name: look_at_obj_in_light-Pillow-None-DeskLamp\n(:goal\n\t(and\n\t\t(objectType PillowType)\n\t\t(receptacleType DeskLampType)\n\t\t(objectAtLocation PillowType DeskLampType)\n\t\t(isToggled DeskLampType)\n\t\t(atLocation ?a - agent ?l - location)\n\t\t(holds ?a - agent PillowType)\n\t)\n)\n", "\n;; PDDL guess 3 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n;; Official goal name: look_at_obj_in_light-Pillow-None-DeskLamp\n(:goal\n\t(and\n\t\t(objectType PillowType)\n\t\t(receptacleType DeskLampType)\n\t\t(objectAtLocation PillowType DeskLampType)\n\t\t(isToggled DeskLampType)\n\t\t(atLocation ?a - agent ?l - location)\n\t\t(holds ?a - agent PillowType)\n\t)\n)\n", "\n;; PDDL guess 4 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n;; Official goal name: look_at_obj_in_light-Pillow-None-DeskLamp\n(:goal\n\t(and\n\t\t(objectType PillowType)\n\t\t(receptacleType DeskLampType)\n\t\t(objectAtLocation PillowType DeskLampType)\n\t\t(isToggled DeskLampType)\n\t\t(atLocation ?a - agent ?l - location)\n\t\t(holds ?a - agent PillowType)\n\t)\n)\n"]}, "train/look_at_obj_in_light-Pen-None-FloorLamp-221/trial_T20190907_180910_112762": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine a pen by the light of a floor lamp.\n;; PDDL guess 1 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a floor lamp.\n;; PDDL guess 1 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a floor lamp.\n;; PDDL guess 1 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a floor lamp.\n;; PDDL guess 1 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a floor lamp.\n;; PDDL guess 1 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a floor lamp.\n;; PDDL guess 1 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a floor lamp.\n;; PDDL guess 1 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a floor lamp.\n;; PDDL guess 1 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a floor lamp.\n;; PDDL guess 1 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a floor lamp.\n;; PDDL guess 1 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine a pen by the light of a floor lamp.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n", "\n;; PDDL guess 2 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?o PenType)\n                (holds ?a ?o)\n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n            )\n    ))))))\n\n", "\n;; PDDL guess 3 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?o PenType)\n                (holds ?a ?o)\n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (atLocation ?a ?l)\n                (objectAtLocation ?ot ?l)\n            )\n    ))))))\n\n", "\n;; PDDL guess 4 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?o PenType)\n                (holds ?a ?o)\n                (atLocation ?a ?l)\n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n            )\n    ))))))\n\n"]}, "train/look_at_obj_in_light-Pillow-None-FloorLamp-212/trial_T20190907_163730_866373": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nturn on a lamp while holding a red cushion.\n;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on a lamp while holding a red cushion.\n;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on a lamp while holding a red cushion.\n;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on a lamp while holding a red cushion.\n;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on a lamp while holding a red cushion.\n;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on a lamp while holding a red cushion.\n;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on a lamp while holding a red cushion.\n;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on a lamp while holding a red cushion.\n;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on a lamp while holding a red cushion.\n;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on a lamp while holding a red cushion.\n;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.turn on a lamp while holding a red cushion.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'\n;; Official goal name: toggle_while_holding-LightSwitch-None-CushionType-8\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and\n                (objectType ?o CushionType)\n                (toggleable ?r)\n                (isOn ?r)\n                (objectType ?r LightSwitchType)\n                (atLocation ?a ?r)\n                (holds ?a ?o)\n            )\n        )\n    )\n)\n", "\n;; PDDL guess 2 for 'turn on a lamp while holding a red cushion.'\n;; Official goal name: toggle_while_holding-LightSwitch-None-CushionType-8\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and\n                (objectType ?o CushionType)\n                (toggleable ?r)\n                (isOn ?r)\n                (objectType ?r LightSwitchType)\n                (atLocation ?a ?r)\n                (holds ?a ?o)\n            )\n        )\n    )\n)\n", "\n;; PDDL guess 3 for 'turn on a lamp while holding a red cushion.'\n;; Official goal name: toggle_while_holding-LightSwitch-None-CushionType-8\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and\n                (objectType ?o CushionType)\n                (toggleable ?r)\n                (isOn ?r)\n                (objectType ?r LightSwitchType)\n                (atLocation ?a ?r)\n                (holds ?a ?o)\n            )\n        )\n    )\n)\n", "\n;; PDDL guess 4 for 'turn on a lamp while holding a red cushion.'\n;; Official goal name: toggle_while_holding-LightSwitch-None-CushionType-8\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and\n                (objectType ?o CushionType)\n                (toggleable ?r)\n                (isOn ?r)\n                (objectType ?r LightSwitchType)\n                (atLocation ?a ?r)\n                (holds ?a ?o)\n            )\n        )\n    )\n)\n"]}, "train/look_at_obj_in_light-KeyChain-None-FloorLamp-223/trial_T20190909_110146_114031": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nturn on the lamp while holding the keys.\n;; PDDL guess 1 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp while holding the keys.\n;; PDDL guess 1 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp while holding the keys.\n;; PDDL guess 1 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp while holding the keys.\n;; PDDL guess 1 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp while holding the keys.\n;; PDDL guess 1 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp while holding the keys.\n;; PDDL guess 1 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp while holding the keys.\n;; PDDL guess 1 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp while holding the keys.\n;; PDDL guess 1 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp while holding the keys.\n;; PDDL guess 1 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp while holding the keys.\n;; PDDL guess 1 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.turn on the lamp while holding the keys.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 2 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 3 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 4 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n"]}, "train/pick_heat_then_place_in_recep-Apple-None-GarbageCan-12/trial_T20190908_172302_166350": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a warmed apple in the trash can.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"put a warmed apple in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-Apple-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for \"put a warmed apple in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-Pear-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PearType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"put a warmed apple in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-Peach-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PeachType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"put a warmed apple in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-Banana-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BananaType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n"]}, "train/pick_heat_then_place_in_recep-Mug-None-CoffeeMachine-7/trial_T20190908_123421_558588": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a heated coffee mug in a coffeemaker.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"place a heated coffee mug in a coffeemaker.\"\n;; Official goal name: pick_heat_then_place_in_recept-CoffeeMug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CoffeeMugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for \"place a heated coffee mug in a coffeemaker.\"\n;; Official goal name: pick_heat_then_place_in_recept-CoffeeCup-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CoffeeCupType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"place a heated coffee mug in a coffeemaker.\"\n;; Official goal name: pick_heat_then_place_in_recept-Mug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"place a heated coffee mug in a coffeemaker.\"\n;; Official goal name: pick_heat_then_place_in_recept-TravelMug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TravelMugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n"]}, "train/pick_cool_then_place_in_recep-Apple-None-Microwave-12/trial_T20190911_003046_688848": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a cold apple in the microwave.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"put a cold apple in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-Apple-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n", "\n;; PDDL guess 2 for \"put a cold apple in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-Pear-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PearType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n", "\n;; PDDL guess 3 for \"put a cold apple in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-Orange-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o OrangeType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n", "\n;; PDDL guess 4 for \"put a cold apple in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-Banana-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BananaType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n"]}, "train/pick_clean_then_place_in_recep-ButterKnife-None-Drawer-30/trial_T20190908_051931_072703": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put the clean knife in the cabinet drawer.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: pick_clean_then_place_in_recep-Knife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: pick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: pick_clean_then_place_in_recep-SpoonType-None-DrawerType\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: pick_clean_then_place_in_recep-ForkType-None-DrawerType\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n"]}, "train/pick_cool_then_place_in_recep-WineBottle-None-Cabinet-16/trial_T20190907_084106_624638": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput chilled wine in the cabinet.\n;; PDDL guess 1 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput chilled wine in the cabinet.\n;; PDDL guess 1 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput chilled wine in the cabinet.\n;; PDDL guess 1 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput chilled wine in the cabinet.\n;; PDDL guess 1 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput chilled wine in the cabinet.\n;; PDDL guess 1 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput chilled wine in the cabinet.\n;; PDDL guess 1 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput chilled wine in the cabinet.\n;; PDDL guess 1 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput chilled wine in the cabinet.\n;; PDDL guess 1 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput chilled wine in the cabinet.\n;; PDDL guess 1 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput chilled wine in the cabinet.\n;; PDDL guess 1 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put chilled wine in the cabinet.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"put chilled wine in the cabinet.\"\n;; Official goal name: pick_cool_then_place_in_recep-WineBottle-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n", "\n;; PDDL guess 2 for \"put chilled wine in the cabinet.\"\n;; Official goal name: pick_cool_then_place_in_recep-BeerBottle-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BeerBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n", "\n;; PDDL guess 3 for \"put chilled wine in the cabinet.\"\n;; Official goal name: pick_cool_then_place_in_recep-SodaCan-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SodaCanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n", "\n;; PDDL guess 4 for \"put chilled wine in the cabinet.\"\n;; Official goal name: pick_cool_then_place_in_recep-WaterBottle-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WaterBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n"]}, "train/pick_clean_then_place_in_recep-ButterKnife-None-Drawer-2/trial_T20190908_044255_995925": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a rinsed knife in a drawer.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"place a rinsed knife in a drawer.\"\n;; Official goal name: pick_and_place_cleaned-ButterKnife-None-DrawerType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n", "\n;; PDDL guess 2 for \"place a rinsed knife in a drawer.\"\n;; Official goal name: pick_and_place_cleaned-KnifeType-None-DrawerType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n", "\n;; PDDL guess 3 for \"place a rinsed knife in a drawer.\"\n;; Official goal name: pick_and_place_cleaned-PenType-None-DrawerType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n", "\n;; PDDL guess 4 for \"place a rinsed knife in a drawer.\"\n;; Official goal name: pick_and_place_cleaned-SpoonType-None-DrawerType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n"]}, "train/pick_clean_then_place_in_recep-Pan-None-StoveBurner-2/trial_T20190906_215744_388781": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a clean pan on the electric cooker.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n", "\n;; PDDL guess 2 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n", "\n;; PDDL guess 3 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n", "\n;; PDDL guess 4 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n"]}, "train/look_at_obj_in_light-CD-None-DeskLamp-302/trial_T20190907_154604_364291": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine the cd under the light of the table lamp.\n;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the cd under the light of the table lamp.\n;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the cd under the light of the table lamp.\n;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the cd under the light of the table lamp.\n;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the cd under the light of the table lamp.\n;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the cd under the light of the table lamp.\n;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the cd under the light of the table lamp.\n;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the cd under the light of the table lamp.\n;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the cd under the light of the table lamp.\n;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the cd under the light of the table lamp.\n;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine the cd under the light of the table lamp.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'\n;; Official goal name: look_at_obj_in_light-CD-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 2 for 'examine the cd under the light of the table lamp.'\n;; Official goal name: look_at_obj_in_light-CD-None-FloorLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 3 for 'examine the cd under the light of the table lamp.'\n;; Official goal name: look_at_obj_in_light-CD-None-Tablet\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot TabletType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 4 for 'examine the cd under the light of the table lamp.'\n;; Official goal name: look_at_obj_in_light-CD-None-Desk\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n"]}, "train/pick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan-19/trial_T20190908_224803_743034": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a chilled slice of tomato into a bin.\n;; PDDL guess 1 for 'place a chilled slice of tomato into a bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled slice of tomato into a bin.\n;; PDDL guess 1 for 'place a chilled slice of tomato into a bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled slice of tomato into a bin.\n;; PDDL guess 1 for 'place a chilled slice of tomato into a bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled slice of tomato into a bin.\n;; PDDL guess 1 for 'place a chilled slice of tomato into a bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled slice of tomato into a bin.\n;; PDDL guess 1 for 'place a chilled slice of tomato into a bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled slice of tomato into a bin.\n;; PDDL guess 1 for 'place a chilled slice of tomato into a bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled slice of tomato into a bin.\n;; PDDL guess 1 for 'place a chilled slice of tomato into a bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled slice of tomato into a bin.\n;; PDDL guess 1 for 'place a chilled slice of tomato into a bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled slice of tomato into a bin.\n;; PDDL guess 1 for 'place a chilled slice of tomato into a bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled slice of tomato into a bin.\n;; PDDL guess 1 for 'place a chilled slice of tomato into a bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a chilled slice of tomato into a bin.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"place a chilled slice of tomato into a bin.\"\n;; Official goal name: pick_and_place_sliced-Coolable:Yes_tomato-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 2 for \"place a chilled slice of tomato into a bin.\"\n;; Official goal name: pick_and_place_sliced-Coolable:Yes_tomato-None-WasteBasket\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r WasteBasketType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 3 for \"place a chilled slice of tomato into a bin.\"\n;; Official goal name: pick_and_place_sliced-Coolable:Yes_tomato-None-TrashCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r TrashCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 4 for \"place a chilled slice of tomato into a bin.\"\n;; Official goal name: pick_and_place_sliced-Coolable:Yes_tomato-None-WasteBin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r WasteBinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (isSliced ?o)  \n            )\n    )))\n"]}, "train/pick_cool_then_place_in_recep-AppleSliced-None-GarbageCan-19/trial_T20190909_111859_174743": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nthrow away a chilled apple slice.\n;; PDDL guess 1 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a chilled apple slice.\n;; PDDL guess 1 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a chilled apple slice.\n;; PDDL guess 1 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a chilled apple slice.\n;; PDDL guess 1 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a chilled apple slice.\n;; PDDL guess 1 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a chilled apple slice.\n;; PDDL guess 1 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a chilled apple slice.\n;; PDDL guess 1 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a chilled apple slice.\n;; PDDL guess 1 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a chilled apple slice.\n;; PDDL guess 1 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a chilled apple slice.\n;; PDDL guess 1 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.throw away a chilled apple slice.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"throw away a chilled apple slice.\"\n;; Official goal name: pick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 2 for \"throw away a chilled apple slice.\"\n;; Official goal name: pick_cool_then_place_in_recep-PearSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PearType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 3 for \"throw away a chilled apple slice.\"\n;; Official goal name: pick_cool_then_place_in_recep-OrangeSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o OrangeType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 4 for \"throw away a chilled apple slice.\"\n;; Official goal name: pick_cool_then_place_in_recep-StrawberrySliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o StrawberryType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"]}, "train/pick_heat_then_place_in_recep-PotatoSliced-None-Fridge-18/trial_T20190912_110736_098163": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nslice a potato , cook it in the microwave , and put it in the refrigerator.\n;; PDDL guess 1 for 'slice a potato , cook it in the microwave , and put it in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato , cook it in the microwave , and put it in the refrigerator.\n;; PDDL guess 1 for 'slice a potato , cook it in the microwave , and put it in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato , cook it in the microwave , and put it in the refrigerator.\n;; PDDL guess 1 for 'slice a potato , cook it in the microwave , and put it in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato , cook it in the microwave , and put it in the refrigerator.\n;; PDDL guess 1 for 'slice a potato , cook it in the microwave , and put it in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato , cook it in the microwave , and put it in the refrigerator.\n;; PDDL guess 1 for 'slice a potato , cook it in the microwave , and put it in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato , cook it in the microwave , and put it in the refrigerator.\n;; PDDL guess 1 for 'slice a potato , cook it in the microwave , and put it in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato , cook it in the microwave , and put it in the refrigerator.\n;; PDDL guess 1 for 'slice a potato , cook it in the microwave , and put it in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato , cook it in the microwave , and put it in the refrigerator.\n;; PDDL guess 1 for 'slice a potato , cook it in the microwave , and put it in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato , cook it in the microwave , and put it in the refrigerator.\n;; PDDL guess 1 for 'slice a potato , cook it in the microwave , and put it in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato , cook it in the microwave , and put it in the refrigerator.\n;; PDDL guess 1 for 'slice a potato , cook it in the microwave , and put it in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.slice a potato , cook it in the microwave , and put it in the refrigerator.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"slice a potato , cook it in the microwave , and put it in the refrigerator.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType)\n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)\n                (heatable ?o)\n                (isHot ?o)\n            )\n    )))\n", "\n;; PDDL guess 2 for \"slice a potato , cook it in the microwave , and put it in the refrigerator.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType)\n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)\n                (heatable ?o)\n                (isHot ?o)\n            )\n    )))\n", "\n;; PDDL guess 3 for \"slice a potato , cook it in the microwave , and put it in the refrigerator.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType)\n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)\n                (heatable ?o)\n                (isHot ?o)\n            )\n    )))\n", "\n;; PDDL guess 4 for \"slice a potato , cook it in the microwave , and put it in the refrigerator.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType)\n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)\n                (heatable ?o)\n                (isHot ?o)\n            )\n    )))\n"]}, "train/look_at_obj_in_light-Plate-None-FloorLamp-211/trial_T20190907_131058_267698": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine the plate under the light of the lamp.\n;; PDDL guess 1 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the plate under the light of the lamp.\n;; PDDL guess 1 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the plate under the light of the lamp.\n;; PDDL guess 1 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the plate under the light of the lamp.\n;; PDDL guess 1 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the plate under the light of the lamp.\n;; PDDL guess 1 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the plate under the light of the lamp.\n;; PDDL guess 1 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the plate under the light of the lamp.\n;; PDDL guess 1 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the plate under the light of the lamp.\n;; PDDL guess 1 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the plate under the light of the lamp.\n;; PDDL guess 1 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the plate under the light of the lamp.\n;; PDDL guess 1 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine the plate under the light of the lamp.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n", "\n;; PDDL guess 2 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n", "\n;; PDDL guess 3 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-TableLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot TableLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n", "\n;; PDDL guess 4 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-BedLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot BedLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n"]}, "train/pick_and_place_simple-Vase-None-Safe-204/trial_T20190919_000336_714640": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a blue vase in the safe on the floor.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n", "\n;; PDDL guess 2 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal:\npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n", "\n;; PDDL guess 3 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal:\npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n", "\n;; PDDL guess 4 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n"]}, "train/pick_cool_then_place_in_recep-TomatoSliced-None-Microwave-12/trial_T20190908_165447_696883": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput the chilled tomato in the microwave.\n;; PDDL guess 1 for 'put the chilled tomato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled tomato in the microwave.\n;; PDDL guess 1 for 'put the chilled tomato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled tomato in the microwave.\n;; PDDL guess 1 for 'put the chilled tomato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled tomato in the microwave.\n;; PDDL guess 1 for 'put the chilled tomato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled tomato in the microwave.\n;; PDDL guess 1 for 'put the chilled tomato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled tomato in the microwave.\n;; PDDL guess 1 for 'put the chilled tomato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled tomato in the microwave.\n;; PDDL guess 1 for 'put the chilled tomato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled tomato in the microwave.\n;; PDDL guess 1 for 'put the chilled tomato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled tomato in the microwave.\n;; PDDL guess 1 for 'put the chilled tomato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled tomato in the microwave.\n;; PDDL guess 1 for 'put the chilled tomato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put the chilled tomato in the microwave.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"put the chilled tomato in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n", "\n;; PDDL guess 2 for \"put the chilled tomato in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n", "\n;; PDDL guess 3 for \"put the chilled tomato in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n", "\n;; PDDL guess 4 for \"put the chilled tomato in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n"]}, "train/pick_cool_then_place_in_recep-Mug-None-CoffeeMachine-6/trial_T20190906_204029_896727": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.to place a chilled mug in the coffee maker.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n", "\n;; PDDL guess 2 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n", "\n;; PDDL guess 3 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n", "\n;; PDDL guess 4 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n"]}, "train/look_at_obj_in_light-Pen-None-DeskLamp-327/trial_T20190909_020734_953975": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\npick up the pen from the dresser and turn the lamp on.\n;; PDDL guess 1 for 'pick up the pen from the dresser and turn the lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the pen from the dresser and turn the lamp on.\n;; PDDL guess 1 for 'pick up the pen from the dresser and turn the lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the pen from the dresser and turn the lamp on.\n;; PDDL guess 1 for 'pick up the pen from the dresser and turn the lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the pen from the dresser and turn the lamp on.\n;; PDDL guess 1 for 'pick up the pen from the dresser and turn the lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the pen from the dresser and turn the lamp on.\n;; PDDL guess 1 for 'pick up the pen from the dresser and turn the lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the pen from the dresser and turn the lamp on.\n;; PDDL guess 1 for 'pick up the pen from the dresser and turn the lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the pen from the dresser and turn the lamp on.\n;; PDDL guess 1 for 'pick up the pen from the dresser and turn the lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the pen from the dresser and turn the lamp on.\n;; PDDL guess 1 for 'pick up the pen from the dresser and turn the lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the pen from the dresser and turn the lamp on.\n;; PDDL guess 1 for 'pick up the pen from the dresser and turn the lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the pen from the dresser and turn the lamp on.\n;; PDDL guess 1 for 'pick up the pen from the dresser and turn the lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.pick up the pen from the dresser and turn the lamp on.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"pick up the pen from the dresser and turn the lamp on.\"\n;; Official goal name: look_at_obj_in_light-Pen-None-DeskLampType\n\n(:goal\n        (exists (?a - agent)\n        (exists (?o - object)\n        (exists (?ot - object)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n)))\n", "\n;; PDDL guess 2 for \"pick up the pen from the dresser and turn the lamp on.\"\n;; Official goal name: look_at_obj_in_light-Pen-None-DeskLampType\n\n(:goal\n        (exists (?a - agent)\n        (exists (?o - object)\n        (exists (?ot - object)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n)))\n", "\n;; PDDL guess 3 for \"pick up the pen from the dresser and turn the lamp on.\"\n;; Official goal name: look_at_obj_in_light-Pen-None-DeskLampType\n\n(:goal\n        (exists (?a - agent)\n        (exists (?o - object)\n        (exists (?ot - object)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n)))\n", "\n;; PDDL guess 4 for \"pick up the pen from the dresser and turn the lamp on.\"\n;; Official goal name: look_at_obj_in_light-Pen-None-DeskLampType\n\n(:goal\n        (exists (?a - agent)\n        (exists (?o - object)\n        (exists (?ot - object)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n)))\n"]}, "train/pick_heat_then_place_in_recep-Mug-None-CoffeeMachine-13/trial_T20190908_092542_043460": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a heated mug on a coffee maker.\n;; PDDL guess 1 for 'place a heated mug on a coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated mug on a coffee maker.\n;; PDDL guess 1 for 'place a heated mug on a coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated mug on a coffee maker.\n;; PDDL guess 1 for 'place a heated mug on a coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated mug on a coffee maker.\n;; PDDL guess 1 for 'place a heated mug on a coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated mug on a coffee maker.\n;; PDDL guess 1 for 'place a heated mug on a coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated mug on a coffee maker.\n;; PDDL guess 1 for 'place a heated mug on a coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated mug on a coffee maker.\n;; PDDL guess 1 for 'place a heated mug on a coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated mug on a coffee maker.\n;; PDDL guess 1 for 'place a heated mug on a coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated mug on a coffee maker.\n;; PDDL guess 1 for 'place a heated mug on a coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated mug on a coffee maker.\n;; PDDL guess 1 for 'place a heated mug on a coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a heated mug on a coffee maker.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"place a heated mug on a coffee maker.\"\n;; Official goal name: pick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for \"place a heated mug on a coffee maker.\"\n;; Official goal name: pick_heat_then_place_in_recep-CoffeeCup-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CoffeeCupType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"place a heated mug on a coffee maker.\"\n;; Official goal name: pick_heat_then_place_in_recep-TeaMug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TeaMugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"place a heated mug on a coffee maker.\"\n;; Official goal name: pick_heat_then_place_in_recep-CoffeeMug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CoffeeMugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n"]}, "train/pick_and_place_simple-TomatoSliced-None-SideTable-3/trial_T20190908_091615_973891": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nslice a tomato that is on the microwave stand.\n;; PDDL guess 1 for 'slice a tomato that is on the microwave stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato that is on the microwave stand.\n;; PDDL guess 1 for 'slice a tomato that is on the microwave stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato that is on the microwave stand.\n;; PDDL guess 1 for 'slice a tomato that is on the microwave stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato that is on the microwave stand.\n;; PDDL guess 1 for 'slice a tomato that is on the microwave stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato that is on the microwave stand.\n;; PDDL guess 1 for 'slice a tomato that is on the microwave stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato that is on the microwave stand.\n;; PDDL guess 1 for 'slice a tomato that is on the microwave stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato that is on the microwave stand.\n;; PDDL guess 1 for 'slice a tomato that is on the microwave stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato that is on the microwave stand.\n;; PDDL guess 1 for 'slice a tomato that is on the microwave stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato that is on the microwave stand.\n;; PDDL guess 1 for 'slice a tomato that is on the microwave stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato that is on the microwave stand.\n;; PDDL guess 1 for 'slice a tomato that is on the microwave stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.slice a tomato that is on the microwave stand.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"slice a tomato that is on the microwave stand.\"\n;; Official goal name: pick_and_place_simple-TomatoSliced-None-SideTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 2 for \"slice a tomato that is on the microwave stand.\"\n;; Official goal name: pick_and_place_simple-Knife-None-SideTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 3 for \"slice a tomato that is on the microwave stand.\"\n;; Official goal name: pick_and_place_simple-TomatoSliced-None-CoffeeTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 4 for \"slice a tomato that is on the microwave stand.\"\n;; Official goal name: pick_and_place_simple-TomatoSliced-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"]}, "train/look_at_obj_in_light-Pen-None-DeskLamp-305/trial_T20190907_115824_746935": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine a pen next to the light of a lamp.\n;; PDDL guess 1 for 'examine a pen next to the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen next to the light of a lamp.\n;; PDDL guess 1 for 'examine a pen next to the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen next to the light of a lamp.\n;; PDDL guess 1 for 'examine a pen next to the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen next to the light of a lamp.\n;; PDDL guess 1 for 'examine a pen next to the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen next to the light of a lamp.\n;; PDDL guess 1 for 'examine a pen next to the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen next to the light of a lamp.\n;; PDDL guess 1 for 'examine a pen next to the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen next to the light of a lamp.\n;; PDDL guess 1 for 'examine a pen next to the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen next to the light of a lamp.\n;; PDDL guess 1 for 'examine a pen next to the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen next to the light of a lamp.\n;; PDDL guess 1 for 'examine a pen next to the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen next to the light of a lamp.\n;; PDDL guess 1 for 'examine a pen next to the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine a pen next to the light of a lamp.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"examine a pen next to the light of a lamp.\"\n;; Official goal name: look_at_obj_in_light-Pen-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 2 for \"examine a pen next to the light of a lamp.\"\n;; Official goal name: look_at_obj_in_light-Pen-None-FloorLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 3 for \"examine a pen next to the light of a lamp.\"\n;; Official goal name: look_at_obj_in_light-Pen-None-TableLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot TableLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 4 for \"examine a pen next to the light of a lamp.\"\n;; Official goal name: look_at_obj_in_light-Pen-None-BedsideLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot BedsideLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n"]}, "train/pick_clean_then_place_in_recep-Spatula-None-CounterTop-30/trial_T20190909_050831_328612": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nreturn a washed spatula to a kitchen counter.\n;; PDDL guess 1 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nreturn a washed spatula to a kitchen counter.\n;; PDDL guess 1 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nreturn a washed spatula to a kitchen counter.\n;; PDDL guess 1 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nreturn a washed spatula to a kitchen counter.\n;; PDDL guess 1 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nreturn a washed spatula to a kitchen counter.\n;; PDDL guess 1 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nreturn a washed spatula to a kitchen counter.\n;; PDDL guess 1 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nreturn a washed spatula to a kitchen counter.\n;; PDDL guess 1 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nreturn a washed spatula to a kitchen counter.\n;; PDDL guess 1 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nreturn a washed spatula to a kitchen counter.\n;; PDDL guess 1 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nreturn a washed spatula to a kitchen counter.\n;; PDDL guess 1 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.return a washed spatula to a kitchen counter.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"return a washed spatula to a kitchen counter.\"\n;; Official goal name: pick_clean_then_place_in_recep-Spatula-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n", "\n;; PDDL guess 2 for \"return a washed spatula to a kitchen counter.\"\n;; Official goal name: pick_clean_then_place_in_recep-Spatula-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n", "\n;; PDDL guess 3 for \"return a washed spatula to a kitchen counter.\"\n;; Official goal name: pick_clean_then_place_in_recep-Spatula-None-KitchenIslandType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r KitchenIslandType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n", "\n;; PDDL guess 4 for \"return a washed spatula to a kitchen counter.\"\n;; Official goal name: pick_clean_then_place_in_recep-Spatula-None-SinkBasinType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n"]}, "train/look_at_obj_in_light-Pillow-None-DeskLamp-305/trial_T20190909_110717_764199": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nlook at a striped pillow under a lit lamp.\n;; PDDL guess 1 for 'look at a striped pillow under a lit lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at a striped pillow under a lit lamp.\n;; PDDL guess 1 for 'look at a striped pillow under a lit lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at a striped pillow under a lit lamp.\n;; PDDL guess 1 for 'look at a striped pillow under a lit lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at a striped pillow under a lit lamp.\n;; PDDL guess 1 for 'look at a striped pillow under a lit lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at a striped pillow under a lit lamp.\n;; PDDL guess 1 for 'look at a striped pillow under a lit lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at a striped pillow under a lit lamp.\n;; PDDL guess 1 for 'look at a striped pillow under a lit lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at a striped pillow under a lit lamp.\n;; PDDL guess 1 for 'look at a striped pillow under a lit lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at a striped pillow under a lit lamp.\n;; PDDL guess 1 for 'look at a striped pillow under a lit lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at a striped pillow under a lit lamp.\n;; PDDL guess 1 for 'look at a striped pillow under a lit lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at a striped pillow under a lit lamp.\n;; PDDL guess 1 for 'look at a striped pillow under a lit lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.look at a striped pillow under a lit lamp.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'look at a striped pillow under a lit lamp.'\n;; Official goal name: look_at_obj_in_light-Pillow-None-DeskLamp\n(:goal \n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?o PillowType)\n                (objectAtLocation ?o ?l)\n                (atLocation ?a ?l)\n                (objectType ?ot DeskLampType)\n                (isOn ?ot)\n                (objectAtLocation ?ot ?l)\n                (isLit ?ot)\n            )\n    ))))))\n", "\n;; PDDL guess 2 for 'look at a striped pillow under a lit lamp.'\n;; Official goal name: look_at_obj_in_light-Pillow-None-DeskLamp\n(:goal \n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?o PillowType)\n                (objectAtLocation ?o ?l)\n                (atLocation ?a ?l)\n                (objectType ?ot DeskLampType)\n                (isOn ?ot)\n                (objectAtLocation ?ot ?l)\n                (isLit ?ot)\n            )\n    ))))))\n", "\n;; PDDL guess 3 for 'look at a striped pillow under a lit lamp.'\n;; Official goal name: look_at_obj_in_light-Pillow-None-DeskLamp\n(:goal \n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?o PillowType)\n                (objectAtLocation ?o ?l)\n                (atLocation ?a ?l)\n                (objectType ?ot DeskLampType)\n                (isOn ?ot)\n                (objectAtLocation ?ot ?l)\n                (isLit ?ot)\n            )\n    ))))))\n", "\n;; PDDL guess 4 for 'look at a striped pillow under a lit lamp.'\n;; Official goal name: look_at_obj_in_light-Pillow-None-DeskLamp\n(:goal \n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?o PillowType)\n                (objectAtLocation ?o ?l)\n                (atLocation ?a ?l)\n                (objectType ?ot DeskLampType)\n                (isOn ?ot)\n                (objectAtLocation ?ot ?l)\n                (isLit ?ot)\n            )\n    ))))))\n"]}, "train/look_at_obj_in_light-AlarmClock-None-DeskLamp-309/trial_T20190908_062755_880343": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine an alarm clock by the light of a table lamp.\n;; PDDL guess 1 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine an alarm clock by the light of a table lamp.\n;; PDDL guess 1 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine an alarm clock by the light of a table lamp.\n;; PDDL guess 1 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine an alarm clock by the light of a table lamp.\n;; PDDL guess 1 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine an alarm clock by the light of a table lamp.\n;; PDDL guess 1 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine an alarm clock by the light of a table lamp.\n;; PDDL guess 1 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine an alarm clock by the light of a table lamp.\n;; PDDL guess 1 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine an alarm clock by the light of a table lamp.\n;; PDDL guess 1 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine an alarm clock by the light of a table lamp.\n;; PDDL guess 1 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine an alarm clock by the light of a table lamp.\n;; PDDL guess 1 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine an alarm clock by the light of a table lamp.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"examine an alarm clock by the light of a table lamp.\"\n;; Official goal name: look_at_obj_in_light-AlarmClock-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 2 for \"examine an alarm clock by the light of a table lamp.\"\n;; Official goal name: look_at_obj_in_light-AlarmClock-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 3 for \"examine an alarm clock by the light of a table lamp.\"\n;; Official goal name: look_at_obj_in_light-AlarmClock-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 4 for \"examine an alarm clock by the light of a table lamp.\"\n;; Official goal name: look_at_obj_in_light-AlarmClock-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n"]}, "train/pick_cool_then_place_in_recep-Cup-None-SinkBasin-12/trial_T20190906_180434_894600": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put the chilled glass in the sink.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Glass-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Glass-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n"]}, "train/look_at_obj_in_light-Pencil-None-DeskLamp-306/trial_T20190907_235854_062993": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\ncarry a pencil while turning on a lamp.\n;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ncarry a pencil while turning on a lamp.\n;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ncarry a pencil while turning on a lamp.\n;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ncarry a pencil while turning on a lamp.\n;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ncarry a pencil while turning on a lamp.\n;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ncarry a pencil while turning on a lamp.\n;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ncarry a pencil while turning on a lamp.\n;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ncarry a pencil while turning on a lamp.\n;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ncarry a pencil while turning on a lamp.\n;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ncarry a pencil while turning on a lamp.\n;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.carry a pencil while turning on a lamp.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 2 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 3 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 4 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n"]}, "train/pick_heat_then_place_in_recep-Egg-None-Fridge-20/trial_T20190907_224507_776787": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.warm up an egg to put in the fridge.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"warm up an egg to put in the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-Egg-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n)))\n", "\n;; PDDL guess 2 for \"warm up an egg to put in the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n)))\n", "\n;; PDDL guess 3 for \"warm up an egg to put in the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-Apple-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n)))\n", "\n;; PDDL guess 4 for \"warm up an egg to put in the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-Tomato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n)))\n"]}, "train/pick_heat_then_place_in_recep-BreadSliced-None-SideTable-28/trial_T20190907_180304_503402": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nslice a loaf of bread with a knife , cook it in a microwave put it the small brown table.\n;; PDDL guess 1 for 'slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a loaf of bread with a knife , cook it in a microwave put it the small brown table.\n;; PDDL guess 1 for 'slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a loaf of bread with a knife , cook it in a microwave put it the small brown table.\n;; PDDL guess 1 for 'slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a loaf of bread with a knife , cook it in a microwave put it the small brown table.\n;; PDDL guess 1 for 'slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a loaf of bread with a knife , cook it in a microwave put it the small brown table.\n;; PDDL guess 1 for 'slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a loaf of bread with a knife , cook it in a microwave put it the small brown table.\n;; PDDL guess 1 for 'slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a loaf of bread with a knife , cook it in a microwave put it the small brown table.\n;; PDDL guess 1 for 'slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a loaf of bread with a knife , cook it in a microwave put it the small brown table.\n;; PDDL guess 1 for 'slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a loaf of bread with a knife , cook it in a microwave put it the small brown table.\n;; PDDL guess 1 for 'slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a loaf of bread with a knife , cook it in a microwave put it the small brown table.\n;; PDDL guess 1 for 'slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"slice a loaf of bread with a knife, cook it in a microwave, put it on the small brown table.\"\n;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-SideTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)\n                (heatable ?o)\n                (isHot ?o)\n            )\n    )))\n", "\n;; PDDL guess 2 for \"slice a loaf of bread with a knife, cook it in a microwave, put it on the small brown table.\"\n;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-CoffeeTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)\n                (heatable ?o)\n                (isHot ?o)\n            )\n    )))\n", "\n;; PDDL guess 3 for \"slice a loaf of bread with a knife, cook it in a microwave, put it on the small brown table.\"\n;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)\n                (heatable ?o)\n                (isHot ?o)\n            )\n    )))\n", "\n;; PDDL guess 4 for \"slice a loaf of bread with a knife, cook it in a microwave, put it on the small brown table.\"\n;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-Desk\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)\n                (heatable ?o)\n                (isHot ?o)\n            )\n    )))\n"]}, "train/pick_clean_then_place_in_recep-SoapBar-None-Cabinet-418/trial_T20190907_035143_529621": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place wet soap in a cabinet.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"place wet soap in a cabinet.\"\n;; Official goal name: pick_clean_then_place_in_recep-SoapBar-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for \"place wet soap in a cabinet.\"\n;; Official goal name: pick_clean_then_place_in_recep-SoapBar-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"place wet soap in a cabinet.\"\n;; Official goal name: pick_clean_then_place_in_recep-SoapBar-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"place wet soap in a cabinet.\"\n;; Official goal name: pick_clean_then_place_in_recep-SoapBar-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n"]}, "train/pick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin-1/trial_T20190909_120859_255584": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a cooked slice of potato in the middle of the sink.\n;; PDDL guess 1 for 'put a cooked slice of potato in the middle of the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked slice of potato in the middle of the sink.\n;; PDDL guess 1 for 'put a cooked slice of potato in the middle of the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked slice of potato in the middle of the sink.\n;; PDDL guess 1 for 'put a cooked slice of potato in the middle of the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked slice of potato in the middle of the sink.\n;; PDDL guess 1 for 'put a cooked slice of potato in the middle of the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked slice of potato in the middle of the sink.\n;; PDDL guess 1 for 'put a cooked slice of potato in the middle of the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked slice of potato in the middle of the sink.\n;; PDDL guess 1 for 'put a cooked slice of potato in the middle of the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked slice of potato in the middle of the sink.\n;; PDDL guess 1 for 'put a cooked slice of potato in the middle of the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked slice of potato in the middle of the sink.\n;; PDDL guess 1 for 'put a cooked slice of potato in the middle of the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked slice of potato in the middle of the sink.\n;; PDDL guess 1 for 'put a cooked slice of potato in the middle of the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked slice of potato in the middle of the sink.\n;; PDDL guess 1 for 'put a cooked slice of potato in the middle of the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a cooked slice of potato in the middle of the sink.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"put a cooked slice of potato in the middle of the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 2 for \"put a cooked slice of potato in the middle of the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSlice-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 3 for \"put a cooked slice of potato in the middle of the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-CarrotSlice-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CarrotType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n", "\n;; PDDL guess 4 for \"put a cooked slice of potato in the middle of the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-OnionSlice-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o OnionType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"]}, "train/pick_heat_then_place_in_recep-Egg-None-GarbageCan-5/trial_T20190906_190505_376018": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a heated egg in the trash can.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"put a heated egg in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-Egg-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for \"put a heated egg in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-Egg-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"put a heated egg in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-Egg-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"put a heated egg in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-Egg-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n"]}, "train/pick_and_place_simple-TomatoSliced-None-SideTable-3/trial_T20190908_091633_587949": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nremove the tomato from the fridge and cut it up on the table.\n;; PDDL guess 1 for 'remove the tomato from the fridge and cut it up on the table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nremove the tomato from the fridge and cut it up on the table.\n;; PDDL guess 1 for 'remove the tomato from the fridge and cut it up on the table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nremove the tomato from the fridge and cut it up on the table.\n;; PDDL guess 1 for 'remove the tomato from the fridge and cut it up on the table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nremove the tomato from the fridge and cut it up on the table.\n;; PDDL guess 1 for 'remove the tomato from the fridge and cut it up on the table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nremove the tomato from the fridge and cut it up on the table.\n;; PDDL guess 1 for 'remove the tomato from the fridge and cut it up on the table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nremove the tomato from the fridge and cut it up on the table.\n;; PDDL guess 1 for 'remove the tomato from the fridge and cut it up on the table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nremove the tomato from the fridge and cut it up on the table.\n;; PDDL guess 1 for 'remove the tomato from the fridge and cut it up on the table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nremove the tomato from the fridge and cut it up on the table.\n;; PDDL guess 1 for 'remove the tomato from the fridge and cut it up on the table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nremove the tomato from the fridge and cut it up on the table.\n;; PDDL guess 1 for 'remove the tomato from the fridge and cut it up on the table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nremove the tomato from the fridge and cut it up on the table.\n;; PDDL guess 1 for 'remove the tomato from the fridge and cut it up on the table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.remove the tomato from the fridge and cut it up on the table.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"remove the tomato from the fridge and cut it up on the table.\"\n;; Official goal name: pick_and_slice-Tomato-None-SideTable\n(:goal\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType)\n                (inReceptacle ?o Fridge1) \n                (isSliced ?o)\n            )\n))\n", "\n;; PDDL guess 2 for \"remove the tomato from the fridge and cut it up on the table.\"\n;; Official goal name: pick_and_slice-Tomato-None-SideTable\n(:goal\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType)\n                (inReceptacle ?o Fridge1) \n                (isSliced ?o)\n            )\n))\n", "\n;; PDDL guess 3 for \"remove the tomato from the fridge and cut it up on the table.\"\n;; Official goal name: pick_and_slice-Tomato-None-SideTable\n(:goal\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType)\n                (inReceptacle ?o Fridge1) \n                (isSliced ?o)\n            )\n))\n", "\n;; PDDL guess 4 for \"remove the tomato from the fridge and cut it up on the table.\"\n;; Official goal name: pick_and_place_simple-TomatoSlice-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n"]}, "train/look_at_obj_in_light-Pen-None-DeskLamp-309/trial_T20190909_052008_160445": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine a pen by the light of a lamp on a small table.\n;; PDDL guess 1 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a lamp on a small table.\n;; PDDL guess 1 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a lamp on a small table.\n;; PDDL guess 1 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a lamp on a small table.\n;; PDDL guess 1 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a lamp on a small table.\n;; PDDL guess 1 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a lamp on a small table.\n;; PDDL guess 1 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a lamp on a small table.\n;; PDDL guess 1 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a lamp on a small table.\n;; PDDL guess 1 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a lamp on a small table.\n;; PDDL guess 1 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a lamp on a small table.\n;; PDDL guess 1 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine a pen by the light of a lamp on a small table.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"examine a pen by the light of a lamp on a small table.\"\n;; Official goal name: look_at_obj_in_light-Pen-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 2 for \"examine a pen by the light of a lamp on a small table.\"\n;; Official goal name: look_at_obj_in_light-Pen-None-TableLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot TableLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 3 for \"examine a pen by the light of a lamp on a small table.\"\n;; Official goal name: look_at_obj_in_light-Pen-None-FloorLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 4 for \"examine a pen by the light of a lamp on a small table.\"\n;; Official goal name: look_at_obj_in_light-Pen-None-BedsideLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot BedsideLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n"]}, "train/look_at_obj_in_light-AlarmClock-None-DeskLamp-327/trial_T20190909_102016_233685": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nturn on desk lamp with clock in hand.\n;; PDDL guess 1 for 'turn on desk lamp with clock in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on desk lamp with clock in hand.\n;; PDDL guess 1 for 'turn on desk lamp with clock in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on desk lamp with clock in hand.\n;; PDDL guess 1 for 'turn on desk lamp with clock in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on desk lamp with clock in hand.\n;; PDDL guess 1 for 'turn on desk lamp with clock in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on desk lamp with clock in hand.\n;; PDDL guess 1 for 'turn on desk lamp with clock in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on desk lamp with clock in hand.\n;; PDDL guess 1 for 'turn on desk lamp with clock in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on desk lamp with clock in hand.\n;; PDDL guess 1 for 'turn on desk lamp with clock in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on desk lamp with clock in hand.\n;; PDDL guess 1 for 'turn on desk lamp with clock in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on desk lamp with clock in hand.\n;; PDDL guess 1 for 'turn on desk lamp with clock in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on desk lamp with clock in hand.\n;; PDDL guess 1 for 'turn on desk lamp with clock in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.turn on desk lamp with clock in hand.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"turn on desk lamp with clock in hand.\"\n;; Official goal name: look_at_obj_in_light-AlarmClock-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 2 for \"turn on desk lamp with clock in hand.\"\n;; Official goal name: activate_with_in_light-AlarmClock-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 3 for \"turn on desk lamp with clock in hand.\"\n;; Official goal name: toggle_with_in_light-AlarmClock-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n", "\n;; PDDL guess 4 for \"turn on desk lamp with clock in hand.\"\n;; Official goal name: switch_on_with_in_light-AlarmClock-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n"]}, "train/pick_and_place_simple-TomatoSliced-None-Fridge-6/trial_T20190907_233151_665009": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nslice the bell pepper in the fridge.\n;; PDDL guess 1 for 'slice the bell pepper in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bell pepper in the fridge.\n;; PDDL guess 1 for 'slice the bell pepper in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bell pepper in the fridge.\n;; PDDL guess 1 for 'slice the bell pepper in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bell pepper in the fridge.\n;; PDDL guess 1 for 'slice the bell pepper in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bell pepper in the fridge.\n;; PDDL guess 1 for 'slice the bell pepper in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bell pepper in the fridge.\n;; PDDL guess 1 for 'slice the bell pepper in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bell pepper in the fridge.\n;; PDDL guess 1 for 'slice the bell pepper in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bell pepper in the fridge.\n;; PDDL guess 1 for 'slice the bell pepper in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bell pepper in the fridge.\n;; PDDL guess 1 for 'slice the bell pepper in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bell pepper in the fridge.\n;; PDDL guess 1 for 'slice the bell pepper in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.slice the bell pepper in the fridge.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"slice the bell pepper in the fridge.\"\n;; Official goal name: pick_and_place_simple-TomatoSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for \"slice the bell pepper in the fridge.\"\n;; Official goal name: pick_and_place_simple-PepperSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PepperType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"slice the bell pepper in the fridge.\"\n;; Official goal name: pick_and_place_simple-PepperSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PepperType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"slice the bell pepper in the fridge.\"\n;; Official goal name: pick_and_place_simple-PepperSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PepperType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n"]}, "train/pick_and_place_simple-AppleSliced-None-Microwave-14/trial_T20190908_171220_804585": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nuse a butter knife to slice up an apple that is in the microwave.\n;; PDDL guess 1 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a butter knife to slice up an apple that is in the microwave.\n;; PDDL guess 1 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a butter knife to slice up an apple that is in the microwave.\n;; PDDL guess 1 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a butter knife to slice up an apple that is in the microwave.\n;; PDDL guess 1 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a butter knife to slice up an apple that is in the microwave.\n;; PDDL guess 1 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a butter knife to slice up an apple that is in the microwave.\n;; PDDL guess 1 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a butter knife to slice up an apple that is in the microwave.\n;; PDDL guess 1 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a butter knife to slice up an apple that is in the microwave.\n;; PDDL guess 1 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a butter knife to slice up an apple that is in the microwave.\n;; PDDL guess 1 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a butter knife to slice up an apple that is in the microwave.\n;; PDDL guess 1 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.use a butter knife to slice up an apple that is in the microwave.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Official goal name: pick_and_place_simple-AppleSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Official goal name: pick_and_place_simple-PearSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PearType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Official goal name: pick_and_place_simple-AppleCored-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isCored ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Official goal name: pick_and_place_simple-AppleCut-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isCut ?o) \n            )\n    )))\n"]}, "train/pick_heat_then_place_in_recep-TomatoSliced-None-SideTable-28/trial_T20190908_083001_373327": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a heated slice of tomato on the table.\n;; PDDL guess 1 for 'put a heated slice of tomato on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of tomato on the table.\n;; PDDL guess 1 for 'put a heated slice of tomato on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of tomato on the table.\n;; PDDL guess 1 for 'put a heated slice of tomato on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of tomato on the table.\n;; PDDL guess 1 for 'put a heated slice of tomato on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of tomato on the table.\n;; PDDL guess 1 for 'put a heated slice of tomato on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of tomato on the table.\n;; PDDL guess 1 for 'put a heated slice of tomato on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of tomato on the table.\n;; PDDL guess 1 for 'put a heated slice of tomato on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of tomato on the table.\n;; PDDL guess 1 for 'put a heated slice of tomato on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of tomato on the table.\n;; PDDL guess 1 for 'put a heated slice of tomato on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of tomato on the table.\n;; PDDL guess 1 for 'put a heated slice of tomato on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a heated slice of tomato on the table.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"put a heated slice of tomato on the table.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)\n            )\n)))\n", "\n;; PDDL guess 2 for \"put a heated slice of tomato on the table.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-CoffeeTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)\n            )\n)))\n", "\n;; PDDL guess 3 for \"put a heated slice of tomato on the table.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)\n            )\n)))\n", "\n;; PDDL guess 4 for \"put a heated slice of tomato on the table.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)\n            )\n)))\n"]}}