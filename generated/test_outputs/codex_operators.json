{
    "OpenObject": {
        "codex_prompt": ";;;; Define planning operators based on a PDDL domain and example usages.\n\n;;;; PDDL domain definition.\n(:requirements\n    :adl\n    :action-costs\n    :typing\n )\n(:types\n  agent\n  location\n  receptacle\n  object\n  rtype\n  otype\n  )\n(:predicates\n    (atLocation ?a - agent ?l - location)                     \n    (receptacleAtLocation ?r - receptacle ?l - location)      \n    (objectAtLocation ?o - object ?l - location)              \n    (openable ?r - receptacle)                                \n    (opened ?r - receptacle)                                  \n    (inReceptacle ?o - object ?r - receptacle)                \n    (isReceptacleObject ?o - object)                          \n    (inReceptacleObject ?innerObject - object ?outerObject - object)                \n    (isReceptacleObjectFull ?o - object)                      \n    (wasInReceptacle ?o - object ?r - receptacle)             \n    (checked ?r - receptacle)                                 \n    (examined ?l - location)                                  \n    (receptacleType ?r - receptacle ?t - rtype)               \n    (canContain ?rt - rtype ?ot - otype)                      \n    (objectType ?o - object ?t - otype)                       \n    (holds ?a - agent ?o - object)                            \n    (holdsAny ?a - agent)                                     \n    (holdsAnyReceptacleObject ?a - agent)                        \n    (full ?r - receptacle)                                    \n    (isClean ?o - object)                                     \n    (cleanable ?o - object)                                   \n    (isHot ?o - object)                                       \n    (heatable ?o - object)                                    \n    (isCool ?o - object)                                      \n    (coolable ?o - object)                                    \n    (pickupable ?o - object)                                   \n    (moveable ?o - object)                                      \n    (toggleable ?o - object)                                  \n    (isOn ?o - object)                                        \n    (isToggled ?o - object)                                   \n    (sliceable ?o - object)                                   \n    (isSliced ?o - object)                                    \n )\n(:functions\n    (distance ?from ?to)\n    (total-cost) - number\n   )\n\n;;;; Define operators based on examples of their usage and the PDDL domain definition above. Only use predicates and functions available in the PDDL domain.\n\n;; Operator: PutObject\n;; Example: {'action': 'PutObject', 'args': ['cup', 'fridge']}\n;; Example: {'action': 'PutObject', 'args': ['cup', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['bread', 'microwave']}\n;; Example: {'action': 'PutObject', 'args': ['bread', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['ladle', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['plate', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['plate', 'cabinet1']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'vase']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'coffee']}\n;; Example: {'action': 'PutObject', 'args': ['keychain', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['keychain', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['bottle', 'endtable']}\n;; Example: {'action': 'PutObject', 'args': ['knife', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['cookedtomato', 'fridge']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['apple', 'garbagecan']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'couch']}\n;; Example: {'action': 'PutObject', 'args': ['tomato', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['tomato', 'microwave']}\n;; Example: {'action': 'PutObject', 'args': ['ladle', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'chair']}\n;; Example: {'action': 'PutObject', 'args': ['cellphone', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['cellphone', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sinks']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sinks']}\n;; Example: {'action': 'PutObject', 'args': ['bowl', 'pencil']}\n;; Example: {'action': 'PutObject', 'args': ['bowl', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['pencil', 'bowl']}\n;; Example: {'action': 'PutObject', 'args': ['handtowel', 'tub']}\n(:action PutObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle ?ot - otype ?rt - rtype)\n    :precondition (and\n            (holds ?a ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (or (not (openable ?r)) (opened ?r))    \n            \n            (objectType ?o ?ot)\n            (receptacleType ?r ?rt)\n            (canContain ?rt ?ot)\n            \n            )\n    :effect (and\n                (inReceptacle ?o ?r)\n                (objectAtLocation ?o ?l)\n                \n                (not (holds ?a ?o))\n                (not (holdsAny ?a))\n                (increase (total-cost) 1)\n            )\n )\n\n<END>\n\n;; Operator: GotoLocation\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['fridge']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['toaster']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['sockdrawer']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['pan']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['cabinet1']}\n;; Example: {'action': 'GotoLocation', 'args': ['slider']}\n;; Example: {'action': 'GotoLocation', 'args': ['vase']}\n;; Example: {'action': 'GotoLocation', 'args': ['coffee']}\n;; Example: {'action': 'GotoLocation', 'args': ['sidetable']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['armchair']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['wastebasket']}\n;; Example: {'action': 'GotoLocation', 'args': ['endtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['fridge']}\n;; Example: {'action': 'GotoLocation', 'args': ['trashcan']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['tabletop']}\n;; Example: {'action': 'GotoLocation', 'args': ['garbagecan']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['couch']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['cuttingboard']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['pan']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['stove']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['chair']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['bed']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['shower']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['shower']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['desk']}\n;; Example: {'action': 'GotoLocation', 'args': ['pencil']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['bowl']}\n;; Example: {'action': 'GotoLocation', 'args': ['washbasin']}\n;; Example: {'action': 'GotoLocation', 'args': ['tub']}\n(:action GotoLocation\n    :parameters (?a - agent ?lStart - location ?lEnd - location ?r - receptacle)\n    :precondition (and\n                    (atLocation ?a ?lStart)\n                    (receptacleAtLocation ?r ?lEnd)\n                    \n                  )\n    :effect (and\n                (not (atLocation ?a ?lStart))\n                (atLocation ?a ?lEnd)\n                \n                \n                \n                \n                \n                \n                \n                (increase (total-cost) 1)\n            )\n )\n\n<END>\n\n;; Operator: PickupObject\n;; Example: {'action': 'PickupObject', 'args': ['cup']}\n;; Example: {'action': 'PickupObject', 'args': ['cup']}\n;; Example: {'action': 'PickupObject', 'args': ['bread']}\n;; Example: {'action': 'PickupObject', 'args': ['bread']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['sponge']}\n;; Example: {'action': 'PickupObject', 'args': ['ladle']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['plate']}\n;; Example: {'action': 'PickupObject', 'args': ['plate']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['keychain']}\n;; Example: {'action': 'PickupObject', 'args': ['keychain']}\n;; Example: {'action': 'PickupObject', 'args': ['bottle']}\n;; Example: {'action': 'PickupObject', 'args': ['knife']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['coffee-maker']}\n;; Example: {'action': 'PickupObject', 'args': ['cookedtomato']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['apple']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['tomato']}\n;; Example: {'action': 'PickupObject', 'args': ['tomato']}\n;; Example: {'action': 'PickupObject', 'args': ['ladle']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['bowl']}\n;; Example: {'action': 'PickupObject', 'args': ['pencil']}\n;; Example: {'action': 'PickupObject', 'args': ['handtowel']}\n(:action PickupObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n    :precondition\n        (and\n            (pickupable ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            \n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))  \n            \n            (or (not (openable ?r)) (opened ?r))  \n            \n        )\n    :effect\n        (and\n            (not (inReceptacle ?o ?r))\n            (holds ?a ?o)\n            (holdsAny ?a)\n            (not (objectAtLocation ?o ?l))\n            \n            (increase (total-cost) 1)\n        )\n )\n\n<END>\n\n;; Operator: OpenObject\n;; Example: {'action': 'OpenObject', 'args': ['microwave']}\n;; Example: {'action': 'OpenObject', 'args': ['microwave']}\n(:action OpenObject",
        "codex_output": [
            "(:action OpenObject\n    :parameters (?a - agent ?l - location ?o - object)\n    :precondition\n        (and\n            (openable ?o) (not (opened ?o)) \n            (atLocation ?a ?l)\n            (receptacleAtLocation ?o ?l)\n        )\n    :effect (and\n        (opened ?o) \n        (increase (total-cost) 1)\n    )\n )\n"
        ]
    },
    "CloseObject": {
        "codex_prompt": ";;;; Define planning operators based on a PDDL domain and example usages.\n\n;;;; PDDL domain definition.\n(:requirements\n    :adl\n    :action-costs\n    :typing\n )\n(:types\n  agent\n  location\n  receptacle\n  object\n  rtype\n  otype\n  )\n(:predicates\n    (atLocation ?a - agent ?l - location)                     \n    (receptacleAtLocation ?r - receptacle ?l - location)      \n    (objectAtLocation ?o - object ?l - location)              \n    (openable ?r - receptacle)                                \n    (opened ?r - receptacle)                                  \n    (inReceptacle ?o - object ?r - receptacle)                \n    (isReceptacleObject ?o - object)                          \n    (inReceptacleObject ?innerObject - object ?outerObject - object)                \n    (isReceptacleObjectFull ?o - object)                      \n    (wasInReceptacle ?o - object ?r - receptacle)             \n    (checked ?r - receptacle)                                 \n    (examined ?l - location)                                  \n    (receptacleType ?r - receptacle ?t - rtype)               \n    (canContain ?rt - rtype ?ot - otype)                      \n    (objectType ?o - object ?t - otype)                       \n    (holds ?a - agent ?o - object)                            \n    (holdsAny ?a - agent)                                     \n    (holdsAnyReceptacleObject ?a - agent)                        \n    (full ?r - receptacle)                                    \n    (isClean ?o - object)                                     \n    (cleanable ?o - object)                                   \n    (isHot ?o - object)                                       \n    (heatable ?o - object)                                    \n    (isCool ?o - object)                                      \n    (coolable ?o - object)                                    \n    (pickupable ?o - object)                                   \n    (moveable ?o - object)                                      \n    (toggleable ?o - object)                                  \n    (isOn ?o - object)                                        \n    (isToggled ?o - object)                                   \n    (sliceable ?o - object)                                   \n    (isSliced ?o - object)                                    \n )\n(:functions\n    (distance ?from ?to)\n    (total-cost) - number\n   )\n\n;;;; Define operators based on examples of their usage and the PDDL domain definition above. Only use predicates and functions available in the PDDL domain.\n\n;; Operator: GotoLocation\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['fridge']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['toaster']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['sockdrawer']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['pan']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['cabinet1']}\n;; Example: {'action': 'GotoLocation', 'args': ['slider']}\n;; Example: {'action': 'GotoLocation', 'args': ['vase']}\n;; Example: {'action': 'GotoLocation', 'args': ['coffee']}\n;; Example: {'action': 'GotoLocation', 'args': ['sidetable']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['armchair']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['wastebasket']}\n;; Example: {'action': 'GotoLocation', 'args': ['endtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['fridge']}\n;; Example: {'action': 'GotoLocation', 'args': ['trashcan']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['tabletop']}\n;; Example: {'action': 'GotoLocation', 'args': ['garbagecan']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['couch']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['cuttingboard']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['pan']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['stove']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['chair']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['bed']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['shower']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['shower']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['desk']}\n;; Example: {'action': 'GotoLocation', 'args': ['pencil']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['bowl']}\n;; Example: {'action': 'GotoLocation', 'args': ['washbasin']}\n;; Example: {'action': 'GotoLocation', 'args': ['tub']}\n(:action GotoLocation\n    :parameters (?a - agent ?lStart - location ?lEnd - location ?r - receptacle)\n    :precondition (and\n                    (atLocation ?a ?lStart)\n                    (receptacleAtLocation ?r ?lEnd)\n                    \n                  )\n    :effect (and\n                (not (atLocation ?a ?lStart))\n                (atLocation ?a ?lEnd)\n                \n                \n                \n                \n                \n                \n                \n                (increase (total-cost) 1)\n            )\n )\n\n<END>\n\n;; Operator: PutObject\n;; Example: {'action': 'PutObject', 'args': ['cup', 'fridge']}\n;; Example: {'action': 'PutObject', 'args': ['cup', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['bread', 'microwave']}\n;; Example: {'action': 'PutObject', 'args': ['bread', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['ladle', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['plate', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['plate', 'cabinet1']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'vase']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'coffee']}\n;; Example: {'action': 'PutObject', 'args': ['keychain', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['keychain', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['bottle', 'endtable']}\n;; Example: {'action': 'PutObject', 'args': ['knife', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['cookedtomato', 'fridge']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['apple', 'garbagecan']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'couch']}\n;; Example: {'action': 'PutObject', 'args': ['tomato', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['tomato', 'microwave']}\n;; Example: {'action': 'PutObject', 'args': ['ladle', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'chair']}\n;; Example: {'action': 'PutObject', 'args': ['cellphone', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['cellphone', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sinks']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sinks']}\n;; Example: {'action': 'PutObject', 'args': ['bowl', 'pencil']}\n;; Example: {'action': 'PutObject', 'args': ['bowl', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['pencil', 'bowl']}\n;; Example: {'action': 'PutObject', 'args': ['handtowel', 'tub']}\n(:action PutObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle ?ot - otype ?rt - rtype)\n    :precondition (and\n            (holds ?a ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (or (not (openable ?r)) (opened ?r))    \n            \n            (objectType ?o ?ot)\n            (receptacleType ?r ?rt)\n            (canContain ?rt ?ot)\n            \n            )\n    :effect (and\n                (inReceptacle ?o ?r)\n                (objectAtLocation ?o ?l)\n                \n                (not (holds ?a ?o))\n                (not (holdsAny ?a))\n                (increase (total-cost) 1)\n            )\n )\n\n<END>\n\n;; Operator: PickupObject\n;; Example: {'action': 'PickupObject', 'args': ['cup']}\n;; Example: {'action': 'PickupObject', 'args': ['cup']}\n;; Example: {'action': 'PickupObject', 'args': ['bread']}\n;; Example: {'action': 'PickupObject', 'args': ['bread']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['sponge']}\n;; Example: {'action': 'PickupObject', 'args': ['ladle']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['plate']}\n;; Example: {'action': 'PickupObject', 'args': ['plate']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['keychain']}\n;; Example: {'action': 'PickupObject', 'args': ['keychain']}\n;; Example: {'action': 'PickupObject', 'args': ['bottle']}\n;; Example: {'action': 'PickupObject', 'args': ['knife']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['coffee-maker']}\n;; Example: {'action': 'PickupObject', 'args': ['cookedtomato']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['apple']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['tomato']}\n;; Example: {'action': 'PickupObject', 'args': ['tomato']}\n;; Example: {'action': 'PickupObject', 'args': ['ladle']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['bowl']}\n;; Example: {'action': 'PickupObject', 'args': ['pencil']}\n;; Example: {'action': 'PickupObject', 'args': ['handtowel']}\n(:action PickupObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n    :precondition\n        (and\n            (pickupable ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            \n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))  \n            \n            (or (not (openable ?r)) (opened ?r))  \n            \n        )\n    :effect\n        (and\n            (not (inReceptacle ?o ?r))\n            (holds ?a ?o)\n            (holdsAny ?a)\n            (not (objectAtLocation ?o ?l))\n            \n            (increase (total-cost) 1)\n        )\n )\n\n<END>\n\n;; Operator: CloseObject\n;; Example: {'action': 'CloseObject', 'args': ['microwave']}\n;; Example: {'action': 'CloseObject', 'args': ['microwave']}\n(:action CloseObject",
        "codex_output": [
            "(:action CloseObject\n    :parameters\n        (?a - agent ?l - location ?r - receptacle)\n    :precondition\n        (and\n            (openable ?r)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            \n            (opened ?r)  \n        )\n    :effect\n        (and\n            (not (opened ?r))\n            (increase (total-cost) 1)\n        )\n )\n"
        ]
    },
    "HeatingObject": {
        "codex_prompt": ";;;; Define planning operators based on a PDDL domain and example usages.\n\n;;;; PDDL domain definition.\n(:requirements\n    :adl\n    :action-costs\n    :typing\n )\n(:types\n  agent\n  location\n  receptacle\n  object\n  rtype\n  otype\n  )\n(:predicates\n    (atLocation ?a - agent ?l - location)                     \n    (receptacleAtLocation ?r - receptacle ?l - location)      \n    (objectAtLocation ?o - object ?l - location)              \n    (openable ?r - receptacle)                                \n    (opened ?r - receptacle)                                  \n    (inReceptacle ?o - object ?r - receptacle)                \n    (isReceptacleObject ?o - object)                          \n    (inReceptacleObject ?innerObject - object ?outerObject - object)                \n    (isReceptacleObjectFull ?o - object)                      \n    (wasInReceptacle ?o - object ?r - receptacle)             \n    (checked ?r - receptacle)                                 \n    (examined ?l - location)                                  \n    (receptacleType ?r - receptacle ?t - rtype)               \n    (canContain ?rt - rtype ?ot - otype)                      \n    (objectType ?o - object ?t - otype)                       \n    (holds ?a - agent ?o - object)                            \n    (holdsAny ?a - agent)                                     \n    (holdsAnyReceptacleObject ?a - agent)                        \n    (full ?r - receptacle)                                    \n    (isClean ?o - object)                                     \n    (cleanable ?o - object)                                   \n    (isHot ?o - object)                                       \n    (heatable ?o - object)                                    \n    (isCool ?o - object)                                      \n    (coolable ?o - object)                                    \n    (pickupable ?o - object)                                   \n    (moveable ?o - object)                                      \n    (toggleable ?o - object)                                  \n    (isOn ?o - object)                                        \n    (isToggled ?o - object)                                   \n    (sliceable ?o - object)                                   \n    (isSliced ?o - object)                                    \n )\n(:functions\n    (distance ?from ?to)\n    (total-cost) - number\n   )\n\n;;;; Define operators based on examples of their usage and the PDDL domain definition above. Only use predicates and functions available in the PDDL domain.\n\n;; Operator: GotoLocation\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['fridge']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['toaster']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['sockdrawer']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['pan']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['cabinet1']}\n;; Example: {'action': 'GotoLocation', 'args': ['slider']}\n;; Example: {'action': 'GotoLocation', 'args': ['vase']}\n;; Example: {'action': 'GotoLocation', 'args': ['coffee']}\n;; Example: {'action': 'GotoLocation', 'args': ['sidetable']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['armchair']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['wastebasket']}\n;; Example: {'action': 'GotoLocation', 'args': ['endtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['fridge']}\n;; Example: {'action': 'GotoLocation', 'args': ['trashcan']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['tabletop']}\n;; Example: {'action': 'GotoLocation', 'args': ['garbagecan']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['couch']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['cuttingboard']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['pan']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['stove']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['chair']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['bed']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['shower']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['shower']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['desk']}\n;; Example: {'action': 'GotoLocation', 'args': ['pencil']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['bowl']}\n;; Example: {'action': 'GotoLocation', 'args': ['washbasin']}\n;; Example: {'action': 'GotoLocation', 'args': ['tub']}\n(:action GotoLocation\n    :parameters (?a - agent ?lStart - location ?lEnd - location ?r - receptacle)\n    :precondition (and\n                    (atLocation ?a ?lStart)\n                    (receptacleAtLocation ?r ?lEnd)\n                    \n                  )\n    :effect (and\n                (not (atLocation ?a ?lStart))\n                (atLocation ?a ?lEnd)\n                \n                \n                \n                \n                \n                \n                \n                (increase (total-cost) 1)\n            )\n )\n\n<END>\n\n;; Operator: PutObject\n;; Example: {'action': 'PutObject', 'args': ['cup', 'fridge']}\n;; Example: {'action': 'PutObject', 'args': ['cup', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['bread', 'microwave']}\n;; Example: {'action': 'PutObject', 'args': ['bread', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['ladle', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['plate', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['plate', 'cabinet1']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'vase']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'coffee']}\n;; Example: {'action': 'PutObject', 'args': ['keychain', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['keychain', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['bottle', 'endtable']}\n;; Example: {'action': 'PutObject', 'args': ['knife', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['cookedtomato', 'fridge']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['apple', 'garbagecan']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'couch']}\n;; Example: {'action': 'PutObject', 'args': ['tomato', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['tomato', 'microwave']}\n;; Example: {'action': 'PutObject', 'args': ['ladle', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'chair']}\n;; Example: {'action': 'PutObject', 'args': ['cellphone', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['cellphone', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sinks']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sinks']}\n;; Example: {'action': 'PutObject', 'args': ['bowl', 'pencil']}\n;; Example: {'action': 'PutObject', 'args': ['bowl', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['pencil', 'bowl']}\n;; Example: {'action': 'PutObject', 'args': ['handtowel', 'tub']}\n(:action PutObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle ?ot - otype ?rt - rtype)\n    :precondition (and\n            (holds ?a ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (or (not (openable ?r)) (opened ?r))    \n            \n            (objectType ?o ?ot)\n            (receptacleType ?r ?rt)\n            (canContain ?rt ?ot)\n            \n            )\n    :effect (and\n                (inReceptacle ?o ?r)\n                (objectAtLocation ?o ?l)\n                \n                (not (holds ?a ?o))\n                (not (holdsAny ?a))\n                (increase (total-cost) 1)\n            )\n )\n\n<END>\n\n;; Operator: PickupObject\n;; Example: {'action': 'PickupObject', 'args': ['cup']}\n;; Example: {'action': 'PickupObject', 'args': ['cup']}\n;; Example: {'action': 'PickupObject', 'args': ['bread']}\n;; Example: {'action': 'PickupObject', 'args': ['bread']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['sponge']}\n;; Example: {'action': 'PickupObject', 'args': ['ladle']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['plate']}\n;; Example: {'action': 'PickupObject', 'args': ['plate']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['keychain']}\n;; Example: {'action': 'PickupObject', 'args': ['keychain']}\n;; Example: {'action': 'PickupObject', 'args': ['bottle']}\n;; Example: {'action': 'PickupObject', 'args': ['knife']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['coffee-maker']}\n;; Example: {'action': 'PickupObject', 'args': ['cookedtomato']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['apple']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['tomato']}\n;; Example: {'action': 'PickupObject', 'args': ['tomato']}\n;; Example: {'action': 'PickupObject', 'args': ['ladle']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['bowl']}\n;; Example: {'action': 'PickupObject', 'args': ['pencil']}\n;; Example: {'action': 'PickupObject', 'args': ['handtowel']}\n(:action PickupObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n    :precondition\n        (and\n            (pickupable ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            \n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))  \n            \n            (or (not (openable ?r)) (opened ?r))  \n            \n        )\n    :effect\n        (and\n            (not (inReceptacle ?o ?r))\n            (holds ?a ?o)\n            (holdsAny ?a)\n            (not (objectAtLocation ?o ?l))\n            \n            (increase (total-cost) 1)\n        )\n )\n\n<END>\n\n;; Operator: HeatingObject\n;; Example: {'action': 'HeatingObject', 'args': ['bread']}\n(:action HeatingObject",
        "codex_output": [
            "(:action HeatingObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n    :precondition (and\n            (holding ?a ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (opened ?r)\n            \n            (receptacleAtLocation ?relatedKey - receptacle ?l)\n            (inReceptacle ?o ?relatedKey)\n            (inReceptacle ?relatedKey ?r)\n            (heatable ?relatedKey)\n            (isHot ?o)\n        )\n    :effect (and\n                (not (isHot ?relatedKey))\n                (holdsAnyReceptacleObject ?a)\n                  \n                (increase (total-cost) 1)\n            )\n )\n"
        ]
    },
    "ToggleSwitch": {
        "codex_prompt": ";;;; Define planning operators based on a PDDL domain and example usages.\n\n;;;; PDDL domain definition.\n(:requirements\n    :adl\n    :action-costs\n    :typing\n )\n(:types\n  agent\n  location\n  receptacle\n  object\n  rtype\n  otype\n  )\n(:predicates\n    (atLocation ?a - agent ?l - location)                     \n    (receptacleAtLocation ?r - receptacle ?l - location)      \n    (objectAtLocation ?o - object ?l - location)              \n    (openable ?r - receptacle)                                \n    (opened ?r - receptacle)                                  \n    (inReceptacle ?o - object ?r - receptacle)                \n    (isReceptacleObject ?o - object)                          \n    (inReceptacleObject ?innerObject - object ?outerObject - object)                \n    (isReceptacleObjectFull ?o - object)                      \n    (wasInReceptacle ?o - object ?r - receptacle)             \n    (checked ?r - receptacle)                                 \n    (examined ?l - location)                                  \n    (receptacleType ?r - receptacle ?t - rtype)               \n    (canContain ?rt - rtype ?ot - otype)                      \n    (objectType ?o - object ?t - otype)                       \n    (holds ?a - agent ?o - object)                            \n    (holdsAny ?a - agent)                                     \n    (holdsAnyReceptacleObject ?a - agent)                        \n    (full ?r - receptacle)                                    \n    (isClean ?o - object)                                     \n    (cleanable ?o - object)                                   \n    (isHot ?o - object)                                       \n    (heatable ?o - object)                                    \n    (isCool ?o - object)                                      \n    (coolable ?o - object)                                    \n    (pickupable ?o - object)                                   \n    (moveable ?o - object)                                      \n    (toggleable ?o - object)                                  \n    (isOn ?o - object)                                        \n    (isToggled ?o - object)                                   \n    (sliceable ?o - object)                                   \n    (isSliced ?o - object)                                    \n )\n(:functions\n    (distance ?from ?to)\n    (total-cost) - number\n   )\n\n;;;; Define operators based on examples of their usage and the PDDL domain definition above. Only use predicates and functions available in the PDDL domain.\n\n;; Operator: PutObject\n;; Example: {'action': 'PutObject', 'args': ['cup', 'fridge']}\n;; Example: {'action': 'PutObject', 'args': ['cup', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['bread', 'microwave']}\n;; Example: {'action': 'PutObject', 'args': ['bread', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['ladle', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['plate', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['plate', 'cabinet1']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'vase']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'coffee']}\n;; Example: {'action': 'PutObject', 'args': ['keychain', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['keychain', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['bottle', 'endtable']}\n;; Example: {'action': 'PutObject', 'args': ['knife', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['cookedtomato', 'fridge']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['apple', 'garbagecan']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'couch']}\n;; Example: {'action': 'PutObject', 'args': ['tomato', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['tomato', 'microwave']}\n;; Example: {'action': 'PutObject', 'args': ['ladle', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'chair']}\n;; Example: {'action': 'PutObject', 'args': ['cellphone', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['cellphone', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sinks']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sinks']}\n;; Example: {'action': 'PutObject', 'args': ['bowl', 'pencil']}\n;; Example: {'action': 'PutObject', 'args': ['bowl', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['pencil', 'bowl']}\n;; Example: {'action': 'PutObject', 'args': ['handtowel', 'tub']}\n(:action PutObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle ?ot - otype ?rt - rtype)\n    :precondition (and\n            (holds ?a ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (or (not (openable ?r)) (opened ?r))    \n            \n            (objectType ?o ?ot)\n            (receptacleType ?r ?rt)\n            (canContain ?rt ?ot)\n            \n            )\n    :effect (and\n                (inReceptacle ?o ?r)\n                (objectAtLocation ?o ?l)\n                \n                (not (holds ?a ?o))\n                (not (holdsAny ?a))\n                (increase (total-cost) 1)\n            )\n )\n\n<END>\n\n;; Operator: PickupObject\n;; Example: {'action': 'PickupObject', 'args': ['cup']}\n;; Example: {'action': 'PickupObject', 'args': ['cup']}\n;; Example: {'action': 'PickupObject', 'args': ['bread']}\n;; Example: {'action': 'PickupObject', 'args': ['bread']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['sponge']}\n;; Example: {'action': 'PickupObject', 'args': ['ladle']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['plate']}\n;; Example: {'action': 'PickupObject', 'args': ['plate']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['keychain']}\n;; Example: {'action': 'PickupObject', 'args': ['keychain']}\n;; Example: {'action': 'PickupObject', 'args': ['bottle']}\n;; Example: {'action': 'PickupObject', 'args': ['knife']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['coffee-maker']}\n;; Example: {'action': 'PickupObject', 'args': ['cookedtomato']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['apple']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['tomato']}\n;; Example: {'action': 'PickupObject', 'args': ['tomato']}\n;; Example: {'action': 'PickupObject', 'args': ['ladle']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['bowl']}\n;; Example: {'action': 'PickupObject', 'args': ['pencil']}\n;; Example: {'action': 'PickupObject', 'args': ['handtowel']}\n(:action PickupObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n    :precondition\n        (and\n            (pickupable ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            \n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))  \n            \n            (or (not (openable ?r)) (opened ?r))  \n            \n        )\n    :effect\n        (and\n            (not (inReceptacle ?o ?r))\n            (holds ?a ?o)\n            (holdsAny ?a)\n            (not (objectAtLocation ?o ?l))\n            \n            (increase (total-cost) 1)\n        )\n )\n\n<END>\n\n;; Operator: GotoLocation\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['fridge']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['toaster']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['sockdrawer']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['pan']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['cabinet1']}\n;; Example: {'action': 'GotoLocation', 'args': ['slider']}\n;; Example: {'action': 'GotoLocation', 'args': ['vase']}\n;; Example: {'action': 'GotoLocation', 'args': ['coffee']}\n;; Example: {'action': 'GotoLocation', 'args': ['sidetable']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['armchair']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['wastebasket']}\n;; Example: {'action': 'GotoLocation', 'args': ['endtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['fridge']}\n;; Example: {'action': 'GotoLocation', 'args': ['trashcan']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['tabletop']}\n;; Example: {'action': 'GotoLocation', 'args': ['garbagecan']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['couch']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['cuttingboard']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['pan']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['stove']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['chair']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['bed']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['shower']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['shower']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['desk']}\n;; Example: {'action': 'GotoLocation', 'args': ['pencil']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['bowl']}\n;; Example: {'action': 'GotoLocation', 'args': ['washbasin']}\n;; Example: {'action': 'GotoLocation', 'args': ['tub']}\n(:action GotoLocation\n    :parameters (?a - agent ?lStart - location ?lEnd - location ?r - receptacle)\n    :precondition (and\n                    (atLocation ?a ?lStart)\n                    (receptacleAtLocation ?r ?lEnd)\n                    \n                  )\n    :effect (and\n                (not (atLocation ?a ?lStart))\n                (atLocation ?a ?lEnd)\n                \n                \n                \n                \n                \n                \n                \n                (increase (total-cost) 1)\n            )\n )\n\n<END>\n\n;; Operator: ToggleSwitch\n;; Example: {'action': 'ToggleSwitch', 'args': ['\"off\"', 'shelf']}\n(:action ToggleSwitch",
        "codex_output": [
            "(:action ToggleSwitch\n    :parameters (?a - agent ?l - location ?r - receptacle ?o - object ?st ?np)\n    :precondition (and\n                    (atLocation ?a ?l)\n                    (receptacleAtLocation ?r ?l)\n                    \n                    (inReceptacle ?o ?r)\n                    (objectType ?o ?ot)\n                    (toggleable ?o)\n                    \n                )\n    :effect (and\n             \n                    (increase (total-cost) 1)\n             )\n )\n"
        ]
    },
    "CleanWith": {
        "codex_prompt": ";;;; Define planning operators based on a PDDL domain and example usages.\n\n;;;; PDDL domain definition.\n(:requirements\n    :adl\n    :action-costs\n    :typing\n )\n(:types\n  agent\n  location\n  receptacle\n  object\n  rtype\n  otype\n  )\n(:predicates\n    (atLocation ?a - agent ?l - location)                     \n    (receptacleAtLocation ?r - receptacle ?l - location)      \n    (objectAtLocation ?o - object ?l - location)              \n    (openable ?r - receptacle)                                \n    (opened ?r - receptacle)                                  \n    (inReceptacle ?o - object ?r - receptacle)                \n    (isReceptacleObject ?o - object)                          \n    (inReceptacleObject ?innerObject - object ?outerObject - object)                \n    (isReceptacleObjectFull ?o - object)                      \n    (wasInReceptacle ?o - object ?r - receptacle)             \n    (checked ?r - receptacle)                                 \n    (examined ?l - location)                                  \n    (receptacleType ?r - receptacle ?t - rtype)               \n    (canContain ?rt - rtype ?ot - otype)                      \n    (objectType ?o - object ?t - otype)                       \n    (holds ?a - agent ?o - object)                            \n    (holdsAny ?a - agent)                                     \n    (holdsAnyReceptacleObject ?a - agent)                        \n    (full ?r - receptacle)                                    \n    (isClean ?o - object)                                     \n    (cleanable ?o - object)                                   \n    (isHot ?o - object)                                       \n    (heatable ?o - object)                                    \n    (isCool ?o - object)                                      \n    (coolable ?o - object)                                    \n    (pickupable ?o - object)                                   \n    (moveable ?o - object)                                      \n    (toggleable ?o - object)                                  \n    (isOn ?o - object)                                        \n    (isToggled ?o - object)                                   \n    (sliceable ?o - object)                                   \n    (isSliced ?o - object)                                    \n )\n(:functions\n    (distance ?from ?to)\n    (total-cost) - number\n   )\n\n;;;; Define operators based on examples of their usage and the PDDL domain definition above. Only use predicates and functions available in the PDDL domain.\n\n;; Operator: GotoLocation\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['fridge']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['toaster']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['sockdrawer']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['pan']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['cabinet1']}\n;; Example: {'action': 'GotoLocation', 'args': ['slider']}\n;; Example: {'action': 'GotoLocation', 'args': ['vase']}\n;; Example: {'action': 'GotoLocation', 'args': ['coffee']}\n;; Example: {'action': 'GotoLocation', 'args': ['sidetable']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['armchair']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['wastebasket']}\n;; Example: {'action': 'GotoLocation', 'args': ['endtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['fridge']}\n;; Example: {'action': 'GotoLocation', 'args': ['trashcan']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['tabletop']}\n;; Example: {'action': 'GotoLocation', 'args': ['garbagecan']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['couch']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['cuttingboard']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['pan']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['stove']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['chair']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['bed']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['shower']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['shower']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['desk']}\n;; Example: {'action': 'GotoLocation', 'args': ['pencil']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['bowl']}\n;; Example: {'action': 'GotoLocation', 'args': ['washbasin']}\n;; Example: {'action': 'GotoLocation', 'args': ['tub']}\n(:action GotoLocation\n    :parameters (?a - agent ?lStart - location ?lEnd - location ?r - receptacle)\n    :precondition (and\n                    (atLocation ?a ?lStart)\n                    (receptacleAtLocation ?r ?lEnd)\n                    \n                  )\n    :effect (and\n                (not (atLocation ?a ?lStart))\n                (atLocation ?a ?lEnd)\n                \n                \n                \n                \n                \n                \n                \n                (increase (total-cost) 1)\n            )\n )\n\n<END>\n\n;; Operator: PickupObject\n;; Example: {'action': 'PickupObject', 'args': ['cup']}\n;; Example: {'action': 'PickupObject', 'args': ['cup']}\n;; Example: {'action': 'PickupObject', 'args': ['bread']}\n;; Example: {'action': 'PickupObject', 'args': ['bread']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['sponge']}\n;; Example: {'action': 'PickupObject', 'args': ['ladle']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['plate']}\n;; Example: {'action': 'PickupObject', 'args': ['plate']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['keychain']}\n;; Example: {'action': 'PickupObject', 'args': ['keychain']}\n;; Example: {'action': 'PickupObject', 'args': ['bottle']}\n;; Example: {'action': 'PickupObject', 'args': ['knife']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['coffee-maker']}\n;; Example: {'action': 'PickupObject', 'args': ['cookedtomato']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['apple']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['tomato']}\n;; Example: {'action': 'PickupObject', 'args': ['tomato']}\n;; Example: {'action': 'PickupObject', 'args': ['ladle']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['bowl']}\n;; Example: {'action': 'PickupObject', 'args': ['pencil']}\n;; Example: {'action': 'PickupObject', 'args': ['handtowel']}\n(:action PickupObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n    :precondition\n        (and\n            (pickupable ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            \n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))  \n            \n            (or (not (openable ?r)) (opened ?r))  \n            \n        )\n    :effect\n        (and\n            (not (inReceptacle ?o ?r))\n            (holds ?a ?o)\n            (holdsAny ?a)\n            (not (objectAtLocation ?o ?l))\n            \n            (increase (total-cost) 1)\n        )\n )\n\n<END>\n\n;; Operator: PutObject\n;; Example: {'action': 'PutObject', 'args': ['cup', 'fridge']}\n;; Example: {'action': 'PutObject', 'args': ['cup', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['bread', 'microwave']}\n;; Example: {'action': 'PutObject', 'args': ['bread', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['ladle', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['plate', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['plate', 'cabinet1']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'vase']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'coffee']}\n;; Example: {'action': 'PutObject', 'args': ['keychain', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['keychain', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['bottle', 'endtable']}\n;; Example: {'action': 'PutObject', 'args': ['knife', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['cookedtomato', 'fridge']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['apple', 'garbagecan']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'couch']}\n;; Example: {'action': 'PutObject', 'args': ['tomato', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['tomato', 'microwave']}\n;; Example: {'action': 'PutObject', 'args': ['ladle', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'chair']}\n;; Example: {'action': 'PutObject', 'args': ['cellphone', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['cellphone', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sinks']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sinks']}\n;; Example: {'action': 'PutObject', 'args': ['bowl', 'pencil']}\n;; Example: {'action': 'PutObject', 'args': ['bowl', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['pencil', 'bowl']}\n;; Example: {'action': 'PutObject', 'args': ['handtowel', 'tub']}\n(:action PutObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle ?ot - otype ?rt - rtype)\n    :precondition (and\n            (holds ?a ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (or (not (openable ?r)) (opened ?r))    \n            \n            (objectType ?o ?ot)\n            (receptacleType ?r ?rt)\n            (canContain ?rt ?ot)\n            \n            )\n    :effect (and\n                (inReceptacle ?o ?r)\n                (objectAtLocation ?o ?l)\n                \n                (not (holds ?a ?o))\n                (not (holdsAny ?a))\n                (increase (total-cost) 1)\n            )\n )\n\n<END>\n\n;; Operator: CleanWith\n;; Example: {'action': 'CleanWith', 'args': ['sponge', 'pan']}\n(:action CleanWith",
        "codex_output": [
            "(:action CleanWith\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle ?e - object)\n    :precondition (and\n                    (atLocation ?a ?l)\n                    (receptacleAtLocation ?r ?l)\n                    \n                    (inReceptacle ?e ?r)\n                    \n                    (isClean ?e)\n                    (cleanable ?o)\n                    \n                    (holds ?a ?e)\n                    (holds ?a ?o)\n                    \n                )\n    :effect (and\n                (not (isClean ?e))\n                (isClean ?e)\n                (increase (total-cost) 1)\n            )\n )\n"
        ]
    },
    "Move": {
        "codex_prompt": ";;;; Define planning operators based on a PDDL domain and example usages.\n\n;;;; PDDL domain definition.\n(:requirements\n    :adl\n    :action-costs\n    :typing\n )\n(:types\n  agent\n  location\n  receptacle\n  object\n  rtype\n  otype\n  )\n(:predicates\n    (atLocation ?a - agent ?l - location)                     \n    (receptacleAtLocation ?r - receptacle ?l - location)      \n    (objectAtLocation ?o - object ?l - location)              \n    (openable ?r - receptacle)                                \n    (opened ?r - receptacle)                                  \n    (inReceptacle ?o - object ?r - receptacle)                \n    (isReceptacleObject ?o - object)                          \n    (inReceptacleObject ?innerObject - object ?outerObject - object)                \n    (isReceptacleObjectFull ?o - object)                      \n    (wasInReceptacle ?o - object ?r - receptacle)             \n    (checked ?r - receptacle)                                 \n    (examined ?l - location)                                  \n    (receptacleType ?r - receptacle ?t - rtype)               \n    (canContain ?rt - rtype ?ot - otype)                      \n    (objectType ?o - object ?t - otype)                       \n    (holds ?a - agent ?o - object)                            \n    (holdsAny ?a - agent)                                     \n    (holdsAnyReceptacleObject ?a - agent)                        \n    (full ?r - receptacle)                                    \n    (isClean ?o - object)                                     \n    (cleanable ?o - object)                                   \n    (isHot ?o - object)                                       \n    (heatable ?o - object)                                    \n    (isCool ?o - object)                                      \n    (coolable ?o - object)                                    \n    (pickupable ?o - object)                                   \n    (moveable ?o - object)                                      \n    (toggleable ?o - object)                                  \n    (isOn ?o - object)                                        \n    (isToggled ?o - object)                                   \n    (sliceable ?o - object)                                   \n    (isSliced ?o - object)                                    \n )\n(:functions\n    (distance ?from ?to)\n    (total-cost) - number\n   )\n\n;;;; Define operators based on examples of their usage and the PDDL domain definition above. Only use predicates and functions available in the PDDL domain.\n\n;; Operator: PutObject\n;; Example: {'action': 'PutObject', 'args': ['cup', 'fridge']}\n;; Example: {'action': 'PutObject', 'args': ['cup', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['bread', 'microwave']}\n;; Example: {'action': 'PutObject', 'args': ['bread', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['ladle', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['plate', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['plate', 'cabinet1']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'vase']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'coffee']}\n;; Example: {'action': 'PutObject', 'args': ['keychain', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['keychain', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['bottle', 'endtable']}\n;; Example: {'action': 'PutObject', 'args': ['knife', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['cookedtomato', 'fridge']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['apple', 'garbagecan']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'couch']}\n;; Example: {'action': 'PutObject', 'args': ['tomato', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['tomato', 'microwave']}\n;; Example: {'action': 'PutObject', 'args': ['ladle', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'chair']}\n;; Example: {'action': 'PutObject', 'args': ['cellphone', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['cellphone', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sinks']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sinks']}\n;; Example: {'action': 'PutObject', 'args': ['bowl', 'pencil']}\n;; Example: {'action': 'PutObject', 'args': ['bowl', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['pencil', 'bowl']}\n;; Example: {'action': 'PutObject', 'args': ['handtowel', 'tub']}\n(:action PutObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle ?ot - otype ?rt - rtype)\n    :precondition (and\n            (holds ?a ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (or (not (openable ?r)) (opened ?r))    \n            \n            (objectType ?o ?ot)\n            (receptacleType ?r ?rt)\n            (canContain ?rt ?ot)\n            \n            )\n    :effect (and\n                (inReceptacle ?o ?r)\n                (objectAtLocation ?o ?l)\n                \n                (not (holds ?a ?o))\n                (not (holdsAny ?a))\n                (increase (total-cost) 1)\n            )\n )\n\n<END>\n\n;; Operator: GotoLocation\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['fridge']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['toaster']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['sockdrawer']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['pan']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['cabinet1']}\n;; Example: {'action': 'GotoLocation', 'args': ['slider']}\n;; Example: {'action': 'GotoLocation', 'args': ['vase']}\n;; Example: {'action': 'GotoLocation', 'args': ['coffee']}\n;; Example: {'action': 'GotoLocation', 'args': ['sidetable']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['armchair']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['wastebasket']}\n;; Example: {'action': 'GotoLocation', 'args': ['endtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['fridge']}\n;; Example: {'action': 'GotoLocation', 'args': ['trashcan']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['tabletop']}\n;; Example: {'action': 'GotoLocation', 'args': ['garbagecan']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['couch']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['cuttingboard']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['pan']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['stove']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['chair']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['bed']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['shower']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['shower']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['desk']}\n;; Example: {'action': 'GotoLocation', 'args': ['pencil']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['bowl']}\n;; Example: {'action': 'GotoLocation', 'args': ['washbasin']}\n;; Example: {'action': 'GotoLocation', 'args': ['tub']}\n(:action GotoLocation\n    :parameters (?a - agent ?lStart - location ?lEnd - location ?r - receptacle)\n    :precondition (and\n                    (atLocation ?a ?lStart)\n                    (receptacleAtLocation ?r ?lEnd)\n                    \n                  )\n    :effect (and\n                (not (atLocation ?a ?lStart))\n                (atLocation ?a ?lEnd)\n                \n                \n                \n                \n                \n                \n                \n                (increase (total-cost) 1)\n            )\n )\n\n<END>\n\n;; Operator: PickupObject\n;; Example: {'action': 'PickupObject', 'args': ['cup']}\n;; Example: {'action': 'PickupObject', 'args': ['cup']}\n;; Example: {'action': 'PickupObject', 'args': ['bread']}\n;; Example: {'action': 'PickupObject', 'args': ['bread']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['sponge']}\n;; Example: {'action': 'PickupObject', 'args': ['ladle']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['plate']}\n;; Example: {'action': 'PickupObject', 'args': ['plate']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['keychain']}\n;; Example: {'action': 'PickupObject', 'args': ['keychain']}\n;; Example: {'action': 'PickupObject', 'args': ['bottle']}\n;; Example: {'action': 'PickupObject', 'args': ['knife']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['coffee-maker']}\n;; Example: {'action': 'PickupObject', 'args': ['cookedtomato']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['apple']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['tomato']}\n;; Example: {'action': 'PickupObject', 'args': ['tomato']}\n;; Example: {'action': 'PickupObject', 'args': ['ladle']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['bowl']}\n;; Example: {'action': 'PickupObject', 'args': ['pencil']}\n;; Example: {'action': 'PickupObject', 'args': ['handtowel']}\n(:action PickupObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n    :precondition\n        (and\n            (pickupable ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            \n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))  \n            \n            (or (not (openable ?r)) (opened ?r))  \n            \n        )\n    :effect\n        (and\n            (not (inReceptacle ?o ?r))\n            (holds ?a ?o)\n            (holdsAny ?a)\n            (not (objectAtLocation ?o ?l))\n            \n            (increase (total-cost) 1)\n        )\n )\n\n<END>\n\n;; Operator: Move\n;; Example: {'action': 'Move', 'args': ['coffee-maker', 'countertop']}\n(:action Move",
        "codex_output": [
            "(:action Move\n    :parameters (?a - agent ?lStart - location ?lEnd - location ?o - object)\n    :precondition\n        (and\n            (moveable ?o)\n            (atLocation ?a ?lStart)\n            (objectAtLocation ?o ?lStart)  \n            (not (holdsAny ?a))            \n        )\n    :effect\n        (and\n            (objectAtLocation ?o ?lEnd)\n            (not (objectAtLocation ?o ?lStart))\n            (increase (total-cost) 1)\n        )\n )\n"
        ]
    },
    "WashObject": {
        "codex_prompt": ";;;; Define planning operators based on a PDDL domain and example usages.\n\n;;;; PDDL domain definition.\n(:requirements\n    :adl\n    :action-costs\n    :typing\n )\n(:types\n  agent\n  location\n  receptacle\n  object\n  rtype\n  otype\n  )\n(:predicates\n    (atLocation ?a - agent ?l - location)                     \n    (receptacleAtLocation ?r - receptacle ?l - location)      \n    (objectAtLocation ?o - object ?l - location)              \n    (openable ?r - receptacle)                                \n    (opened ?r - receptacle)                                  \n    (inReceptacle ?o - object ?r - receptacle)                \n    (isReceptacleObject ?o - object)                          \n    (inReceptacleObject ?innerObject - object ?outerObject - object)                \n    (isReceptacleObjectFull ?o - object)                      \n    (wasInReceptacle ?o - object ?r - receptacle)             \n    (checked ?r - receptacle)                                 \n    (examined ?l - location)                                  \n    (receptacleType ?r - receptacle ?t - rtype)               \n    (canContain ?rt - rtype ?ot - otype)                      \n    (objectType ?o - object ?t - otype)                       \n    (holds ?a - agent ?o - object)                            \n    (holdsAny ?a - agent)                                     \n    (holdsAnyReceptacleObject ?a - agent)                        \n    (full ?r - receptacle)                                    \n    (isClean ?o - object)                                     \n    (cleanable ?o - object)                                   \n    (isHot ?o - object)                                       \n    (heatable ?o - object)                                    \n    (isCool ?o - object)                                      \n    (coolable ?o - object)                                    \n    (pickupable ?o - object)                                   \n    (moveable ?o - object)                                      \n    (toggleable ?o - object)                                  \n    (isOn ?o - object)                                        \n    (isToggled ?o - object)                                   \n    (sliceable ?o - object)                                   \n    (isSliced ?o - object)                                    \n )\n(:functions\n    (distance ?from ?to)\n    (total-cost) - number\n   )\n\n;;;; Define operators based on examples of their usage and the PDDL domain definition above. Only use predicates and functions available in the PDDL domain.\n\n;; Operator: PutObject\n;; Example: {'action': 'PutObject', 'args': ['cup', 'fridge']}\n;; Example: {'action': 'PutObject', 'args': ['cup', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['bread', 'microwave']}\n;; Example: {'action': 'PutObject', 'args': ['bread', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['ladle', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['plate', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['plate', 'cabinet1']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'vase']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'coffee']}\n;; Example: {'action': 'PutObject', 'args': ['keychain', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['keychain', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['bottle', 'endtable']}\n;; Example: {'action': 'PutObject', 'args': ['knife', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['cookedtomato', 'fridge']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['apple', 'garbagecan']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'couch']}\n;; Example: {'action': 'PutObject', 'args': ['tomato', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['tomato', 'microwave']}\n;; Example: {'action': 'PutObject', 'args': ['ladle', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'chair']}\n;; Example: {'action': 'PutObject', 'args': ['cellphone', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['cellphone', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sinks']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sinks']}\n;; Example: {'action': 'PutObject', 'args': ['bowl', 'pencil']}\n;; Example: {'action': 'PutObject', 'args': ['bowl', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['pencil', 'bowl']}\n;; Example: {'action': 'PutObject', 'args': ['handtowel', 'tub']}\n(:action PutObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle ?ot - otype ?rt - rtype)\n    :precondition (and\n            (holds ?a ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (or (not (openable ?r)) (opened ?r))    \n            \n            (objectType ?o ?ot)\n            (receptacleType ?r ?rt)\n            (canContain ?rt ?ot)\n            \n            )\n    :effect (and\n                (inReceptacle ?o ?r)\n                (objectAtLocation ?o ?l)\n                \n                (not (holds ?a ?o))\n                (not (holdsAny ?a))\n                (increase (total-cost) 1)\n            )\n )\n\n<END>\n\n;; Operator: PickupObject\n;; Example: {'action': 'PickupObject', 'args': ['cup']}\n;; Example: {'action': 'PickupObject', 'args': ['cup']}\n;; Example: {'action': 'PickupObject', 'args': ['bread']}\n;; Example: {'action': 'PickupObject', 'args': ['bread']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['sponge']}\n;; Example: {'action': 'PickupObject', 'args': ['ladle']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['plate']}\n;; Example: {'action': 'PickupObject', 'args': ['plate']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['keychain']}\n;; Example: {'action': 'PickupObject', 'args': ['keychain']}\n;; Example: {'action': 'PickupObject', 'args': ['bottle']}\n;; Example: {'action': 'PickupObject', 'args': ['knife']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['coffee-maker']}\n;; Example: {'action': 'PickupObject', 'args': ['cookedtomato']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['apple']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['tomato']}\n;; Example: {'action': 'PickupObject', 'args': ['tomato']}\n;; Example: {'action': 'PickupObject', 'args': ['ladle']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['bowl']}\n;; Example: {'action': 'PickupObject', 'args': ['pencil']}\n;; Example: {'action': 'PickupObject', 'args': ['handtowel']}\n(:action PickupObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n    :precondition\n        (and\n            (pickupable ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            \n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))  \n            \n            (or (not (openable ?r)) (opened ?r))  \n            \n        )\n    :effect\n        (and\n            (not (inReceptacle ?o ?r))\n            (holds ?a ?o)\n            (holdsAny ?a)\n            (not (objectAtLocation ?o ?l))\n            \n            (increase (total-cost) 1)\n        )\n )\n\n<END>\n\n;; Operator: GotoLocation\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['fridge']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['toaster']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['sockdrawer']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['pan']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['cabinet1']}\n;; Example: {'action': 'GotoLocation', 'args': ['slider']}\n;; Example: {'action': 'GotoLocation', 'args': ['vase']}\n;; Example: {'action': 'GotoLocation', 'args': ['coffee']}\n;; Example: {'action': 'GotoLocation', 'args': ['sidetable']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['armchair']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['wastebasket']}\n;; Example: {'action': 'GotoLocation', 'args': ['endtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['fridge']}\n;; Example: {'action': 'GotoLocation', 'args': ['trashcan']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['tabletop']}\n;; Example: {'action': 'GotoLocation', 'args': ['garbagecan']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['couch']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['cuttingboard']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['pan']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['stove']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['chair']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['bed']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['shower']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['shower']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['desk']}\n;; Example: {'action': 'GotoLocation', 'args': ['pencil']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['bowl']}\n;; Example: {'action': 'GotoLocation', 'args': ['washbasin']}\n;; Example: {'action': 'GotoLocation', 'args': ['tub']}\n(:action GotoLocation\n    :parameters (?a - agent ?lStart - location ?lEnd - location ?r - receptacle)\n    :precondition (and\n                    (atLocation ?a ?lStart)\n                    (receptacleAtLocation ?r ?lEnd)\n                    \n                  )\n    :effect (and\n                (not (atLocation ?a ?lStart))\n                (atLocation ?a ?lEnd)\n                \n                \n                \n                \n                \n                \n                \n                (increase (total-cost) 1)\n            )\n )\n\n<END>\n\n;; Operator: WashObject\n;; Example: {'action': 'WashObject', 'args': ['soap', 'sink']}\n(:action WashObject",
        "codex_output": [
            "(:action WashObject\n    :parameters (?a - agent ?o - object ?r - receptacle)\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    :precondition (and\n        (holds ?a ?o)\n        (cleanable ?o)\n        (isClean ?o)\n        (atLocation ?a ?r)\n    )\n    :effect (and\n            \n            \n            \n            (isClean ?o)\n            \n            (increase (total-cost) 1)\n        )\n )\n"
        ]
    },
    "RunTool": {
        "codex_prompt": ";;;; Define planning operators based on a PDDL domain and example usages.\n\n;;;; PDDL domain definition.\n(:requirements\n    :adl\n    :action-costs\n    :typing\n )\n(:types\n  agent\n  location\n  receptacle\n  object\n  rtype\n  otype\n  )\n(:predicates\n    (atLocation ?a - agent ?l - location)                     \n    (receptacleAtLocation ?r - receptacle ?l - location)      \n    (objectAtLocation ?o - object ?l - location)              \n    (openable ?r - receptacle)                                \n    (opened ?r - receptacle)                                  \n    (inReceptacle ?o - object ?r - receptacle)                \n    (isReceptacleObject ?o - object)                          \n    (inReceptacleObject ?innerObject - object ?outerObject - object)                \n    (isReceptacleObjectFull ?o - object)                      \n    (wasInReceptacle ?o - object ?r - receptacle)             \n    (checked ?r - receptacle)                                 \n    (examined ?l - location)                                  \n    (receptacleType ?r - receptacle ?t - rtype)               \n    (canContain ?rt - rtype ?ot - otype)                      \n    (objectType ?o - object ?t - otype)                       \n    (holds ?a - agent ?o - object)                            \n    (holdsAny ?a - agent)                                     \n    (holdsAnyReceptacleObject ?a - agent)                        \n    (full ?r - receptacle)                                    \n    (isClean ?o - object)                                     \n    (cleanable ?o - object)                                   \n    (isHot ?o - object)                                       \n    (heatable ?o - object)                                    \n    (isCool ?o - object)                                      \n    (coolable ?o - object)                                    \n    (pickupable ?o - object)                                   \n    (moveable ?o - object)                                      \n    (toggleable ?o - object)                                  \n    (isOn ?o - object)                                        \n    (isToggled ?o - object)                                   \n    (sliceable ?o - object)                                   \n    (isSliced ?o - object)                                    \n )\n(:functions\n    (distance ?from ?to)\n    (total-cost) - number\n   )\n\n;;;; Define operators based on examples of their usage and the PDDL domain definition above. Only use predicates and functions available in the PDDL domain.\n\n;; Operator: PickupObject\n;; Example: {'action': 'PickupObject', 'args': ['cup']}\n;; Example: {'action': 'PickupObject', 'args': ['cup']}\n;; Example: {'action': 'PickupObject', 'args': ['bread']}\n;; Example: {'action': 'PickupObject', 'args': ['bread']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['sponge']}\n;; Example: {'action': 'PickupObject', 'args': ['ladle']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['plate']}\n;; Example: {'action': 'PickupObject', 'args': ['plate']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['keychain']}\n;; Example: {'action': 'PickupObject', 'args': ['keychain']}\n;; Example: {'action': 'PickupObject', 'args': ['bottle']}\n;; Example: {'action': 'PickupObject', 'args': ['knife']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['coffee-maker']}\n;; Example: {'action': 'PickupObject', 'args': ['cookedtomato']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['apple']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['tomato']}\n;; Example: {'action': 'PickupObject', 'args': ['tomato']}\n;; Example: {'action': 'PickupObject', 'args': ['ladle']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['bowl']}\n;; Example: {'action': 'PickupObject', 'args': ['pencil']}\n;; Example: {'action': 'PickupObject', 'args': ['handtowel']}\n(:action PickupObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n    :precondition\n        (and\n            (pickupable ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            \n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))  \n            \n            (or (not (openable ?r)) (opened ?r))  \n            \n        )\n    :effect\n        (and\n            (not (inReceptacle ?o ?r))\n            (holds ?a ?o)\n            (holdsAny ?a)\n            (not (objectAtLocation ?o ?l))\n            \n            (increase (total-cost) 1)\n        )\n )\n\n<END>\n\n;; Operator: PutObject\n;; Example: {'action': 'PutObject', 'args': ['cup', 'fridge']}\n;; Example: {'action': 'PutObject', 'args': ['cup', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['bread', 'microwave']}\n;; Example: {'action': 'PutObject', 'args': ['bread', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['ladle', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['plate', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['plate', 'cabinet1']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'vase']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'coffee']}\n;; Example: {'action': 'PutObject', 'args': ['keychain', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['keychain', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['bottle', 'endtable']}\n;; Example: {'action': 'PutObject', 'args': ['knife', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['cookedtomato', 'fridge']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['apple', 'garbagecan']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'couch']}\n;; Example: {'action': 'PutObject', 'args': ['tomato', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['tomato', 'microwave']}\n;; Example: {'action': 'PutObject', 'args': ['ladle', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'chair']}\n;; Example: {'action': 'PutObject', 'args': ['cellphone', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['cellphone', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sinks']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sinks']}\n;; Example: {'action': 'PutObject', 'args': ['bowl', 'pencil']}\n;; Example: {'action': 'PutObject', 'args': ['bowl', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['pencil', 'bowl']}\n;; Example: {'action': 'PutObject', 'args': ['handtowel', 'tub']}\n(:action PutObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle ?ot - otype ?rt - rtype)\n    :precondition (and\n            (holds ?a ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (or (not (openable ?r)) (opened ?r))    \n            \n            (objectType ?o ?ot)\n            (receptacleType ?r ?rt)\n            (canContain ?rt ?ot)\n            \n            )\n    :effect (and\n                (inReceptacle ?o ?r)\n                (objectAtLocation ?o ?l)\n                \n                (not (holds ?a ?o))\n                (not (holdsAny ?a))\n                (increase (total-cost) 1)\n            )\n )\n\n<END>\n\n;; Operator: GotoLocation\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['fridge']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['toaster']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['sockdrawer']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['pan']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['cabinet1']}\n;; Example: {'action': 'GotoLocation', 'args': ['slider']}\n;; Example: {'action': 'GotoLocation', 'args': ['vase']}\n;; Example: {'action': 'GotoLocation', 'args': ['coffee']}\n;; Example: {'action': 'GotoLocation', 'args': ['sidetable']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['armchair']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['wastebasket']}\n;; Example: {'action': 'GotoLocation', 'args': ['endtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['fridge']}\n;; Example: {'action': 'GotoLocation', 'args': ['trashcan']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['tabletop']}\n;; Example: {'action': 'GotoLocation', 'args': ['garbagecan']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['couch']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['cuttingboard']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['pan']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['stove']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['chair']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['bed']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['shower']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['shower']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['desk']}\n;; Example: {'action': 'GotoLocation', 'args': ['pencil']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['bowl']}\n;; Example: {'action': 'GotoLocation', 'args': ['washbasin']}\n;; Example: {'action': 'GotoLocation', 'args': ['tub']}\n(:action GotoLocation\n    :parameters (?a - agent ?lStart - location ?lEnd - location ?r - receptacle)\n    :precondition (and\n                    (atLocation ?a ?lStart)\n                    (receptacleAtLocation ?r ?lEnd)\n                    \n                  )\n    :effect (and\n                (not (atLocation ?a ?lStart))\n                (atLocation ?a ?lEnd)\n                \n                \n                \n                \n                \n                \n                \n                (increase (total-cost) 1)\n            )\n )\n\n<END>\n\n;; Operator: RunTool\n;; Example: {'action': 'RunTool', 'args': ['sink', 'water', 'faucet']}\n;; Example: {'action': 'RunTool', 'args': ['sink', 'vacuum']}\n(:action RunTool",
        "codex_output": [
            "(:action RunTool\n    :parameters (?a - agent ?l - location ?r - receptacle ?func - string)\n    :precondition (and\n                    (atLocation ?a ?l)\n                    (receptacleAtLocation ?r ?l)\n                    (or (not (openable ?r)) (opened ?r))\n                    \n                  )\n    :effect ()\n )\n"
        ]
    },
    "HealThermalThermalObject": {
        "codex_prompt": ";;;; Define planning operators based on a PDDL domain and example usages.\n\n;;;; PDDL domain definition.\n(:requirements\n    :adl\n    :action-costs\n    :typing\n )\n(:types\n  agent\n  location\n  receptacle\n  object\n  rtype\n  otype\n  )\n(:predicates\n    (atLocation ?a - agent ?l - location)                     \n    (receptacleAtLocation ?r - receptacle ?l - location)      \n    (objectAtLocation ?o - object ?l - location)              \n    (openable ?r - receptacle)                                \n    (opened ?r - receptacle)                                  \n    (inReceptacle ?o - object ?r - receptacle)                \n    (isReceptacleObject ?o - object)                          \n    (inReceptacleObject ?innerObject - object ?outerObject - object)                \n    (isReceptacleObjectFull ?o - object)                      \n    (wasInReceptacle ?o - object ?r - receptacle)             \n    (checked ?r - receptacle)                                 \n    (examined ?l - location)                                  \n    (receptacleType ?r - receptacle ?t - rtype)               \n    (canContain ?rt - rtype ?ot - otype)                      \n    (objectType ?o - object ?t - otype)                       \n    (holds ?a - agent ?o - object)                            \n    (holdsAny ?a - agent)                                     \n    (holdsAnyReceptacleObject ?a - agent)                        \n    (full ?r - receptacle)                                    \n    (isClean ?o - object)                                     \n    (cleanable ?o - object)                                   \n    (isHot ?o - object)                                       \n    (heatable ?o - object)                                    \n    (isCool ?o - object)                                      \n    (coolable ?o - object)                                    \n    (pickupable ?o - object)                                   \n    (moveable ?o - object)                                      \n    (toggleable ?o - object)                                  \n    (isOn ?o - object)                                        \n    (isToggled ?o - object)                                   \n    (sliceable ?o - object)                                   \n    (isSliced ?o - object)                                    \n )\n(:functions\n    (distance ?from ?to)\n    (total-cost) - number\n   )\n\n;;;; Define operators based on examples of their usage and the PDDL domain definition above. Only use predicates and functions available in the PDDL domain.\n\n;; Operator: PutObject\n;; Example: {'action': 'PutObject', 'args': ['cup', 'fridge']}\n;; Example: {'action': 'PutObject', 'args': ['cup', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['bread', 'microwave']}\n;; Example: {'action': 'PutObject', 'args': ['bread', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['ladle', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['plate', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['plate', 'cabinet1']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'vase']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'coffee']}\n;; Example: {'action': 'PutObject', 'args': ['keychain', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['keychain', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['bottle', 'endtable']}\n;; Example: {'action': 'PutObject', 'args': ['knife', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['cookedtomato', 'fridge']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['apple', 'garbagecan']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'couch']}\n;; Example: {'action': 'PutObject', 'args': ['tomato', 'sink']}\n;; Example: {'action': 'PutObject', 'args': ['tomato', 'microwave']}\n;; Example: {'action': 'PutObject', 'args': ['ladle', 'pan']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['pan', 'diningtable']}\n;; Example: {'action': 'PutObject', 'args': ['box', 'chair']}\n;; Example: {'action': 'PutObject', 'args': ['cellphone', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['cellphone', 'dresser']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sinks']}\n;; Example: {'action': 'PutObject', 'args': ['soap', 'sinks']}\n;; Example: {'action': 'PutObject', 'args': ['bowl', 'pencil']}\n;; Example: {'action': 'PutObject', 'args': ['bowl', 'countertop']}\n;; Example: {'action': 'PutObject', 'args': ['pencil', 'bowl']}\n;; Example: {'action': 'PutObject', 'args': ['handtowel', 'tub']}\n(:action PutObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle ?ot - otype ?rt - rtype)\n    :precondition (and\n            (holds ?a ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (or (not (openable ?r)) (opened ?r))    \n            \n            (objectType ?o ?ot)\n            (receptacleType ?r ?rt)\n            (canContain ?rt ?ot)\n            \n            )\n    :effect (and\n                (inReceptacle ?o ?r)\n                (objectAtLocation ?o ?l)\n                \n                (not (holds ?a ?o))\n                (not (holdsAny ?a))\n                (increase (total-cost) 1)\n            )\n )\n\n<END>\n\n;; Operator: GotoLocation\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['fridge']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['toaster']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['sockdrawer']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['pan']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['cabinet1']}\n;; Example: {'action': 'GotoLocation', 'args': ['slider']}\n;; Example: {'action': 'GotoLocation', 'args': ['vase']}\n;; Example: {'action': 'GotoLocation', 'args': ['coffee']}\n;; Example: {'action': 'GotoLocation', 'args': ['sidetable']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['armchair']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['wastebasket']}\n;; Example: {'action': 'GotoLocation', 'args': ['endtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['fridge']}\n;; Example: {'action': 'GotoLocation', 'args': ['trashcan']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['tabletop']}\n;; Example: {'action': 'GotoLocation', 'args': ['garbagecan']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['couch']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['cuttingboard']}\n;; Example: {'action': 'GotoLocation', 'args': ['sink']}\n;; Example: {'action': 'GotoLocation', 'args': ['microwave']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['pan']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['stove']}\n;; Example: {'action': 'GotoLocation', 'args': ['diningtable']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['chair']}\n;; Example: {'action': 'GotoLocation', 'args': ['shelf']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['bed']}\n;; Example: {'action': 'GotoLocation', 'args': ['dresser']}\n;; Example: {'action': 'GotoLocation', 'args': ['shower']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['shower']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['desk']}\n;; Example: {'action': 'GotoLocation', 'args': ['pencil']}\n;; Example: {'action': 'GotoLocation', 'args': ['countertop']}\n;; Example: {'action': 'GotoLocation', 'args': ['bowl']}\n;; Example: {'action': 'GotoLocation', 'args': ['washbasin']}\n;; Example: {'action': 'GotoLocation', 'args': ['tub']}\n(:action GotoLocation\n    :parameters (?a - agent ?lStart - location ?lEnd - location ?r - receptacle)\n    :precondition (and\n                    (atLocation ?a ?lStart)\n                    (receptacleAtLocation ?r ?lEnd)\n                    \n                  )\n    :effect (and\n                (not (atLocation ?a ?lStart))\n                (atLocation ?a ?lEnd)\n                \n                \n                \n                \n                \n                \n                \n                (increase (total-cost) 1)\n            )\n )\n\n<END>\n\n;; Operator: PickupObject\n;; Example: {'action': 'PickupObject', 'args': ['cup']}\n;; Example: {'action': 'PickupObject', 'args': ['cup']}\n;; Example: {'action': 'PickupObject', 'args': ['bread']}\n;; Example: {'action': 'PickupObject', 'args': ['bread']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['sponge']}\n;; Example: {'action': 'PickupObject', 'args': ['ladle']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['plate']}\n;; Example: {'action': 'PickupObject', 'args': ['plate']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['keychain']}\n;; Example: {'action': 'PickupObject', 'args': ['keychain']}\n;; Example: {'action': 'PickupObject', 'args': ['bottle']}\n;; Example: {'action': 'PickupObject', 'args': ['knife']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['coffee-maker']}\n;; Example: {'action': 'PickupObject', 'args': ['cookedtomato']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['apple']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['tomato']}\n;; Example: {'action': 'PickupObject', 'args': ['tomato']}\n;; Example: {'action': 'PickupObject', 'args': ['ladle']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['pan']}\n;; Example: {'action': 'PickupObject', 'args': ['box']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['cellphone']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['soap']}\n;; Example: {'action': 'PickupObject', 'args': ['bowl']}\n;; Example: {'action': 'PickupObject', 'args': ['pencil']}\n;; Example: {'action': 'PickupObject', 'args': ['handtowel']}\n(:action PickupObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n    :precondition\n        (and\n            (pickupable ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            \n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))  \n            \n            (or (not (openable ?r)) (opened ?r))  \n            \n        )\n    :effect\n        (and\n            (not (inReceptacle ?o ?r))\n            (holds ?a ?o)\n            (holdsAny ?a)\n            (not (objectAtLocation ?o ?l))\n            \n            (increase (total-cost) 1)\n        )\n )\n\n<END>\n\n;; Operator: HealThermalThermalObject\n;; Example: {'action': 'HealThermalThermalObject', 'args': ['pan']}\n(:action HealThermalThermalObject",
        "codex_output": [
            "(:action HealThermalThermalObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n    :precondition (and\n        (or (isCool ?o) (isCold ?o))\n        (heatable ?o)\n        (pickupable ?o)\n        (atLocation ?a ?l)\n        (receptacleAtLocation ?r ?l)\n        \n        (inReceptacle ?o ?r)\n        (holds ?a ?o)\n        (not (isCool ?o))\n        (not (isCold ?o))\n        \n        (or (not (openable ?r)) (opened ?r))  \n        \n    )\n    :effect (and\n            (isHot ?o)\n            (wasInReceptacle ?o ?r)            \n            (inReceptacle ?o ?r)\n            \n            (objectAtLocation ?o ?l)\n            (holds ?a ?o)\n              \n            (isReceptacleObject ?o)\n            \n            (holdsAny ?a)\n            \n            (increase (total-cost) 1"
        ]
    }
}