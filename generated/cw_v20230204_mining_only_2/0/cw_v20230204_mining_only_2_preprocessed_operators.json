{"mine-wood": "(:action mine-wood\n        :parameters (?t - tile ?tool - object ?targetinv - inventory ?x - object ?target - object ?toolinv - inventory)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x Tree)\n\t\t(object-of-type ?target Hypothetical)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?tool Axe)\n\t\t)\n        :effect (and \n\t\t(object-of-type ?target Wood)\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (inventory-empty ?targetinv))\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t)\n)", "mine-wool1": "(:action mine-wool1\n        :parameters (?tool - object ?targetinv - inventory ?x - object ?target - object)\n\n        :precondition (and \n\t\t(object-of-type ?tool Shears)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t(object-of-type ?x Sheep)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Wool)\n\t\t)\n)", "plant-potato": "(:action plant-potato\n        :parameters (?iteminv - inventory ?t - tile ?x151 - object ?holdinv - inventory ?x90 - object)\n\n        :precondition (and \n\t\t(inventory-holding ?holdinv ?x90)\n\t\t(object-of-type ?x90 Potato)\n\t\t(inventory-empty ?iteminv)\n\t\t(inventory-empty ?iteminv)\n\t\t)\n        :effect (and \n\t\t(inventory-holding ?holdinv ?x90)\n\t\t(object-at ?x151 ?t)\n\t\t(not (inventory-empty ?iteminv))\n\t\t(not (object-of-type ?x151 Hypothetical))\n\t\t(object-of-type ?x151 Potato)\n\t\t)\n)", "wail": "(:action plant-potato\n        :parameters (?iteminv - inventory ?t - tile ?x151 - object ?holdinv - inventory ?x90 - object)\n\n        :precondition (and \n\t\t(inventory-holding ?holdinv ?x90)\n\t\t(object-of-type ?x90 Potato)\n\t\t(inventory-empty ?iteminv)\n\t\t(inventory-empty ?iteminv)\n\t\t)\n        :effect (and \n\t\t(inventory-holding ?holdinv ?x90)\n\t\t(object-at ?x151 ?t)\n\t\t(not (inventory-empty ?iteminv))\n\t\t(not (object-of-type ?x151 Hypothetical))\n\t\t(object-of-type ?x151 Potato)\n\t\t)\n)", "place": "(:action place\n        :parameters (?t - tile ?x - object ?i - inventory)\n\n        :precondition (and \n\t\t(inventory-holding ?i ?x)\n\t\t(agent-at ?t)\n\t\t(inventory-empty ?i)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?i))\n\t\t(inventory-holding ?i ?x)\n\t\t(not (agent-at ?t))\n\t\t(object-at ?x ?t)\n\t\t)\n)", "mine-potatoes": "(:action mine-potatoes\n        :parameters (?t - tile ?tool - object ?targetinv - inventory ?x - object ?target - object ?toolinv - inventory)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x PotatoPlant)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Axe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Potato)\n\t\t)\n)", "mine-sugar-cane": "(:action mine-potatoes\n        :parameters (?t - tile ?tool - object ?targetinv - inventory ?x - object ?target - object ?toolinv - inventory)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x PotatoPlant)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Axe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Potato)\n\t\t)\n)", "mine-gold-ore": "(:action mine-gold-ore\n        :parameters (?t - tile ?tool - object ?target - object ?targetinv - inventory ?x - object ?i - inventory)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x GoldOreVein)\n\t\t(inventory-holding ?i ?tool)\n\t\t(object-of-type ?tool Pickaxe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target GoldOre)\n\t\t)\n)"}