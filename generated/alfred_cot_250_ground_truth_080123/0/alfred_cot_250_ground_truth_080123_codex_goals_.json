{"train/look_at_obj_in_light-Statue-None-FloorLamp-205/trial_T20190908_103342_172151": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Box - object\n        Plate - object\n        Statue - object\n        Pan - object\n        ToiletPaperRoll - object\n        SoapBar - object\n        HousePlant - object\n        PaperTowelRoll - object\n        Apple - object\n        Window - object\n        Blinds - object\n        LightSwitch - object\n        SoapBottle - object\n        Vase - object\n        FloorLamp - object\n        Lettuce - object\n        TeddyBear - object\n        PepperShaker - object\n        Mug - object\n        Mirror - object\n        PaperTowel - object\n        HandTowel - object\n        Cup - object\n        Sink - object\n        Spatula - object\n        Curtains - object\n        Fork - object\n        SprayBottle - object\n        Spoon - object\n        BaseballBat - object\n        DeskLamp - object\n        Footstool - object\n        Television - object\n        Poster - object\n        ShowerGlass - object\n        WateringCan - object\n        Ladle - object\n        Towel - object\n        Laptop - object\n        Pillow - object\n        TennisRacket - object\n        WineBottle - object\n        ButterKnife - object\n        Egg - object\n        Tomato - object\n        Pencil - object\n        Watch - object\n        RemoteControl - object\n        LaundryHamperLid - object\n        Cloth - object\n        CD - object\n        DishSponge - object\n        Chair - object\n        Glassbottle - object\n        StoveKnob - object\n        Plunger - object\n        KeyChain - object\n        Bowl - object\n        Bathtub - object\n        BasketBall - object\n        CellPhone - object\n        Bread - object\n        ScrubBrush - object\n        Kettle - object\n        ToiletPaper - object\n        Book - object\n        Pen - object\n        Newspaper - object\n        Boots - object\n        Candle - object\n        SaltShaker - object\n        AlarmClock - object\n        Pot - object\n        Knife - object\n        Painting - object\n        Potato - object\n        CreditCard - object\n        TissueBox - object\n        ShowerDoor - object\n        Toaster - object\n        BoxType - otype\n        PlateType - otype\n        StatueType - otype\n        PanType - otype\n        ToiletPaperRollType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        PaperTowelRollType - otype\n        AppleType - otype\n        WindowType - otype\n        BlindsType - otype\n        LightSwitchType - otype\n        SoapBottleType - otype\n        VaseType - otype\n        FloorLampType - otype\n        LettuceType - otype\n        TeddyBearType - otype\n        PepperShakerType - otype\n        MugType - otype\n        MirrorType - otype\n        PaperTowelType - otype\n        HandTowelType - otype\n        CupType - otype\n        SinkType - otype\n        SpatulaType - otype\n        CurtainsType - otype\n        ForkType - otype\n        SprayBottleType - otype\n        SpoonType - otype\n        BaseballBatType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        TelevisionType - otype\n        PosterType - otype\n        ShowerGlassType - otype\n        WateringCanType - otype\n        LadleType - otype\n        TowelType - otype\n        LaptopType - otype\n        PillowType - otype\n        TennisRacketType - otype\n        WineBottleType - otype\n        ButterKnifeType - otype\n        EggType - otype\n        TomatoType - otype\n        PencilType - otype\n        WatchType - otype\n        RemoteControlType - otype\n        LaundryHamperLidType - otype\n        ClothType - otype\n        CDType - otype\n        DishSpongeType - otype\n        ChairType - otype\n        GlassbottleType - otype\n        StoveKnobType - otype\n        PlungerType - otype\n        KeyChainType - otype\n        BowlType - otype\n        BathtubType - otype\n        BasketBallType - otype\n        CellPhoneType - otype\n        BreadType - otype\n        ScrubBrushType - otype\n        KettleType - otype\n        ToiletPaperType - otype\n        BookType - otype\n        PenType - otype\n        NewspaperType - otype\n        BootsType - otype\n        CandleType - otype\n        SaltShakerType - otype\n        AlarmClockType - otype\n        PotType - otype\n        KnifeType - otype\n        PaintingType - otype\n        PotatoType - otype\n        CreditCardType - otype\n        TissueBoxType - otype\n        ShowerDoorType - otype\n        ToasterType - otype\n        ShelfType - rtype\n        SafeType - rtype\n        LaundryHamperType - rtype\n        MicrowaveType - rtype\n        CoffeeMachineType - rtype\n        BedType - rtype\n        SinkBasinType - rtype\n        CabinetType - rtype\n        BathtubBasinType - rtype\n        GarbageCanType - rtype\n        ArmChairType - rtype\n        SideTableType - rtype\n        ToiletPaperHangerType - rtype\n        CoffeeTableType - rtype\n        DiningTableType - rtype\n        DresserType - rtype\n        ToiletType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        FridgeType - rtype\n        HandTowelHolderType - rtype\n        CounterTopType - rtype\n        TowelHolderType - rtype\n        OttomanType - rtype\n        SofaType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nlook at a statue by the lamp.\n", "codex_output": [";; Simplified Goal: \nlook_at_obj_in_light-Statue-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o StatueType)\n            )\n    )))))\n\n<END>", ";; Simplified Goal: \nlook_at_obj_in_light-Statue-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o StatueType)\n                (holds ?a ?o)\n            )\n    ))))))", "pick_and_place_simple-Statue-None-FloorLamp", ";; Simplified Goal: \nlook_at_obj_in_light-Statue-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o StatueType)\n            )\n    ))))))\n    \n\n<END>"]}, "train/pick_cool_then_place_in_recep-Pan-None-CounterTop-7/trial_T20190909_072619_689367": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Tomato - object\n        Footstool - object\n        KeyChain - object\n        ShowerGlass - object\n        Sink - object\n        Vase - object\n        TeddyBear - object\n        WateringCan - object\n        PepperShaker - object\n        Lettuce - object\n        Pencil - object\n        TissueBox - object\n        Newspaper - object\n        ShowerDoor - object\n        HousePlant - object\n        TennisRacket - object\n        HandTowel - object\n        Spoon - object\n        Television - object\n        DishSponge - object\n        Knife - object\n        CreditCard - object\n        LaundryHamperLid - object\n        Blinds - object\n        Painting - object\n        SaltShaker - object\n        DeskLamp - object\n        Pot - object\n        SprayBottle - object\n        Mug - object\n        Watch - object\n        Pan - object\n        Cup - object\n        Egg - object\n        Book - object\n        ToiletPaper - object\n        SoapBar - object\n        Pillow - object\n        SoapBottle - object\n        BasketBall - object\n        CD - object\n        Ladle - object\n        Towel - object\n        Fork - object\n        Chair - object\n        Box - object\n        BaseballBat - object\n        CellPhone - object\n        StoveKnob - object\n        PaperTowel - object\n        Window - object\n        Potato - object\n        WineBottle - object\n        ScrubBrush - object\n        Apple - object\n        Poster - object\n        ToiletPaperRoll - object\n        AlarmClock - object\n        Bread - object\n        Bathtub - object\n        Cloth - object\n        Statue - object\n        PaperTowelRoll - object\n        Laptop - object\n        Boots - object\n        Bowl - object\n        Toaster - object\n        Kettle - object\n        RemoteControl - object\n        Mirror - object\n        Candle - object\n        Curtains - object\n        Pen - object\n        ButterKnife - object\n        Spatula - object\n        LightSwitch - object\n        Plate - object\n        Glassbottle - object\n        Plunger - object\n        FloorLamp - object\n        TomatoType - otype\n        FootstoolType - otype\n        KeyChainType - otype\n        ShowerGlassType - otype\n        SinkType - otype\n        VaseType - otype\n        TeddyBearType - otype\n        WateringCanType - otype\n        PepperShakerType - otype\n        LettuceType - otype\n        PencilType - otype\n        TissueBoxType - otype\n        NewspaperType - otype\n        ShowerDoorType - otype\n        HousePlantType - otype\n        TennisRacketType - otype\n        HandTowelType - otype\n        SpoonType - otype\n        TelevisionType - otype\n        DishSpongeType - otype\n        KnifeType - otype\n        CreditCardType - otype\n        LaundryHamperLidType - otype\n        BlindsType - otype\n        PaintingType - otype\n        SaltShakerType - otype\n        DeskLampType - otype\n        PotType - otype\n        SprayBottleType - otype\n        MugType - otype\n        WatchType - otype\n        PanType - otype\n        CupType - otype\n        EggType - otype\n        BookType - otype\n        ToiletPaperType - otype\n        SoapBarType - otype\n        PillowType - otype\n        SoapBottleType - otype\n        BasketBallType - otype\n        CDType - otype\n        LadleType - otype\n        TowelType - otype\n        ForkType - otype\n        ChairType - otype\n        BoxType - otype\n        BaseballBatType - otype\n        CellPhoneType - otype\n        StoveKnobType - otype\n        PaperTowelType - otype\n        WindowType - otype\n        PotatoType - otype\n        WineBottleType - otype\n        ScrubBrushType - otype\n        AppleType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        AlarmClockType - otype\n        BreadType - otype\n        BathtubType - otype\n        ClothType - otype\n        StatueType - otype\n        PaperTowelRollType - otype\n        LaptopType - otype\n        BootsType - otype\n        BowlType - otype\n        ToasterType - otype\n        KettleType - otype\n        RemoteControlType - otype\n        MirrorType - otype\n        CandleType - otype\n        CurtainsType - otype\n        PenType - otype\n        ButterKnifeType - otype\n        SpatulaType - otype\n        LightSwitchType - otype\n        PlateType - otype\n        GlassbottleType - otype\n        PlungerType - otype\n        FloorLampType - otype\n        DrawerType - rtype\n        HandTowelHolderType - rtype\n        DeskType - rtype\n        SinkBasinType - rtype\n        CounterTopType - rtype\n        CoffeeTableType - rtype\n        BedType - rtype\n        SideTableType - rtype\n        BathtubBasinType - rtype\n        ArmChairType - rtype\n        DresserType - rtype\n        StoveBurnerType - rtype\n        DiningTableType - rtype\n        GarbageCanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        CabinetType - rtype\n        SofaType - rtype\n        ShelfType - rtype\n        ToiletType - rtype\n        LaundryHamperType - rtype\n        MicrowaveType - rtype\n        OttomanType - rtype\n        CartType - rtype\n        SafeType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nmove pot to refrigerator then to counter.\n", "codex_output": [";; Simplified Goal: \npick_and_place_simple-Pot-None-Fridge\npick_and_place_simple-Pot-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-Pot-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-Pot-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_and_place_simple-Pot-None-Fridge then pick_and_place_simple-Pot-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r1 - receptacle) \n\t(exists (?r2 - receptacle)\n        (exists (?o - object)\n        (exists (?l1 - location) \n\t(exists (?l2 - location)\n            (and \n                (objectType ?o PotType) \n\t\t(receptacleType ?r1 FridgeType)\n\t\t(receptacleType ?r2 CounterTopType)\n\t\t(inReceptacle ?o ?r1)\n\t\t(atLocation ?o ?l1)\n\t\t(atLocation ?r1 ?l1)\n\t\t(atLocation ?r2 ?l2)\n\t\t\n            )\n    ))))))\n<END>"]}, "train/pick_cool_then_place_in_recep-Pot-None-CounterTop-24/trial_T20190907_002332_305243": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        LightSwitch - object\n        Knife - object\n        LaundryHamperLid - object\n        Kettle - object\n        Pillow - object\n        ToiletPaperRoll - object\n        Blinds - object\n        Newspaper - object\n        Painting - object\n        ShowerGlass - object\n        Bathtub - object\n        HandTowel - object\n        Spatula - object\n        AlarmClock - object\n        BaseballBat - object\n        TennisRacket - object\n        Mug - object\n        Lettuce - object\n        Fork - object\n        Egg - object\n        CreditCard - object\n        Laptop - object\n        Candle - object\n        Book - object\n        RemoteControl - object\n        Statue - object\n        KeyChain - object\n        TeddyBear - object\n        Bowl - object\n        Tomato - object\n        PaperTowel - object\n        Toaster - object\n        Sink - object\n        Apple - object\n        Poster - object\n        SoapBottle - object\n        Spoon - object\n        Bread - object\n        Watch - object\n        ToiletPaper - object\n        BasketBall - object\n        CD - object\n        HousePlant - object\n        Potato - object\n        Cloth - object\n        Curtains - object\n        Pot - object\n        StoveKnob - object\n        Pen - object\n        Box - object\n        SprayBottle - object\n        ShowerDoor - object\n        Plunger - object\n        Footstool - object\n        Ladle - object\n        Television - object\n        Chair - object\n        SaltShaker - object\n        ButterKnife - object\n        Pan - object\n        Plate - object\n        WateringCan - object\n        Cup - object\n        Mirror - object\n        CellPhone - object\n        Towel - object\n        Boots - object\n        DeskLamp - object\n        PepperShaker - object\n        Window - object\n        Vase - object\n        ScrubBrush - object\n        TissueBox - object\n        PaperTowelRoll - object\n        Pencil - object\n        DishSponge - object\n        FloorLamp - object\n        SoapBar - object\n        WineBottle - object\n        Glassbottle - object\n        LightSwitchType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        KettleType - otype\n        PillowType - otype\n        ToiletPaperRollType - otype\n        BlindsType - otype\n        NewspaperType - otype\n        PaintingType - otype\n        ShowerGlassType - otype\n        BathtubType - otype\n        HandTowelType - otype\n        SpatulaType - otype\n        AlarmClockType - otype\n        BaseballBatType - otype\n        TennisRacketType - otype\n        MugType - otype\n        LettuceType - otype\n        ForkType - otype\n        EggType - otype\n        CreditCardType - otype\n        LaptopType - otype\n        CandleType - otype\n        BookType - otype\n        RemoteControlType - otype\n        StatueType - otype\n        KeyChainType - otype\n        TeddyBearType - otype\n        BowlType - otype\n        TomatoType - otype\n        PaperTowelType - otype\n        ToasterType - otype\n        SinkType - otype\n        AppleType - otype\n        PosterType - otype\n        SoapBottleType - otype\n        SpoonType - otype\n        BreadType - otype\n        WatchType - otype\n        ToiletPaperType - otype\n        BasketBallType - otype\n        CDType - otype\n        HousePlantType - otype\n        PotatoType - otype\n        ClothType - otype\n        CurtainsType - otype\n        PotType - otype\n        StoveKnobType - otype\n        PenType - otype\n        BoxType - otype\n        SprayBottleType - otype\n        ShowerDoorType - otype\n        PlungerType - otype\n        FootstoolType - otype\n        LadleType - otype\n        TelevisionType - otype\n        ChairType - otype\n        SaltShakerType - otype\n        ButterKnifeType - otype\n        PanType - otype\n        PlateType - otype\n        WateringCanType - otype\n        CupType - otype\n        MirrorType - otype\n        CellPhoneType - otype\n        TowelType - otype\n        BootsType - otype\n        DeskLampType - otype\n        PepperShakerType - otype\n        WindowType - otype\n        VaseType - otype\n        ScrubBrushType - otype\n        TissueBoxType - otype\n        PaperTowelRollType - otype\n        PencilType - otype\n        DishSpongeType - otype\n        FloorLampType - otype\n        SoapBarType - otype\n        WineBottleType - otype\n        GlassbottleType - otype\n        CabinetType - rtype\n        DrawerType - rtype\n        MicrowaveType - rtype\n        ArmChairType - rtype\n        DiningTableType - rtype\n        SideTableType - rtype\n        CounterTopType - rtype\n        LaundryHamperType - rtype\n        ToiletType - rtype\n        SinkBasinType - rtype\n        ToiletPaperHangerType - rtype\n        BedType - rtype\n        ShelfType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        CoffeeTableType - rtype\n        FridgeType - rtype\n        DeskType - rtype\n        CartType - rtype\n        HandTowelHolderType - rtype\n        SofaType - rtype\n        SafeType - rtype\n        GarbageCanType - rtype\n        OttomanType - rtype\n        CoffeeMachineType - rtype\n        StoveBurnerType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nplace a cooled pan down on the kitchen counter corner.\n", "codex_output": [";; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))"]}, "train/pick_and_place_simple-Glassbottle-None-Fridge-16/trial_T20190908_045933_322597": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Painting - object\n        PaperTowel - object\n        KeyChain - object\n        LaundryHamperLid - object\n        CellPhone - object\n        Watch - object\n        Potato - object\n        HousePlant - object\n        Fork - object\n        Spoon - object\n        BaseballBat - object\n        Statue - object\n        WateringCan - object\n        SprayBottle - object\n        SoapBottle - object\n        TennisRacket - object\n        StoveKnob - object\n        Cup - object\n        Bathtub - object\n        LightSwitch - object\n        AlarmClock - object\n        Toaster - object\n        Pot - object\n        Kettle - object\n        Footstool - object\n        PaperTowelRoll - object\n        Spatula - object\n        Plate - object\n        ToiletPaper - object\n        Bowl - object\n        SoapBar - object\n        Candle - object\n        Plunger - object\n        BasketBall - object\n        Newspaper - object\n        ShowerDoor - object\n        Blinds - object\n        PepperShaker - object\n        DishSponge - object\n        HandTowel - object\n        Apple - object\n        Egg - object\n        TissueBox - object\n        Book - object\n        FloorLamp - object\n        Poster - object\n        Pan - object\n        Vase - object\n        Lettuce - object\n        SaltShaker - object\n        Mug - object\n        Curtains - object\n        Pillow - object\n        Knife - object\n        Bread - object\n        Glassbottle - object\n        Tomato - object\n        Cloth - object\n        Window - object\n        Chair - object\n        Towel - object\n        ButterKnife - object\n        Laptop - object\n        ToiletPaperRoll - object\n        Pen - object\n        ShowerGlass - object\n        CreditCard - object\n        Sink - object\n        ScrubBrush - object\n        RemoteControl - object\n        Box - object\n        CD - object\n        Pencil - object\n        DeskLamp - object\n        Ladle - object\n        Television - object\n        Mirror - object\n        TeddyBear - object\n        Boots - object\n        WineBottle - object\n        PaintingType - otype\n        PaperTowelType - otype\n        KeyChainType - otype\n        LaundryHamperLidType - otype\n        CellPhoneType - otype\n        WatchType - otype\n        PotatoType - otype\n        HousePlantType - otype\n        ForkType - otype\n        SpoonType - otype\n        BaseballBatType - otype\n        StatueType - otype\n        WateringCanType - otype\n        SprayBottleType - otype\n        SoapBottleType - otype\n        TennisRacketType - otype\n        StoveKnobType - otype\n        CupType - otype\n        BathtubType - otype\n        LightSwitchType - otype\n        AlarmClockType - otype\n        ToasterType - otype\n        PotType - otype\n        KettleType - otype\n        FootstoolType - otype\n        PaperTowelRollType - otype\n        SpatulaType - otype\n        PlateType - otype\n        ToiletPaperType - otype\n        BowlType - otype\n        SoapBarType - otype\n        CandleType - otype\n        PlungerType - otype\n        BasketBallType - otype\n        NewspaperType - otype\n        ShowerDoorType - otype\n        BlindsType - otype\n        PepperShakerType - otype\n        DishSpongeType - otype\n        HandTowelType - otype\n        AppleType - otype\n        EggType - otype\n        TissueBoxType - otype\n        BookType - otype\n        FloorLampType - otype\n        PosterType - otype\n        PanType - otype\n        VaseType - otype\n        LettuceType - otype\n        SaltShakerType - otype\n        MugType - otype\n        CurtainsType - otype\n        PillowType - otype\n        KnifeType - otype\n        BreadType - otype\n        GlassbottleType - otype\n        TomatoType - otype\n        ClothType - otype\n        WindowType - otype\n        ChairType - otype\n        TowelType - otype\n        ButterKnifeType - otype\n        LaptopType - otype\n        ToiletPaperRollType - otype\n        PenType - otype\n        ShowerGlassType - otype\n        CreditCardType - otype\n        SinkType - otype\n        ScrubBrushType - otype\n        RemoteControlType - otype\n        BoxType - otype\n        CDType - otype\n        PencilType - otype\n        DeskLampType - otype\n        LadleType - otype\n        TelevisionType - otype\n        MirrorType - otype\n        TeddyBearType - otype\n        BootsType - otype\n        WineBottleType - otype\n        DiningTableType - rtype\n        ShelfType - rtype\n        StoveBurnerType - rtype\n        SofaType - rtype\n        BathtubBasinType - rtype\n        GarbageCanType - rtype\n        DrawerType - rtype\n        FridgeType - rtype\n        ToiletPaperHangerType - rtype\n        CabinetType - rtype\n        OttomanType - rtype\n        BedType - rtype\n        HandTowelHolderType - rtype\n        CartType - rtype\n        DresserType - rtype\n        CoffeeTableType - rtype\n        TowelHolderType - rtype\n        MicrowaveType - rtype\n        SafeType - rtype\n        DeskType - rtype\n        LaundryHamperType - rtype\n        ArmChairType - rtype\n        SideTableType - rtype\n        CoffeeMachineType - rtype\n        ToiletType - rtype\n        SinkBasinType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nput a vase in a fridge.\n", "codex_output": [";; Simplified Goal: \npick_and_place_simple-Vase-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-Vase-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-Vase-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-Vase-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))"]}, "train/pick_and_place_simple-TomatoSliced-None-SinkBasin-5/trial_T20190907_233445_502551": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        LightSwitch - object\n        Knife - object\n        LaundryHamperLid - object\n        Kettle - object\n        Pillow - object\n        ToiletPaperRoll - object\n        Blinds - object\n        Newspaper - object\n        Painting - object\n        ShowerGlass - object\n        Bathtub - object\n        HandTowel - object\n        Spatula - object\n        AlarmClock - object\n        BaseballBat - object\n        TennisRacket - object\n        Mug - object\n        Lettuce - object\n        Fork - object\n        Egg - object\n        CreditCard - object\n        Laptop - object\n        Candle - object\n        Book - object\n        RemoteControl - object\n        Statue - object\n        KeyChain - object\n        TeddyBear - object\n        Bowl - object\n        Tomato - object\n        PaperTowel - object\n        Toaster - object\n        Sink - object\n        Apple - object\n        Poster - object\n        SoapBottle - object\n        Spoon - object\n        Bread - object\n        Watch - object\n        ToiletPaper - object\n        BasketBall - object\n        CD - object\n        HousePlant - object\n        Potato - object\n        Cloth - object\n        Curtains - object\n        Pot - object\n        StoveKnob - object\n        Pen - object\n        Box - object\n        SprayBottle - object\n        ShowerDoor - object\n        Plunger - object\n        Footstool - object\n        Ladle - object\n        Television - object\n        Chair - object\n        SaltShaker - object\n        ButterKnife - object\n        Pan - object\n        Plate - object\n        WateringCan - object\n        Cup - object\n        Mirror - object\n        CellPhone - object\n        Towel - object\n        Boots - object\n        DeskLamp - object\n        PepperShaker - object\n        Window - object\n        Vase - object\n        ScrubBrush - object\n        TissueBox - object\n        PaperTowelRoll - object\n        Pencil - object\n        DishSponge - object\n        FloorLamp - object\n        SoapBar - object\n        WineBottle - object\n        Glassbottle - object\n        LightSwitchType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        KettleType - otype\n        PillowType - otype\n        ToiletPaperRollType - otype\n        BlindsType - otype\n        NewspaperType - otype\n        PaintingType - otype\n        ShowerGlassType - otype\n        BathtubType - otype\n        HandTowelType - otype\n        SpatulaType - otype\n        AlarmClockType - otype\n        BaseballBatType - otype\n        TennisRacketType - otype\n        MugType - otype\n        LettuceType - otype\n        ForkType - otype\n        EggType - otype\n        CreditCardType - otype\n        LaptopType - otype\n        CandleType - otype\n        BookType - otype\n        RemoteControlType - otype\n        StatueType - otype\n        KeyChainType - otype\n        TeddyBearType - otype\n        BowlType - otype\n        TomatoType - otype\n        PaperTowelType - otype\n        ToasterType - otype\n        SinkType - otype\n        AppleType - otype\n        PosterType - otype\n        SoapBottleType - otype\n        SpoonType - otype\n        BreadType - otype\n        WatchType - otype\n        ToiletPaperType - otype\n        BasketBallType - otype\n        CDType - otype\n        HousePlantType - otype\n        PotatoType - otype\n        ClothType - otype\n        CurtainsType - otype\n        PotType - otype\n        StoveKnobType - otype\n        PenType - otype\n        BoxType - otype\n        SprayBottleType - otype\n        ShowerDoorType - otype\n        PlungerType - otype\n        FootstoolType - otype\n        LadleType - otype\n        TelevisionType - otype\n        ChairType - otype\n        SaltShakerType - otype\n        ButterKnifeType - otype\n        PanType - otype\n        PlateType - otype\n        WateringCanType - otype\n        CupType - otype\n        MirrorType - otype\n        CellPhoneType - otype\n        TowelType - otype\n        BootsType - otype\n        DeskLampType - otype\n        PepperShakerType - otype\n        WindowType - otype\n        VaseType - otype\n        ScrubBrushType - otype\n        TissueBoxType - otype\n        PaperTowelRollType - otype\n        PencilType - otype\n        DishSpongeType - otype\n        FloorLampType - otype\n        SoapBarType - otype\n        WineBottleType - otype\n        GlassbottleType - otype\n        CabinetType - rtype\n        DrawerType - rtype\n        MicrowaveType - rtype\n        ArmChairType - rtype\n        DiningTableType - rtype\n        SideTableType - rtype\n        CounterTopType - rtype\n        LaundryHamperType - rtype\n        ToiletType - rtype\n        SinkBasinType - rtype\n        ToiletPaperHangerType - rtype\n        BedType - rtype\n        ShelfType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        CoffeeTableType - rtype\n        FridgeType - rtype\n        DeskType - rtype\n        CartType - rtype\n        HandTowelHolderType - rtype\n        SofaType - rtype\n        SafeType - rtype\n        GarbageCanType - rtype\n        OttomanType - rtype\n        CoffeeMachineType - rtype\n        StoveBurnerType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nget a knife to cut a tomato.\n", "codex_output": [";; Simplified Goal: \npick_and_place_simple-Knife-None-Tomato\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r TomatoType)\n                (inReceptacle ?o ?r) \n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-Knife-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_and_place_simple-Knife-None-Tomato\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (objectType ?o TomatoType)\n                (sliceable ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_and_place_simple-Knife-None-None-Tomato\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType)\n                (sliceable ?o) \n                (objectType ?tomato TomatoType)\n                (holdsAny ?a)\n                (holds ?a ?o)\n            )\n    )))\n\n<END>"]}, "train/pick_cool_then_place_in_recep-TomatoSliced-None-DiningTable-18/trial_T20190909_101216_297477": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Vase - object\n        Television - object\n        Tomato - object\n        Mug - object\n        Pencil - object\n        Plunger - object\n        Pot - object\n        SoapBottle - object\n        Box - object\n        Chair - object\n        StoveKnob - object\n        Pen - object\n        DeskLamp - object\n        LaundryHamperLid - object\n        Laptop - object\n        Footstool - object\n        ShowerGlass - object\n        Pan - object\n        Bowl - object\n        ScrubBrush - object\n        Boots - object\n        ToiletPaper - object\n        CreditCard - object\n        TeddyBear - object\n        FloorLamp - object\n        Mirror - object\n        Candle - object\n        SprayBottle - object\n        PaperTowelRoll - object\n        Window - object\n        Bread - object\n        RemoteControl - object\n        SoapBar - object\n        DishSponge - object\n        PaperTowel - object\n        Plate - object\n        Potato - object\n        ToiletPaperRoll - object\n        Poster - object\n        ShowerDoor - object\n        Bathtub - object\n        LightSwitch - object\n        Watch - object\n        Kettle - object\n        Egg - object\n        TennisRacket - object\n        BasketBall - object\n        Knife - object\n        WateringCan - object\n        TissueBox - object\n        CellPhone - object\n        Apple - object\n        Book - object\n        Toaster - object\n        KeyChain - object\n        HousePlant - object\n        BaseballBat - object\n        CD - object\n        Cup - object\n        PepperShaker - object\n        WineBottle - object\n        Pillow - object\n        Fork - object\n        SaltShaker - object\n        Statue - object\n        Painting - object\n        Blinds - object\n        Spoon - object\n        Sink - object\n        Spatula - object\n        Ladle - object\n        Cloth - object\n        Newspaper - object\n        Glassbottle - object\n        Lettuce - object\n        Curtains - object\n        AlarmClock - object\n        Towel - object\n        ButterKnife - object\n        HandTowel - object\n        VaseType - otype\n        TelevisionType - otype\n        TomatoType - otype\n        MugType - otype\n        PencilType - otype\n        PlungerType - otype\n        PotType - otype\n        SoapBottleType - otype\n        BoxType - otype\n        ChairType - otype\n        StoveKnobType - otype\n        PenType - otype\n        DeskLampType - otype\n        LaundryHamperLidType - otype\n        LaptopType - otype\n        FootstoolType - otype\n        ShowerGlassType - otype\n        PanType - otype\n        BowlType - otype\n        ScrubBrushType - otype\n        BootsType - otype\n        ToiletPaperType - otype\n        CreditCardType - otype\n        TeddyBearType - otype\n        FloorLampType - otype\n        MirrorType - otype\n        CandleType - otype\n        SprayBottleType - otype\n        PaperTowelRollType - otype\n        WindowType - otype\n        BreadType - otype\n        RemoteControlType - otype\n        SoapBarType - otype\n        DishSpongeType - otype\n        PaperTowelType - otype\n        PlateType - otype\n        PotatoType - otype\n        ToiletPaperRollType - otype\n        PosterType - otype\n        ShowerDoorType - otype\n        BathtubType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        KettleType - otype\n        EggType - otype\n        TennisRacketType - otype\n        BasketBallType - otype\n        KnifeType - otype\n        WateringCanType - otype\n        TissueBoxType - otype\n        CellPhoneType - otype\n        AppleType - otype\n        BookType - otype\n        ToasterType - otype\n        KeyChainType - otype\n        HousePlantType - otype\n        BaseballBatType - otype\n        CDType - otype\n        CupType - otype\n        PepperShakerType - otype\n        WineBottleType - otype\n        PillowType - otype\n        ForkType - otype\n        SaltShakerType - otype\n        StatueType - otype\n        PaintingType - otype\n        BlindsType - otype\n        SpoonType - otype\n        SinkType - otype\n        SpatulaType - otype\n        LadleType - otype\n        ClothType - otype\n        NewspaperType - otype\n        GlassbottleType - otype\n        LettuceType - otype\n        CurtainsType - otype\n        AlarmClockType - otype\n        TowelType - otype\n        ButterKnifeType - otype\n        HandTowelType - otype\n        ToiletPaperHangerType - rtype\n        SideTableType - rtype\n        GarbageCanType - rtype\n        ShelfType - rtype\n        BedType - rtype\n        ToiletType - rtype\n        ArmChairType - rtype\n        HandTowelHolderType - rtype\n        MicrowaveType - rtype\n        SinkBasinType - rtype\n        DeskType - rtype\n        CartType - rtype\n        DiningTableType - rtype\n        DresserType - rtype\n        FridgeType - rtype\n        OttomanType - rtype\n        DrawerType - rtype\n        BathtubBasinType - rtype\n        CoffeeMachineType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        CounterTopType - rtype\n        SafeType - rtype\n        LaundryHamperType - rtype\n        SofaType - rtype\n        StoveBurnerType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \npick up knife , cut tomato , place tomato in the fridge , remove from fridge , place on table.\n", "codex_output": [";; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n", ";; Simplified Goal: \npick_and_place_complex-Knife-TomatoSliced-Fridge-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r1 - receptacle)\n        (exists (?r2 - receptacle)\n        (exists (?o - object)\n        (exists (?l1 - location)\n        (exists (?l2 - location)\n        (exists (?a - agent)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r1 FridgeType)\n                (receptacleType ?r2 DiningTableType)\n                (inReceptacle ?o ?r1)\n                (atLocation ?a ?l1)\n                (atLocation ?o ?l1)\n                (openable ?r1)\n                (opened ?r1)\n                (inReceptacleObject ?o ?r1)\n                (inReceptacle ?r1 ?r2)\n                (canHold ?r2 ?o)\n                (atLocation ?r2 ?l2)\n                (inReceptacleObject ?o ?r2)\n                (objectAtLocation ?o ?l2)\n                (on ?o ?r2)\n                (holds ?a ?o)\n                (sliceable ?o)\n                (isSliced ?o)\n            )\n    ))))))"]}, "train/pick_cool_then_place_in_recep-Lettuce-None-DiningTable-27/trial_T20190907_175045_014819": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        AlarmClock - object\n        Footstool - object\n        TissueBox - object\n        Spatula - object\n        Candle - object\n        Bread - object\n        WateringCan - object\n        Knife - object\n        Apple - object\n        TeddyBear - object\n        PaperTowelRoll - object\n        Mug - object\n        Ladle - object\n        Statue - object\n        StoveKnob - object\n        Watch - object\n        CellPhone - object\n        Cup - object\n        Towel - object\n        Glassbottle - object\n        Plunger - object\n        Kettle - object\n        ToiletPaperRoll - object\n        Plate - object\n        DeskLamp - object\n        Book - object\n        Television - object\n        Bathtub - object\n        Potato - object\n        Pillow - object\n        SoapBottle - object\n        Box - object\n        Newspaper - object\n        LightSwitch - object\n        ButterKnife - object\n        RemoteControl - object\n        Laptop - object\n        ShowerGlass - object\n        WineBottle - object\n        Sink - object\n        Blinds - object\n        TennisRacket - object\n        BasketBall - object\n        Vase - object\n        Tomato - object\n        Spoon - object\n        Window - object\n        Egg - object\n        Curtains - object\n        Pencil - object\n        Cloth - object\n        Painting - object\n        SprayBottle - object\n        CD - object\n        ScrubBrush - object\n        PaperTowel - object\n        Mirror - object\n        Bowl - object\n        SaltShaker - object\n        DishSponge - object\n        LaundryHamperLid - object\n        Pot - object\n        CreditCard - object\n        BaseballBat - object\n        SoapBar - object\n        KeyChain - object\n        Pen - object\n        Fork - object\n        Toaster - object\n        Pan - object\n        HousePlant - object\n        Chair - object\n        ToiletPaper - object\n        FloorLamp - object\n        HandTowel - object\n        Boots - object\n        Poster - object\n        ShowerDoor - object\n        PepperShaker - object\n        Lettuce - object\n        AlarmClockType - otype\n        FootstoolType - otype\n        TissueBoxType - otype\n        SpatulaType - otype\n        CandleType - otype\n        BreadType - otype\n        WateringCanType - otype\n        KnifeType - otype\n        AppleType - otype\n        TeddyBearType - otype\n        PaperTowelRollType - otype\n        MugType - otype\n        LadleType - otype\n        StatueType - otype\n        StoveKnobType - otype\n        WatchType - otype\n        CellPhoneType - otype\n        CupType - otype\n        TowelType - otype\n        GlassbottleType - otype\n        PlungerType - otype\n        KettleType - otype\n        ToiletPaperRollType - otype\n        PlateType - otype\n        DeskLampType - otype\n        BookType - otype\n        TelevisionType - otype\n        BathtubType - otype\n        PotatoType - otype\n        PillowType - otype\n        SoapBottleType - otype\n        BoxType - otype\n        NewspaperType - otype\n        LightSwitchType - otype\n        ButterKnifeType - otype\n        RemoteControlType - otype\n        LaptopType - otype\n        ShowerGlassType - otype\n        WineBottleType - otype\n        SinkType - otype\n        BlindsType - otype\n        TennisRacketType - otype\n        BasketBallType - otype\n        VaseType - otype\n        TomatoType - otype\n        SpoonType - otype\n        WindowType - otype\n        EggType - otype\n        CurtainsType - otype\n        PencilType - otype\n        ClothType - otype\n        PaintingType - otype\n        SprayBottleType - otype\n        CDType - otype\n        ScrubBrushType - otype\n        PaperTowelType - otype\n        MirrorType - otype\n        BowlType - otype\n        SaltShakerType - otype\n        DishSpongeType - otype\n        LaundryHamperLidType - otype\n        PotType - otype\n        CreditCardType - otype\n        BaseballBatType - otype\n        SoapBarType - otype\n        KeyChainType - otype\n        PenType - otype\n        ForkType - otype\n        ToasterType - otype\n        PanType - otype\n        HousePlantType - otype\n        ChairType - otype\n        ToiletPaperType - otype\n        FloorLampType - otype\n        HandTowelType - otype\n        BootsType - otype\n        PosterType - otype\n        ShowerDoorType - otype\n        PepperShakerType - otype\n        LettuceType - otype\n        DrawerType - rtype\n        ArmChairType - rtype\n        LaundryHamperType - rtype\n        TowelHolderType - rtype\n        MicrowaveType - rtype\n        DeskType - rtype\n        ShelfType - rtype\n        CoffeeTableType - rtype\n        BathtubBasinType - rtype\n        SofaType - rtype\n        StoveBurnerType - rtype\n        CabinetType - rtype\n        DiningTableType - rtype\n        SinkBasinType - rtype\n        GarbageCanType - rtype\n        OttomanType - rtype\n        BedType - rtype\n        ToiletType - rtype\n        FridgeType - rtype\n        CartType - rtype\n        SideTableType - rtype\n        CounterTopType - rtype\n        DresserType - rtype\n        CoffeeMachineType - rtype\n        ToiletPaperHangerType - rtype\n        HandTowelHolderType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \ncool the cabbage in the refrigerator , put it back on the table.\n", "codex_output": [";; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))", ";; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))", ";; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))"]}, "train/pick_heat_then_place_in_recep-Egg-None-SideTable-21/trial_T20190907_045036_700265": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Tomato - object\n        Footstool - object\n        KeyChain - object\n        ShowerGlass - object\n        Sink - object\n        Vase - object\n        TeddyBear - object\n        WateringCan - object\n        PepperShaker - object\n        Lettuce - object\n        Pencil - object\n        TissueBox - object\n        Newspaper - object\n        ShowerDoor - object\n        HousePlant - object\n        TennisRacket - object\n        HandTowel - object\n        Spoon - object\n        Television - object\n        DishSponge - object\n        Knife - object\n        CreditCard - object\n        LaundryHamperLid - object\n        Blinds - object\n        Painting - object\n        SaltShaker - object\n        DeskLamp - object\n        Pot - object\n        SprayBottle - object\n        Mug - object\n        Watch - object\n        Pan - object\n        Cup - object\n        Egg - object\n        Book - object\n        ToiletPaper - object\n        SoapBar - object\n        Pillow - object\n        SoapBottle - object\n        BasketBall - object\n        CD - object\n        Ladle - object\n        Towel - object\n        Fork - object\n        Chair - object\n        Box - object\n        BaseballBat - object\n        CellPhone - object\n        StoveKnob - object\n        PaperTowel - object\n        Window - object\n        Potato - object\n        WineBottle - object\n        ScrubBrush - object\n        Apple - object\n        Poster - object\n        ToiletPaperRoll - object\n        AlarmClock - object\n        Bread - object\n        Bathtub - object\n        Cloth - object\n        Statue - object\n        PaperTowelRoll - object\n        Laptop - object\n        Boots - object\n        Bowl - object\n        Toaster - object\n        Kettle - object\n        RemoteControl - object\n        Mirror - object\n        Candle - object\n        Curtains - object\n        Pen - object\n        ButterKnife - object\n        Spatula - object\n        LightSwitch - object\n        Plate - object\n        Glassbottle - object\n        Plunger - object\n        FloorLamp - object\n        TomatoType - otype\n        FootstoolType - otype\n        KeyChainType - otype\n        ShowerGlassType - otype\n        SinkType - otype\n        VaseType - otype\n        TeddyBearType - otype\n        WateringCanType - otype\n        PepperShakerType - otype\n        LettuceType - otype\n        PencilType - otype\n        TissueBoxType - otype\n        NewspaperType - otype\n        ShowerDoorType - otype\n        HousePlantType - otype\n        TennisRacketType - otype\n        HandTowelType - otype\n        SpoonType - otype\n        TelevisionType - otype\n        DishSpongeType - otype\n        KnifeType - otype\n        CreditCardType - otype\n        LaundryHamperLidType - otype\n        BlindsType - otype\n        PaintingType - otype\n        SaltShakerType - otype\n        DeskLampType - otype\n        PotType - otype\n        SprayBottleType - otype\n        MugType - otype\n        WatchType - otype\n        PanType - otype\n        CupType - otype\n        EggType - otype\n        BookType - otype\n        ToiletPaperType - otype\n        SoapBarType - otype\n        PillowType - otype\n        SoapBottleType - otype\n        BasketBallType - otype\n        CDType - otype\n        LadleType - otype\n        TowelType - otype\n        ForkType - otype\n        ChairType - otype\n        BoxType - otype\n        BaseballBatType - otype\n        CellPhoneType - otype\n        StoveKnobType - otype\n        PaperTowelType - otype\n        WindowType - otype\n        PotatoType - otype\n        WineBottleType - otype\n        ScrubBrushType - otype\n        AppleType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        AlarmClockType - otype\n        BreadType - otype\n        BathtubType - otype\n        ClothType - otype\n        StatueType - otype\n        PaperTowelRollType - otype\n        LaptopType - otype\n        BootsType - otype\n        BowlType - otype\n        ToasterType - otype\n        KettleType - otype\n        RemoteControlType - otype\n        MirrorType - otype\n        CandleType - otype\n        CurtainsType - otype\n        PenType - otype\n        ButterKnifeType - otype\n        SpatulaType - otype\n        LightSwitchType - otype\n        PlateType - otype\n        GlassbottleType - otype\n        PlungerType - otype\n        FloorLampType - otype\n        DrawerType - rtype\n        HandTowelHolderType - rtype\n        DeskType - rtype\n        SinkBasinType - rtype\n        CounterTopType - rtype\n        CoffeeTableType - rtype\n        BedType - rtype\n        SideTableType - rtype\n        BathtubBasinType - rtype\n        ArmChairType - rtype\n        DresserType - rtype\n        StoveBurnerType - rtype\n        DiningTableType - rtype\n        GarbageCanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        CabinetType - rtype\n        SofaType - rtype\n        ShelfType - rtype\n        ToiletType - rtype\n        LaundryHamperType - rtype\n        MicrowaveType - rtype\n        OttomanType - rtype\n        CartType - rtype\n        SafeType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nput a heated egg on the small black table.\n", "codex_output": [";; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))", ";; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>"]}, "train/pick_and_place_simple-TomatoSliced-None-SideTable-3/trial_T20190908_091615_973891": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Pillow - object\n        Pencil - object\n        Blinds - object\n        Mug - object\n        Television - object\n        CellPhone - object\n        HandTowel - object\n        Fork - object\n        Spoon - object\n        HousePlant - object\n        TeddyBear - object\n        Apple - object\n        Box - object\n        Plate - object\n        PaperTowel - object\n        Toaster - object\n        Bathtub - object\n        Statue - object\n        SprayBottle - object\n        Chair - object\n        Knife - object\n        Bowl - object\n        CD - object\n        CreditCard - object\n        WineBottle - object\n        Book - object\n        AlarmClock - object\n        Pot - object\n        TennisRacket - object\n        Candle - object\n        RemoteControl - object\n        Bread - object\n        Cloth - object\n        Tomato - object\n        SoapBottle - object\n        Poster - object\n        BaseballBat - object\n        LightSwitch - object\n        Newspaper - object\n        StoveKnob - object\n        Towel - object\n        ToiletPaperRoll - object\n        Vase - object\n        Ladle - object\n        Sink - object\n        Glassbottle - object\n        TissueBox - object\n        ScrubBrush - object\n        ButterKnife - object\n        LaundryHamperLid - object\n        ToiletPaper - object\n        Laptop - object\n        Watch - object\n        WateringCan - object\n        Pen - object\n        BasketBall - object\n        Spatula - object\n        Cup - object\n        FloorLamp - object\n        DeskLamp - object\n        ShowerDoor - object\n        PaperTowelRoll - object\n        Lettuce - object\n        Plunger - object\n        DishSponge - object\n        KeyChain - object\n        Painting - object\n        Kettle - object\n        Pan - object\n        Mirror - object\n        SoapBar - object\n        Curtains - object\n        Egg - object\n        ShowerGlass - object\n        Potato - object\n        Window - object\n        Boots - object\n        SaltShaker - object\n        Footstool - object\n        PepperShaker - object\n        PillowType - otype\n        PencilType - otype\n        BlindsType - otype\n        MugType - otype\n        TelevisionType - otype\n        CellPhoneType - otype\n        HandTowelType - otype\n        ForkType - otype\n        SpoonType - otype\n        HousePlantType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        BoxType - otype\n        PlateType - otype\n        PaperTowelType - otype\n        ToasterType - otype\n        BathtubType - otype\n        StatueType - otype\n        SprayBottleType - otype\n        ChairType - otype\n        KnifeType - otype\n        BowlType - otype\n        CDType - otype\n        CreditCardType - otype\n        WineBottleType - otype\n        BookType - otype\n        AlarmClockType - otype\n        PotType - otype\n        TennisRacketType - otype\n        CandleType - otype\n        RemoteControlType - otype\n        BreadType - otype\n        ClothType - otype\n        TomatoType - otype\n        SoapBottleType - otype\n        PosterType - otype\n        BaseballBatType - otype\n        LightSwitchType - otype\n        NewspaperType - otype\n        StoveKnobType - otype\n        TowelType - otype\n        ToiletPaperRollType - otype\n        VaseType - otype\n        LadleType - otype\n        SinkType - otype\n        GlassbottleType - otype\n        TissueBoxType - otype\n        ScrubBrushType - otype\n        ButterKnifeType - otype\n        LaundryHamperLidType - otype\n        ToiletPaperType - otype\n        LaptopType - otype\n        WatchType - otype\n        WateringCanType - otype\n        PenType - otype\n        BasketBallType - otype\n        SpatulaType - otype\n        CupType - otype\n        FloorLampType - otype\n        DeskLampType - otype\n        ShowerDoorType - otype\n        PaperTowelRollType - otype\n        LettuceType - otype\n        PlungerType - otype\n        DishSpongeType - otype\n        KeyChainType - otype\n        PaintingType - otype\n        KettleType - otype\n        PanType - otype\n        MirrorType - otype\n        SoapBarType - otype\n        CurtainsType - otype\n        EggType - otype\n        ShowerGlassType - otype\n        PotatoType - otype\n        WindowType - otype\n        BootsType - otype\n        SaltShakerType - otype\n        FootstoolType - otype\n        PepperShakerType - otype\n        TowelHolderType - rtype\n        CoffeeMachineType - rtype\n        ToiletType - rtype\n        SideTableType - rtype\n        BedType - rtype\n        SofaType - rtype\n        DresserType - rtype\n        CoffeeTableType - rtype\n        BathtubBasinType - rtype\n        MicrowaveType - rtype\n        LaundryHamperType - rtype\n        GarbageCanType - rtype\n        SafeType - rtype\n        CartType - rtype\n        CabinetType - rtype\n        ArmChairType - rtype\n        DiningTableType - rtype\n        HandTowelHolderType - rtype\n        ShelfType - rtype\n        SinkBasinType - rtype\n        CounterTopType - rtype\n        ToiletPaperHangerType - rtype\n        DeskType - rtype\n        DrawerType - rtype\n        StoveBurnerType - rtype\n        OttomanType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nslice a tomato that is on the microwave stand.\n", "codex_output": ["pick_and_place_simple-Tomato-None-Microwave", ";; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Microwave\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?l - location)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (objectAtLocation ?r ?l)\n                (atLocation ?o ?l)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    ))))", ";; Simplified Goal: \npick_and_place_simple-Tomato-None-Microwave\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?l - location)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (objectAtLocation ?o ?l)\n                (atLocation ?l ?r)\n            )\n    ))))", ";; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>"]}, "train/pick_clean_then_place_in_recep-Spoon-None-Drawer-5/trial_T20190907_080537_064131": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Pillow - object\n        Pencil - object\n        Blinds - object\n        Mug - object\n        Television - object\n        CellPhone - object\n        HandTowel - object\n        Fork - object\n        Spoon - object\n        HousePlant - object\n        TeddyBear - object\n        Apple - object\n        Box - object\n        Plate - object\n        PaperTowel - object\n        Toaster - object\n        Bathtub - object\n        Statue - object\n        SprayBottle - object\n        Chair - object\n        Knife - object\n        Bowl - object\n        CD - object\n        CreditCard - object\n        WineBottle - object\n        Book - object\n        AlarmClock - object\n        Pot - object\n        TennisRacket - object\n        Candle - object\n        RemoteControl - object\n        Bread - object\n        Cloth - object\n        Tomato - object\n        SoapBottle - object\n        Poster - object\n        BaseballBat - object\n        LightSwitch - object\n        Newspaper - object\n        StoveKnob - object\n        Towel - object\n        ToiletPaperRoll - object\n        Vase - object\n        Ladle - object\n        Sink - object\n        Glassbottle - object\n        TissueBox - object\n        ScrubBrush - object\n        ButterKnife - object\n        LaundryHamperLid - object\n        ToiletPaper - object\n        Laptop - object\n        Watch - object\n        WateringCan - object\n        Pen - object\n        BasketBall - object\n        Spatula - object\n        Cup - object\n        FloorLamp - object\n        DeskLamp - object\n        ShowerDoor - object\n        PaperTowelRoll - object\n        Lettuce - object\n        Plunger - object\n        DishSponge - object\n        KeyChain - object\n        Painting - object\n        Kettle - object\n        Pan - object\n        Mirror - object\n        SoapBar - object\n        Curtains - object\n        Egg - object\n        ShowerGlass - object\n        Potato - object\n        Window - object\n        Boots - object\n        SaltShaker - object\n        Footstool - object\n        PepperShaker - object\n        PillowType - otype\n        PencilType - otype\n        BlindsType - otype\n        MugType - otype\n        TelevisionType - otype\n        CellPhoneType - otype\n        HandTowelType - otype\n        ForkType - otype\n        SpoonType - otype\n        HousePlantType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        BoxType - otype\n        PlateType - otype\n        PaperTowelType - otype\n        ToasterType - otype\n        BathtubType - otype\n        StatueType - otype\n        SprayBottleType - otype\n        ChairType - otype\n        KnifeType - otype\n        BowlType - otype\n        CDType - otype\n        CreditCardType - otype\n        WineBottleType - otype\n        BookType - otype\n        AlarmClockType - otype\n        PotType - otype\n        TennisRacketType - otype\n        CandleType - otype\n        RemoteControlType - otype\n        BreadType - otype\n        ClothType - otype\n        TomatoType - otype\n        SoapBottleType - otype\n        PosterType - otype\n        BaseballBatType - otype\n        LightSwitchType - otype\n        NewspaperType - otype\n        StoveKnobType - otype\n        TowelType - otype\n        ToiletPaperRollType - otype\n        VaseType - otype\n        LadleType - otype\n        SinkType - otype\n        GlassbottleType - otype\n        TissueBoxType - otype\n        ScrubBrushType - otype\n        ButterKnifeType - otype\n        LaundryHamperLidType - otype\n        ToiletPaperType - otype\n        LaptopType - otype\n        WatchType - otype\n        WateringCanType - otype\n        PenType - otype\n        BasketBallType - otype\n        SpatulaType - otype\n        CupType - otype\n        FloorLampType - otype\n        DeskLampType - otype\n        ShowerDoorType - otype\n        PaperTowelRollType - otype\n        LettuceType - otype\n        PlungerType - otype\n        DishSpongeType - otype\n        KeyChainType - otype\n        PaintingType - otype\n        KettleType - otype\n        PanType - otype\n        MirrorType - otype\n        SoapBarType - otype\n        CurtainsType - otype\n        EggType - otype\n        ShowerGlassType - otype\n        PotatoType - otype\n        WindowType - otype\n        BootsType - otype\n        SaltShakerType - otype\n        FootstoolType - otype\n        PepperShakerType - otype\n        TowelHolderType - rtype\n        CoffeeMachineType - rtype\n        ToiletType - rtype\n        SideTableType - rtype\n        BedType - rtype\n        SofaType - rtype\n        DresserType - rtype\n        CoffeeTableType - rtype\n        BathtubBasinType - rtype\n        MicrowaveType - rtype\n        LaundryHamperType - rtype\n        GarbageCanType - rtype\n        SafeType - rtype\n        CartType - rtype\n        CabinetType - rtype\n        ArmChairType - rtype\n        DiningTableType - rtype\n        HandTowelHolderType - rtype\n        ShelfType - rtype\n        SinkBasinType - rtype\n        CounterTopType - rtype\n        ToiletPaperHangerType - rtype\n        DeskType - rtype\n        DrawerType - rtype\n        StoveBurnerType - rtype\n        OttomanType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nplace a washed spoon in a drawer with the fork.\n", "codex_output": [";; Simplified Goal: \npick_clean_then_place_in_recep-Spoon-None-Drawer\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_clean_then_place_with_obj-Spoon-Fork-Drawer\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r1 - receptacle) \n        (exists (?r2 - receptacle)\n        (exists (?o1 - object)\n        (exists (?o2 - object)\n            (and \n                (objectType ?o1 SpoonType) \n                (objectType ?o2 ForkType)\n                (receptacleType ?r1 DrawerType)\n                (receptacleType ?r2 DrawerType)\n                (inReceptacle ?o1 ?r1)\n                (inReceptacle ?o2 ?r2)\n                (cleanable ?o1)\n                (isClean ?o1) \n            )\n    )))))\n\n<END>", "pick_clean_then_place_in_recep-Spoon-None-Drawer", ";; Simplified Goal: \npick_clean_then_place_in_recep-Spoon-None-Drawer\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>"]}, "train/pick_and_place_simple-TomatoSliced-None-SideTable-3/trial_T20190908_091658_623792": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        LightSwitch - object\n        Knife - object\n        LaundryHamperLid - object\n        Kettle - object\n        Pillow - object\n        ToiletPaperRoll - object\n        Blinds - object\n        Newspaper - object\n        Painting - object\n        ShowerGlass - object\n        Bathtub - object\n        HandTowel - object\n        Spatula - object\n        AlarmClock - object\n        BaseballBat - object\n        TennisRacket - object\n        Mug - object\n        Lettuce - object\n        Fork - object\n        Egg - object\n        CreditCard - object\n        Laptop - object\n        Candle - object\n        Book - object\n        RemoteControl - object\n        Statue - object\n        KeyChain - object\n        TeddyBear - object\n        Bowl - object\n        Tomato - object\n        PaperTowel - object\n        Toaster - object\n        Sink - object\n        Apple - object\n        Poster - object\n        SoapBottle - object\n        Spoon - object\n        Bread - object\n        Watch - object\n        ToiletPaper - object\n        BasketBall - object\n        CD - object\n        HousePlant - object\n        Potato - object\n        Cloth - object\n        Curtains - object\n        Pot - object\n        StoveKnob - object\n        Pen - object\n        Box - object\n        SprayBottle - object\n        ShowerDoor - object\n        Plunger - object\n        Footstool - object\n        Ladle - object\n        Television - object\n        Chair - object\n        SaltShaker - object\n        ButterKnife - object\n        Pan - object\n        Plate - object\n        WateringCan - object\n        Cup - object\n        Mirror - object\n        CellPhone - object\n        Towel - object\n        Boots - object\n        DeskLamp - object\n        PepperShaker - object\n        Window - object\n        Vase - object\n        ScrubBrush - object\n        TissueBox - object\n        PaperTowelRoll - object\n        Pencil - object\n        DishSponge - object\n        FloorLamp - object\n        SoapBar - object\n        WineBottle - object\n        Glassbottle - object\n        LightSwitchType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        KettleType - otype\n        PillowType - otype\n        ToiletPaperRollType - otype\n        BlindsType - otype\n        NewspaperType - otype\n        PaintingType - otype\n        ShowerGlassType - otype\n        BathtubType - otype\n        HandTowelType - otype\n        SpatulaType - otype\n        AlarmClockType - otype\n        BaseballBatType - otype\n        TennisRacketType - otype\n        MugType - otype\n        LettuceType - otype\n        ForkType - otype\n        EggType - otype\n        CreditCardType - otype\n        LaptopType - otype\n        CandleType - otype\n        BookType - otype\n        RemoteControlType - otype\n        StatueType - otype\n        KeyChainType - otype\n        TeddyBearType - otype\n        BowlType - otype\n        TomatoType - otype\n        PaperTowelType - otype\n        ToasterType - otype\n        SinkType - otype\n        AppleType - otype\n        PosterType - otype\n        SoapBottleType - otype\n        SpoonType - otype\n        BreadType - otype\n        WatchType - otype\n        ToiletPaperType - otype\n        BasketBallType - otype\n        CDType - otype\n        HousePlantType - otype\n        PotatoType - otype\n        ClothType - otype\n        CurtainsType - otype\n        PotType - otype\n        StoveKnobType - otype\n        PenType - otype\n        BoxType - otype\n        SprayBottleType - otype\n        ShowerDoorType - otype\n        PlungerType - otype\n        FootstoolType - otype\n        LadleType - otype\n        TelevisionType - otype\n        ChairType - otype\n        SaltShakerType - otype\n        ButterKnifeType - otype\n        PanType - otype\n        PlateType - otype\n        WateringCanType - otype\n        CupType - otype\n        MirrorType - otype\n        CellPhoneType - otype\n        TowelType - otype\n        BootsType - otype\n        DeskLampType - otype\n        PepperShakerType - otype\n        WindowType - otype\n        VaseType - otype\n        ScrubBrushType - otype\n        TissueBoxType - otype\n        PaperTowelRollType - otype\n        PencilType - otype\n        DishSpongeType - otype\n        FloorLampType - otype\n        SoapBarType - otype\n        WineBottleType - otype\n        GlassbottleType - otype\n        CabinetType - rtype\n        DrawerType - rtype\n        MicrowaveType - rtype\n        ArmChairType - rtype\n        DiningTableType - rtype\n        SideTableType - rtype\n        CounterTopType - rtype\n        LaundryHamperType - rtype\n        ToiletType - rtype\n        SinkBasinType - rtype\n        ToiletPaperHangerType - rtype\n        BedType - rtype\n        ShelfType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        CoffeeTableType - rtype\n        FridgeType - rtype\n        DeskType - rtype\n        CartType - rtype\n        HandTowelHolderType - rtype\n        SofaType - rtype\n        SafeType - rtype\n        GarbageCanType - rtype\n        OttomanType - rtype\n        CoffeeMachineType - rtype\n        StoveBurnerType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nto put a cooled plus sliced tomato on the table to the right of the fridge.\n", "codex_output": [";; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?l - location)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n                (atLocation ?l DiningTable)\n                (right ?l Fridge)\n            )\n    ))))", ";; Simplified Goal: \npick_cool_then_place_in_recep_plus_right-TomatoSliced-None-Fridge-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r1 - receptacle) \n        (exists (?r2 - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r1 FridgeType)\n                (receptacleType ?r2 DiningTableType)\n                (inReceptacle ?o ?r1)\n                (inReceptacle ?o ?r2)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    ))))", ";; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-SideTable", ";; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (exists (?l - location)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n                (atLocation ?r ?l)\n                (rightOf ?l Fridge)\n            )\n    ))))"]}, "train/pick_clean_then_place_in_recep-SoapBar-None-GarbageCan-421/trial_T20190907_041233_785188": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Watch - object\n        Kettle - object\n        PaperTowel - object\n        BasketBall - object\n        Television - object\n        DishSponge - object\n        ShowerGlass - object\n        HandTowel - object\n        Sink - object\n        ButterKnife - object\n        Plate - object\n        StoveKnob - object\n        Cloth - object\n        ShowerDoor - object\n        TeddyBear - object\n        Footstool - object\n        Poster - object\n        Egg - object\n        Cup - object\n        BaseballBat - object\n        TissueBox - object\n        Spoon - object\n        Bathtub - object\n        Boots - object\n        ToiletPaperRoll - object\n        Plunger - object\n        RemoteControl - object\n        CD - object\n        Apple - object\n        Candle - object\n        Laptop - object\n        SprayBottle - object\n        Towel - object\n        SaltShaker - object\n        Ladle - object\n        Newspaper - object\n        SoapBar - object\n        FloorLamp - object\n        LightSwitch - object\n        CellPhone - object\n        Pillow - object\n        Vase - object\n        Lettuce - object\n        AlarmClock - object\n        Curtains - object\n        TennisRacket - object\n        DeskLamp - object\n        Knife - object\n        ToiletPaper - object\n        PaperTowelRoll - object\n        Spatula - object\n        CreditCard - object\n        Pan - object\n        Toaster - object\n        PepperShaker - object\n        Mug - object\n        WineBottle - object\n        LaundryHamperLid - object\n        Tomato - object\n        Painting - object\n        Bowl - object\n        Window - object\n        Mirror - object\n        Pen - object\n        Statue - object\n        Book - object\n        Pot - object\n        Blinds - object\n        HousePlant - object\n        Chair - object\n        Fork - object\n        ScrubBrush - object\n        Pencil - object\n        Potato - object\n        KeyChain - object\n        WateringCan - object\n        SoapBottle - object\n        Glassbottle - object\n        Bread - object\n        Box - object\n        WatchType - otype\n        KettleType - otype\n        PaperTowelType - otype\n        BasketBallType - otype\n        TelevisionType - otype\n        DishSpongeType - otype\n        ShowerGlassType - otype\n        HandTowelType - otype\n        SinkType - otype\n        ButterKnifeType - otype\n        PlateType - otype\n        StoveKnobType - otype\n        ClothType - otype\n        ShowerDoorType - otype\n        TeddyBearType - otype\n        FootstoolType - otype\n        PosterType - otype\n        EggType - otype\n        CupType - otype\n        BaseballBatType - otype\n        TissueBoxType - otype\n        SpoonType - otype\n        BathtubType - otype\n        BootsType - otype\n        ToiletPaperRollType - otype\n        PlungerType - otype\n        RemoteControlType - otype\n        CDType - otype\n        AppleType - otype\n        CandleType - otype\n        LaptopType - otype\n        SprayBottleType - otype\n        TowelType - otype\n        SaltShakerType - otype\n        LadleType - otype\n        NewspaperType - otype\n        SoapBarType - otype\n        FloorLampType - otype\n        LightSwitchType - otype\n        CellPhoneType - otype\n        PillowType - otype\n        VaseType - otype\n        LettuceType - otype\n        AlarmClockType - otype\n        CurtainsType - otype\n        TennisRacketType - otype\n        DeskLampType - otype\n        KnifeType - otype\n        ToiletPaperType - otype\n        PaperTowelRollType - otype\n        SpatulaType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToasterType - otype\n        PepperShakerType - otype\n        MugType - otype\n        WineBottleType - otype\n        LaundryHamperLidType - otype\n        TomatoType - otype\n        PaintingType - otype\n        BowlType - otype\n        WindowType - otype\n        MirrorType - otype\n        PenType - otype\n        StatueType - otype\n        BookType - otype\n        PotType - otype\n        BlindsType - otype\n        HousePlantType - otype\n        ChairType - otype\n        ForkType - otype\n        ScrubBrushType - otype\n        PencilType - otype\n        PotatoType - otype\n        KeyChainType - otype\n        WateringCanType - otype\n        SoapBottleType - otype\n        GlassbottleType - otype\n        BreadType - otype\n        BoxType - otype\n        ArmChairType - rtype\n        CabinetType - rtype\n        BedType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        DrawerType - rtype\n        ShelfType - rtype\n        SafeType - rtype\n        ToiletType - rtype\n        DresserType - rtype\n        LaundryHamperType - rtype\n        DeskType - rtype\n        ToiletPaperHangerType - rtype\n        HandTowelHolderType - rtype\n        BathtubBasinType - rtype\n        CoffeeTableType - rtype\n        SideTableType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        GarbageCanType - rtype\n        TowelHolderType - rtype\n        CounterTopType - rtype\n        OttomanType - rtype\n        FridgeType - rtype\n        SinkBasinType - rtype\n        DiningTableType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n\n\n\n;; Goal: \nput a clean bar of soap in the trash can.\n", "codex_output": [";; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-SoapBar-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r) \n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))"]}, "train/pick_heat_then_place_in_recep-Tomato-None-SideTable-21/trial_T20190909_012146_287700": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        AlarmClock - object\n        Footstool - object\n        TissueBox - object\n        Spatula - object\n        Candle - object\n        Bread - object\n        WateringCan - object\n        Knife - object\n        Apple - object\n        TeddyBear - object\n        PaperTowelRoll - object\n        Mug - object\n        Ladle - object\n        Statue - object\n        StoveKnob - object\n        Watch - object\n        CellPhone - object\n        Cup - object\n        Towel - object\n        Glassbottle - object\n        Plunger - object\n        Kettle - object\n        ToiletPaperRoll - object\n        Plate - object\n        DeskLamp - object\n        Book - object\n        Television - object\n        Bathtub - object\n        Potato - object\n        Pillow - object\n        SoapBottle - object\n        Box - object\n        Newspaper - object\n        LightSwitch - object\n        ButterKnife - object\n        RemoteControl - object\n        Laptop - object\n        ShowerGlass - object\n        WineBottle - object\n        Sink - object\n        Blinds - object\n        TennisRacket - object\n        BasketBall - object\n        Vase - object\n        Tomato - object\n        Spoon - object\n        Window - object\n        Egg - object\n        Curtains - object\n        Pencil - object\n        Cloth - object\n        Painting - object\n        SprayBottle - object\n        CD - object\n        ScrubBrush - object\n        PaperTowel - object\n        Mirror - object\n        Bowl - object\n        SaltShaker - object\n        DishSponge - object\n        LaundryHamperLid - object\n        Pot - object\n        CreditCard - object\n        BaseballBat - object\n        SoapBar - object\n        KeyChain - object\n        Pen - object\n        Fork - object\n        Toaster - object\n        Pan - object\n        HousePlant - object\n        Chair - object\n        ToiletPaper - object\n        FloorLamp - object\n        HandTowel - object\n        Boots - object\n        Poster - object\n        ShowerDoor - object\n        PepperShaker - object\n        Lettuce - object\n        AlarmClockType - otype\n        FootstoolType - otype\n        TissueBoxType - otype\n        SpatulaType - otype\n        CandleType - otype\n        BreadType - otype\n        WateringCanType - otype\n        KnifeType - otype\n        AppleType - otype\n        TeddyBearType - otype\n        PaperTowelRollType - otype\n        MugType - otype\n        LadleType - otype\n        StatueType - otype\n        StoveKnobType - otype\n        WatchType - otype\n        CellPhoneType - otype\n        CupType - otype\n        TowelType - otype\n        GlassbottleType - otype\n        PlungerType - otype\n        KettleType - otype\n        ToiletPaperRollType - otype\n        PlateType - otype\n        DeskLampType - otype\n        BookType - otype\n        TelevisionType - otype\n        BathtubType - otype\n        PotatoType - otype\n        PillowType - otype\n        SoapBottleType - otype\n        BoxType - otype\n        NewspaperType - otype\n        LightSwitchType - otype\n        ButterKnifeType - otype\n        RemoteControlType - otype\n        LaptopType - otype\n        ShowerGlassType - otype\n        WineBottleType - otype\n        SinkType - otype\n        BlindsType - otype\n        TennisRacketType - otype\n        BasketBallType - otype\n        VaseType - otype\n        TomatoType - otype\n        SpoonType - otype\n        WindowType - otype\n        EggType - otype\n        CurtainsType - otype\n        PencilType - otype\n        ClothType - otype\n        PaintingType - otype\n        SprayBottleType - otype\n        CDType - otype\n        ScrubBrushType - otype\n        PaperTowelType - otype\n        MirrorType - otype\n        BowlType - otype\n        SaltShakerType - otype\n        DishSpongeType - otype\n        LaundryHamperLidType - otype\n        PotType - otype\n        CreditCardType - otype\n        BaseballBatType - otype\n        SoapBarType - otype\n        KeyChainType - otype\n        PenType - otype\n        ForkType - otype\n        ToasterType - otype\n        PanType - otype\n        HousePlantType - otype\n        ChairType - otype\n        ToiletPaperType - otype\n        FloorLampType - otype\n        HandTowelType - otype\n        BootsType - otype\n        PosterType - otype\n        ShowerDoorType - otype\n        PepperShakerType - otype\n        LettuceType - otype\n        DrawerType - rtype\n        ArmChairType - rtype\n        LaundryHamperType - rtype\n        TowelHolderType - rtype\n        MicrowaveType - rtype\n        DeskType - rtype\n        ShelfType - rtype\n        CoffeeTableType - rtype\n        BathtubBasinType - rtype\n        SofaType - rtype\n        StoveBurnerType - rtype\n        CabinetType - rtype\n        DiningTableType - rtype\n        SinkBasinType - rtype\n        GarbageCanType - rtype\n        OttomanType - rtype\n        BedType - rtype\n        ToiletType - rtype\n        FridgeType - rtype\n        CartType - rtype\n        SideTableType - rtype\n        CounterTopType - rtype\n        DresserType - rtype\n        CoffeeMachineType - rtype\n        ToiletPaperHangerType - rtype\n        HandTowelHolderType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nput a heated tomato on the small black table.\n", "codex_output": [";; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-CoffeeTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))", ";; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-CoffeeTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))"]}, "train/look_at_obj_in_light-Statue-None-FloorLamp-223/trial_T20190908_211145_259174": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        LightSwitch - object\n        Knife - object\n        LaundryHamperLid - object\n        Kettle - object\n        Pillow - object\n        ToiletPaperRoll - object\n        Blinds - object\n        Newspaper - object\n        Painting - object\n        ShowerGlass - object\n        Bathtub - object\n        HandTowel - object\n        Spatula - object\n        AlarmClock - object\n        BaseballBat - object\n        TennisRacket - object\n        Mug - object\n        Lettuce - object\n        Fork - object\n        Egg - object\n        CreditCard - object\n        Laptop - object\n        Candle - object\n        Book - object\n        RemoteControl - object\n        Statue - object\n        KeyChain - object\n        TeddyBear - object\n        Bowl - object\n        Tomato - object\n        PaperTowel - object\n        Toaster - object\n        Sink - object\n        Apple - object\n        Poster - object\n        SoapBottle - object\n        Spoon - object\n        Bread - object\n        Watch - object\n        ToiletPaper - object\n        BasketBall - object\n        CD - object\n        HousePlant - object\n        Potato - object\n        Cloth - object\n        Curtains - object\n        Pot - object\n        StoveKnob - object\n        Pen - object\n        Box - object\n        SprayBottle - object\n        ShowerDoor - object\n        Plunger - object\n        Footstool - object\n        Ladle - object\n        Television - object\n        Chair - object\n        SaltShaker - object\n        ButterKnife - object\n        Pan - object\n        Plate - object\n        WateringCan - object\n        Cup - object\n        Mirror - object\n        CellPhone - object\n        Towel - object\n        Boots - object\n        DeskLamp - object\n        PepperShaker - object\n        Window - object\n        Vase - object\n        ScrubBrush - object\n        TissueBox - object\n        PaperTowelRoll - object\n        Pencil - object\n        DishSponge - object\n        FloorLamp - object\n        SoapBar - object\n        WineBottle - object\n        Glassbottle - object\n        LightSwitchType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        KettleType - otype\n        PillowType - otype\n        ToiletPaperRollType - otype\n        BlindsType - otype\n        NewspaperType - otype\n        PaintingType - otype\n        ShowerGlassType - otype\n        BathtubType - otype\n        HandTowelType - otype\n        SpatulaType - otype\n        AlarmClockType - otype\n        BaseballBatType - otype\n        TennisRacketType - otype\n        MugType - otype\n        LettuceType - otype\n        ForkType - otype\n        EggType - otype\n        CreditCardType - otype\n        LaptopType - otype\n        CandleType - otype\n        BookType - otype\n        RemoteControlType - otype\n        StatueType - otype\n        KeyChainType - otype\n        TeddyBearType - otype\n        BowlType - otype\n        TomatoType - otype\n        PaperTowelType - otype\n        ToasterType - otype\n        SinkType - otype\n        AppleType - otype\n        PosterType - otype\n        SoapBottleType - otype\n        SpoonType - otype\n        BreadType - otype\n        WatchType - otype\n        ToiletPaperType - otype\n        BasketBallType - otype\n        CDType - otype\n        HousePlantType - otype\n        PotatoType - otype\n        ClothType - otype\n        CurtainsType - otype\n        PotType - otype\n        StoveKnobType - otype\n        PenType - otype\n        BoxType - otype\n        SprayBottleType - otype\n        ShowerDoorType - otype\n        PlungerType - otype\n        FootstoolType - otype\n        LadleType - otype\n        TelevisionType - otype\n        ChairType - otype\n        SaltShakerType - otype\n        ButterKnifeType - otype\n        PanType - otype\n        PlateType - otype\n        WateringCanType - otype\n        CupType - otype\n        MirrorType - otype\n        CellPhoneType - otype\n        TowelType - otype\n        BootsType - otype\n        DeskLampType - otype\n        PepperShakerType - otype\n        WindowType - otype\n        VaseType - otype\n        ScrubBrushType - otype\n        TissueBoxType - otype\n        PaperTowelRollType - otype\n        PencilType - otype\n        DishSpongeType - otype\n        FloorLampType - otype\n        SoapBarType - otype\n        WineBottleType - otype\n        GlassbottleType - otype\n        CabinetType - rtype\n        DrawerType - rtype\n        MicrowaveType - rtype\n        ArmChairType - rtype\n        DiningTableType - rtype\n        SideTableType - rtype\n        CounterTopType - rtype\n        LaundryHamperType - rtype\n        ToiletType - rtype\n        SinkBasinType - rtype\n        ToiletPaperHangerType - rtype\n        BedType - rtype\n        ShelfType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        CoffeeTableType - rtype\n        FridgeType - rtype\n        DeskType - rtype\n        CartType - rtype\n        HandTowelHolderType - rtype\n        SofaType - rtype\n        SafeType - rtype\n        GarbageCanType - rtype\n        OttomanType - rtype\n        CoffeeMachineType - rtype\n        StoveBurnerType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nexamine a statue in the light of a tall lamp.\n", "codex_output": ["Simplified Goal: look_at_obj_in_light-Statue-None-FloorLamp\n\n\nPDDL Goal: \n(:goal\n    (exists (?a - agent)\n        (?l - location)\n        (?o - object)\n        (?ot - object)\n        (and \n            (objectType ?ot FloorLampType)\n            (toggleable ?ot)\n            (isToggled ?ot) \n            (objectAtLocation ?ot ?l)\n            (atLocation ?a ?l)\n            (objectType ?o StatueType)\n            (holds ?a ?o)\n        )\n    )\n)", ";; Simplified Goal: \nlook_at_obj_in_light-Statue-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o StatueType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>", ";; Simplified Goal: \nlook_at_obj_in_light-Statue-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o StatueType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>", ";; Simplified Goal: \nlook_at_obj_in_light-Statue-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o StatueType)\n                (holds ?a ?o)\n            )\n    ))))))\n    \n<END>"]}, "train/pick_and_place_simple-CD-None-Dresser-323/trial_T20190908_005459_168199": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Watch - object\n        Kettle - object\n        PaperTowel - object\n        BasketBall - object\n        Television - object\n        DishSponge - object\n        ShowerGlass - object\n        HandTowel - object\n        Sink - object\n        ButterKnife - object\n        Plate - object\n        StoveKnob - object\n        Cloth - object\n        ShowerDoor - object\n        TeddyBear - object\n        Footstool - object\n        Poster - object\n        Egg - object\n        Cup - object\n        BaseballBat - object\n        TissueBox - object\n        Spoon - object\n        Bathtub - object\n        Boots - object\n        ToiletPaperRoll - object\n        Plunger - object\n        RemoteControl - object\n        CD - object\n        Apple - object\n        Candle - object\n        Laptop - object\n        SprayBottle - object\n        Towel - object\n        SaltShaker - object\n        Ladle - object\n        Newspaper - object\n        SoapBar - object\n        FloorLamp - object\n        LightSwitch - object\n        CellPhone - object\n        Pillow - object\n        Vase - object\n        Lettuce - object\n        AlarmClock - object\n        Curtains - object\n        TennisRacket - object\n        DeskLamp - object\n        Knife - object\n        ToiletPaper - object\n        PaperTowelRoll - object\n        Spatula - object\n        CreditCard - object\n        Pan - object\n        Toaster - object\n        PepperShaker - object\n        Mug - object\n        WineBottle - object\n        LaundryHamperLid - object\n        Tomato - object\n        Painting - object\n        Bowl - object\n        Window - object\n        Mirror - object\n        Pen - object\n        Statue - object\n        Book - object\n        Pot - object\n        Blinds - object\n        HousePlant - object\n        Chair - object\n        Fork - object\n        ScrubBrush - object\n        Pencil - object\n        Potato - object\n        KeyChain - object\n        WateringCan - object\n        SoapBottle - object\n        Glassbottle - object\n        Bread - object\n        Box - object\n        WatchType - otype\n        KettleType - otype\n        PaperTowelType - otype\n        BasketBallType - otype\n        TelevisionType - otype\n        DishSpongeType - otype\n        ShowerGlassType - otype\n        HandTowelType - otype\n        SinkType - otype\n        ButterKnifeType - otype\n        PlateType - otype\n        StoveKnobType - otype\n        ClothType - otype\n        ShowerDoorType - otype\n        TeddyBearType - otype\n        FootstoolType - otype\n        PosterType - otype\n        EggType - otype\n        CupType - otype\n        BaseballBatType - otype\n        TissueBoxType - otype\n        SpoonType - otype\n        BathtubType - otype\n        BootsType - otype\n        ToiletPaperRollType - otype\n        PlungerType - otype\n        RemoteControlType - otype\n        CDType - otype\n        AppleType - otype\n        CandleType - otype\n        LaptopType - otype\n        SprayBottleType - otype\n        TowelType - otype\n        SaltShakerType - otype\n        LadleType - otype\n        NewspaperType - otype\n        SoapBarType - otype\n        FloorLampType - otype\n        LightSwitchType - otype\n        CellPhoneType - otype\n        PillowType - otype\n        VaseType - otype\n        LettuceType - otype\n        AlarmClockType - otype\n        CurtainsType - otype\n        TennisRacketType - otype\n        DeskLampType - otype\n        KnifeType - otype\n        ToiletPaperType - otype\n        PaperTowelRollType - otype\n        SpatulaType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToasterType - otype\n        PepperShakerType - otype\n        MugType - otype\n        WineBottleType - otype\n        LaundryHamperLidType - otype\n        TomatoType - otype\n        PaintingType - otype\n        BowlType - otype\n        WindowType - otype\n        MirrorType - otype\n        PenType - otype\n        StatueType - otype\n        BookType - otype\n        PotType - otype\n        BlindsType - otype\n        HousePlantType - otype\n        ChairType - otype\n        ForkType - otype\n        ScrubBrushType - otype\n        PencilType - otype\n        PotatoType - otype\n        KeyChainType - otype\n        WateringCanType - otype\n        SoapBottleType - otype\n        GlassbottleType - otype\n        BreadType - otype\n        BoxType - otype\n        ArmChairType - rtype\n        CabinetType - rtype\n        BedType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        DrawerType - rtype\n        ShelfType - rtype\n        SafeType - rtype\n        ToiletType - rtype\n        DresserType - rtype\n        LaundryHamperType - rtype\n        DeskType - rtype\n        ToiletPaperHangerType - rtype\n        HandTowelHolderType - rtype\n        BathtubBasinType - rtype\n        CoffeeTableType - rtype\n        SideTableType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        GarbageCanType - rtype\n        TowelHolderType - rtype\n        CounterTopType - rtype\n        OttomanType - rtype\n        FridgeType - rtype\n        SinkBasinType - rtype\n        DiningTableType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nmove the cd that ' s on top of the desk to on top of the dresser.\n", "codex_output": [";; Simplified Goal: \npick_and_place_simple-CD-None-Dresser\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_and_place_simple-CD-Desk-Dresser\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r1 - receptacle)\n        (exists (?r2 - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r1 DeskType)\n                (receptacleType ?r2 DresserType)\n                (objectAtLocation ?o ?l)\n                (atLocation ?l ?r1)\n                (inReceptacle ?o ?r1)\n                (inReceptacleObject ?o ?r1)\n                (receptacleAtLocation ?r2 ?l)\n                (inReceptacle ?o ?r2)\n            )\n    ))))", ";; Simplified Goal: \npick_and_place_simple-CD-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DeskLampType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_and_place_simple-CD-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>"]}, "train/pick_heat_then_place_in_recep-BreadSliced-None-DiningTable-7/trial_T20190906_200122_168916": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Laptop - object\n        KeyChain - object\n        Bread - object\n        PaperTowel - object\n        Boots - object\n        AlarmClock - object\n        ButterKnife - object\n        Pot - object\n        Chair - object\n        Mug - object\n        Footstool - object\n        Sink - object\n        Television - object\n        Spoon - object\n        Towel - object\n        Cup - object\n        LightSwitch - object\n        Apple - object\n        Box - object\n        Newspaper - object\n        SoapBottle - object\n        HandTowel - object\n        Cloth - object\n        Knife - object\n        SprayBottle - object\n        Painting - object\n        Bowl - object\n        Ladle - object\n        ShowerGlass - object\n        SaltShaker - object\n        Bathtub - object\n        FloorLamp - object\n        Statue - object\n        Spatula - object\n        Fork - object\n        Glassbottle - object\n        Tomato - object\n        Toaster - object\n        ToiletPaperRoll - object\n        Pan - object\n        Book - object\n        CellPhone - object\n        Vase - object\n        ShowerDoor - object\n        Candle - object\n        Egg - object\n        HousePlant - object\n        Window - object\n        ScrubBrush - object\n        Watch - object\n        Curtains - object\n        Lettuce - object\n        TeddyBear - object\n        Plate - object\n        Mirror - object\n        CD - object\n        WateringCan - object\n        DishSponge - object\n        TennisRacket - object\n        Pillow - object\n        CreditCard - object\n        StoveKnob - object\n        DeskLamp - object\n        Pen - object\n        Blinds - object\n        LaundryHamperLid - object\n        PaperTowelRoll - object\n        WineBottle - object\n        BasketBall - object\n        Potato - object\n        Pencil - object\n        RemoteControl - object\n        TissueBox - object\n        ToiletPaper - object\n        PepperShaker - object\n        Poster - object\n        Kettle - object\n        SoapBar - object\n        BaseballBat - object\n        Plunger - object\n        LaptopType - otype\n        KeyChainType - otype\n        BreadType - otype\n        PaperTowelType - otype\n        BootsType - otype\n        AlarmClockType - otype\n        ButterKnifeType - otype\n        PotType - otype\n        ChairType - otype\n        MugType - otype\n        FootstoolType - otype\n        SinkType - otype\n        TelevisionType - otype\n        SpoonType - otype\n        TowelType - otype\n        CupType - otype\n        LightSwitchType - otype\n        AppleType - otype\n        BoxType - otype\n        NewspaperType - otype\n        SoapBottleType - otype\n        HandTowelType - otype\n        ClothType - otype\n        KnifeType - otype\n        SprayBottleType - otype\n        PaintingType - otype\n        BowlType - otype\n        LadleType - otype\n        ShowerGlassType - otype\n        SaltShakerType - otype\n        BathtubType - otype\n        FloorLampType - otype\n        StatueType - otype\n        SpatulaType - otype\n        ForkType - otype\n        GlassbottleType - otype\n        TomatoType - otype\n        ToasterType - otype\n        ToiletPaperRollType - otype\n        PanType - otype\n        BookType - otype\n        CellPhoneType - otype\n        VaseType - otype\n        ShowerDoorType - otype\n        CandleType - otype\n        EggType - otype\n        HousePlantType - otype\n        WindowType - otype\n        ScrubBrushType - otype\n        WatchType - otype\n        CurtainsType - otype\n        LettuceType - otype\n        TeddyBearType - otype\n        PlateType - otype\n        MirrorType - otype\n        CDType - otype\n        WateringCanType - otype\n        DishSpongeType - otype\n        TennisRacketType - otype\n        PillowType - otype\n        CreditCardType - otype\n        StoveKnobType - otype\n        DeskLampType - otype\n        PenType - otype\n        BlindsType - otype\n        LaundryHamperLidType - otype\n        PaperTowelRollType - otype\n        WineBottleType - otype\n        BasketBallType - otype\n        PotatoType - otype\n        PencilType - otype\n        RemoteControlType - otype\n        TissueBoxType - otype\n        ToiletPaperType - otype\n        PepperShakerType - otype\n        PosterType - otype\n        KettleType - otype\n        SoapBarType - otype\n        BaseballBatType - otype\n        PlungerType - otype\n        DeskType - rtype\n        BathtubBasinType - rtype\n        GarbageCanType - rtype\n        SofaType - rtype\n        CoffeeTableType - rtype\n        TowelHolderType - rtype\n        DresserType - rtype\n        HandTowelHolderType - rtype\n        LaundryHamperType - rtype\n        SafeType - rtype\n        MicrowaveType - rtype\n        OttomanType - rtype\n        StoveBurnerType - rtype\n        SideTableType - rtype\n        ToiletPaperHangerType - rtype\n        CounterTopType - rtype\n        DrawerType - rtype\n        BedType - rtype\n        CabinetType - rtype\n        FridgeType - rtype\n        ArmChairType - rtype\n        CartType - rtype\n        SinkBasinType - rtype\n        ToiletType - rtype\n        CoffeeMachineType - rtype\n        DiningTableType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nmove cooked food to the kitchen table.\n", "codex_output": [";; Simplified Goal: \npick_and_place_simple-Food-None-KitchenTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?l - location)\n            (and \n                (objectType ?o FoodType) \n                (receptacleType ?r KitchenTableType)\n                (inReceptacle ?o ?r)\n            )\n    ))))", ";; Simplified Goal: \npick_and_place_simple-CookedFood-None-KitchenTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (inReceptacle ?o ?r)\n                (receptacleType ?r KitchenTableType)\n                (holdsAnyReceptacleObject ?o)\n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-CookedFood-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (objectType ?o ?t)\n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_and_place_simple-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (heatable ?o)\n                (isHot ?o)  \n            )\n    )))\n\n<END>"]}, "train/pick_heat_then_place_in_recep-Potato-None-Fridge-2/trial_T20190909_030845_198194": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Laptop - object\n        KeyChain - object\n        Bread - object\n        PaperTowel - object\n        Boots - object\n        AlarmClock - object\n        ButterKnife - object\n        Pot - object\n        Chair - object\n        Mug - object\n        Footstool - object\n        Sink - object\n        Television - object\n        Spoon - object\n        Towel - object\n        Cup - object\n        LightSwitch - object\n        Apple - object\n        Box - object\n        Newspaper - object\n        SoapBottle - object\n        HandTowel - object\n        Cloth - object\n        Knife - object\n        SprayBottle - object\n        Painting - object\n        Bowl - object\n        Ladle - object\n        ShowerGlass - object\n        SaltShaker - object\n        Bathtub - object\n        FloorLamp - object\n        Statue - object\n        Spatula - object\n        Fork - object\n        Glassbottle - object\n        Tomato - object\n        Toaster - object\n        ToiletPaperRoll - object\n        Pan - object\n        Book - object\n        CellPhone - object\n        Vase - object\n        ShowerDoor - object\n        Candle - object\n        Egg - object\n        HousePlant - object\n        Window - object\n        ScrubBrush - object\n        Watch - object\n        Curtains - object\n        Lettuce - object\n        TeddyBear - object\n        Plate - object\n        Mirror - object\n        CD - object\n        WateringCan - object\n        DishSponge - object\n        TennisRacket - object\n        Pillow - object\n        CreditCard - object\n        StoveKnob - object\n        DeskLamp - object\n        Pen - object\n        Blinds - object\n        LaundryHamperLid - object\n        PaperTowelRoll - object\n        WineBottle - object\n        BasketBall - object\n        Potato - object\n        Pencil - object\n        RemoteControl - object\n        TissueBox - object\n        ToiletPaper - object\n        PepperShaker - object\n        Poster - object\n        Kettle - object\n        SoapBar - object\n        BaseballBat - object\n        Plunger - object\n        LaptopType - otype\n        KeyChainType - otype\n        BreadType - otype\n        PaperTowelType - otype\n        BootsType - otype\n        AlarmClockType - otype\n        ButterKnifeType - otype\n        PotType - otype\n        ChairType - otype\n        MugType - otype\n        FootstoolType - otype\n        SinkType - otype\n        TelevisionType - otype\n        SpoonType - otype\n        TowelType - otype\n        CupType - otype\n        LightSwitchType - otype\n        AppleType - otype\n        BoxType - otype\n        NewspaperType - otype\n        SoapBottleType - otype\n        HandTowelType - otype\n        ClothType - otype\n        KnifeType - otype\n        SprayBottleType - otype\n        PaintingType - otype\n        BowlType - otype\n        LadleType - otype\n        ShowerGlassType - otype\n        SaltShakerType - otype\n        BathtubType - otype\n        FloorLampType - otype\n        StatueType - otype\n        SpatulaType - otype\n        ForkType - otype\n        GlassbottleType - otype\n        TomatoType - otype\n        ToasterType - otype\n        ToiletPaperRollType - otype\n        PanType - otype\n        BookType - otype\n        CellPhoneType - otype\n        VaseType - otype\n        ShowerDoorType - otype\n        CandleType - otype\n        EggType - otype\n        HousePlantType - otype\n        WindowType - otype\n        ScrubBrushType - otype\n        WatchType - otype\n        CurtainsType - otype\n        LettuceType - otype\n        TeddyBearType - otype\n        PlateType - otype\n        MirrorType - otype\n        CDType - otype\n        WateringCanType - otype\n        DishSpongeType - otype\n        TennisRacketType - otype\n        PillowType - otype\n        CreditCardType - otype\n        StoveKnobType - otype\n        DeskLampType - otype\n        PenType - otype\n        BlindsType - otype\n        LaundryHamperLidType - otype\n        PaperTowelRollType - otype\n        WineBottleType - otype\n        BasketBallType - otype\n        PotatoType - otype\n        PencilType - otype\n        RemoteControlType - otype\n        TissueBoxType - otype\n        ToiletPaperType - otype\n        PepperShakerType - otype\n        PosterType - otype\n        KettleType - otype\n        SoapBarType - otype\n        BaseballBatType - otype\n        PlungerType - otype\n        DeskType - rtype\n        BathtubBasinType - rtype\n        GarbageCanType - rtype\n        SofaType - rtype\n        CoffeeTableType - rtype\n        TowelHolderType - rtype\n        DresserType - rtype\n        HandTowelHolderType - rtype\n        LaundryHamperType - rtype\n        SafeType - rtype\n        MicrowaveType - rtype\n        OttomanType - rtype\n        StoveBurnerType - rtype\n        SideTableType - rtype\n        ToiletPaperHangerType - rtype\n        CounterTopType - rtype\n        DrawerType - rtype\n        BedType - rtype\n        CabinetType - rtype\n        FridgeType - rtype\n        ArmChairType - rtype\n        CartType - rtype\n        SinkBasinType - rtype\n        ToiletType - rtype\n        CoffeeMachineType - rtype\n        DiningTableType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nput a warm potato in the fridge.\n", "codex_output": [";; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-Potato-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))", ";; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))", "pick_heat_then_place_in_recep-Potato-None-Fridge"]}, "train/pick_and_place_simple-BreadSliced-None-SideTable-3/trial_T20190907_000233_574076": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Laptop - object\n        KeyChain - object\n        Bread - object\n        PaperTowel - object\n        Boots - object\n        AlarmClock - object\n        ButterKnife - object\n        Pot - object\n        Chair - object\n        Mug - object\n        Footstool - object\n        Sink - object\n        Television - object\n        Spoon - object\n        Towel - object\n        Cup - object\n        LightSwitch - object\n        Apple - object\n        Box - object\n        Newspaper - object\n        SoapBottle - object\n        HandTowel - object\n        Cloth - object\n        Knife - object\n        SprayBottle - object\n        Painting - object\n        Bowl - object\n        Ladle - object\n        ShowerGlass - object\n        SaltShaker - object\n        Bathtub - object\n        FloorLamp - object\n        Statue - object\n        Spatula - object\n        Fork - object\n        Glassbottle - object\n        Tomato - object\n        Toaster - object\n        ToiletPaperRoll - object\n        Pan - object\n        Book - object\n        CellPhone - object\n        Vase - object\n        ShowerDoor - object\n        Candle - object\n        Egg - object\n        HousePlant - object\n        Window - object\n        ScrubBrush - object\n        Watch - object\n        Curtains - object\n        Lettuce - object\n        TeddyBear - object\n        Plate - object\n        Mirror - object\n        CD - object\n        WateringCan - object\n        DishSponge - object\n        TennisRacket - object\n        Pillow - object\n        CreditCard - object\n        StoveKnob - object\n        DeskLamp - object\n        Pen - object\n        Blinds - object\n        LaundryHamperLid - object\n        PaperTowelRoll - object\n        WineBottle - object\n        BasketBall - object\n        Potato - object\n        Pencil - object\n        RemoteControl - object\n        TissueBox - object\n        ToiletPaper - object\n        PepperShaker - object\n        Poster - object\n        Kettle - object\n        SoapBar - object\n        BaseballBat - object\n        Plunger - object\n        LaptopType - otype\n        KeyChainType - otype\n        BreadType - otype\n        PaperTowelType - otype\n        BootsType - otype\n        AlarmClockType - otype\n        ButterKnifeType - otype\n        PotType - otype\n        ChairType - otype\n        MugType - otype\n        FootstoolType - otype\n        SinkType - otype\n        TelevisionType - otype\n        SpoonType - otype\n        TowelType - otype\n        CupType - otype\n        LightSwitchType - otype\n        AppleType - otype\n        BoxType - otype\n        NewspaperType - otype\n        SoapBottleType - otype\n        HandTowelType - otype\n        ClothType - otype\n        KnifeType - otype\n        SprayBottleType - otype\n        PaintingType - otype\n        BowlType - otype\n        LadleType - otype\n        ShowerGlassType - otype\n        SaltShakerType - otype\n        BathtubType - otype\n        FloorLampType - otype\n        StatueType - otype\n        SpatulaType - otype\n        ForkType - otype\n        GlassbottleType - otype\n        TomatoType - otype\n        ToasterType - otype\n        ToiletPaperRollType - otype\n        PanType - otype\n        BookType - otype\n        CellPhoneType - otype\n        VaseType - otype\n        ShowerDoorType - otype\n        CandleType - otype\n        EggType - otype\n        HousePlantType - otype\n        WindowType - otype\n        ScrubBrushType - otype\n        WatchType - otype\n        CurtainsType - otype\n        LettuceType - otype\n        TeddyBearType - otype\n        PlateType - otype\n        MirrorType - otype\n        CDType - otype\n        WateringCanType - otype\n        DishSpongeType - otype\n        TennisRacketType - otype\n        PillowType - otype\n        CreditCardType - otype\n        StoveKnobType - otype\n        DeskLampType - otype\n        PenType - otype\n        BlindsType - otype\n        LaundryHamperLidType - otype\n        PaperTowelRollType - otype\n        WineBottleType - otype\n        BasketBallType - otype\n        PotatoType - otype\n        PencilType - otype\n        RemoteControlType - otype\n        TissueBoxType - otype\n        ToiletPaperType - otype\n        PepperShakerType - otype\n        PosterType - otype\n        KettleType - otype\n        SoapBarType - otype\n        BaseballBatType - otype\n        PlungerType - otype\n        DeskType - rtype\n        BathtubBasinType - rtype\n        GarbageCanType - rtype\n        SofaType - rtype\n        CoffeeTableType - rtype\n        TowelHolderType - rtype\n        DresserType - rtype\n        HandTowelHolderType - rtype\n        LaundryHamperType - rtype\n        SafeType - rtype\n        MicrowaveType - rtype\n        OttomanType - rtype\n        StoveBurnerType - rtype\n        SideTableType - rtype\n        ToiletPaperHangerType - rtype\n        CounterTopType - rtype\n        DrawerType - rtype\n        BedType - rtype\n        CabinetType - rtype\n        FridgeType - rtype\n        ArmChairType - rtype\n        CartType - rtype\n        SinkBasinType - rtype\n        ToiletType - rtype\n        CoffeeMachineType - rtype\n        DiningTableType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nput a slice of bread on a stand.\n", "codex_output": [";; Simplified Goal: place_simple-BreadSlice-None-Plate\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r PlateType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-BreadSliced-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-BreadSliced-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FloorLampType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)\n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-BreadSliced-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FloorLampType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))"]}, "train/pick_heat_then_place_in_recep-TomatoSliced-None-SideTable-3/trial_T20190907_221717_848357": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Pillow - object\n        Pencil - object\n        Blinds - object\n        Mug - object\n        Television - object\n        CellPhone - object\n        HandTowel - object\n        Fork - object\n        Spoon - object\n        HousePlant - object\n        TeddyBear - object\n        Apple - object\n        Box - object\n        Plate - object\n        PaperTowel - object\n        Toaster - object\n        Bathtub - object\n        Statue - object\n        SprayBottle - object\n        Chair - object\n        Knife - object\n        Bowl - object\n        CD - object\n        CreditCard - object\n        WineBottle - object\n        Book - object\n        AlarmClock - object\n        Pot - object\n        TennisRacket - object\n        Candle - object\n        RemoteControl - object\n        Bread - object\n        Cloth - object\n        Tomato - object\n        SoapBottle - object\n        Poster - object\n        BaseballBat - object\n        LightSwitch - object\n        Newspaper - object\n        StoveKnob - object\n        Towel - object\n        ToiletPaperRoll - object\n        Vase - object\n        Ladle - object\n        Sink - object\n        Glassbottle - object\n        TissueBox - object\n        ScrubBrush - object\n        ButterKnife - object\n        LaundryHamperLid - object\n        ToiletPaper - object\n        Laptop - object\n        Watch - object\n        WateringCan - object\n        Pen - object\n        BasketBall - object\n        Spatula - object\n        Cup - object\n        FloorLamp - object\n        DeskLamp - object\n        ShowerDoor - object\n        PaperTowelRoll - object\n        Lettuce - object\n        Plunger - object\n        DishSponge - object\n        KeyChain - object\n        Painting - object\n        Kettle - object\n        Pan - object\n        Mirror - object\n        SoapBar - object\n        Curtains - object\n        Egg - object\n        ShowerGlass - object\n        Potato - object\n        Window - object\n        Boots - object\n        SaltShaker - object\n        Footstool - object\n        PepperShaker - object\n        PillowType - otype\n        PencilType - otype\n        BlindsType - otype\n        MugType - otype\n        TelevisionType - otype\n        CellPhoneType - otype\n        HandTowelType - otype\n        ForkType - otype\n        SpoonType - otype\n        HousePlantType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        BoxType - otype\n        PlateType - otype\n        PaperTowelType - otype\n        ToasterType - otype\n        BathtubType - otype\n        StatueType - otype\n        SprayBottleType - otype\n        ChairType - otype\n        KnifeType - otype\n        BowlType - otype\n        CDType - otype\n        CreditCardType - otype\n        WineBottleType - otype\n        BookType - otype\n        AlarmClockType - otype\n        PotType - otype\n        TennisRacketType - otype\n        CandleType - otype\n        RemoteControlType - otype\n        BreadType - otype\n        ClothType - otype\n        TomatoType - otype\n        SoapBottleType - otype\n        PosterType - otype\n        BaseballBatType - otype\n        LightSwitchType - otype\n        NewspaperType - otype\n        StoveKnobType - otype\n        TowelType - otype\n        ToiletPaperRollType - otype\n        VaseType - otype\n        LadleType - otype\n        SinkType - otype\n        GlassbottleType - otype\n        TissueBoxType - otype\n        ScrubBrushType - otype\n        ButterKnifeType - otype\n        LaundryHamperLidType - otype\n        ToiletPaperType - otype\n        LaptopType - otype\n        WatchType - otype\n        WateringCanType - otype\n        PenType - otype\n        BasketBallType - otype\n        SpatulaType - otype\n        CupType - otype\n        FloorLampType - otype\n        DeskLampType - otype\n        ShowerDoorType - otype\n        PaperTowelRollType - otype\n        LettuceType - otype\n        PlungerType - otype\n        DishSpongeType - otype\n        KeyChainType - otype\n        PaintingType - otype\n        KettleType - otype\n        PanType - otype\n        MirrorType - otype\n        SoapBarType - otype\n        CurtainsType - otype\n        EggType - otype\n        ShowerGlassType - otype\n        PotatoType - otype\n        WindowType - otype\n        BootsType - otype\n        SaltShakerType - otype\n        FootstoolType - otype\n        PepperShakerType - otype\n        TowelHolderType - rtype\n        CoffeeMachineType - rtype\n        ToiletType - rtype\n        SideTableType - rtype\n        BedType - rtype\n        SofaType - rtype\n        DresserType - rtype\n        CoffeeTableType - rtype\n        BathtubBasinType - rtype\n        MicrowaveType - rtype\n        LaundryHamperType - rtype\n        GarbageCanType - rtype\n        SafeType - rtype\n        CartType - rtype\n        CabinetType - rtype\n        ArmChairType - rtype\n        DiningTableType - rtype\n        HandTowelHolderType - rtype\n        ShelfType - rtype\n        SinkBasinType - rtype\n        CounterTopType - rtype\n        ToiletPaperHangerType - rtype\n        DeskType - rtype\n        DrawerType - rtype\n        StoveBurnerType - rtype\n        OttomanType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nslice , cook tomato to be placed on top of black drawer unit.\n", "codex_output": [";; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Drawer\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Drawer\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Drawer\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o)\n                (heatable ?o)\n                (isHot ?o)\n                (objectAtLocation ?ot ?l)\n                (objectType ?ot DrawerType)\n                (atLocation ?o ?l)\n            )\n    )))))", ";; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Drawer\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>"]}, "train/pick_clean_then_place_in_recep-Pan-None-StoveBurner-2/trial_T20190906_215744_388781": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Laptop - object\n        KeyChain - object\n        Bread - object\n        PaperTowel - object\n        Boots - object\n        AlarmClock - object\n        ButterKnife - object\n        Pot - object\n        Chair - object\n        Mug - object\n        Footstool - object\n        Sink - object\n        Television - object\n        Spoon - object\n        Towel - object\n        Cup - object\n        LightSwitch - object\n        Apple - object\n        Box - object\n        Newspaper - object\n        SoapBottle - object\n        HandTowel - object\n        Cloth - object\n        Knife - object\n        SprayBottle - object\n        Painting - object\n        Bowl - object\n        Ladle - object\n        ShowerGlass - object\n        SaltShaker - object\n        Bathtub - object\n        FloorLamp - object\n        Statue - object\n        Spatula - object\n        Fork - object\n        Glassbottle - object\n        Tomato - object\n        Toaster - object\n        ToiletPaperRoll - object\n        Pan - object\n        Book - object\n        CellPhone - object\n        Vase - object\n        ShowerDoor - object\n        Candle - object\n        Egg - object\n        HousePlant - object\n        Window - object\n        ScrubBrush - object\n        Watch - object\n        Curtains - object\n        Lettuce - object\n        TeddyBear - object\n        Plate - object\n        Mirror - object\n        CD - object\n        WateringCan - object\n        DishSponge - object\n        TennisRacket - object\n        Pillow - object\n        CreditCard - object\n        StoveKnob - object\n        DeskLamp - object\n        Pen - object\n        Blinds - object\n        LaundryHamperLid - object\n        PaperTowelRoll - object\n        WineBottle - object\n        BasketBall - object\n        Potato - object\n        Pencil - object\n        RemoteControl - object\n        TissueBox - object\n        ToiletPaper - object\n        PepperShaker - object\n        Poster - object\n        Kettle - object\n        SoapBar - object\n        BaseballBat - object\n        Plunger - object\n        LaptopType - otype\n        KeyChainType - otype\n        BreadType - otype\n        PaperTowelType - otype\n        BootsType - otype\n        AlarmClockType - otype\n        ButterKnifeType - otype\n        PotType - otype\n        ChairType - otype\n        MugType - otype\n        FootstoolType - otype\n        SinkType - otype\n        TelevisionType - otype\n        SpoonType - otype\n        TowelType - otype\n        CupType - otype\n        LightSwitchType - otype\n        AppleType - otype\n        BoxType - otype\n        NewspaperType - otype\n        SoapBottleType - otype\n        HandTowelType - otype\n        ClothType - otype\n        KnifeType - otype\n        SprayBottleType - otype\n        PaintingType - otype\n        BowlType - otype\n        LadleType - otype\n        ShowerGlassType - otype\n        SaltShakerType - otype\n        BathtubType - otype\n        FloorLampType - otype\n        StatueType - otype\n        SpatulaType - otype\n        ForkType - otype\n        GlassbottleType - otype\n        TomatoType - otype\n        ToasterType - otype\n        ToiletPaperRollType - otype\n        PanType - otype\n        BookType - otype\n        CellPhoneType - otype\n        VaseType - otype\n        ShowerDoorType - otype\n        CandleType - otype\n        EggType - otype\n        HousePlantType - otype\n        WindowType - otype\n        ScrubBrushType - otype\n        WatchType - otype\n        CurtainsType - otype\n        LettuceType - otype\n        TeddyBearType - otype\n        PlateType - otype\n        MirrorType - otype\n        CDType - otype\n        WateringCanType - otype\n        DishSpongeType - otype\n        TennisRacketType - otype\n        PillowType - otype\n        CreditCardType - otype\n        StoveKnobType - otype\n        DeskLampType - otype\n        PenType - otype\n        BlindsType - otype\n        LaundryHamperLidType - otype\n        PaperTowelRollType - otype\n        WineBottleType - otype\n        BasketBallType - otype\n        PotatoType - otype\n        PencilType - otype\n        RemoteControlType - otype\n        TissueBoxType - otype\n        ToiletPaperType - otype\n        PepperShakerType - otype\n        PosterType - otype\n        KettleType - otype\n        SoapBarType - otype\n        BaseballBatType - otype\n        PlungerType - otype\n        DeskType - rtype\n        BathtubBasinType - rtype\n        GarbageCanType - rtype\n        SofaType - rtype\n        CoffeeTableType - rtype\n        TowelHolderType - rtype\n        DresserType - rtype\n        HandTowelHolderType - rtype\n        LaundryHamperType - rtype\n        SafeType - rtype\n        MicrowaveType - rtype\n        OttomanType - rtype\n        StoveBurnerType - rtype\n        SideTableType - rtype\n        ToiletPaperHangerType - rtype\n        CounterTopType - rtype\n        DrawerType - rtype\n        BedType - rtype\n        CabinetType - rtype\n        FridgeType - rtype\n        ArmChairType - rtype\n        CartType - rtype\n        SinkBasinType - rtype\n        ToiletType - rtype\n        CoffeeMachineType - rtype\n        DiningTableType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nplace a clean pan on the electric cooker.\n", "codex_output": [";; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (isClean ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))", ";; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>"]}, "train/pick_cool_then_place_in_recep-BreadSliced-None-CounterTop-12/trial_T20190907_163929_158290": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        LightSwitch - object\n        Knife - object\n        LaundryHamperLid - object\n        Kettle - object\n        Pillow - object\n        ToiletPaperRoll - object\n        Blinds - object\n        Newspaper - object\n        Painting - object\n        ShowerGlass - object\n        Bathtub - object\n        HandTowel - object\n        Spatula - object\n        AlarmClock - object\n        BaseballBat - object\n        TennisRacket - object\n        Mug - object\n        Lettuce - object\n        Fork - object\n        Egg - object\n        CreditCard - object\n        Laptop - object\n        Candle - object\n        Book - object\n        RemoteControl - object\n        Statue - object\n        KeyChain - object\n        TeddyBear - object\n        Bowl - object\n        Tomato - object\n        PaperTowel - object\n        Toaster - object\n        Sink - object\n        Apple - object\n        Poster - object\n        SoapBottle - object\n        Spoon - object\n        Bread - object\n        Watch - object\n        ToiletPaper - object\n        BasketBall - object\n        CD - object\n        HousePlant - object\n        Potato - object\n        Cloth - object\n        Curtains - object\n        Pot - object\n        StoveKnob - object\n        Pen - object\n        Box - object\n        SprayBottle - object\n        ShowerDoor - object\n        Plunger - object\n        Footstool - object\n        Ladle - object\n        Television - object\n        Chair - object\n        SaltShaker - object\n        ButterKnife - object\n        Pan - object\n        Plate - object\n        WateringCan - object\n        Cup - object\n        Mirror - object\n        CellPhone - object\n        Towel - object\n        Boots - object\n        DeskLamp - object\n        PepperShaker - object\n        Window - object\n        Vase - object\n        ScrubBrush - object\n        TissueBox - object\n        PaperTowelRoll - object\n        Pencil - object\n        DishSponge - object\n        FloorLamp - object\n        SoapBar - object\n        WineBottle - object\n        Glassbottle - object\n        LightSwitchType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        KettleType - otype\n        PillowType - otype\n        ToiletPaperRollType - otype\n        BlindsType - otype\n        NewspaperType - otype\n        PaintingType - otype\n        ShowerGlassType - otype\n        BathtubType - otype\n        HandTowelType - otype\n        SpatulaType - otype\n        AlarmClockType - otype\n        BaseballBatType - otype\n        TennisRacketType - otype\n        MugType - otype\n        LettuceType - otype\n        ForkType - otype\n        EggType - otype\n        CreditCardType - otype\n        LaptopType - otype\n        CandleType - otype\n        BookType - otype\n        RemoteControlType - otype\n        StatueType - otype\n        KeyChainType - otype\n        TeddyBearType - otype\n        BowlType - otype\n        TomatoType - otype\n        PaperTowelType - otype\n        ToasterType - otype\n        SinkType - otype\n        AppleType - otype\n        PosterType - otype\n        SoapBottleType - otype\n        SpoonType - otype\n        BreadType - otype\n        WatchType - otype\n        ToiletPaperType - otype\n        BasketBallType - otype\n        CDType - otype\n        HousePlantType - otype\n        PotatoType - otype\n        ClothType - otype\n        CurtainsType - otype\n        PotType - otype\n        StoveKnobType - otype\n        PenType - otype\n        BoxType - otype\n        SprayBottleType - otype\n        ShowerDoorType - otype\n        PlungerType - otype\n        FootstoolType - otype\n        LadleType - otype\n        TelevisionType - otype\n        ChairType - otype\n        SaltShakerType - otype\n        ButterKnifeType - otype\n        PanType - otype\n        PlateType - otype\n        WateringCanType - otype\n        CupType - otype\n        MirrorType - otype\n        CellPhoneType - otype\n        TowelType - otype\n        BootsType - otype\n        DeskLampType - otype\n        PepperShakerType - otype\n        WindowType - otype\n        VaseType - otype\n        ScrubBrushType - otype\n        TissueBoxType - otype\n        PaperTowelRollType - otype\n        PencilType - otype\n        DishSpongeType - otype\n        FloorLampType - otype\n        SoapBarType - otype\n        WineBottleType - otype\n        GlassbottleType - otype\n        CabinetType - rtype\n        DrawerType - rtype\n        MicrowaveType - rtype\n        ArmChairType - rtype\n        DiningTableType - rtype\n        SideTableType - rtype\n        CounterTopType - rtype\n        LaundryHamperType - rtype\n        ToiletType - rtype\n        SinkBasinType - rtype\n        ToiletPaperHangerType - rtype\n        BedType - rtype\n        ShelfType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        CoffeeTableType - rtype\n        FridgeType - rtype\n        DeskType - rtype\n        CartType - rtype\n        HandTowelHolderType - rtype\n        SofaType - rtype\n        SafeType - rtype\n        GarbageCanType - rtype\n        OttomanType - rtype\n        CoffeeMachineType - rtype\n        StoveBurnerType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nput chilled bread on the counter.\n", "codex_output": [";; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))", ";; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))", ";; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))"]}, "train/pick_and_place_simple-Pencil-None-Shelf-310/trial_T20190908_023618_136375": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Painting - object\n        PaperTowel - object\n        KeyChain - object\n        LaundryHamperLid - object\n        CellPhone - object\n        Watch - object\n        Potato - object\n        HousePlant - object\n        Fork - object\n        Spoon - object\n        BaseballBat - object\n        Statue - object\n        WateringCan - object\n        SprayBottle - object\n        SoapBottle - object\n        TennisRacket - object\n        StoveKnob - object\n        Cup - object\n        Bathtub - object\n        LightSwitch - object\n        AlarmClock - object\n        Toaster - object\n        Pot - object\n        Kettle - object\n        Footstool - object\n        PaperTowelRoll - object\n        Spatula - object\n        Plate - object\n        ToiletPaper - object\n        Bowl - object\n        SoapBar - object\n        Candle - object\n        Plunger - object\n        BasketBall - object\n        Newspaper - object\n        ShowerDoor - object\n        Blinds - object\n        PepperShaker - object\n        DishSponge - object\n        HandTowel - object\n        Apple - object\n        Egg - object\n        TissueBox - object\n        Book - object\n        FloorLamp - object\n        Poster - object\n        Pan - object\n        Vase - object\n        Lettuce - object\n        SaltShaker - object\n        Mug - object\n        Curtains - object\n        Pillow - object\n        Knife - object\n        Bread - object\n        Glassbottle - object\n        Tomato - object\n        Cloth - object\n        Window - object\n        Chair - object\n        Towel - object\n        ButterKnife - object\n        Laptop - object\n        ToiletPaperRoll - object\n        Pen - object\n        ShowerGlass - object\n        CreditCard - object\n        Sink - object\n        ScrubBrush - object\n        RemoteControl - object\n        Box - object\n        CD - object\n        Pencil - object\n        DeskLamp - object\n        Ladle - object\n        Television - object\n        Mirror - object\n        TeddyBear - object\n        Boots - object\n        WineBottle - object\n        PaintingType - otype\n        PaperTowelType - otype\n        KeyChainType - otype\n        LaundryHamperLidType - otype\n        CellPhoneType - otype\n        WatchType - otype\n        PotatoType - otype\n        HousePlantType - otype\n        ForkType - otype\n        SpoonType - otype\n        BaseballBatType - otype\n        StatueType - otype\n        WateringCanType - otype\n        SprayBottleType - otype\n        SoapBottleType - otype\n        TennisRacketType - otype\n        StoveKnobType - otype\n        CupType - otype\n        BathtubType - otype\n        LightSwitchType - otype\n        AlarmClockType - otype\n        ToasterType - otype\n        PotType - otype\n        KettleType - otype\n        FootstoolType - otype\n        PaperTowelRollType - otype\n        SpatulaType - otype\n        PlateType - otype\n        ToiletPaperType - otype\n        BowlType - otype\n        SoapBarType - otype\n        CandleType - otype\n        PlungerType - otype\n        BasketBallType - otype\n        NewspaperType - otype\n        ShowerDoorType - otype\n        BlindsType - otype\n        PepperShakerType - otype\n        DishSpongeType - otype\n        HandTowelType - otype\n        AppleType - otype\n        EggType - otype\n        TissueBoxType - otype\n        BookType - otype\n        FloorLampType - otype\n        PosterType - otype\n        PanType - otype\n        VaseType - otype\n        LettuceType - otype\n        SaltShakerType - otype\n        MugType - otype\n        CurtainsType - otype\n        PillowType - otype\n        KnifeType - otype\n        BreadType - otype\n        GlassbottleType - otype\n        TomatoType - otype\n        ClothType - otype\n        WindowType - otype\n        ChairType - otype\n        TowelType - otype\n        ButterKnifeType - otype\n        LaptopType - otype\n        ToiletPaperRollType - otype\n        PenType - otype\n        ShowerGlassType - otype\n        CreditCardType - otype\n        SinkType - otype\n        ScrubBrushType - otype\n        RemoteControlType - otype\n        BoxType - otype\n        CDType - otype\n        PencilType - otype\n        DeskLampType - otype\n        LadleType - otype\n        TelevisionType - otype\n        MirrorType - otype\n        TeddyBearType - otype\n        BootsType - otype\n        WineBottleType - otype\n        DiningTableType - rtype\n        ShelfType - rtype\n        StoveBurnerType - rtype\n        SofaType - rtype\n        BathtubBasinType - rtype\n        GarbageCanType - rtype\n        DrawerType - rtype\n        FridgeType - rtype\n        ToiletPaperHangerType - rtype\n        CabinetType - rtype\n        OttomanType - rtype\n        BedType - rtype\n        HandTowelHolderType - rtype\n        CartType - rtype\n        DresserType - rtype\n        CoffeeTableType - rtype\n        TowelHolderType - rtype\n        MicrowaveType - rtype\n        SafeType - rtype\n        DeskType - rtype\n        LaundryHamperType - rtype\n        ArmChairType - rtype\n        SideTableType - rtype\n        CoffeeMachineType - rtype\n        ToiletType - rtype\n        SinkBasinType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nmove a pencil to the desk shelf.\n", "codex_output": [";; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_and_place_simple-Pencil-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?obj - object)\n            (and \n                (objectType ?obj PencilType) \n                (atLocation ?obj ?l)\n                (receptacleAtLocation ?shelf ShelfType)\n                (inReceptacle ?obj ?shelf)\n            ) \n    )))\n\n<END>", ";; Simplified Goal: \npick_and_place_simple-Pencil-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_and_place_simple-Pencil-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>"]}, "train/pick_heat_then_place_in_recep-TomatoSliced-None-Fridge-14/trial_T20190911_114912_806806": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        AlarmClock - object\n        Footstool - object\n        TissueBox - object\n        Spatula - object\n        Candle - object\n        Bread - object\n        WateringCan - object\n        Knife - object\n        Apple - object\n        TeddyBear - object\n        PaperTowelRoll - object\n        Mug - object\n        Ladle - object\n        Statue - object\n        StoveKnob - object\n        Watch - object\n        CellPhone - object\n        Cup - object\n        Towel - object\n        Glassbottle - object\n        Plunger - object\n        Kettle - object\n        ToiletPaperRoll - object\n        Plate - object\n        DeskLamp - object\n        Book - object\n        Television - object\n        Bathtub - object\n        Potato - object\n        Pillow - object\n        SoapBottle - object\n        Box - object\n        Newspaper - object\n        LightSwitch - object\n        ButterKnife - object\n        RemoteControl - object\n        Laptop - object\n        ShowerGlass - object\n        WineBottle - object\n        Sink - object\n        Blinds - object\n        TennisRacket - object\n        BasketBall - object\n        Vase - object\n        Tomato - object\n        Spoon - object\n        Window - object\n        Egg - object\n        Curtains - object\n        Pencil - object\n        Cloth - object\n        Painting - object\n        SprayBottle - object\n        CD - object\n        ScrubBrush - object\n        PaperTowel - object\n        Mirror - object\n        Bowl - object\n        SaltShaker - object\n        DishSponge - object\n        LaundryHamperLid - object\n        Pot - object\n        CreditCard - object\n        BaseballBat - object\n        SoapBar - object\n        KeyChain - object\n        Pen - object\n        Fork - object\n        Toaster - object\n        Pan - object\n        HousePlant - object\n        Chair - object\n        ToiletPaper - object\n        FloorLamp - object\n        HandTowel - object\n        Boots - object\n        Poster - object\n        ShowerDoor - object\n        PepperShaker - object\n        Lettuce - object\n        AlarmClockType - otype\n        FootstoolType - otype\n        TissueBoxType - otype\n        SpatulaType - otype\n        CandleType - otype\n        BreadType - otype\n        WateringCanType - otype\n        KnifeType - otype\n        AppleType - otype\n        TeddyBearType - otype\n        PaperTowelRollType - otype\n        MugType - otype\n        LadleType - otype\n        StatueType - otype\n        StoveKnobType - otype\n        WatchType - otype\n        CellPhoneType - otype\n        CupType - otype\n        TowelType - otype\n        GlassbottleType - otype\n        PlungerType - otype\n        KettleType - otype\n        ToiletPaperRollType - otype\n        PlateType - otype\n        DeskLampType - otype\n        BookType - otype\n        TelevisionType - otype\n        BathtubType - otype\n        PotatoType - otype\n        PillowType - otype\n        SoapBottleType - otype\n        BoxType - otype\n        NewspaperType - otype\n        LightSwitchType - otype\n        ButterKnifeType - otype\n        RemoteControlType - otype\n        LaptopType - otype\n        ShowerGlassType - otype\n        WineBottleType - otype\n        SinkType - otype\n        BlindsType - otype\n        TennisRacketType - otype\n        BasketBallType - otype\n        VaseType - otype\n        TomatoType - otype\n        SpoonType - otype\n        WindowType - otype\n        EggType - otype\n        CurtainsType - otype\n        PencilType - otype\n        ClothType - otype\n        PaintingType - otype\n        SprayBottleType - otype\n        CDType - otype\n        ScrubBrushType - otype\n        PaperTowelType - otype\n        MirrorType - otype\n        BowlType - otype\n        SaltShakerType - otype\n        DishSpongeType - otype\n        LaundryHamperLidType - otype\n        PotType - otype\n        CreditCardType - otype\n        BaseballBatType - otype\n        SoapBarType - otype\n        KeyChainType - otype\n        PenType - otype\n        ForkType - otype\n        ToasterType - otype\n        PanType - otype\n        HousePlantType - otype\n        ChairType - otype\n        ToiletPaperType - otype\n        FloorLampType - otype\n        HandTowelType - otype\n        BootsType - otype\n        PosterType - otype\n        ShowerDoorType - otype\n        PepperShakerType - otype\n        LettuceType - otype\n        DrawerType - rtype\n        ArmChairType - rtype\n        LaundryHamperType - rtype\n        TowelHolderType - rtype\n        MicrowaveType - rtype\n        DeskType - rtype\n        ShelfType - rtype\n        CoffeeTableType - rtype\n        BathtubBasinType - rtype\n        SofaType - rtype\n        StoveBurnerType - rtype\n        CabinetType - rtype\n        DiningTableType - rtype\n        SinkBasinType - rtype\n        GarbageCanType - rtype\n        OttomanType - rtype\n        BedType - rtype\n        ToiletType - rtype\n        FridgeType - rtype\n        CartType - rtype\n        SideTableType - rtype\n        CounterTopType - rtype\n        DresserType - rtype\n        CoffeeMachineType - rtype\n        ToiletPaperHangerType - rtype\n        HandTowelHolderType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nputting a tomato slice in the fridge.\n", "codex_output": [";; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))"]}, "train/pick_heat_then_place_in_recep-Cup-None-Cabinet-8/trial_T20190907_170522_408193": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Laptop - object\n        KeyChain - object\n        Bread - object\n        PaperTowel - object\n        Boots - object\n        AlarmClock - object\n        ButterKnife - object\n        Pot - object\n        Chair - object\n        Mug - object\n        Footstool - object\n        Sink - object\n        Television - object\n        Spoon - object\n        Towel - object\n        Cup - object\n        LightSwitch - object\n        Apple - object\n        Box - object\n        Newspaper - object\n        SoapBottle - object\n        HandTowel - object\n        Cloth - object\n        Knife - object\n        SprayBottle - object\n        Painting - object\n        Bowl - object\n        Ladle - object\n        ShowerGlass - object\n        SaltShaker - object\n        Bathtub - object\n        FloorLamp - object\n        Statue - object\n        Spatula - object\n        Fork - object\n        Glassbottle - object\n        Tomato - object\n        Toaster - object\n        ToiletPaperRoll - object\n        Pan - object\n        Book - object\n        CellPhone - object\n        Vase - object\n        ShowerDoor - object\n        Candle - object\n        Egg - object\n        HousePlant - object\n        Window - object\n        ScrubBrush - object\n        Watch - object\n        Curtains - object\n        Lettuce - object\n        TeddyBear - object\n        Plate - object\n        Mirror - object\n        CD - object\n        WateringCan - object\n        DishSponge - object\n        TennisRacket - object\n        Pillow - object\n        CreditCard - object\n        StoveKnob - object\n        DeskLamp - object\n        Pen - object\n        Blinds - object\n        LaundryHamperLid - object\n        PaperTowelRoll - object\n        WineBottle - object\n        BasketBall - object\n        Potato - object\n        Pencil - object\n        RemoteControl - object\n        TissueBox - object\n        ToiletPaper - object\n        PepperShaker - object\n        Poster - object\n        Kettle - object\n        SoapBar - object\n        BaseballBat - object\n        Plunger - object\n        LaptopType - otype\n        KeyChainType - otype\n        BreadType - otype\n        PaperTowelType - otype\n        BootsType - otype\n        AlarmClockType - otype\n        ButterKnifeType - otype\n        PotType - otype\n        ChairType - otype\n        MugType - otype\n        FootstoolType - otype\n        SinkType - otype\n        TelevisionType - otype\n        SpoonType - otype\n        TowelType - otype\n        CupType - otype\n        LightSwitchType - otype\n        AppleType - otype\n        BoxType - otype\n        NewspaperType - otype\n        SoapBottleType - otype\n        HandTowelType - otype\n        ClothType - otype\n        KnifeType - otype\n        SprayBottleType - otype\n        PaintingType - otype\n        BowlType - otype\n        LadleType - otype\n        ShowerGlassType - otype\n        SaltShakerType - otype\n        BathtubType - otype\n        FloorLampType - otype\n        StatueType - otype\n        SpatulaType - otype\n        ForkType - otype\n        GlassbottleType - otype\n        TomatoType - otype\n        ToasterType - otype\n        ToiletPaperRollType - otype\n        PanType - otype\n        BookType - otype\n        CellPhoneType - otype\n        VaseType - otype\n        ShowerDoorType - otype\n        CandleType - otype\n        EggType - otype\n        HousePlantType - otype\n        WindowType - otype\n        ScrubBrushType - otype\n        WatchType - otype\n        CurtainsType - otype\n        LettuceType - otype\n        TeddyBearType - otype\n        PlateType - otype\n        MirrorType - otype\n        CDType - otype\n        WateringCanType - otype\n        DishSpongeType - otype\n        TennisRacketType - otype\n        PillowType - otype\n        CreditCardType - otype\n        StoveKnobType - otype\n        DeskLampType - otype\n        PenType - otype\n        BlindsType - otype\n        LaundryHamperLidType - otype\n        PaperTowelRollType - otype\n        WineBottleType - otype\n        BasketBallType - otype\n        PotatoType - otype\n        PencilType - otype\n        RemoteControlType - otype\n        TissueBoxType - otype\n        ToiletPaperType - otype\n        PepperShakerType - otype\n        PosterType - otype\n        KettleType - otype\n        SoapBarType - otype\n        BaseballBatType - otype\n        PlungerType - otype\n        DeskType - rtype\n        BathtubBasinType - rtype\n        GarbageCanType - rtype\n        SofaType - rtype\n        CoffeeTableType - rtype\n        TowelHolderType - rtype\n        DresserType - rtype\n        HandTowelHolderType - rtype\n        LaundryHamperType - rtype\n        SafeType - rtype\n        MicrowaveType - rtype\n        OttomanType - rtype\n        StoveBurnerType - rtype\n        SideTableType - rtype\n        ToiletPaperHangerType - rtype\n        CounterTopType - rtype\n        DrawerType - rtype\n        BedType - rtype\n        CabinetType - rtype\n        FridgeType - rtype\n        ArmChairType - rtype\n        CartType - rtype\n        SinkBasinType - rtype\n        ToiletType - rtype\n        CoffeeMachineType - rtype\n        DiningTableType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n\n\n\n;; Goal: \nheat a glass and put it in the cabinet.\n", "codex_output": [";; Simplified Goal: \npick_heat_then_place_in_recep-Glassbottle-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))", ";; Simplified Goal: \npick_heat_then_place_in_recep-Glass-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))", ";; Simplified Goal: \npick_heat_then_place_in_recep-Glassbottle-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>"]}, "train/pick_and_place_simple-TomatoSliced-None-Fridge-6/trial_T20190907_233151_665009": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        LightSwitch - object\n        Knife - object\n        LaundryHamperLid - object\n        Kettle - object\n        Pillow - object\n        ToiletPaperRoll - object\n        Blinds - object\n        Newspaper - object\n        Painting - object\n        ShowerGlass - object\n        Bathtub - object\n        HandTowel - object\n        Spatula - object\n        AlarmClock - object\n        BaseballBat - object\n        TennisRacket - object\n        Mug - object\n        Lettuce - object\n        Fork - object\n        Egg - object\n        CreditCard - object\n        Laptop - object\n        Candle - object\n        Book - object\n        RemoteControl - object\n        Statue - object\n        KeyChain - object\n        TeddyBear - object\n        Bowl - object\n        Tomato - object\n        PaperTowel - object\n        Toaster - object\n        Sink - object\n        Apple - object\n        Poster - object\n        SoapBottle - object\n        Spoon - object\n        Bread - object\n        Watch - object\n        ToiletPaper - object\n        BasketBall - object\n        CD - object\n        HousePlant - object\n        Potato - object\n        Cloth - object\n        Curtains - object\n        Pot - object\n        StoveKnob - object\n        Pen - object\n        Box - object\n        SprayBottle - object\n        ShowerDoor - object\n        Plunger - object\n        Footstool - object\n        Ladle - object\n        Television - object\n        Chair - object\n        SaltShaker - object\n        ButterKnife - object\n        Pan - object\n        Plate - object\n        WateringCan - object\n        Cup - object\n        Mirror - object\n        CellPhone - object\n        Towel - object\n        Boots - object\n        DeskLamp - object\n        PepperShaker - object\n        Window - object\n        Vase - object\n        ScrubBrush - object\n        TissueBox - object\n        PaperTowelRoll - object\n        Pencil - object\n        DishSponge - object\n        FloorLamp - object\n        SoapBar - object\n        WineBottle - object\n        Glassbottle - object\n        LightSwitchType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        KettleType - otype\n        PillowType - otype\n        ToiletPaperRollType - otype\n        BlindsType - otype\n        NewspaperType - otype\n        PaintingType - otype\n        ShowerGlassType - otype\n        BathtubType - otype\n        HandTowelType - otype\n        SpatulaType - otype\n        AlarmClockType - otype\n        BaseballBatType - otype\n        TennisRacketType - otype\n        MugType - otype\n        LettuceType - otype\n        ForkType - otype\n        EggType - otype\n        CreditCardType - otype\n        LaptopType - otype\n        CandleType - otype\n        BookType - otype\n        RemoteControlType - otype\n        StatueType - otype\n        KeyChainType - otype\n        TeddyBearType - otype\n        BowlType - otype\n        TomatoType - otype\n        PaperTowelType - otype\n        ToasterType - otype\n        SinkType - otype\n        AppleType - otype\n        PosterType - otype\n        SoapBottleType - otype\n        SpoonType - otype\n        BreadType - otype\n        WatchType - otype\n        ToiletPaperType - otype\n        BasketBallType - otype\n        CDType - otype\n        HousePlantType - otype\n        PotatoType - otype\n        ClothType - otype\n        CurtainsType - otype\n        PotType - otype\n        StoveKnobType - otype\n        PenType - otype\n        BoxType - otype\n        SprayBottleType - otype\n        ShowerDoorType - otype\n        PlungerType - otype\n        FootstoolType - otype\n        LadleType - otype\n        TelevisionType - otype\n        ChairType - otype\n        SaltShakerType - otype\n        ButterKnifeType - otype\n        PanType - otype\n        PlateType - otype\n        WateringCanType - otype\n        CupType - otype\n        MirrorType - otype\n        CellPhoneType - otype\n        TowelType - otype\n        BootsType - otype\n        DeskLampType - otype\n        PepperShakerType - otype\n        WindowType - otype\n        VaseType - otype\n        ScrubBrushType - otype\n        TissueBoxType - otype\n        PaperTowelRollType - otype\n        PencilType - otype\n        DishSpongeType - otype\n        FloorLampType - otype\n        SoapBarType - otype\n        WineBottleType - otype\n        GlassbottleType - otype\n        CabinetType - rtype\n        DrawerType - rtype\n        MicrowaveType - rtype\n        ArmChairType - rtype\n        DiningTableType - rtype\n        SideTableType - rtype\n        CounterTopType - rtype\n        LaundryHamperType - rtype\n        ToiletType - rtype\n        SinkBasinType - rtype\n        ToiletPaperHangerType - rtype\n        BedType - rtype\n        ShelfType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        CoffeeTableType - rtype\n        FridgeType - rtype\n        DeskType - rtype\n        CartType - rtype\n        HandTowelHolderType - rtype\n        SofaType - rtype\n        SafeType - rtype\n        GarbageCanType - rtype\n        OttomanType - rtype\n        CoffeeMachineType - rtype\n        StoveBurnerType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nslice the bell pepper in the fridge.\n", "codex_output": [";; Simplified Goal: \npick_and_place_simple-PepperSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PepperType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-Pepper-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PepperType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_and_place_simple-PepperShaker-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PepperShakerType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-PepperSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PepperType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>"]}, "train/pick_cool_then_place_in_recep-BreadSliced-None-Microwave-19/trial_T20190911_082218_676174": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Pillow - object\n        Pencil - object\n        Blinds - object\n        Mug - object\n        Television - object\n        CellPhone - object\n        HandTowel - object\n        Fork - object\n        Spoon - object\n        HousePlant - object\n        TeddyBear - object\n        Apple - object\n        Box - object\n        Plate - object\n        PaperTowel - object\n        Toaster - object\n        Bathtub - object\n        Statue - object\n        SprayBottle - object\n        Chair - object\n        Knife - object\n        Bowl - object\n        CD - object\n        CreditCard - object\n        WineBottle - object\n        Book - object\n        AlarmClock - object\n        Pot - object\n        TennisRacket - object\n        Candle - object\n        RemoteControl - object\n        Bread - object\n        Cloth - object\n        Tomato - object\n        SoapBottle - object\n        Poster - object\n        BaseballBat - object\n        LightSwitch - object\n        Newspaper - object\n        StoveKnob - object\n        Towel - object\n        ToiletPaperRoll - object\n        Vase - object\n        Ladle - object\n        Sink - object\n        Glassbottle - object\n        TissueBox - object\n        ScrubBrush - object\n        ButterKnife - object\n        LaundryHamperLid - object\n        ToiletPaper - object\n        Laptop - object\n        Watch - object\n        WateringCan - object\n        Pen - object\n        BasketBall - object\n        Spatula - object\n        Cup - object\n        FloorLamp - object\n        DeskLamp - object\n        ShowerDoor - object\n        PaperTowelRoll - object\n        Lettuce - object\n        Plunger - object\n        DishSponge - object\n        KeyChain - object\n        Painting - object\n        Kettle - object\n        Pan - object\n        Mirror - object\n        SoapBar - object\n        Curtains - object\n        Egg - object\n        ShowerGlass - object\n        Potato - object\n        Window - object\n        Boots - object\n        SaltShaker - object\n        Footstool - object\n        PepperShaker - object\n        PillowType - otype\n        PencilType - otype\n        BlindsType - otype\n        MugType - otype\n        TelevisionType - otype\n        CellPhoneType - otype\n        HandTowelType - otype\n        ForkType - otype\n        SpoonType - otype\n        HousePlantType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        BoxType - otype\n        PlateType - otype\n        PaperTowelType - otype\n        ToasterType - otype\n        BathtubType - otype\n        StatueType - otype\n        SprayBottleType - otype\n        ChairType - otype\n        KnifeType - otype\n        BowlType - otype\n        CDType - otype\n        CreditCardType - otype\n        WineBottleType - otype\n        BookType - otype\n        AlarmClockType - otype\n        PotType - otype\n        TennisRacketType - otype\n        CandleType - otype\n        RemoteControlType - otype\n        BreadType - otype\n        ClothType - otype\n        TomatoType - otype\n        SoapBottleType - otype\n        PosterType - otype\n        BaseballBatType - otype\n        LightSwitchType - otype\n        NewspaperType - otype\n        StoveKnobType - otype\n        TowelType - otype\n        ToiletPaperRollType - otype\n        VaseType - otype\n        LadleType - otype\n        SinkType - otype\n        GlassbottleType - otype\n        TissueBoxType - otype\n        ScrubBrushType - otype\n        ButterKnifeType - otype\n        LaundryHamperLidType - otype\n        ToiletPaperType - otype\n        LaptopType - otype\n        WatchType - otype\n        WateringCanType - otype\n        PenType - otype\n        BasketBallType - otype\n        SpatulaType - otype\n        CupType - otype\n        FloorLampType - otype\n        DeskLampType - otype\n        ShowerDoorType - otype\n        PaperTowelRollType - otype\n        LettuceType - otype\n        PlungerType - otype\n        DishSpongeType - otype\n        KeyChainType - otype\n        PaintingType - otype\n        KettleType - otype\n        PanType - otype\n        MirrorType - otype\n        SoapBarType - otype\n        CurtainsType - otype\n        EggType - otype\n        ShowerGlassType - otype\n        PotatoType - otype\n        WindowType - otype\n        BootsType - otype\n        SaltShakerType - otype\n        FootstoolType - otype\n        PepperShakerType - otype\n        TowelHolderType - rtype\n        CoffeeMachineType - rtype\n        ToiletType - rtype\n        SideTableType - rtype\n        BedType - rtype\n        SofaType - rtype\n        DresserType - rtype\n        CoffeeTableType - rtype\n        BathtubBasinType - rtype\n        MicrowaveType - rtype\n        LaundryHamperType - rtype\n        GarbageCanType - rtype\n        SafeType - rtype\n        CartType - rtype\n        CabinetType - rtype\n        ArmChairType - rtype\n        DiningTableType - rtype\n        HandTowelHolderType - rtype\n        ShelfType - rtype\n        SinkBasinType - rtype\n        CounterTopType - rtype\n        ToiletPaperHangerType - rtype\n        DeskType - rtype\n        DrawerType - rtype\n        StoveBurnerType - rtype\n        OttomanType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nmove a slice of cold bread to the microwave.\n", "codex_output": [";; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-BreadSliced-None-Microwave\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>", "Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave", ";; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>"]}, "train/pick_heat_then_place_in_recep-Cup-None-Cabinet-18/trial_T20190907_150623_388922": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Watch - object\n        Kettle - object\n        PaperTowel - object\n        BasketBall - object\n        Television - object\n        DishSponge - object\n        ShowerGlass - object\n        HandTowel - object\n        Sink - object\n        ButterKnife - object\n        Plate - object\n        StoveKnob - object\n        Cloth - object\n        ShowerDoor - object\n        TeddyBear - object\n        Footstool - object\n        Poster - object\n        Egg - object\n        Cup - object\n        BaseballBat - object\n        TissueBox - object\n        Spoon - object\n        Bathtub - object\n        Boots - object\n        ToiletPaperRoll - object\n        Plunger - object\n        RemoteControl - object\n        CD - object\n        Apple - object\n        Candle - object\n        Laptop - object\n        SprayBottle - object\n        Towel - object\n        SaltShaker - object\n        Ladle - object\n        Newspaper - object\n        SoapBar - object\n        FloorLamp - object\n        LightSwitch - object\n        CellPhone - object\n        Pillow - object\n        Vase - object\n        Lettuce - object\n        AlarmClock - object\n        Curtains - object\n        TennisRacket - object\n        DeskLamp - object\n        Knife - object\n        ToiletPaper - object\n        PaperTowelRoll - object\n        Spatula - object\n        CreditCard - object\n        Pan - object\n        Toaster - object\n        PepperShaker - object\n        Mug - object\n        WineBottle - object\n        LaundryHamperLid - object\n        Tomato - object\n        Painting - object\n        Bowl - object\n        Window - object\n        Mirror - object\n        Pen - object\n        Statue - object\n        Book - object\n        Pot - object\n        Blinds - object\n        HousePlant - object\n        Chair - object\n        Fork - object\n        ScrubBrush - object\n        Pencil - object\n        Potato - object\n        KeyChain - object\n        WateringCan - object\n        SoapBottle - object\n        Glassbottle - object\n        Bread - object\n        Box - object\n        WatchType - otype\n        KettleType - otype\n        PaperTowelType - otype\n        BasketBallType - otype\n        TelevisionType - otype\n        DishSpongeType - otype\n        ShowerGlassType - otype\n        HandTowelType - otype\n        SinkType - otype\n        ButterKnifeType - otype\n        PlateType - otype\n        StoveKnobType - otype\n        ClothType - otype\n        ShowerDoorType - otype\n        TeddyBearType - otype\n        FootstoolType - otype\n        PosterType - otype\n        EggType - otype\n        CupType - otype\n        BaseballBatType - otype\n        TissueBoxType - otype\n        SpoonType - otype\n        BathtubType - otype\n        BootsType - otype\n        ToiletPaperRollType - otype\n        PlungerType - otype\n        RemoteControlType - otype\n        CDType - otype\n        AppleType - otype\n        CandleType - otype\n        LaptopType - otype\n        SprayBottleType - otype\n        TowelType - otype\n        SaltShakerType - otype\n        LadleType - otype\n        NewspaperType - otype\n        SoapBarType - otype\n        FloorLampType - otype\n        LightSwitchType - otype\n        CellPhoneType - otype\n        PillowType - otype\n        VaseType - otype\n        LettuceType - otype\n        AlarmClockType - otype\n        CurtainsType - otype\n        TennisRacketType - otype\n        DeskLampType - otype\n        KnifeType - otype\n        ToiletPaperType - otype\n        PaperTowelRollType - otype\n        SpatulaType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToasterType - otype\n        PepperShakerType - otype\n        MugType - otype\n        WineBottleType - otype\n        LaundryHamperLidType - otype\n        TomatoType - otype\n        PaintingType - otype\n        BowlType - otype\n        WindowType - otype\n        MirrorType - otype\n        PenType - otype\n        StatueType - otype\n        BookType - otype\n        PotType - otype\n        BlindsType - otype\n        HousePlantType - otype\n        ChairType - otype\n        ForkType - otype\n        ScrubBrushType - otype\n        PencilType - otype\n        PotatoType - otype\n        KeyChainType - otype\n        WateringCanType - otype\n        SoapBottleType - otype\n        GlassbottleType - otype\n        BreadType - otype\n        BoxType - otype\n        ArmChairType - rtype\n        CabinetType - rtype\n        BedType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        DrawerType - rtype\n        ShelfType - rtype\n        SafeType - rtype\n        ToiletType - rtype\n        DresserType - rtype\n        LaundryHamperType - rtype\n        DeskType - rtype\n        ToiletPaperHangerType - rtype\n        HandTowelHolderType - rtype\n        BathtubBasinType - rtype\n        CoffeeTableType - rtype\n        SideTableType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        GarbageCanType - rtype\n        TowelHolderType - rtype\n        CounterTopType - rtype\n        OttomanType - rtype\n        FridgeType - rtype\n        SinkBasinType - rtype\n        DiningTableType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n\n\n\n;; Goal: \nput a warmed glass in the cabinet.\n", "codex_output": [";; Simplified Goal: \npick_heat_then_place_in_recep-Glass-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))", ";; Simplified Goal: \npick_heat_then_place_in_recep-Glassbottle-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_heat_then_place_in_recep-Glass-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_heat_then_place_in_recep-Glassbottle-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))"]}, "train/pick_cool_then_place_in_recep-Mug-None-CoffeeMachine-20/trial_T20190906_161428_039508": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        AlarmClock - object\n        Footstool - object\n        TissueBox - object\n        Spatula - object\n        Candle - object\n        Bread - object\n        WateringCan - object\n        Knife - object\n        Apple - object\n        TeddyBear - object\n        PaperTowelRoll - object\n        Mug - object\n        Ladle - object\n        Statue - object\n        StoveKnob - object\n        Watch - object\n        CellPhone - object\n        Cup - object\n        Towel - object\n        Glassbottle - object\n        Plunger - object\n        Kettle - object\n        ToiletPaperRoll - object\n        Plate - object\n        DeskLamp - object\n        Book - object\n        Television - object\n        Bathtub - object\n        Potato - object\n        Pillow - object\n        SoapBottle - object\n        Box - object\n        Newspaper - object\n        LightSwitch - object\n        ButterKnife - object\n        RemoteControl - object\n        Laptop - object\n        ShowerGlass - object\n        WineBottle - object\n        Sink - object\n        Blinds - object\n        TennisRacket - object\n        BasketBall - object\n        Vase - object\n        Tomato - object\n        Spoon - object\n        Window - object\n        Egg - object\n        Curtains - object\n        Pencil - object\n        Cloth - object\n        Painting - object\n        SprayBottle - object\n        CD - object\n        ScrubBrush - object\n        PaperTowel - object\n        Mirror - object\n        Bowl - object\n        SaltShaker - object\n        DishSponge - object\n        LaundryHamperLid - object\n        Pot - object\n        CreditCard - object\n        BaseballBat - object\n        SoapBar - object\n        KeyChain - object\n        Pen - object\n        Fork - object\n        Toaster - object\n        Pan - object\n        HousePlant - object\n        Chair - object\n        ToiletPaper - object\n        FloorLamp - object\n        HandTowel - object\n        Boots - object\n        Poster - object\n        ShowerDoor - object\n        PepperShaker - object\n        Lettuce - object\n        AlarmClockType - otype\n        FootstoolType - otype\n        TissueBoxType - otype\n        SpatulaType - otype\n        CandleType - otype\n        BreadType - otype\n        WateringCanType - otype\n        KnifeType - otype\n        AppleType - otype\n        TeddyBearType - otype\n        PaperTowelRollType - otype\n        MugType - otype\n        LadleType - otype\n        StatueType - otype\n        StoveKnobType - otype\n        WatchType - otype\n        CellPhoneType - otype\n        CupType - otype\n        TowelType - otype\n        GlassbottleType - otype\n        PlungerType - otype\n        KettleType - otype\n        ToiletPaperRollType - otype\n        PlateType - otype\n        DeskLampType - otype\n        BookType - otype\n        TelevisionType - otype\n        BathtubType - otype\n        PotatoType - otype\n        PillowType - otype\n        SoapBottleType - otype\n        BoxType - otype\n        NewspaperType - otype\n        LightSwitchType - otype\n        ButterKnifeType - otype\n        RemoteControlType - otype\n        LaptopType - otype\n        ShowerGlassType - otype\n        WineBottleType - otype\n        SinkType - otype\n        BlindsType - otype\n        TennisRacketType - otype\n        BasketBallType - otype\n        VaseType - otype\n        TomatoType - otype\n        SpoonType - otype\n        WindowType - otype\n        EggType - otype\n        CurtainsType - otype\n        PencilType - otype\n        ClothType - otype\n        PaintingType - otype\n        SprayBottleType - otype\n        CDType - otype\n        ScrubBrushType - otype\n        PaperTowelType - otype\n        MirrorType - otype\n        BowlType - otype\n        SaltShakerType - otype\n        DishSpongeType - otype\n        LaundryHamperLidType - otype\n        PotType - otype\n        CreditCardType - otype\n        BaseballBatType - otype\n        SoapBarType - otype\n        KeyChainType - otype\n        PenType - otype\n        ForkType - otype\n        ToasterType - otype\n        PanType - otype\n        HousePlantType - otype\n        ChairType - otype\n        ToiletPaperType - otype\n        FloorLampType - otype\n        HandTowelType - otype\n        BootsType - otype\n        PosterType - otype\n        ShowerDoorType - otype\n        PepperShakerType - otype\n        LettuceType - otype\n        DrawerType - rtype\n        ArmChairType - rtype\n        LaundryHamperType - rtype\n        TowelHolderType - rtype\n        MicrowaveType - rtype\n        DeskType - rtype\n        ShelfType - rtype\n        CoffeeTableType - rtype\n        BathtubBasinType - rtype\n        SofaType - rtype\n        StoveBurnerType - rtype\n        CabinetType - rtype\n        DiningTableType - rtype\n        SinkBasinType - rtype\n        GarbageCanType - rtype\n        OttomanType - rtype\n        BedType - rtype\n        ToiletType - rtype\n        FridgeType - rtype\n        CartType - rtype\n        SideTableType - rtype\n        CounterTopType - rtype\n        DresserType - rtype\n        CoffeeMachineType - rtype\n        ToiletPaperHangerType - rtype\n        HandTowelHolderType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nput a chilled mug on the coffee maker.\n", "codex_output": [";; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))", ";; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))", ";; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))"]}, "train/pick_heat_then_place_in_recep-Apple-None-SinkBasin-24/trial_T20190909_040401_888395": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Vase - object\n        Television - object\n        Tomato - object\n        Mug - object\n        Pencil - object\n        Plunger - object\n        Pot - object\n        SoapBottle - object\n        Box - object\n        Chair - object\n        StoveKnob - object\n        Pen - object\n        DeskLamp - object\n        LaundryHamperLid - object\n        Laptop - object\n        Footstool - object\n        ShowerGlass - object\n        Pan - object\n        Bowl - object\n        ScrubBrush - object\n        Boots - object\n        ToiletPaper - object\n        CreditCard - object\n        TeddyBear - object\n        FloorLamp - object\n        Mirror - object\n        Candle - object\n        SprayBottle - object\n        PaperTowelRoll - object\n        Window - object\n        Bread - object\n        RemoteControl - object\n        SoapBar - object\n        DishSponge - object\n        PaperTowel - object\n        Plate - object\n        Potato - object\n        ToiletPaperRoll - object\n        Poster - object\n        ShowerDoor - object\n        Bathtub - object\n        LightSwitch - object\n        Watch - object\n        Kettle - object\n        Egg - object\n        TennisRacket - object\n        BasketBall - object\n        Knife - object\n        WateringCan - object\n        TissueBox - object\n        CellPhone - object\n        Apple - object\n        Book - object\n        Toaster - object\n        KeyChain - object\n        HousePlant - object\n        BaseballBat - object\n        CD - object\n        Cup - object\n        PepperShaker - object\n        WineBottle - object\n        Pillow - object\n        Fork - object\n        SaltShaker - object\n        Statue - object\n        Painting - object\n        Blinds - object\n        Spoon - object\n        Sink - object\n        Spatula - object\n        Ladle - object\n        Cloth - object\n        Newspaper - object\n        Glassbottle - object\n        Lettuce - object\n        Curtains - object\n        AlarmClock - object\n        Towel - object\n        ButterKnife - object\n        HandTowel - object\n        VaseType - otype\n        TelevisionType - otype\n        TomatoType - otype\n        MugType - otype\n        PencilType - otype\n        PlungerType - otype\n        PotType - otype\n        SoapBottleType - otype\n        BoxType - otype\n        ChairType - otype\n        StoveKnobType - otype\n        PenType - otype\n        DeskLampType - otype\n        LaundryHamperLidType - otype\n        LaptopType - otype\n        FootstoolType - otype\n        ShowerGlassType - otype\n        PanType - otype\n        BowlType - otype\n        ScrubBrushType - otype\n        BootsType - otype\n        ToiletPaperType - otype\n        CreditCardType - otype\n        TeddyBearType - otype\n        FloorLampType - otype\n        MirrorType - otype\n        CandleType - otype\n        SprayBottleType - otype\n        PaperTowelRollType - otype\n        WindowType - otype\n        BreadType - otype\n        RemoteControlType - otype\n        SoapBarType - otype\n        DishSpongeType - otype\n        PaperTowelType - otype\n        PlateType - otype\n        PotatoType - otype\n        ToiletPaperRollType - otype\n        PosterType - otype\n        ShowerDoorType - otype\n        BathtubType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        KettleType - otype\n        EggType - otype\n        TennisRacketType - otype\n        BasketBallType - otype\n        KnifeType - otype\n        WateringCanType - otype\n        TissueBoxType - otype\n        CellPhoneType - otype\n        AppleType - otype\n        BookType - otype\n        ToasterType - otype\n        KeyChainType - otype\n        HousePlantType - otype\n        BaseballBatType - otype\n        CDType - otype\n        CupType - otype\n        PepperShakerType - otype\n        WineBottleType - otype\n        PillowType - otype\n        ForkType - otype\n        SaltShakerType - otype\n        StatueType - otype\n        PaintingType - otype\n        BlindsType - otype\n        SpoonType - otype\n        SinkType - otype\n        SpatulaType - otype\n        LadleType - otype\n        ClothType - otype\n        NewspaperType - otype\n        GlassbottleType - otype\n        LettuceType - otype\n        CurtainsType - otype\n        AlarmClockType - otype\n        TowelType - otype\n        ButterKnifeType - otype\n        HandTowelType - otype\n        ToiletPaperHangerType - rtype\n        SideTableType - rtype\n        GarbageCanType - rtype\n        ShelfType - rtype\n        BedType - rtype\n        ToiletType - rtype\n        ArmChairType - rtype\n        HandTowelHolderType - rtype\n        MicrowaveType - rtype\n        SinkBasinType - rtype\n        DeskType - rtype\n        CartType - rtype\n        DiningTableType - rtype\n        DresserType - rtype\n        FridgeType - rtype\n        OttomanType - rtype\n        DrawerType - rtype\n        BathtubBasinType - rtype\n        CoffeeMachineType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        CounterTopType - rtype\n        SafeType - rtype\n        LaundryHamperType - rtype\n        SofaType - rtype\n        StoveBurnerType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nputting a hot apple in the sink.\n", "codex_output": [";; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))", ";; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))", ";; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))", ";; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))"]}, "train/pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan-24/trial_T20190907_225734_462221": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Potato - object\n        Candle - object\n        Tomato - object\n        CD - object\n        LaundryHamperLid - object\n        Book - object\n        WateringCan - object\n        KeyChain - object\n        CreditCard - object\n        WineBottle - object\n        Knife - object\n        Chair - object\n        SaltShaker - object\n        ScrubBrush - object\n        Mug - object\n        Pencil - object\n        ShowerGlass - object\n        Toaster - object\n        Window - object\n        Box - object\n        Footstool - object\n        Kettle - object\n        Watch - object\n        Boots - object\n        Egg - object\n        SoapBar - object\n        LightSwitch - object\n        Plunger - object\n        Sink - object\n        TennisRacket - object\n        Television - object\n        Pillow - object\n        BasketBall - object\n        Pan - object\n        PaperTowelRoll - object\n        Laptop - object\n        Spatula - object\n        SoapBottle - object\n        Glassbottle - object\n        BaseballBat - object\n        Blinds - object\n        Lettuce - object\n        PepperShaker - object\n        RemoteControl - object\n        TeddyBear - object\n        Statue - object\n        Towel - object\n        TissueBox - object\n        ToiletPaper - object\n        ToiletPaperRoll - object\n        Plate - object\n        HousePlant - object\n        HandTowel - object\n        Bathtub - object\n        Newspaper - object\n        SprayBottle - object\n        Bowl - object\n        Pot - object\n        Cup - object\n        StoveKnob - object\n        ButterKnife - object\n        Vase - object\n        DeskLamp - object\n        ShowerDoor - object\n        Spoon - object\n        Bread - object\n        Poster - object\n        CellPhone - object\n        Painting - object\n        Curtains - object\n        DishSponge - object\n        Mirror - object\n        FloorLamp - object\n        Pen - object\n        Fork - object\n        Cloth - object\n        Ladle - object\n        Apple - object\n        AlarmClock - object\n        PaperTowel - object\n        PotatoType - otype\n        CandleType - otype\n        TomatoType - otype\n        CDType - otype\n        LaundryHamperLidType - otype\n        BookType - otype\n        WateringCanType - otype\n        KeyChainType - otype\n        CreditCardType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        ChairType - otype\n        SaltShakerType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        PencilType - otype\n        ShowerGlassType - otype\n        ToasterType - otype\n        WindowType - otype\n        BoxType - otype\n        FootstoolType - otype\n        KettleType - otype\n        WatchType - otype\n        BootsType - otype\n        EggType - otype\n        SoapBarType - otype\n        LightSwitchType - otype\n        PlungerType - otype\n        SinkType - otype\n        TennisRacketType - otype\n        TelevisionType - otype\n        PillowType - otype\n        BasketBallType - otype\n        PanType - otype\n        PaperTowelRollType - otype\n        LaptopType - otype\n        SpatulaType - otype\n        SoapBottleType - otype\n        GlassbottleType - otype\n        BaseballBatType - otype\n        BlindsType - otype\n        LettuceType - otype\n        PepperShakerType - otype\n        RemoteControlType - otype\n        TeddyBearType - otype\n        StatueType - otype\n        TowelType - otype\n        TissueBoxType - otype\n        ToiletPaperType - otype\n        ToiletPaperRollType - otype\n        PlateType - otype\n        HousePlantType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        NewspaperType - otype\n        SprayBottleType - otype\n        BowlType - otype\n        PotType - otype\n        CupType - otype\n        StoveKnobType - otype\n        ButterKnifeType - otype\n        VaseType - otype\n        DeskLampType - otype\n        ShowerDoorType - otype\n        SpoonType - otype\n        BreadType - otype\n        PosterType - otype\n        CellPhoneType - otype\n        PaintingType - otype\n        CurtainsType - otype\n        DishSpongeType - otype\n        MirrorType - otype\n        FloorLampType - otype\n        PenType - otype\n        ForkType - otype\n        ClothType - otype\n        LadleType - otype\n        AppleType - otype\n        AlarmClockType - otype\n        PaperTowelType - otype\n        CabinetType - rtype\n        OttomanType - rtype\n        DeskType - rtype\n        TowelHolderType - rtype\n        SideTableType - rtype\n        CounterTopType - rtype\n        SinkBasinType - rtype\n        FridgeType - rtype\n        CoffeeTableType - rtype\n        BedType - rtype\n        SofaType - rtype\n        ArmChairType - rtype\n        BathtubBasinType - rtype\n        DiningTableType - rtype\n        SafeType - rtype\n        CartType - rtype\n        ShelfType - rtype\n        MicrowaveType - rtype\n        GarbageCanType - rtype\n        ToiletType - rtype\n        CoffeeMachineType - rtype\n        DrawerType - rtype\n        DresserType - rtype\n        StoveBurnerType - rtype\n        ToiletPaperHangerType - rtype\n        HandTowelHolderType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nheat a slice of tomato and place it in the trash can.\n", "codex_output": [";; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan", ";; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))", ";; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n    \n<END>"]}, "train/pick_clean_then_place_in_recep-SoapBar-None-BathtubBasin-411/trial_T20190907_033311_020938": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        LightSwitch - object\n        Knife - object\n        LaundryHamperLid - object\n        Kettle - object\n        Pillow - object\n        ToiletPaperRoll - object\n        Blinds - object\n        Newspaper - object\n        Painting - object\n        ShowerGlass - object\n        Bathtub - object\n        HandTowel - object\n        Spatula - object\n        AlarmClock - object\n        BaseballBat - object\n        TennisRacket - object\n        Mug - object\n        Lettuce - object\n        Fork - object\n        Egg - object\n        CreditCard - object\n        Laptop - object\n        Candle - object\n        Book - object\n        RemoteControl - object\n        Statue - object\n        KeyChain - object\n        TeddyBear - object\n        Bowl - object\n        Tomato - object\n        PaperTowel - object\n        Toaster - object\n        Sink - object\n        Apple - object\n        Poster - object\n        SoapBottle - object\n        Spoon - object\n        Bread - object\n        Watch - object\n        ToiletPaper - object\n        BasketBall - object\n        CD - object\n        HousePlant - object\n        Potato - object\n        Cloth - object\n        Curtains - object\n        Pot - object\n        StoveKnob - object\n        Pen - object\n        Box - object\n        SprayBottle - object\n        ShowerDoor - object\n        Plunger - object\n        Footstool - object\n        Ladle - object\n        Television - object\n        Chair - object\n        SaltShaker - object\n        ButterKnife - object\n        Pan - object\n        Plate - object\n        WateringCan - object\n        Cup - object\n        Mirror - object\n        CellPhone - object\n        Towel - object\n        Boots - object\n        DeskLamp - object\n        PepperShaker - object\n        Window - object\n        Vase - object\n        ScrubBrush - object\n        TissueBox - object\n        PaperTowelRoll - object\n        Pencil - object\n        DishSponge - object\n        FloorLamp - object\n        SoapBar - object\n        WineBottle - object\n        Glassbottle - object\n        LightSwitchType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        KettleType - otype\n        PillowType - otype\n        ToiletPaperRollType - otype\n        BlindsType - otype\n        NewspaperType - otype\n        PaintingType - otype\n        ShowerGlassType - otype\n        BathtubType - otype\n        HandTowelType - otype\n        SpatulaType - otype\n        AlarmClockType - otype\n        BaseballBatType - otype\n        TennisRacketType - otype\n        MugType - otype\n        LettuceType - otype\n        ForkType - otype\n        EggType - otype\n        CreditCardType - otype\n        LaptopType - otype\n        CandleType - otype\n        BookType - otype\n        RemoteControlType - otype\n        StatueType - otype\n        KeyChainType - otype\n        TeddyBearType - otype\n        BowlType - otype\n        TomatoType - otype\n        PaperTowelType - otype\n        ToasterType - otype\n        SinkType - otype\n        AppleType - otype\n        PosterType - otype\n        SoapBottleType - otype\n        SpoonType - otype\n        BreadType - otype\n        WatchType - otype\n        ToiletPaperType - otype\n        BasketBallType - otype\n        CDType - otype\n        HousePlantType - otype\n        PotatoType - otype\n        ClothType - otype\n        CurtainsType - otype\n        PotType - otype\n        StoveKnobType - otype\n        PenType - otype\n        BoxType - otype\n        SprayBottleType - otype\n        ShowerDoorType - otype\n        PlungerType - otype\n        FootstoolType - otype\n        LadleType - otype\n        TelevisionType - otype\n        ChairType - otype\n        SaltShakerType - otype\n        ButterKnifeType - otype\n        PanType - otype\n        PlateType - otype\n        WateringCanType - otype\n        CupType - otype\n        MirrorType - otype\n        CellPhoneType - otype\n        TowelType - otype\n        BootsType - otype\n        DeskLampType - otype\n        PepperShakerType - otype\n        WindowType - otype\n        VaseType - otype\n        ScrubBrushType - otype\n        TissueBoxType - otype\n        PaperTowelRollType - otype\n        PencilType - otype\n        DishSpongeType - otype\n        FloorLampType - otype\n        SoapBarType - otype\n        WineBottleType - otype\n        GlassbottleType - otype\n        CabinetType - rtype\n        DrawerType - rtype\n        MicrowaveType - rtype\n        ArmChairType - rtype\n        DiningTableType - rtype\n        SideTableType - rtype\n        CounterTopType - rtype\n        LaundryHamperType - rtype\n        ToiletType - rtype\n        SinkBasinType - rtype\n        ToiletPaperHangerType - rtype\n        BedType - rtype\n        ShelfType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        CoffeeTableType - rtype\n        FridgeType - rtype\n        DeskType - rtype\n        CartType - rtype\n        HandTowelHolderType - rtype\n        SofaType - rtype\n        SafeType - rtype\n        GarbageCanType - rtype\n        OttomanType - rtype\n        CoffeeMachineType - rtype\n        StoveBurnerType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n\n\n\n;; Goal: \nplace wet soap on the edge of the bathtub.\n", "codex_output": [";; Simplified Goal: \npick_and_place_simple-SoapBar-None-Bathtub\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>", "pick_clean_then_place_in_recep-SoapBar-None-Bathtub", ";; Simplified Goal: \npick_clean_then_place_on_edge-SoapBar-None-Bathtub\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubType)\n                (receptacleAtLocation ?r Edge)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_and_place_simple-SoapBar-None-Bathtub\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubType)\n                (inReceptacle ?o ?r) \n                (isClean ?o)\n            )\n    )))"]}, "train/pick_and_place_simple-TomatoSliced-None-Fridge-6/trial_T20190918_162404_957531": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Tomato - object\n        Footstool - object\n        KeyChain - object\n        ShowerGlass - object\n        Sink - object\n        Vase - object\n        TeddyBear - object\n        WateringCan - object\n        PepperShaker - object\n        Lettuce - object\n        Pencil - object\n        TissueBox - object\n        Newspaper - object\n        ShowerDoor - object\n        HousePlant - object\n        TennisRacket - object\n        HandTowel - object\n        Spoon - object\n        Television - object\n        DishSponge - object\n        Knife - object\n        CreditCard - object\n        LaundryHamperLid - object\n        Blinds - object\n        Painting - object\n        SaltShaker - object\n        DeskLamp - object\n        Pot - object\n        SprayBottle - object\n        Mug - object\n        Watch - object\n        Pan - object\n        Cup - object\n        Egg - object\n        Book - object\n        ToiletPaper - object\n        SoapBar - object\n        Pillow - object\n        SoapBottle - object\n        BasketBall - object\n        CD - object\n        Ladle - object\n        Towel - object\n        Fork - object\n        Chair - object\n        Box - object\n        BaseballBat - object\n        CellPhone - object\n        StoveKnob - object\n        PaperTowel - object\n        Window - object\n        Potato - object\n        WineBottle - object\n        ScrubBrush - object\n        Apple - object\n        Poster - object\n        ToiletPaperRoll - object\n        AlarmClock - object\n        Bread - object\n        Bathtub - object\n        Cloth - object\n        Statue - object\n        PaperTowelRoll - object\n        Laptop - object\n        Boots - object\n        Bowl - object\n        Toaster - object\n        Kettle - object\n        RemoteControl - object\n        Mirror - object\n        Candle - object\n        Curtains - object\n        Pen - object\n        ButterKnife - object\n        Spatula - object\n        LightSwitch - object\n        Plate - object\n        Glassbottle - object\n        Plunger - object\n        FloorLamp - object\n        TomatoType - otype\n        FootstoolType - otype\n        KeyChainType - otype\n        ShowerGlassType - otype\n        SinkType - otype\n        VaseType - otype\n        TeddyBearType - otype\n        WateringCanType - otype\n        PepperShakerType - otype\n        LettuceType - otype\n        PencilType - otype\n        TissueBoxType - otype\n        NewspaperType - otype\n        ShowerDoorType - otype\n        HousePlantType - otype\n        TennisRacketType - otype\n        HandTowelType - otype\n        SpoonType - otype\n        TelevisionType - otype\n        DishSpongeType - otype\n        KnifeType - otype\n        CreditCardType - otype\n        LaundryHamperLidType - otype\n        BlindsType - otype\n        PaintingType - otype\n        SaltShakerType - otype\n        DeskLampType - otype\n        PotType - otype\n        SprayBottleType - otype\n        MugType - otype\n        WatchType - otype\n        PanType - otype\n        CupType - otype\n        EggType - otype\n        BookType - otype\n        ToiletPaperType - otype\n        SoapBarType - otype\n        PillowType - otype\n        SoapBottleType - otype\n        BasketBallType - otype\n        CDType - otype\n        LadleType - otype\n        TowelType - otype\n        ForkType - otype\n        ChairType - otype\n        BoxType - otype\n        BaseballBatType - otype\n        CellPhoneType - otype\n        StoveKnobType - otype\n        PaperTowelType - otype\n        WindowType - otype\n        PotatoType - otype\n        WineBottleType - otype\n        ScrubBrushType - otype\n        AppleType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        AlarmClockType - otype\n        BreadType - otype\n        BathtubType - otype\n        ClothType - otype\n        StatueType - otype\n        PaperTowelRollType - otype\n        LaptopType - otype\n        BootsType - otype\n        BowlType - otype\n        ToasterType - otype\n        KettleType - otype\n        RemoteControlType - otype\n        MirrorType - otype\n        CandleType - otype\n        CurtainsType - otype\n        PenType - otype\n        ButterKnifeType - otype\n        SpatulaType - otype\n        LightSwitchType - otype\n        PlateType - otype\n        GlassbottleType - otype\n        PlungerType - otype\n        FloorLampType - otype\n        DrawerType - rtype\n        HandTowelHolderType - rtype\n        DeskType - rtype\n        SinkBasinType - rtype\n        CounterTopType - rtype\n        CoffeeTableType - rtype\n        BedType - rtype\n        SideTableType - rtype\n        BathtubBasinType - rtype\n        ArmChairType - rtype\n        DresserType - rtype\n        StoveBurnerType - rtype\n        DiningTableType - rtype\n        GarbageCanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        CabinetType - rtype\n        SofaType - rtype\n        ShelfType - rtype\n        ToiletType - rtype\n        LaundryHamperType - rtype\n        MicrowaveType - rtype\n        OttomanType - rtype\n        CartType - rtype\n        SafeType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nplace a slice of tomato in the fridge.\n", "codex_output": [";; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge", ";; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o)\n            )\n    )))\n\n<END>", "pick_and_place_simple-TomatoSliced-None-Fridge", ";; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))"]}, "train/look_at_obj_in_light-CreditCard-None-FloorLamp-207/trial_T20190907_031931_921823": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Laptop - object\n        KeyChain - object\n        Bread - object\n        PaperTowel - object\n        Boots - object\n        AlarmClock - object\n        ButterKnife - object\n        Pot - object\n        Chair - object\n        Mug - object\n        Footstool - object\n        Sink - object\n        Television - object\n        Spoon - object\n        Towel - object\n        Cup - object\n        LightSwitch - object\n        Apple - object\n        Box - object\n        Newspaper - object\n        SoapBottle - object\n        HandTowel - object\n        Cloth - object\n        Knife - object\n        SprayBottle - object\n        Painting - object\n        Bowl - object\n        Ladle - object\n        ShowerGlass - object\n        SaltShaker - object\n        Bathtub - object\n        FloorLamp - object\n        Statue - object\n        Spatula - object\n        Fork - object\n        Glassbottle - object\n        Tomato - object\n        Toaster - object\n        ToiletPaperRoll - object\n        Pan - object\n        Book - object\n        CellPhone - object\n        Vase - object\n        ShowerDoor - object\n        Candle - object\n        Egg - object\n        HousePlant - object\n        Window - object\n        ScrubBrush - object\n        Watch - object\n        Curtains - object\n        Lettuce - object\n        TeddyBear - object\n        Plate - object\n        Mirror - object\n        CD - object\n        WateringCan - object\n        DishSponge - object\n        TennisRacket - object\n        Pillow - object\n        CreditCard - object\n        StoveKnob - object\n        DeskLamp - object\n        Pen - object\n        Blinds - object\n        LaundryHamperLid - object\n        PaperTowelRoll - object\n        WineBottle - object\n        BasketBall - object\n        Potato - object\n        Pencil - object\n        RemoteControl - object\n        TissueBox - object\n        ToiletPaper - object\n        PepperShaker - object\n        Poster - object\n        Kettle - object\n        SoapBar - object\n        BaseballBat - object\n        Plunger - object\n        LaptopType - otype\n        KeyChainType - otype\n        BreadType - otype\n        PaperTowelType - otype\n        BootsType - otype\n        AlarmClockType - otype\n        ButterKnifeType - otype\n        PotType - otype\n        ChairType - otype\n        MugType - otype\n        FootstoolType - otype\n        SinkType - otype\n        TelevisionType - otype\n        SpoonType - otype\n        TowelType - otype\n        CupType - otype\n        LightSwitchType - otype\n        AppleType - otype\n        BoxType - otype\n        NewspaperType - otype\n        SoapBottleType - otype\n        HandTowelType - otype\n        ClothType - otype\n        KnifeType - otype\n        SprayBottleType - otype\n        PaintingType - otype\n        BowlType - otype\n        LadleType - otype\n        ShowerGlassType - otype\n        SaltShakerType - otype\n        BathtubType - otype\n        FloorLampType - otype\n        StatueType - otype\n        SpatulaType - otype\n        ForkType - otype\n        GlassbottleType - otype\n        TomatoType - otype\n        ToasterType - otype\n        ToiletPaperRollType - otype\n        PanType - otype\n        BookType - otype\n        CellPhoneType - otype\n        VaseType - otype\n        ShowerDoorType - otype\n        CandleType - otype\n        EggType - otype\n        HousePlantType - otype\n        WindowType - otype\n        ScrubBrushType - otype\n        WatchType - otype\n        CurtainsType - otype\n        LettuceType - otype\n        TeddyBearType - otype\n        PlateType - otype\n        MirrorType - otype\n        CDType - otype\n        WateringCanType - otype\n        DishSpongeType - otype\n        TennisRacketType - otype\n        PillowType - otype\n        CreditCardType - otype\n        StoveKnobType - otype\n        DeskLampType - otype\n        PenType - otype\n        BlindsType - otype\n        LaundryHamperLidType - otype\n        PaperTowelRollType - otype\n        WineBottleType - otype\n        BasketBallType - otype\n        PotatoType - otype\n        PencilType - otype\n        RemoteControlType - otype\n        TissueBoxType - otype\n        ToiletPaperType - otype\n        PepperShakerType - otype\n        PosterType - otype\n        KettleType - otype\n        SoapBarType - otype\n        BaseballBatType - otype\n        PlungerType - otype\n        DeskType - rtype\n        BathtubBasinType - rtype\n        GarbageCanType - rtype\n        SofaType - rtype\n        CoffeeTableType - rtype\n        TowelHolderType - rtype\n        DresserType - rtype\n        HandTowelHolderType - rtype\n        LaundryHamperType - rtype\n        SafeType - rtype\n        MicrowaveType - rtype\n        OttomanType - rtype\n        StoveBurnerType - rtype\n        SideTableType - rtype\n        ToiletPaperHangerType - rtype\n        CounterTopType - rtype\n        DrawerType - rtype\n        BedType - rtype\n        CabinetType - rtype\n        FridgeType - rtype\n        ArmChairType - rtype\n        CartType - rtype\n        SinkBasinType - rtype\n        ToiletType - rtype\n        CoffeeMachineType - rtype\n        DiningTableType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n\n\n\n;; Goal: \ngrab your credit card while turning on a lamp.\n", "codex_output": [";; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>", "pick_and_place_simple-CreditCardType-None-DeskLampType", ";; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>", ";; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-LightSwitch\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot LightSwitchType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))"]}, "train/pick_cool_then_place_in_recep-Egg-None-CounterTop-27/trial_T20190909_002105_967038": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        AlarmClock - object\n        Footstool - object\n        TissueBox - object\n        Spatula - object\n        Candle - object\n        Bread - object\n        WateringCan - object\n        Knife - object\n        Apple - object\n        TeddyBear - object\n        PaperTowelRoll - object\n        Mug - object\n        Ladle - object\n        Statue - object\n        StoveKnob - object\n        Watch - object\n        CellPhone - object\n        Cup - object\n        Towel - object\n        Glassbottle - object\n        Plunger - object\n        Kettle - object\n        ToiletPaperRoll - object\n        Plate - object\n        DeskLamp - object\n        Book - object\n        Television - object\n        Bathtub - object\n        Potato - object\n        Pillow - object\n        SoapBottle - object\n        Box - object\n        Newspaper - object\n        LightSwitch - object\n        ButterKnife - object\n        RemoteControl - object\n        Laptop - object\n        ShowerGlass - object\n        WineBottle - object\n        Sink - object\n        Blinds - object\n        TennisRacket - object\n        BasketBall - object\n        Vase - object\n        Tomato - object\n        Spoon - object\n        Window - object\n        Egg - object\n        Curtains - object\n        Pencil - object\n        Cloth - object\n        Painting - object\n        SprayBottle - object\n        CD - object\n        ScrubBrush - object\n        PaperTowel - object\n        Mirror - object\n        Bowl - object\n        SaltShaker - object\n        DishSponge - object\n        LaundryHamperLid - object\n        Pot - object\n        CreditCard - object\n        BaseballBat - object\n        SoapBar - object\n        KeyChain - object\n        Pen - object\n        Fork - object\n        Toaster - object\n        Pan - object\n        HousePlant - object\n        Chair - object\n        ToiletPaper - object\n        FloorLamp - object\n        HandTowel - object\n        Boots - object\n        Poster - object\n        ShowerDoor - object\n        PepperShaker - object\n        Lettuce - object\n        AlarmClockType - otype\n        FootstoolType - otype\n        TissueBoxType - otype\n        SpatulaType - otype\n        CandleType - otype\n        BreadType - otype\n        WateringCanType - otype\n        KnifeType - otype\n        AppleType - otype\n        TeddyBearType - otype\n        PaperTowelRollType - otype\n        MugType - otype\n        LadleType - otype\n        StatueType - otype\n        StoveKnobType - otype\n        WatchType - otype\n        CellPhoneType - otype\n        CupType - otype\n        TowelType - otype\n        GlassbottleType - otype\n        PlungerType - otype\n        KettleType - otype\n        ToiletPaperRollType - otype\n        PlateType - otype\n        DeskLampType - otype\n        BookType - otype\n        TelevisionType - otype\n        BathtubType - otype\n        PotatoType - otype\n        PillowType - otype\n        SoapBottleType - otype\n        BoxType - otype\n        NewspaperType - otype\n        LightSwitchType - otype\n        ButterKnifeType - otype\n        RemoteControlType - otype\n        LaptopType - otype\n        ShowerGlassType - otype\n        WineBottleType - otype\n        SinkType - otype\n        BlindsType - otype\n        TennisRacketType - otype\n        BasketBallType - otype\n        VaseType - otype\n        TomatoType - otype\n        SpoonType - otype\n        WindowType - otype\n        EggType - otype\n        CurtainsType - otype\n        PencilType - otype\n        ClothType - otype\n        PaintingType - otype\n        SprayBottleType - otype\n        CDType - otype\n        ScrubBrushType - otype\n        PaperTowelType - otype\n        MirrorType - otype\n        BowlType - otype\n        SaltShakerType - otype\n        DishSpongeType - otype\n        LaundryHamperLidType - otype\n        PotType - otype\n        CreditCardType - otype\n        BaseballBatType - otype\n        SoapBarType - otype\n        KeyChainType - otype\n        PenType - otype\n        ForkType - otype\n        ToasterType - otype\n        PanType - otype\n        HousePlantType - otype\n        ChairType - otype\n        ToiletPaperType - otype\n        FloorLampType - otype\n        HandTowelType - otype\n        BootsType - otype\n        PosterType - otype\n        ShowerDoorType - otype\n        PepperShakerType - otype\n        LettuceType - otype\n        DrawerType - rtype\n        ArmChairType - rtype\n        LaundryHamperType - rtype\n        TowelHolderType - rtype\n        MicrowaveType - rtype\n        DeskType - rtype\n        ShelfType - rtype\n        CoffeeTableType - rtype\n        BathtubBasinType - rtype\n        SofaType - rtype\n        StoveBurnerType - rtype\n        CabinetType - rtype\n        DiningTableType - rtype\n        SinkBasinType - rtype\n        GarbageCanType - rtype\n        OttomanType - rtype\n        BedType - rtype\n        ToiletType - rtype\n        FridgeType - rtype\n        CartType - rtype\n        SideTableType - rtype\n        CounterTopType - rtype\n        DresserType - rtype\n        CoffeeMachineType - rtype\n        ToiletPaperHangerType - rtype\n        HandTowelHolderType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nput a chilled egg on the counter.\n", "codex_output": [";; Simplified Goal: \npick_cool_then_place_in_recep-Egg-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))", "pick_cool_then_place_in_recep-Egg-None-CounterTop", ";; Simplified Goal: \npick_cool_then_place_in_recep-Egg-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))", ";; Simplified Goal: \npick_cool_then_place_in_recep-Egg-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))"]}, "train/pick_and_place_simple-TomatoSliced-None-SinkBasin-5/trial_T20190907_233342_973242": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Watch - object\n        Kettle - object\n        PaperTowel - object\n        BasketBall - object\n        Television - object\n        DishSponge - object\n        ShowerGlass - object\n        HandTowel - object\n        Sink - object\n        ButterKnife - object\n        Plate - object\n        StoveKnob - object\n        Cloth - object\n        ShowerDoor - object\n        TeddyBear - object\n        Footstool - object\n        Poster - object\n        Egg - object\n        Cup - object\n        BaseballBat - object\n        TissueBox - object\n        Spoon - object\n        Bathtub - object\n        Boots - object\n        ToiletPaperRoll - object\n        Plunger - object\n        RemoteControl - object\n        CD - object\n        Apple - object\n        Candle - object\n        Laptop - object\n        SprayBottle - object\n        Towel - object\n        SaltShaker - object\n        Ladle - object\n        Newspaper - object\n        SoapBar - object\n        FloorLamp - object\n        LightSwitch - object\n        CellPhone - object\n        Pillow - object\n        Vase - object\n        Lettuce - object\n        AlarmClock - object\n        Curtains - object\n        TennisRacket - object\n        DeskLamp - object\n        Knife - object\n        ToiletPaper - object\n        PaperTowelRoll - object\n        Spatula - object\n        CreditCard - object\n        Pan - object\n        Toaster - object\n        PepperShaker - object\n        Mug - object\n        WineBottle - object\n        LaundryHamperLid - object\n        Tomato - object\n        Painting - object\n        Bowl - object\n        Window - object\n        Mirror - object\n        Pen - object\n        Statue - object\n        Book - object\n        Pot - object\n        Blinds - object\n        HousePlant - object\n        Chair - object\n        Fork - object\n        ScrubBrush - object\n        Pencil - object\n        Potato - object\n        KeyChain - object\n        WateringCan - object\n        SoapBottle - object\n        Glassbottle - object\n        Bread - object\n        Box - object\n        WatchType - otype\n        KettleType - otype\n        PaperTowelType - otype\n        BasketBallType - otype\n        TelevisionType - otype\n        DishSpongeType - otype\n        ShowerGlassType - otype\n        HandTowelType - otype\n        SinkType - otype\n        ButterKnifeType - otype\n        PlateType - otype\n        StoveKnobType - otype\n        ClothType - otype\n        ShowerDoorType - otype\n        TeddyBearType - otype\n        FootstoolType - otype\n        PosterType - otype\n        EggType - otype\n        CupType - otype\n        BaseballBatType - otype\n        TissueBoxType - otype\n        SpoonType - otype\n        BathtubType - otype\n        BootsType - otype\n        ToiletPaperRollType - otype\n        PlungerType - otype\n        RemoteControlType - otype\n        CDType - otype\n        AppleType - otype\n        CandleType - otype\n        LaptopType - otype\n        SprayBottleType - otype\n        TowelType - otype\n        SaltShakerType - otype\n        LadleType - otype\n        NewspaperType - otype\n        SoapBarType - otype\n        FloorLampType - otype\n        LightSwitchType - otype\n        CellPhoneType - otype\n        PillowType - otype\n        VaseType - otype\n        LettuceType - otype\n        AlarmClockType - otype\n        CurtainsType - otype\n        TennisRacketType - otype\n        DeskLampType - otype\n        KnifeType - otype\n        ToiletPaperType - otype\n        PaperTowelRollType - otype\n        SpatulaType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToasterType - otype\n        PepperShakerType - otype\n        MugType - otype\n        WineBottleType - otype\n        LaundryHamperLidType - otype\n        TomatoType - otype\n        PaintingType - otype\n        BowlType - otype\n        WindowType - otype\n        MirrorType - otype\n        PenType - otype\n        StatueType - otype\n        BookType - otype\n        PotType - otype\n        BlindsType - otype\n        HousePlantType - otype\n        ChairType - otype\n        ForkType - otype\n        ScrubBrushType - otype\n        PencilType - otype\n        PotatoType - otype\n        KeyChainType - otype\n        WateringCanType - otype\n        SoapBottleType - otype\n        GlassbottleType - otype\n        BreadType - otype\n        BoxType - otype\n        ArmChairType - rtype\n        CabinetType - rtype\n        BedType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        DrawerType - rtype\n        ShelfType - rtype\n        SafeType - rtype\n        ToiletType - rtype\n        DresserType - rtype\n        LaundryHamperType - rtype\n        DeskType - rtype\n        ToiletPaperHangerType - rtype\n        HandTowelHolderType - rtype\n        BathtubBasinType - rtype\n        CoffeeTableType - rtype\n        SideTableType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        GarbageCanType - rtype\n        TowelHolderType - rtype\n        CounterTopType - rtype\n        OttomanType - rtype\n        FridgeType - rtype\n        SinkBasinType - rtype\n        DiningTableType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \ncut a tomato in half.\n", "codex_output": [";; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_and_place_simple-TomatoHalf-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (sliceable ?o)\n                (isSliced ?o) \n                (inReceptacleObject TomatoHalf ?o)\n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CuttingBoard\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CuttingBoardType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))", ";; Simplified Goal: \npick_and_slice_obj-Tomato-None\n\n\n;; PDDL Goal: \n(:goal \n    (exists (?o - object)\n        (and \n            (objectType ?o TomatoType) \n            (sliceable ?o)\n            (isSliced ?o) \n        )\n    )\n)"]}, "train/look_at_obj_in_light-KeyChain-None-FloorLamp-212/trial_T20190906_185930_256772": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Painting - object\n        PaperTowel - object\n        KeyChain - object\n        LaundryHamperLid - object\n        CellPhone - object\n        Watch - object\n        Potato - object\n        HousePlant - object\n        Fork - object\n        Spoon - object\n        BaseballBat - object\n        Statue - object\n        WateringCan - object\n        SprayBottle - object\n        SoapBottle - object\n        TennisRacket - object\n        StoveKnob - object\n        Cup - object\n        Bathtub - object\n        LightSwitch - object\n        AlarmClock - object\n        Toaster - object\n        Pot - object\n        Kettle - object\n        Footstool - object\n        PaperTowelRoll - object\n        Spatula - object\n        Plate - object\n        ToiletPaper - object\n        Bowl - object\n        SoapBar - object\n        Candle - object\n        Plunger - object\n        BasketBall - object\n        Newspaper - object\n        ShowerDoor - object\n        Blinds - object\n        PepperShaker - object\n        DishSponge - object\n        HandTowel - object\n        Apple - object\n        Egg - object\n        TissueBox - object\n        Book - object\n        FloorLamp - object\n        Poster - object\n        Pan - object\n        Vase - object\n        Lettuce - object\n        SaltShaker - object\n        Mug - object\n        Curtains - object\n        Pillow - object\n        Knife - object\n        Bread - object\n        Glassbottle - object\n        Tomato - object\n        Cloth - object\n        Window - object\n        Chair - object\n        Towel - object\n        ButterKnife - object\n        Laptop - object\n        ToiletPaperRoll - object\n        Pen - object\n        ShowerGlass - object\n        CreditCard - object\n        Sink - object\n        ScrubBrush - object\n        RemoteControl - object\n        Box - object\n        CD - object\n        Pencil - object\n        DeskLamp - object\n        Ladle - object\n        Television - object\n        Mirror - object\n        TeddyBear - object\n        Boots - object\n        WineBottle - object\n        PaintingType - otype\n        PaperTowelType - otype\n        KeyChainType - otype\n        LaundryHamperLidType - otype\n        CellPhoneType - otype\n        WatchType - otype\n        PotatoType - otype\n        HousePlantType - otype\n        ForkType - otype\n        SpoonType - otype\n        BaseballBatType - otype\n        StatueType - otype\n        WateringCanType - otype\n        SprayBottleType - otype\n        SoapBottleType - otype\n        TennisRacketType - otype\n        StoveKnobType - otype\n        CupType - otype\n        BathtubType - otype\n        LightSwitchType - otype\n        AlarmClockType - otype\n        ToasterType - otype\n        PotType - otype\n        KettleType - otype\n        FootstoolType - otype\n        PaperTowelRollType - otype\n        SpatulaType - otype\n        PlateType - otype\n        ToiletPaperType - otype\n        BowlType - otype\n        SoapBarType - otype\n        CandleType - otype\n        PlungerType - otype\n        BasketBallType - otype\n        NewspaperType - otype\n        ShowerDoorType - otype\n        BlindsType - otype\n        PepperShakerType - otype\n        DishSpongeType - otype\n        HandTowelType - otype\n        AppleType - otype\n        EggType - otype\n        TissueBoxType - otype\n        BookType - otype\n        FloorLampType - otype\n        PosterType - otype\n        PanType - otype\n        VaseType - otype\n        LettuceType - otype\n        SaltShakerType - otype\n        MugType - otype\n        CurtainsType - otype\n        PillowType - otype\n        KnifeType - otype\n        BreadType - otype\n        GlassbottleType - otype\n        TomatoType - otype\n        ClothType - otype\n        WindowType - otype\n        ChairType - otype\n        TowelType - otype\n        ButterKnifeType - otype\n        LaptopType - otype\n        ToiletPaperRollType - otype\n        PenType - otype\n        ShowerGlassType - otype\n        CreditCardType - otype\n        SinkType - otype\n        ScrubBrushType - otype\n        RemoteControlType - otype\n        BoxType - otype\n        CDType - otype\n        PencilType - otype\n        DeskLampType - otype\n        LadleType - otype\n        TelevisionType - otype\n        MirrorType - otype\n        TeddyBearType - otype\n        BootsType - otype\n        WineBottleType - otype\n        DiningTableType - rtype\n        ShelfType - rtype\n        StoveBurnerType - rtype\n        SofaType - rtype\n        BathtubBasinType - rtype\n        GarbageCanType - rtype\n        DrawerType - rtype\n        FridgeType - rtype\n        ToiletPaperHangerType - rtype\n        CabinetType - rtype\n        OttomanType - rtype\n        BedType - rtype\n        HandTowelHolderType - rtype\n        CartType - rtype\n        DresserType - rtype\n        CoffeeTableType - rtype\n        TowelHolderType - rtype\n        MicrowaveType - rtype\n        SafeType - rtype\n        DeskType - rtype\n        LaundryHamperType - rtype\n        ArmChairType - rtype\n        SideTableType - rtype\n        CoffeeMachineType - rtype\n        ToiletType - rtype\n        SinkBasinType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \npick up keys , turn on lamp.\n", "codex_output": [";; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>", ";; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))", ";; Simplified Goal: \npick_and_place_simple-KeyChain-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))", ";; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))"]}, "train/pick_and_place_simple-Pen-None-Shelf-310/trial_T20190909_113535_223329": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        LightSwitch - object\n        Knife - object\n        LaundryHamperLid - object\n        Kettle - object\n        Pillow - object\n        ToiletPaperRoll - object\n        Blinds - object\n        Newspaper - object\n        Painting - object\n        ShowerGlass - object\n        Bathtub - object\n        HandTowel - object\n        Spatula - object\n        AlarmClock - object\n        BaseballBat - object\n        TennisRacket - object\n        Mug - object\n        Lettuce - object\n        Fork - object\n        Egg - object\n        CreditCard - object\n        Laptop - object\n        Candle - object\n        Book - object\n        RemoteControl - object\n        Statue - object\n        KeyChain - object\n        TeddyBear - object\n        Bowl - object\n        Tomato - object\n        PaperTowel - object\n        Toaster - object\n        Sink - object\n        Apple - object\n        Poster - object\n        SoapBottle - object\n        Spoon - object\n        Bread - object\n        Watch - object\n        ToiletPaper - object\n        BasketBall - object\n        CD - object\n        HousePlant - object\n        Potato - object\n        Cloth - object\n        Curtains - object\n        Pot - object\n        StoveKnob - object\n        Pen - object\n        Box - object\n        SprayBottle - object\n        ShowerDoor - object\n        Plunger - object\n        Footstool - object\n        Ladle - object\n        Television - object\n        Chair - object\n        SaltShaker - object\n        ButterKnife - object\n        Pan - object\n        Plate - object\n        WateringCan - object\n        Cup - object\n        Mirror - object\n        CellPhone - object\n        Towel - object\n        Boots - object\n        DeskLamp - object\n        PepperShaker - object\n        Window - object\n        Vase - object\n        ScrubBrush - object\n        TissueBox - object\n        PaperTowelRoll - object\n        Pencil - object\n        DishSponge - object\n        FloorLamp - object\n        SoapBar - object\n        WineBottle - object\n        Glassbottle - object\n        LightSwitchType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        KettleType - otype\n        PillowType - otype\n        ToiletPaperRollType - otype\n        BlindsType - otype\n        NewspaperType - otype\n        PaintingType - otype\n        ShowerGlassType - otype\n        BathtubType - otype\n        HandTowelType - otype\n        SpatulaType - otype\n        AlarmClockType - otype\n        BaseballBatType - otype\n        TennisRacketType - otype\n        MugType - otype\n        LettuceType - otype\n        ForkType - otype\n        EggType - otype\n        CreditCardType - otype\n        LaptopType - otype\n        CandleType - otype\n        BookType - otype\n        RemoteControlType - otype\n        StatueType - otype\n        KeyChainType - otype\n        TeddyBearType - otype\n        BowlType - otype\n        TomatoType - otype\n        PaperTowelType - otype\n        ToasterType - otype\n        SinkType - otype\n        AppleType - otype\n        PosterType - otype\n        SoapBottleType - otype\n        SpoonType - otype\n        BreadType - otype\n        WatchType - otype\n        ToiletPaperType - otype\n        BasketBallType - otype\n        CDType - otype\n        HousePlantType - otype\n        PotatoType - otype\n        ClothType - otype\n        CurtainsType - otype\n        PotType - otype\n        StoveKnobType - otype\n        PenType - otype\n        BoxType - otype\n        SprayBottleType - otype\n        ShowerDoorType - otype\n        PlungerType - otype\n        FootstoolType - otype\n        LadleType - otype\n        TelevisionType - otype\n        ChairType - otype\n        SaltShakerType - otype\n        ButterKnifeType - otype\n        PanType - otype\n        PlateType - otype\n        WateringCanType - otype\n        CupType - otype\n        MirrorType - otype\n        CellPhoneType - otype\n        TowelType - otype\n        BootsType - otype\n        DeskLampType - otype\n        PepperShakerType - otype\n        WindowType - otype\n        VaseType - otype\n        ScrubBrushType - otype\n        TissueBoxType - otype\n        PaperTowelRollType - otype\n        PencilType - otype\n        DishSpongeType - otype\n        FloorLampType - otype\n        SoapBarType - otype\n        WineBottleType - otype\n        GlassbottleType - otype\n        CabinetType - rtype\n        DrawerType - rtype\n        MicrowaveType - rtype\n        ArmChairType - rtype\n        DiningTableType - rtype\n        SideTableType - rtype\n        CounterTopType - rtype\n        LaundryHamperType - rtype\n        ToiletType - rtype\n        SinkBasinType - rtype\n        ToiletPaperHangerType - rtype\n        BedType - rtype\n        ShelfType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        CoffeeTableType - rtype\n        FridgeType - rtype\n        DeskType - rtype\n        CartType - rtype\n        HandTowelHolderType - rtype\n        SofaType - rtype\n        SafeType - rtype\n        GarbageCanType - rtype\n        OttomanType - rtype\n        CoffeeMachineType - rtype\n        StoveBurnerType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nmove pen from desk to shelf.\n", "codex_output": [";; Simplified Goal: \npick_and_place_simple-Pen-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_and_place_simple-Pen-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-Pen-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_and_place_simple-Pen-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))"]}, "train/pick_and_place_simple-AppleSliced-None-Microwave-14/trial_T20190908_171220_804585": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Laptop - object\n        KeyChain - object\n        Bread - object\n        PaperTowel - object\n        Boots - object\n        AlarmClock - object\n        ButterKnife - object\n        Pot - object\n        Chair - object\n        Mug - object\n        Footstool - object\n        Sink - object\n        Television - object\n        Spoon - object\n        Towel - object\n        Cup - object\n        LightSwitch - object\n        Apple - object\n        Box - object\n        Newspaper - object\n        SoapBottle - object\n        HandTowel - object\n        Cloth - object\n        Knife - object\n        SprayBottle - object\n        Painting - object\n        Bowl - object\n        Ladle - object\n        ShowerGlass - object\n        SaltShaker - object\n        Bathtub - object\n        FloorLamp - object\n        Statue - object\n        Spatula - object\n        Fork - object\n        Glassbottle - object\n        Tomato - object\n        Toaster - object\n        ToiletPaperRoll - object\n        Pan - object\n        Book - object\n        CellPhone - object\n        Vase - object\n        ShowerDoor - object\n        Candle - object\n        Egg - object\n        HousePlant - object\n        Window - object\n        ScrubBrush - object\n        Watch - object\n        Curtains - object\n        Lettuce - object\n        TeddyBear - object\n        Plate - object\n        Mirror - object\n        CD - object\n        WateringCan - object\n        DishSponge - object\n        TennisRacket - object\n        Pillow - object\n        CreditCard - object\n        StoveKnob - object\n        DeskLamp - object\n        Pen - object\n        Blinds - object\n        LaundryHamperLid - object\n        PaperTowelRoll - object\n        WineBottle - object\n        BasketBall - object\n        Potato - object\n        Pencil - object\n        RemoteControl - object\n        TissueBox - object\n        ToiletPaper - object\n        PepperShaker - object\n        Poster - object\n        Kettle - object\n        SoapBar - object\n        BaseballBat - object\n        Plunger - object\n        LaptopType - otype\n        KeyChainType - otype\n        BreadType - otype\n        PaperTowelType - otype\n        BootsType - otype\n        AlarmClockType - otype\n        ButterKnifeType - otype\n        PotType - otype\n        ChairType - otype\n        MugType - otype\n        FootstoolType - otype\n        SinkType - otype\n        TelevisionType - otype\n        SpoonType - otype\n        TowelType - otype\n        CupType - otype\n        LightSwitchType - otype\n        AppleType - otype\n        BoxType - otype\n        NewspaperType - otype\n        SoapBottleType - otype\n        HandTowelType - otype\n        ClothType - otype\n        KnifeType - otype\n        SprayBottleType - otype\n        PaintingType - otype\n        BowlType - otype\n        LadleType - otype\n        ShowerGlassType - otype\n        SaltShakerType - otype\n        BathtubType - otype\n        FloorLampType - otype\n        StatueType - otype\n        SpatulaType - otype\n        ForkType - otype\n        GlassbottleType - otype\n        TomatoType - otype\n        ToasterType - otype\n        ToiletPaperRollType - otype\n        PanType - otype\n        BookType - otype\n        CellPhoneType - otype\n        VaseType - otype\n        ShowerDoorType - otype\n        CandleType - otype\n        EggType - otype\n        HousePlantType - otype\n        WindowType - otype\n        ScrubBrushType - otype\n        WatchType - otype\n        CurtainsType - otype\n        LettuceType - otype\n        TeddyBearType - otype\n        PlateType - otype\n        MirrorType - otype\n        CDType - otype\n        WateringCanType - otype\n        DishSpongeType - otype\n        TennisRacketType - otype\n        PillowType - otype\n        CreditCardType - otype\n        StoveKnobType - otype\n        DeskLampType - otype\n        PenType - otype\n        BlindsType - otype\n        LaundryHamperLidType - otype\n        PaperTowelRollType - otype\n        WineBottleType - otype\n        BasketBallType - otype\n        PotatoType - otype\n        PencilType - otype\n        RemoteControlType - otype\n        TissueBoxType - otype\n        ToiletPaperType - otype\n        PepperShakerType - otype\n        PosterType - otype\n        KettleType - otype\n        SoapBarType - otype\n        BaseballBatType - otype\n        PlungerType - otype\n        DeskType - rtype\n        BathtubBasinType - rtype\n        GarbageCanType - rtype\n        SofaType - rtype\n        CoffeeTableType - rtype\n        TowelHolderType - rtype\n        DresserType - rtype\n        HandTowelHolderType - rtype\n        LaundryHamperType - rtype\n        SafeType - rtype\n        MicrowaveType - rtype\n        OttomanType - rtype\n        StoveBurnerType - rtype\n        SideTableType - rtype\n        ToiletPaperHangerType - rtype\n        CounterTopType - rtype\n        DrawerType - rtype\n        BedType - rtype\n        CabinetType - rtype\n        FridgeType - rtype\n        ArmChairType - rtype\n        CartType - rtype\n        SinkBasinType - rtype\n        ToiletType - rtype\n        CoffeeMachineType - rtype\n        DiningTableType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nuse a butter knife to slice up an apple that is in the microwave.\n", "codex_output": [";; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot MicrowaveType)\n                (objectType ?o AppleType)\n                (sliceable ?o)\n                (isSliced ?o)\n                (inReceptacle ?o ?r) \n            )\n    )))))\n\n<END>", ";; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n            (and \n                (objectType ?ot MicrowaveType)\n                (sliceable ?o)\n                (isSliced ?o)\n                (objectAtLocation ?ot ?l)\n                (objectType ?o AppleType)\n                (inReceptacle ?o ?r) \n                (receptacleType ?r MicrowaveType)\n            )\n    ))))\n\n<END>", ";; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?tool - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (objectType ?tool butterknife)\n                (holds ?a ?tool) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    ))))", ";; Simplified Goal: \npick_then_slice_with-Apple-ButterKnife\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?o - object)\n        (exists (?ot - object)\n            (and \n                (objectType ?o AppleType)\n                (objectType ?ot ButterknifeType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>"]}, "train/pick_cool_then_place_in_recep-TomatoSliced-None-Microwave-18/trial_T20190911_190644_778748": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Glassbottle - object\n        CD - object\n        Statue - object\n        Sink - object\n        Tomato - object\n        RemoteControl - object\n        FloorLamp - object\n        Pillow - object\n        TennisRacket - object\n        SoapBottle - object\n        Knife - object\n        SoapBar - object\n        Bowl - object\n        Footstool - object\n        Plate - object\n        Egg - object\n        Poster - object\n        Vase - object\n        ScrubBrush - object\n        Book - object\n        Toaster - object\n        Mirror - object\n        Pencil - object\n        Bread - object\n        Kettle - object\n        Mug - object\n        Pot - object\n        DishSponge - object\n        Window - object\n        HousePlant - object\n        AlarmClock - object\n        CreditCard - object\n        Plunger - object\n        Television - object\n        ToiletPaperRoll - object\n        Pen - object\n        Box - object\n        Lettuce - object\n        Blinds - object\n        KeyChain - object\n        ToiletPaper - object\n        TissueBox - object\n        ButterKnife - object\n        CellPhone - object\n        ShowerDoor - object\n        BaseballBat - object\n        Towel - object\n        WateringCan - object\n        Watch - object\n        LightSwitch - object\n        SaltShaker - object\n        BasketBall - object\n        Potato - object\n        PaperTowelRoll - object\n        Painting - object\n        Laptop - object\n        Curtains - object\n        Spatula - object\n        LaundryHamperLid - object\n        PaperTowel - object\n        DeskLamp - object\n        StoveKnob - object\n        Bathtub - object\n        HandTowel - object\n        Cloth - object\n        Candle - object\n        Ladle - object\n        Pan - object\n        Newspaper - object\n        WineBottle - object\n        Fork - object\n        SprayBottle - object\n        Chair - object\n        Apple - object\n        Boots - object\n        Cup - object\n        ShowerGlass - object\n        PepperShaker - object\n        TeddyBear - object\n        Spoon - object\n        GlassbottleType - otype\n        CDType - otype\n        StatueType - otype\n        SinkType - otype\n        TomatoType - otype\n        RemoteControlType - otype\n        FloorLampType - otype\n        PillowType - otype\n        TennisRacketType - otype\n        SoapBottleType - otype\n        KnifeType - otype\n        SoapBarType - otype\n        BowlType - otype\n        FootstoolType - otype\n        PlateType - otype\n        EggType - otype\n        PosterType - otype\n        VaseType - otype\n        ScrubBrushType - otype\n        BookType - otype\n        ToasterType - otype\n        MirrorType - otype\n        PencilType - otype\n        BreadType - otype\n        KettleType - otype\n        MugType - otype\n        PotType - otype\n        DishSpongeType - otype\n        WindowType - otype\n        HousePlantType - otype\n        AlarmClockType - otype\n        CreditCardType - otype\n        PlungerType - otype\n        TelevisionType - otype\n        ToiletPaperRollType - otype\n        PenType - otype\n        BoxType - otype\n        LettuceType - otype\n        BlindsType - otype\n        KeyChainType - otype\n        ToiletPaperType - otype\n        TissueBoxType - otype\n        ButterKnifeType - otype\n        CellPhoneType - otype\n        ShowerDoorType - otype\n        BaseballBatType - otype\n        TowelType - otype\n        WateringCanType - otype\n        WatchType - otype\n        LightSwitchType - otype\n        SaltShakerType - otype\n        BasketBallType - otype\n        PotatoType - otype\n        PaperTowelRollType - otype\n        PaintingType - otype\n        LaptopType - otype\n        CurtainsType - otype\n        SpatulaType - otype\n        LaundryHamperLidType - otype\n        PaperTowelType - otype\n        DeskLampType - otype\n        StoveKnobType - otype\n        BathtubType - otype\n        HandTowelType - otype\n        ClothType - otype\n        CandleType - otype\n        LadleType - otype\n        PanType - otype\n        NewspaperType - otype\n        WineBottleType - otype\n        ForkType - otype\n        SprayBottleType - otype\n        ChairType - otype\n        AppleType - otype\n        BootsType - otype\n        CupType - otype\n        ShowerGlassType - otype\n        PepperShakerType - otype\n        TeddyBearType - otype\n        SpoonType - otype\n        DiningTableType - rtype\n        SideTableType - rtype\n        FridgeType - rtype\n        BathtubBasinType - rtype\n        LaundryHamperType - rtype\n        CounterTopType - rtype\n        CoffeeMachineType - rtype\n        DresserType - rtype\n        BedType - rtype\n        ArmChairType - rtype\n        ToiletPaperHangerType - rtype\n        OttomanType - rtype\n        CartType - rtype\n        ToiletType - rtype\n        HandTowelHolderType - rtype\n        ShelfType - rtype\n        StoveBurnerType - rtype\n        MicrowaveType - rtype\n        SofaType - rtype\n        DeskType - rtype\n        SinkBasinType - rtype\n        DrawerType - rtype\n        SafeType - rtype\n        TowelHolderType - rtype\n        GarbageCanType - rtype\n        CabinetType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n\n\n\n;; Goal: \ncut a slice of tomato , chill it , then cook it in the microwave.\n", "codex_output": [";; Simplified Goal: \npick_heat_cool_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n\t\t(sliceable ?o)\n                (isSliced ?o) \n                (coolable ?o)\n                (isCool ?o) \n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_slice_then_cool_then_heat-TomatoSliced-None-Mug\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r1 - receptacle)\n        (exists (?r2 - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n            (and \n                (objectType ?ot MugType)\n                (receptacleType ?r1 CounterTopType)\n                (receptacleType ?r2 MicrowaveType)\n                (inReceptacle ?ot ?r1)\n                (inReceptacle ?o ?r2)\n                (sliceable ?o) \n                (isSliced ?o) \n                (coolable ?o) \n                (heatable ?o) \n                (isCool ?o)\n                (isHot ?o)\n                (holds ?a ?ot)\n            )\n    ))))))\n\n<END>", ";; Simplified Goal: \npick_slice_and_cool_then_heat-TomatoSliced-None-Mug\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r1 - receptacle)\n        (exists (?r2 - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r1 MugType)\n                (receptacleType ?r2 MicrowaveType)\n                (inReceptacle ?o ?r1)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)\n                (heatable ?o)\n                (isHot ?o)  \n            )\n    ))))", ";; Simplified Goal: \npick_slice_then_chill_then_heat-TomatoSliced-None-Microwave\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)\n                (coolable ?o)\n                (isCool ?o)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>"]}, "train/pick_cool_then_place_in_recep-Plate-None-Shelf-20/trial_T20190907_034611_178336": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        AlarmClock - object\n        Footstool - object\n        TissueBox - object\n        Spatula - object\n        Candle - object\n        Bread - object\n        WateringCan - object\n        Knife - object\n        Apple - object\n        TeddyBear - object\n        PaperTowelRoll - object\n        Mug - object\n        Ladle - object\n        Statue - object\n        StoveKnob - object\n        Watch - object\n        CellPhone - object\n        Cup - object\n        Towel - object\n        Glassbottle - object\n        Plunger - object\n        Kettle - object\n        ToiletPaperRoll - object\n        Plate - object\n        DeskLamp - object\n        Book - object\n        Television - object\n        Bathtub - object\n        Potato - object\n        Pillow - object\n        SoapBottle - object\n        Box - object\n        Newspaper - object\n        LightSwitch - object\n        ButterKnife - object\n        RemoteControl - object\n        Laptop - object\n        ShowerGlass - object\n        WineBottle - object\n        Sink - object\n        Blinds - object\n        TennisRacket - object\n        BasketBall - object\n        Vase - object\n        Tomato - object\n        Spoon - object\n        Window - object\n        Egg - object\n        Curtains - object\n        Pencil - object\n        Cloth - object\n        Painting - object\n        SprayBottle - object\n        CD - object\n        ScrubBrush - object\n        PaperTowel - object\n        Mirror - object\n        Bowl - object\n        SaltShaker - object\n        DishSponge - object\n        LaundryHamperLid - object\n        Pot - object\n        CreditCard - object\n        BaseballBat - object\n        SoapBar - object\n        KeyChain - object\n        Pen - object\n        Fork - object\n        Toaster - object\n        Pan - object\n        HousePlant - object\n        Chair - object\n        ToiletPaper - object\n        FloorLamp - object\n        HandTowel - object\n        Boots - object\n        Poster - object\n        ShowerDoor - object\n        PepperShaker - object\n        Lettuce - object\n        AlarmClockType - otype\n        FootstoolType - otype\n        TissueBoxType - otype\n        SpatulaType - otype\n        CandleType - otype\n        BreadType - otype\n        WateringCanType - otype\n        KnifeType - otype\n        AppleType - otype\n        TeddyBearType - otype\n        PaperTowelRollType - otype\n        MugType - otype\n        LadleType - otype\n        StatueType - otype\n        StoveKnobType - otype\n        WatchType - otype\n        CellPhoneType - otype\n        CupType - otype\n        TowelType - otype\n        GlassbottleType - otype\n        PlungerType - otype\n        KettleType - otype\n        ToiletPaperRollType - otype\n        PlateType - otype\n        DeskLampType - otype\n        BookType - otype\n        TelevisionType - otype\n        BathtubType - otype\n        PotatoType - otype\n        PillowType - otype\n        SoapBottleType - otype\n        BoxType - otype\n        NewspaperType - otype\n        LightSwitchType - otype\n        ButterKnifeType - otype\n        RemoteControlType - otype\n        LaptopType - otype\n        ShowerGlassType - otype\n        WineBottleType - otype\n        SinkType - otype\n        BlindsType - otype\n        TennisRacketType - otype\n        BasketBallType - otype\n        VaseType - otype\n        TomatoType - otype\n        SpoonType - otype\n        WindowType - otype\n        EggType - otype\n        CurtainsType - otype\n        PencilType - otype\n        ClothType - otype\n        PaintingType - otype\n        SprayBottleType - otype\n        CDType - otype\n        ScrubBrushType - otype\n        PaperTowelType - otype\n        MirrorType - otype\n        BowlType - otype\n        SaltShakerType - otype\n        DishSpongeType - otype\n        LaundryHamperLidType - otype\n        PotType - otype\n        CreditCardType - otype\n        BaseballBatType - otype\n        SoapBarType - otype\n        KeyChainType - otype\n        PenType - otype\n        ForkType - otype\n        ToasterType - otype\n        PanType - otype\n        HousePlantType - otype\n        ChairType - otype\n        ToiletPaperType - otype\n        FloorLampType - otype\n        HandTowelType - otype\n        BootsType - otype\n        PosterType - otype\n        ShowerDoorType - otype\n        PepperShakerType - otype\n        LettuceType - otype\n        DrawerType - rtype\n        ArmChairType - rtype\n        LaundryHamperType - rtype\n        TowelHolderType - rtype\n        MicrowaveType - rtype\n        DeskType - rtype\n        ShelfType - rtype\n        CoffeeTableType - rtype\n        BathtubBasinType - rtype\n        SofaType - rtype\n        StoveBurnerType - rtype\n        CabinetType - rtype\n        DiningTableType - rtype\n        SinkBasinType - rtype\n        GarbageCanType - rtype\n        OttomanType - rtype\n        BedType - rtype\n        ToiletType - rtype\n        FridgeType - rtype\n        CartType - rtype\n        SideTableType - rtype\n        CounterTopType - rtype\n        DresserType - rtype\n        CoffeeMachineType - rtype\n        ToiletPaperHangerType - rtype\n        HandTowelHolderType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nput a chilled plate on the middle shelf in the corner.\n", "codex_output": [";; Simplified Goal: \npick_cool_then_place_in_recep-Plate-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_cool_then_place_in_recep-Plate-None-CornerShelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r CornerShelfType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_cool_then_place_in_recep-Plate-None-MiddleShelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r MiddleShelfType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>", "pick_cool_then_place_in_recep-Plate-None-CornerMiddleShelf"]}, "train/pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan-16/trial_T20190918_204451_599244": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Pillow - object\n        Pencil - object\n        Blinds - object\n        Mug - object\n        Television - object\n        CellPhone - object\n        HandTowel - object\n        Fork - object\n        Spoon - object\n        HousePlant - object\n        TeddyBear - object\n        Apple - object\n        Box - object\n        Plate - object\n        PaperTowel - object\n        Toaster - object\n        Bathtub - object\n        Statue - object\n        SprayBottle - object\n        Chair - object\n        Knife - object\n        Bowl - object\n        CD - object\n        CreditCard - object\n        WineBottle - object\n        Book - object\n        AlarmClock - object\n        Pot - object\n        TennisRacket - object\n        Candle - object\n        RemoteControl - object\n        Bread - object\n        Cloth - object\n        Tomato - object\n        SoapBottle - object\n        Poster - object\n        BaseballBat - object\n        LightSwitch - object\n        Newspaper - object\n        StoveKnob - object\n        Towel - object\n        ToiletPaperRoll - object\n        Vase - object\n        Ladle - object\n        Sink - object\n        Glassbottle - object\n        TissueBox - object\n        ScrubBrush - object\n        ButterKnife - object\n        LaundryHamperLid - object\n        ToiletPaper - object\n        Laptop - object\n        Watch - object\n        WateringCan - object\n        Pen - object\n        BasketBall - object\n        Spatula - object\n        Cup - object\n        FloorLamp - object\n        DeskLamp - object\n        ShowerDoor - object\n        PaperTowelRoll - object\n        Lettuce - object\n        Plunger - object\n        DishSponge - object\n        KeyChain - object\n        Painting - object\n        Kettle - object\n        Pan - object\n        Mirror - object\n        SoapBar - object\n        Curtains - object\n        Egg - object\n        ShowerGlass - object\n        Potato - object\n        Window - object\n        Boots - object\n        SaltShaker - object\n        Footstool - object\n        PepperShaker - object\n        PillowType - otype\n        PencilType - otype\n        BlindsType - otype\n        MugType - otype\n        TelevisionType - otype\n        CellPhoneType - otype\n        HandTowelType - otype\n        ForkType - otype\n        SpoonType - otype\n        HousePlantType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        BoxType - otype\n        PlateType - otype\n        PaperTowelType - otype\n        ToasterType - otype\n        BathtubType - otype\n        StatueType - otype\n        SprayBottleType - otype\n        ChairType - otype\n        KnifeType - otype\n        BowlType - otype\n        CDType - otype\n        CreditCardType - otype\n        WineBottleType - otype\n        BookType - otype\n        AlarmClockType - otype\n        PotType - otype\n        TennisRacketType - otype\n        CandleType - otype\n        RemoteControlType - otype\n        BreadType - otype\n        ClothType - otype\n        TomatoType - otype\n        SoapBottleType - otype\n        PosterType - otype\n        BaseballBatType - otype\n        LightSwitchType - otype\n        NewspaperType - otype\n        StoveKnobType - otype\n        TowelType - otype\n        ToiletPaperRollType - otype\n        VaseType - otype\n        LadleType - otype\n        SinkType - otype\n        GlassbottleType - otype\n        TissueBoxType - otype\n        ScrubBrushType - otype\n        ButterKnifeType - otype\n        LaundryHamperLidType - otype\n        ToiletPaperType - otype\n        LaptopType - otype\n        WatchType - otype\n        WateringCanType - otype\n        PenType - otype\n        BasketBallType - otype\n        SpatulaType - otype\n        CupType - otype\n        FloorLampType - otype\n        DeskLampType - otype\n        ShowerDoorType - otype\n        PaperTowelRollType - otype\n        LettuceType - otype\n        PlungerType - otype\n        DishSpongeType - otype\n        KeyChainType - otype\n        PaintingType - otype\n        KettleType - otype\n        PanType - otype\n        MirrorType - otype\n        SoapBarType - otype\n        CurtainsType - otype\n        EggType - otype\n        ShowerGlassType - otype\n        PotatoType - otype\n        WindowType - otype\n        BootsType - otype\n        SaltShakerType - otype\n        FootstoolType - otype\n        PepperShakerType - otype\n        TowelHolderType - rtype\n        CoffeeMachineType - rtype\n        ToiletType - rtype\n        SideTableType - rtype\n        BedType - rtype\n        SofaType - rtype\n        DresserType - rtype\n        CoffeeTableType - rtype\n        BathtubBasinType - rtype\n        MicrowaveType - rtype\n        LaundryHamperType - rtype\n        GarbageCanType - rtype\n        SafeType - rtype\n        CartType - rtype\n        CabinetType - rtype\n        ArmChairType - rtype\n        DiningTableType - rtype\n        HandTowelHolderType - rtype\n        ShelfType - rtype\n        SinkBasinType - rtype\n        CounterTopType - rtype\n        ToiletPaperHangerType - rtype\n        DeskType - rtype\n        DrawerType - rtype\n        StoveBurnerType - rtype\n        OttomanType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nslice a tomato , cook a slice.\n", "codex_output": [";; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-StoveBurner\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n            (and \n                (objectType ?o TomatoType) \n                (sliceable ?o)\n                (isSliced ?o)  \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n            )\n    ))))", ";; Simplified Goal: \npick_slice_then_heat-TomatoSliced-None-None", ";; Simplified Goal: \npick_slice_then_heat-TomatoSliced-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o) \n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_plate_put_slice_tomato_then_pick_slice_tomato_put_in_recep-Microwave-TomatoSliced\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?o2 - object)\n            (and \n                (objectType ?o TomatoType)\n                (sliceable ?o)\n                (isSliced ?o)\n                (objectType ?o2 TomatoSlicedType)\n                (objectAtLocation ?o2 ?l)\n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (inReceptacle ?o2 ?r) \n            )\n    ))))"]}, "train/pick_heat_then_place_in_recep-PotatoSliced-None-SideTable-28/trial_T20190906_212031_031197": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        AlarmClock - object\n        Footstool - object\n        TissueBox - object\n        Spatula - object\n        Candle - object\n        Bread - object\n        WateringCan - object\n        Knife - object\n        Apple - object\n        TeddyBear - object\n        PaperTowelRoll - object\n        Mug - object\n        Ladle - object\n        Statue - object\n        StoveKnob - object\n        Watch - object\n        CellPhone - object\n        Cup - object\n        Towel - object\n        Glassbottle - object\n        Plunger - object\n        Kettle - object\n        ToiletPaperRoll - object\n        Plate - object\n        DeskLamp - object\n        Book - object\n        Television - object\n        Bathtub - object\n        Potato - object\n        Pillow - object\n        SoapBottle - object\n        Box - object\n        Newspaper - object\n        LightSwitch - object\n        ButterKnife - object\n        RemoteControl - object\n        Laptop - object\n        ShowerGlass - object\n        WineBottle - object\n        Sink - object\n        Blinds - object\n        TennisRacket - object\n        BasketBall - object\n        Vase - object\n        Tomato - object\n        Spoon - object\n        Window - object\n        Egg - object\n        Curtains - object\n        Pencil - object\n        Cloth - object\n        Painting - object\n        SprayBottle - object\n        CD - object\n        ScrubBrush - object\n        PaperTowel - object\n        Mirror - object\n        Bowl - object\n        SaltShaker - object\n        DishSponge - object\n        LaundryHamperLid - object\n        Pot - object\n        CreditCard - object\n        BaseballBat - object\n        SoapBar - object\n        KeyChain - object\n        Pen - object\n        Fork - object\n        Toaster - object\n        Pan - object\n        HousePlant - object\n        Chair - object\n        ToiletPaper - object\n        FloorLamp - object\n        HandTowel - object\n        Boots - object\n        Poster - object\n        ShowerDoor - object\n        PepperShaker - object\n        Lettuce - object\n        AlarmClockType - otype\n        FootstoolType - otype\n        TissueBoxType - otype\n        SpatulaType - otype\n        CandleType - otype\n        BreadType - otype\n        WateringCanType - otype\n        KnifeType - otype\n        AppleType - otype\n        TeddyBearType - otype\n        PaperTowelRollType - otype\n        MugType - otype\n        LadleType - otype\n        StatueType - otype\n        StoveKnobType - otype\n        WatchType - otype\n        CellPhoneType - otype\n        CupType - otype\n        TowelType - otype\n        GlassbottleType - otype\n        PlungerType - otype\n        KettleType - otype\n        ToiletPaperRollType - otype\n        PlateType - otype\n        DeskLampType - otype\n        BookType - otype\n        TelevisionType - otype\n        BathtubType - otype\n        PotatoType - otype\n        PillowType - otype\n        SoapBottleType - otype\n        BoxType - otype\n        NewspaperType - otype\n        LightSwitchType - otype\n        ButterKnifeType - otype\n        RemoteControlType - otype\n        LaptopType - otype\n        ShowerGlassType - otype\n        WineBottleType - otype\n        SinkType - otype\n        BlindsType - otype\n        TennisRacketType - otype\n        BasketBallType - otype\n        VaseType - otype\n        TomatoType - otype\n        SpoonType - otype\n        WindowType - otype\n        EggType - otype\n        CurtainsType - otype\n        PencilType - otype\n        ClothType - otype\n        PaintingType - otype\n        SprayBottleType - otype\n        CDType - otype\n        ScrubBrushType - otype\n        PaperTowelType - otype\n        MirrorType - otype\n        BowlType - otype\n        SaltShakerType - otype\n        DishSpongeType - otype\n        LaundryHamperLidType - otype\n        PotType - otype\n        CreditCardType - otype\n        BaseballBatType - otype\n        SoapBarType - otype\n        KeyChainType - otype\n        PenType - otype\n        ForkType - otype\n        ToasterType - otype\n        PanType - otype\n        HousePlantType - otype\n        ChairType - otype\n        ToiletPaperType - otype\n        FloorLampType - otype\n        HandTowelType - otype\n        BootsType - otype\n        PosterType - otype\n        ShowerDoorType - otype\n        PepperShakerType - otype\n        LettuceType - otype\n        DrawerType - rtype\n        ArmChairType - rtype\n        LaundryHamperType - rtype\n        TowelHolderType - rtype\n        MicrowaveType - rtype\n        DeskType - rtype\n        ShelfType - rtype\n        CoffeeTableType - rtype\n        BathtubBasinType - rtype\n        SofaType - rtype\n        StoveBurnerType - rtype\n        CabinetType - rtype\n        DiningTableType - rtype\n        SinkBasinType - rtype\n        GarbageCanType - rtype\n        OttomanType - rtype\n        BedType - rtype\n        ToiletType - rtype\n        FridgeType - rtype\n        CartType - rtype\n        SideTableType - rtype\n        CounterTopType - rtype\n        DresserType - rtype\n        CoffeeMachineType - rtype\n        ToiletPaperHangerType - rtype\n        HandTowelHolderType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nplace a piece of microwaved fruit on the black table.\n", "codex_output": [";; Simplified Goal: \npick_heat_then_place_in_recep-Fruit-None-CoffeeTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r)\n                (objectType ?o FruitType)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_heat_then_place_in_recep-Fruit-None-CoffeeTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (receptacleType ?r CoffeeTableType)\n                (objectType ?o FruitType) \n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_heat_then_place_in_recep-Fruit-None-DiningTable\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o FruitType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))", ";; Simplified Goal: \npick_heat_then_place_in_recep-Fruit-None-CoffeeTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>"]}, "train/pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin-15/trial_T20190909_020319_726874": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        DeskLamp - object\n        Sink - object\n        WateringCan - object\n        Knife - object\n        RemoteControl - object\n        Toaster - object\n        Pencil - object\n        Watch - object\n        Laptop - object\n        Painting - object\n        Mug - object\n        Tomato - object\n        Spoon - object\n        CD - object\n        ToiletPaper - object\n        StoveKnob - object\n        Bread - object\n        Bathtub - object\n        Pan - object\n        AlarmClock - object\n        Blinds - object\n        PaperTowelRoll - object\n        Pen - object\n        Television - object\n        ToiletPaperRoll - object\n        Potato - object\n        Box - object\n        Curtains - object\n        Ladle - object\n        SaltShaker - object\n        BasketBall - object\n        Window - object\n        KeyChain - object\n        TissueBox - object\n        Lettuce - object\n        Spatula - object\n        Book - object\n        SprayBottle - object\n        LaundryHamperLid - object\n        HousePlant - object\n        Pillow - object\n        Statue - object\n        Vase - object\n        CellPhone - object\n        WineBottle - object\n        SoapBar - object\n        BaseballBat - object\n        Fork - object\n        TeddyBear - object\n        ShowerDoor - object\n        ButterKnife - object\n        Glassbottle - object\n        Cloth - object\n        PepperShaker - object\n        SoapBottle - object\n        Cup - object\n        Towel - object\n        Newspaper - object\n        Egg - object\n        TennisRacket - object\n        DishSponge - object\n        CreditCard - object\n        Plate - object\n        Chair - object\n        Footstool - object\n        PaperTowel - object\n        LightSwitch - object\n        Bowl - object\n        Poster - object\n        Mirror - object\n        Plunger - object\n        FloorLamp - object\n        Boots - object\n        Pot - object\n        ScrubBrush - object\n        ShowerGlass - object\n        Apple - object\n        HandTowel - object\n        Kettle - object\n        Candle - object\n        DeskLampType - otype\n        SinkType - otype\n        WateringCanType - otype\n        KnifeType - otype\n        RemoteControlType - otype\n        ToasterType - otype\n        PencilType - otype\n        WatchType - otype\n        LaptopType - otype\n        PaintingType - otype\n        MugType - otype\n        TomatoType - otype\n        SpoonType - otype\n        CDType - otype\n        ToiletPaperType - otype\n        StoveKnobType - otype\n        BreadType - otype\n        BathtubType - otype\n        PanType - otype\n        AlarmClockType - otype\n        BlindsType - otype\n        PaperTowelRollType - otype\n        PenType - otype\n        TelevisionType - otype\n        ToiletPaperRollType - otype\n        PotatoType - otype\n        BoxType - otype\n        CurtainsType - otype\n        LadleType - otype\n        SaltShakerType - otype\n        BasketBallType - otype\n        WindowType - otype\n        KeyChainType - otype\n        TissueBoxType - otype\n        LettuceType - otype\n        SpatulaType - otype\n        BookType - otype\n        SprayBottleType - otype\n        LaundryHamperLidType - otype\n        HousePlantType - otype\n        PillowType - otype\n        StatueType - otype\n        VaseType - otype\n        CellPhoneType - otype\n        WineBottleType - otype\n        SoapBarType - otype\n        BaseballBatType - otype\n        ForkType - otype\n        TeddyBearType - otype\n        ShowerDoorType - otype\n        ButterKnifeType - otype\n        GlassbottleType - otype\n        ClothType - otype\n        PepperShakerType - otype\n        SoapBottleType - otype\n        CupType - otype\n        TowelType - otype\n        NewspaperType - otype\n        EggType - otype\n        TennisRacketType - otype\n        DishSpongeType - otype\n        CreditCardType - otype\n        PlateType - otype\n        ChairType - otype\n        FootstoolType - otype\n        PaperTowelType - otype\n        LightSwitchType - otype\n        BowlType - otype\n        PosterType - otype\n        MirrorType - otype\n        PlungerType - otype\n        FloorLampType - otype\n        BootsType - otype\n        PotType - otype\n        ScrubBrushType - otype\n        ShowerGlassType - otype\n        AppleType - otype\n        HandTowelType - otype\n        KettleType - otype\n        CandleType - otype\n        BedType - rtype\n        BathtubBasinType - rtype\n        ToiletType - rtype\n        SinkBasinType - rtype\n        DresserType - rtype\n        HandTowelHolderType - rtype\n        ArmChairType - rtype\n        MicrowaveType - rtype\n        ToiletPaperHangerType - rtype\n        CoffeeTableType - rtype\n        ShelfType - rtype\n        OttomanType - rtype\n        CounterTopType - rtype\n        LaundryHamperType - rtype\n        SafeType - rtype\n        FridgeType - rtype\n        CabinetType - rtype\n        DeskType - rtype\n        GarbageCanType - rtype\n        DrawerType - rtype\n        StoveBurnerType - rtype\n        SofaType - rtype\n        SideTableType - rtype\n        CoffeeMachineType - rtype\n        TowelHolderType - rtype\n        DiningTableType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nplace a slice of heated tomato in a sink.\n", "codex_output": [";; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))", ";; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))", ";; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))", ";; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))"]}, "train/pick_and_place_simple-Tomato-None-Microwave-8/trial_T20190907_205050_993517": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        AlarmClock - object\n        Footstool - object\n        TissueBox - object\n        Spatula - object\n        Candle - object\n        Bread - object\n        WateringCan - object\n        Knife - object\n        Apple - object\n        TeddyBear - object\n        PaperTowelRoll - object\n        Mug - object\n        Ladle - object\n        Statue - object\n        StoveKnob - object\n        Watch - object\n        CellPhone - object\n        Cup - object\n        Towel - object\n        Glassbottle - object\n        Plunger - object\n        Kettle - object\n        ToiletPaperRoll - object\n        Plate - object\n        DeskLamp - object\n        Book - object\n        Television - object\n        Bathtub - object\n        Potato - object\n        Pillow - object\n        SoapBottle - object\n        Box - object\n        Newspaper - object\n        LightSwitch - object\n        ButterKnife - object\n        RemoteControl - object\n        Laptop - object\n        ShowerGlass - object\n        WineBottle - object\n        Sink - object\n        Blinds - object\n        TennisRacket - object\n        BasketBall - object\n        Vase - object\n        Tomato - object\n        Spoon - object\n        Window - object\n        Egg - object\n        Curtains - object\n        Pencil - object\n        Cloth - object\n        Painting - object\n        SprayBottle - object\n        CD - object\n        ScrubBrush - object\n        PaperTowel - object\n        Mirror - object\n        Bowl - object\n        SaltShaker - object\n        DishSponge - object\n        LaundryHamperLid - object\n        Pot - object\n        CreditCard - object\n        BaseballBat - object\n        SoapBar - object\n        KeyChain - object\n        Pen - object\n        Fork - object\n        Toaster - object\n        Pan - object\n        HousePlant - object\n        Chair - object\n        ToiletPaper - object\n        FloorLamp - object\n        HandTowel - object\n        Boots - object\n        Poster - object\n        ShowerDoor - object\n        PepperShaker - object\n        Lettuce - object\n        AlarmClockType - otype\n        FootstoolType - otype\n        TissueBoxType - otype\n        SpatulaType - otype\n        CandleType - otype\n        BreadType - otype\n        WateringCanType - otype\n        KnifeType - otype\n        AppleType - otype\n        TeddyBearType - otype\n        PaperTowelRollType - otype\n        MugType - otype\n        LadleType - otype\n        StatueType - otype\n        StoveKnobType - otype\n        WatchType - otype\n        CellPhoneType - otype\n        CupType - otype\n        TowelType - otype\n        GlassbottleType - otype\n        PlungerType - otype\n        KettleType - otype\n        ToiletPaperRollType - otype\n        PlateType - otype\n        DeskLampType - otype\n        BookType - otype\n        TelevisionType - otype\n        BathtubType - otype\n        PotatoType - otype\n        PillowType - otype\n        SoapBottleType - otype\n        BoxType - otype\n        NewspaperType - otype\n        LightSwitchType - otype\n        ButterKnifeType - otype\n        RemoteControlType - otype\n        LaptopType - otype\n        ShowerGlassType - otype\n        WineBottleType - otype\n        SinkType - otype\n        BlindsType - otype\n        TennisRacketType - otype\n        BasketBallType - otype\n        VaseType - otype\n        TomatoType - otype\n        SpoonType - otype\n        WindowType - otype\n        EggType - otype\n        CurtainsType - otype\n        PencilType - otype\n        ClothType - otype\n        PaintingType - otype\n        SprayBottleType - otype\n        CDType - otype\n        ScrubBrushType - otype\n        PaperTowelType - otype\n        MirrorType - otype\n        BowlType - otype\n        SaltShakerType - otype\n        DishSpongeType - otype\n        LaundryHamperLidType - otype\n        PotType - otype\n        CreditCardType - otype\n        BaseballBatType - otype\n        SoapBarType - otype\n        KeyChainType - otype\n        PenType - otype\n        ForkType - otype\n        ToasterType - otype\n        PanType - otype\n        HousePlantType - otype\n        ChairType - otype\n        ToiletPaperType - otype\n        FloorLampType - otype\n        HandTowelType - otype\n        BootsType - otype\n        PosterType - otype\n        ShowerDoorType - otype\n        PepperShakerType - otype\n        LettuceType - otype\n        DrawerType - rtype\n        ArmChairType - rtype\n        LaundryHamperType - rtype\n        TowelHolderType - rtype\n        MicrowaveType - rtype\n        DeskType - rtype\n        ShelfType - rtype\n        CoffeeTableType - rtype\n        BathtubBasinType - rtype\n        SofaType - rtype\n        StoveBurnerType - rtype\n        CabinetType - rtype\n        DiningTableType - rtype\n        SinkBasinType - rtype\n        GarbageCanType - rtype\n        OttomanType - rtype\n        BedType - rtype\n        ToiletType - rtype\n        FridgeType - rtype\n        CartType - rtype\n        SideTableType - rtype\n        CounterTopType - rtype\n        DresserType - rtype\n        CoffeeMachineType - rtype\n        ToiletPaperHangerType - rtype\n        HandTowelHolderType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nput the tomato in the microwave.\n", "codex_output": [";; Simplified Goal: \npick_and_place_simple-Tomato-None-Microwave\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-Tomato-None-Microwave\n\n\n;; PDDL Goal: \n(:goal\n    (exists (?r - receptacle)\n    (exists (?o - object)\n        (and \n            (objectType ?o TomatoType) \n            (receptacleType ?r MicrowaveType)\n            (inReceptacle ?o ?r) \n        )\n)))", ";; Simplified Goal: \npick_and_place_simple-Tomato-None-Microwave\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-Tomato-None-Microwave\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n            )\n    )))"]}, "train/look_at_obj_in_light-CellPhone-None-FloorLamp-203/trial_T20190908_163933_090193": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Painting - object\n        PaperTowel - object\n        KeyChain - object\n        LaundryHamperLid - object\n        CellPhone - object\n        Watch - object\n        Potato - object\n        HousePlant - object\n        Fork - object\n        Spoon - object\n        BaseballBat - object\n        Statue - object\n        WateringCan - object\n        SprayBottle - object\n        SoapBottle - object\n        TennisRacket - object\n        StoveKnob - object\n        Cup - object\n        Bathtub - object\n        LightSwitch - object\n        AlarmClock - object\n        Toaster - object\n        Pot - object\n        Kettle - object\n        Footstool - object\n        PaperTowelRoll - object\n        Spatula - object\n        Plate - object\n        ToiletPaper - object\n        Bowl - object\n        SoapBar - object\n        Candle - object\n        Plunger - object\n        BasketBall - object\n        Newspaper - object\n        ShowerDoor - object\n        Blinds - object\n        PepperShaker - object\n        DishSponge - object\n        HandTowel - object\n        Apple - object\n        Egg - object\n        TissueBox - object\n        Book - object\n        FloorLamp - object\n        Poster - object\n        Pan - object\n        Vase - object\n        Lettuce - object\n        SaltShaker - object\n        Mug - object\n        Curtains - object\n        Pillow - object\n        Knife - object\n        Bread - object\n        Glassbottle - object\n        Tomato - object\n        Cloth - object\n        Window - object\n        Chair - object\n        Towel - object\n        ButterKnife - object\n        Laptop - object\n        ToiletPaperRoll - object\n        Pen - object\n        ShowerGlass - object\n        CreditCard - object\n        Sink - object\n        ScrubBrush - object\n        RemoteControl - object\n        Box - object\n        CD - object\n        Pencil - object\n        DeskLamp - object\n        Ladle - object\n        Television - object\n        Mirror - object\n        TeddyBear - object\n        Boots - object\n        WineBottle - object\n        PaintingType - otype\n        PaperTowelType - otype\n        KeyChainType - otype\n        LaundryHamperLidType - otype\n        CellPhoneType - otype\n        WatchType - otype\n        PotatoType - otype\n        HousePlantType - otype\n        ForkType - otype\n        SpoonType - otype\n        BaseballBatType - otype\n        StatueType - otype\n        WateringCanType - otype\n        SprayBottleType - otype\n        SoapBottleType - otype\n        TennisRacketType - otype\n        StoveKnobType - otype\n        CupType - otype\n        BathtubType - otype\n        LightSwitchType - otype\n        AlarmClockType - otype\n        ToasterType - otype\n        PotType - otype\n        KettleType - otype\n        FootstoolType - otype\n        PaperTowelRollType - otype\n        SpatulaType - otype\n        PlateType - otype\n        ToiletPaperType - otype\n        BowlType - otype\n        SoapBarType - otype\n        CandleType - otype\n        PlungerType - otype\n        BasketBallType - otype\n        NewspaperType - otype\n        ShowerDoorType - otype\n        BlindsType - otype\n        PepperShakerType - otype\n        DishSpongeType - otype\n        HandTowelType - otype\n        AppleType - otype\n        EggType - otype\n        TissueBoxType - otype\n        BookType - otype\n        FloorLampType - otype\n        PosterType - otype\n        PanType - otype\n        VaseType - otype\n        LettuceType - otype\n        SaltShakerType - otype\n        MugType - otype\n        CurtainsType - otype\n        PillowType - otype\n        KnifeType - otype\n        BreadType - otype\n        GlassbottleType - otype\n        TomatoType - otype\n        ClothType - otype\n        WindowType - otype\n        ChairType - otype\n        TowelType - otype\n        ButterKnifeType - otype\n        LaptopType - otype\n        ToiletPaperRollType - otype\n        PenType - otype\n        ShowerGlassType - otype\n        CreditCardType - otype\n        SinkType - otype\n        ScrubBrushType - otype\n        RemoteControlType - otype\n        BoxType - otype\n        CDType - otype\n        PencilType - otype\n        DeskLampType - otype\n        LadleType - otype\n        TelevisionType - otype\n        MirrorType - otype\n        TeddyBearType - otype\n        BootsType - otype\n        WineBottleType - otype\n        DiningTableType - rtype\n        ShelfType - rtype\n        StoveBurnerType - rtype\n        SofaType - rtype\n        BathtubBasinType - rtype\n        GarbageCanType - rtype\n        DrawerType - rtype\n        FridgeType - rtype\n        ToiletPaperHangerType - rtype\n        CabinetType - rtype\n        OttomanType - rtype\n        BedType - rtype\n        HandTowelHolderType - rtype\n        CartType - rtype\n        DresserType - rtype\n        CoffeeTableType - rtype\n        TowelHolderType - rtype\n        MicrowaveType - rtype\n        SafeType - rtype\n        DeskType - rtype\n        LaundryHamperType - rtype\n        ArmChairType - rtype\n        SideTableType - rtype\n        CoffeeMachineType - rtype\n        ToiletType - rtype\n        SinkBasinType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nexamine a phone in the light of a tall lamp.\n", "codex_output": [";; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))", ";; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))", "Simplified Goal:\nlook_at_obj_in_light-CellPhone-None-FloorLamp\n\nPDDL Goal:\n(:goal\n   (exists (?a - agent)\n           (exists (?r - receptacle)\n                   (exists (?o - object)\n                           (exists (?ot - object)\n                                   (exists (?l - location)\n                                           (and\n                                           (objectType ?ot FloorLampType)\n                                           (toggleable ?ot)\n                                           (isToggled ?ot)\n                                           (objectAtLocation ?ot ?l)\n                                           (atLocation ?a ?l)\n                                           (objectType ?o CellPhoneType)\n                                           (holds ?a ?o))))))))", ";; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))"]}, "train/pick_and_place_simple-TomatoSliced-None-CounterTop-25/trial_T20190908_233941_496641": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Painting - object\n        PaperTowel - object\n        KeyChain - object\n        LaundryHamperLid - object\n        CellPhone - object\n        Watch - object\n        Potato - object\n        HousePlant - object\n        Fork - object\n        Spoon - object\n        BaseballBat - object\n        Statue - object\n        WateringCan - object\n        SprayBottle - object\n        SoapBottle - object\n        TennisRacket - object\n        StoveKnob - object\n        Cup - object\n        Bathtub - object\n        LightSwitch - object\n        AlarmClock - object\n        Toaster - object\n        Pot - object\n        Kettle - object\n        Footstool - object\n        PaperTowelRoll - object\n        Spatula - object\n        Plate - object\n        ToiletPaper - object\n        Bowl - object\n        SoapBar - object\n        Candle - object\n        Plunger - object\n        BasketBall - object\n        Newspaper - object\n        ShowerDoor - object\n        Blinds - object\n        PepperShaker - object\n        DishSponge - object\n        HandTowel - object\n        Apple - object\n        Egg - object\n        TissueBox - object\n        Book - object\n        FloorLamp - object\n        Poster - object\n        Pan - object\n        Vase - object\n        Lettuce - object\n        SaltShaker - object\n        Mug - object\n        Curtains - object\n        Pillow - object\n        Knife - object\n        Bread - object\n        Glassbottle - object\n        Tomato - object\n        Cloth - object\n        Window - object\n        Chair - object\n        Towel - object\n        ButterKnife - object\n        Laptop - object\n        ToiletPaperRoll - object\n        Pen - object\n        ShowerGlass - object\n        CreditCard - object\n        Sink - object\n        ScrubBrush - object\n        RemoteControl - object\n        Box - object\n        CD - object\n        Pencil - object\n        DeskLamp - object\n        Ladle - object\n        Television - object\n        Mirror - object\n        TeddyBear - object\n        Boots - object\n        WineBottle - object\n        PaintingType - otype\n        PaperTowelType - otype\n        KeyChainType - otype\n        LaundryHamperLidType - otype\n        CellPhoneType - otype\n        WatchType - otype\n        PotatoType - otype\n        HousePlantType - otype\n        ForkType - otype\n        SpoonType - otype\n        BaseballBatType - otype\n        StatueType - otype\n        WateringCanType - otype\n        SprayBottleType - otype\n        SoapBottleType - otype\n        TennisRacketType - otype\n        StoveKnobType - otype\n        CupType - otype\n        BathtubType - otype\n        LightSwitchType - otype\n        AlarmClockType - otype\n        ToasterType - otype\n        PotType - otype\n        KettleType - otype\n        FootstoolType - otype\n        PaperTowelRollType - otype\n        SpatulaType - otype\n        PlateType - otype\n        ToiletPaperType - otype\n        BowlType - otype\n        SoapBarType - otype\n        CandleType - otype\n        PlungerType - otype\n        BasketBallType - otype\n        NewspaperType - otype\n        ShowerDoorType - otype\n        BlindsType - otype\n        PepperShakerType - otype\n        DishSpongeType - otype\n        HandTowelType - otype\n        AppleType - otype\n        EggType - otype\n        TissueBoxType - otype\n        BookType - otype\n        FloorLampType - otype\n        PosterType - otype\n        PanType - otype\n        VaseType - otype\n        LettuceType - otype\n        SaltShakerType - otype\n        MugType - otype\n        CurtainsType - otype\n        PillowType - otype\n        KnifeType - otype\n        BreadType - otype\n        GlassbottleType - otype\n        TomatoType - otype\n        ClothType - otype\n        WindowType - otype\n        ChairType - otype\n        TowelType - otype\n        ButterKnifeType - otype\n        LaptopType - otype\n        ToiletPaperRollType - otype\n        PenType - otype\n        ShowerGlassType - otype\n        CreditCardType - otype\n        SinkType - otype\n        ScrubBrushType - otype\n        RemoteControlType - otype\n        BoxType - otype\n        CDType - otype\n        PencilType - otype\n        DeskLampType - otype\n        LadleType - otype\n        TelevisionType - otype\n        MirrorType - otype\n        TeddyBearType - otype\n        BootsType - otype\n        WineBottleType - otype\n        DiningTableType - rtype\n        ShelfType - rtype\n        StoveBurnerType - rtype\n        SofaType - rtype\n        BathtubBasinType - rtype\n        GarbageCanType - rtype\n        DrawerType - rtype\n        FridgeType - rtype\n        ToiletPaperHangerType - rtype\n        CabinetType - rtype\n        OttomanType - rtype\n        BedType - rtype\n        HandTowelHolderType - rtype\n        CartType - rtype\n        DresserType - rtype\n        CoffeeTableType - rtype\n        TowelHolderType - rtype\n        MicrowaveType - rtype\n        SafeType - rtype\n        DeskType - rtype\n        LaundryHamperType - rtype\n        ArmChairType - rtype\n        SideTableType - rtype\n        CoffeeMachineType - rtype\n        ToiletType - rtype\n        SinkBasinType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nuse a large metal knife to slice up a tomato on the counter.\n", "codex_output": [";; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_and_place_simple-TomatoSlicedLargeMetal-Knife-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?o2 - object)\n        (exists (?o3 - object)\n            (and \n                (objectType ?o TomatoType) \n                (objectType ?o2 KnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (inReceptacle ?o2 ?r)\n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))))\n\n<END>", ";; Simplified Goal: \npick_slice_knife-None-TomatoSliced\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?o - object)\n        (exists (?k - object)\n            (and \n                (objectType ?o TomatoType) \n                (objectType ?k KnifeType)\n                (objectType ?k KnifeType)\n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>"]}, "train/pick_heat_then_place_in_recep-Cup-None-Fridge-22/trial_T20190908_072702_772430": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        AlarmClock - object\n        Footstool - object\n        TissueBox - object\n        Spatula - object\n        Candle - object\n        Bread - object\n        WateringCan - object\n        Knife - object\n        Apple - object\n        TeddyBear - object\n        PaperTowelRoll - object\n        Mug - object\n        Ladle - object\n        Statue - object\n        StoveKnob - object\n        Watch - object\n        CellPhone - object\n        Cup - object\n        Towel - object\n        Glassbottle - object\n        Plunger - object\n        Kettle - object\n        ToiletPaperRoll - object\n        Plate - object\n        DeskLamp - object\n        Book - object\n        Television - object\n        Bathtub - object\n        Potato - object\n        Pillow - object\n        SoapBottle - object\n        Box - object\n        Newspaper - object\n        LightSwitch - object\n        ButterKnife - object\n        RemoteControl - object\n        Laptop - object\n        ShowerGlass - object\n        WineBottle - object\n        Sink - object\n        Blinds - object\n        TennisRacket - object\n        BasketBall - object\n        Vase - object\n        Tomato - object\n        Spoon - object\n        Window - object\n        Egg - object\n        Curtains - object\n        Pencil - object\n        Cloth - object\n        Painting - object\n        SprayBottle - object\n        CD - object\n        ScrubBrush - object\n        PaperTowel - object\n        Mirror - object\n        Bowl - object\n        SaltShaker - object\n        DishSponge - object\n        LaundryHamperLid - object\n        Pot - object\n        CreditCard - object\n        BaseballBat - object\n        SoapBar - object\n        KeyChain - object\n        Pen - object\n        Fork - object\n        Toaster - object\n        Pan - object\n        HousePlant - object\n        Chair - object\n        ToiletPaper - object\n        FloorLamp - object\n        HandTowel - object\n        Boots - object\n        Poster - object\n        ShowerDoor - object\n        PepperShaker - object\n        Lettuce - object\n        AlarmClockType - otype\n        FootstoolType - otype\n        TissueBoxType - otype\n        SpatulaType - otype\n        CandleType - otype\n        BreadType - otype\n        WateringCanType - otype\n        KnifeType - otype\n        AppleType - otype\n        TeddyBearType - otype\n        PaperTowelRollType - otype\n        MugType - otype\n        LadleType - otype\n        StatueType - otype\n        StoveKnobType - otype\n        WatchType - otype\n        CellPhoneType - otype\n        CupType - otype\n        TowelType - otype\n        GlassbottleType - otype\n        PlungerType - otype\n        KettleType - otype\n        ToiletPaperRollType - otype\n        PlateType - otype\n        DeskLampType - otype\n        BookType - otype\n        TelevisionType - otype\n        BathtubType - otype\n        PotatoType - otype\n        PillowType - otype\n        SoapBottleType - otype\n        BoxType - otype\n        NewspaperType - otype\n        LightSwitchType - otype\n        ButterKnifeType - otype\n        RemoteControlType - otype\n        LaptopType - otype\n        ShowerGlassType - otype\n        WineBottleType - otype\n        SinkType - otype\n        BlindsType - otype\n        TennisRacketType - otype\n        BasketBallType - otype\n        VaseType - otype\n        TomatoType - otype\n        SpoonType - otype\n        WindowType - otype\n        EggType - otype\n        CurtainsType - otype\n        PencilType - otype\n        ClothType - otype\n        PaintingType - otype\n        SprayBottleType - otype\n        CDType - otype\n        ScrubBrushType - otype\n        PaperTowelType - otype\n        MirrorType - otype\n        BowlType - otype\n        SaltShakerType - otype\n        DishSpongeType - otype\n        LaundryHamperLidType - otype\n        PotType - otype\n        CreditCardType - otype\n        BaseballBatType - otype\n        SoapBarType - otype\n        KeyChainType - otype\n        PenType - otype\n        ForkType - otype\n        ToasterType - otype\n        PanType - otype\n        HousePlantType - otype\n        ChairType - otype\n        ToiletPaperType - otype\n        FloorLampType - otype\n        HandTowelType - otype\n        BootsType - otype\n        PosterType - otype\n        ShowerDoorType - otype\n        PepperShakerType - otype\n        LettuceType - otype\n        DrawerType - rtype\n        ArmChairType - rtype\n        LaundryHamperType - rtype\n        TowelHolderType - rtype\n        MicrowaveType - rtype\n        DeskType - rtype\n        ShelfType - rtype\n        CoffeeTableType - rtype\n        BathtubBasinType - rtype\n        SofaType - rtype\n        StoveBurnerType - rtype\n        CabinetType - rtype\n        DiningTableType - rtype\n        SinkBasinType - rtype\n        GarbageCanType - rtype\n        OttomanType - rtype\n        BedType - rtype\n        ToiletType - rtype\n        FridgeType - rtype\n        CartType - rtype\n        SideTableType - rtype\n        CounterTopType - rtype\n        DresserType - rtype\n        CoffeeMachineType - rtype\n        ToiletPaperHangerType - rtype\n        HandTowelHolderType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nplace a heated cup inside the refrigerator.\n", "codex_output": [";; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))", ";; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))", ";; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))"]}, "train/pick_and_place_simple-CreditCard-None-Desk-310/trial_T20190908_033230_602789": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Laptop - object\n        KeyChain - object\n        Bread - object\n        PaperTowel - object\n        Boots - object\n        AlarmClock - object\n        ButterKnife - object\n        Pot - object\n        Chair - object\n        Mug - object\n        Footstool - object\n        Sink - object\n        Television - object\n        Spoon - object\n        Towel - object\n        Cup - object\n        LightSwitch - object\n        Apple - object\n        Box - object\n        Newspaper - object\n        SoapBottle - object\n        HandTowel - object\n        Cloth - object\n        Knife - object\n        SprayBottle - object\n        Painting - object\n        Bowl - object\n        Ladle - object\n        ShowerGlass - object\n        SaltShaker - object\n        Bathtub - object\n        FloorLamp - object\n        Statue - object\n        Spatula - object\n        Fork - object\n        Glassbottle - object\n        Tomato - object\n        Toaster - object\n        ToiletPaperRoll - object\n        Pan - object\n        Book - object\n        CellPhone - object\n        Vase - object\n        ShowerDoor - object\n        Candle - object\n        Egg - object\n        HousePlant - object\n        Window - object\n        ScrubBrush - object\n        Watch - object\n        Curtains - object\n        Lettuce - object\n        TeddyBear - object\n        Plate - object\n        Mirror - object\n        CD - object\n        WateringCan - object\n        DishSponge - object\n        TennisRacket - object\n        Pillow - object\n        CreditCard - object\n        StoveKnob - object\n        DeskLamp - object\n        Pen - object\n        Blinds - object\n        LaundryHamperLid - object\n        PaperTowelRoll - object\n        WineBottle - object\n        BasketBall - object\n        Potato - object\n        Pencil - object\n        RemoteControl - object\n        TissueBox - object\n        ToiletPaper - object\n        PepperShaker - object\n        Poster - object\n        Kettle - object\n        SoapBar - object\n        BaseballBat - object\n        Plunger - object\n        LaptopType - otype\n        KeyChainType - otype\n        BreadType - otype\n        PaperTowelType - otype\n        BootsType - otype\n        AlarmClockType - otype\n        ButterKnifeType - otype\n        PotType - otype\n        ChairType - otype\n        MugType - otype\n        FootstoolType - otype\n        SinkType - otype\n        TelevisionType - otype\n        SpoonType - otype\n        TowelType - otype\n        CupType - otype\n        LightSwitchType - otype\n        AppleType - otype\n        BoxType - otype\n        NewspaperType - otype\n        SoapBottleType - otype\n        HandTowelType - otype\n        ClothType - otype\n        KnifeType - otype\n        SprayBottleType - otype\n        PaintingType - otype\n        BowlType - otype\n        LadleType - otype\n        ShowerGlassType - otype\n        SaltShakerType - otype\n        BathtubType - otype\n        FloorLampType - otype\n        StatueType - otype\n        SpatulaType - otype\n        ForkType - otype\n        GlassbottleType - otype\n        TomatoType - otype\n        ToasterType - otype\n        ToiletPaperRollType - otype\n        PanType - otype\n        BookType - otype\n        CellPhoneType - otype\n        VaseType - otype\n        ShowerDoorType - otype\n        CandleType - otype\n        EggType - otype\n        HousePlantType - otype\n        WindowType - otype\n        ScrubBrushType - otype\n        WatchType - otype\n        CurtainsType - otype\n        LettuceType - otype\n        TeddyBearType - otype\n        PlateType - otype\n        MirrorType - otype\n        CDType - otype\n        WateringCanType - otype\n        DishSpongeType - otype\n        TennisRacketType - otype\n        PillowType - otype\n        CreditCardType - otype\n        StoveKnobType - otype\n        DeskLampType - otype\n        PenType - otype\n        BlindsType - otype\n        LaundryHamperLidType - otype\n        PaperTowelRollType - otype\n        WineBottleType - otype\n        BasketBallType - otype\n        PotatoType - otype\n        PencilType - otype\n        RemoteControlType - otype\n        TissueBoxType - otype\n        ToiletPaperType - otype\n        PepperShakerType - otype\n        PosterType - otype\n        KettleType - otype\n        SoapBarType - otype\n        BaseballBatType - otype\n        PlungerType - otype\n        DeskType - rtype\n        BathtubBasinType - rtype\n        GarbageCanType - rtype\n        SofaType - rtype\n        CoffeeTableType - rtype\n        TowelHolderType - rtype\n        DresserType - rtype\n        HandTowelHolderType - rtype\n        LaundryHamperType - rtype\n        SafeType - rtype\n        MicrowaveType - rtype\n        OttomanType - rtype\n        StoveBurnerType - rtype\n        SideTableType - rtype\n        ToiletPaperHangerType - rtype\n        CounterTopType - rtype\n        DrawerType - rtype\n        BedType - rtype\n        CabinetType - rtype\n        FridgeType - rtype\n        ArmChairType - rtype\n        CartType - rtype\n        SinkBasinType - rtype\n        ToiletType - rtype\n        CoffeeMachineType - rtype\n        DiningTableType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nput a credit card on a desk.\n", "codex_output": [";; Simplified Goal: \npick_and_place_simple-CreditCard-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CreditCardType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-CreditCard-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CreditCardType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r)\n            )\n    )))", ";; Simplified Goal: \npick_and_place_simple-CreditCard-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CreditCardType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))", "pick_and_place_simple-CreditCard-None-Desk"]}, "train/pick_clean_then_place_in_recep-Spatula-None-CounterTop-30/trial_T20190909_050831_328612": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        Tomato - object\n        Footstool - object\n        KeyChain - object\n        ShowerGlass - object\n        Sink - object\n        Vase - object\n        TeddyBear - object\n        WateringCan - object\n        PepperShaker - object\n        Lettuce - object\n        Pencil - object\n        TissueBox - object\n        Newspaper - object\n        ShowerDoor - object\n        HousePlant - object\n        TennisRacket - object\n        HandTowel - object\n        Spoon - object\n        Television - object\n        DishSponge - object\n        Knife - object\n        CreditCard - object\n        LaundryHamperLid - object\n        Blinds - object\n        Painting - object\n        SaltShaker - object\n        DeskLamp - object\n        Pot - object\n        SprayBottle - object\n        Mug - object\n        Watch - object\n        Pan - object\n        Cup - object\n        Egg - object\n        Book - object\n        ToiletPaper - object\n        SoapBar - object\n        Pillow - object\n        SoapBottle - object\n        BasketBall - object\n        CD - object\n        Ladle - object\n        Towel - object\n        Fork - object\n        Chair - object\n        Box - object\n        BaseballBat - object\n        CellPhone - object\n        StoveKnob - object\n        PaperTowel - object\n        Window - object\n        Potato - object\n        WineBottle - object\n        ScrubBrush - object\n        Apple - object\n        Poster - object\n        ToiletPaperRoll - object\n        AlarmClock - object\n        Bread - object\n        Bathtub - object\n        Cloth - object\n        Statue - object\n        PaperTowelRoll - object\n        Laptop - object\n        Boots - object\n        Bowl - object\n        Toaster - object\n        Kettle - object\n        RemoteControl - object\n        Mirror - object\n        Candle - object\n        Curtains - object\n        Pen - object\n        ButterKnife - object\n        Spatula - object\n        LightSwitch - object\n        Plate - object\n        Glassbottle - object\n        Plunger - object\n        FloorLamp - object\n        TomatoType - otype\n        FootstoolType - otype\n        KeyChainType - otype\n        ShowerGlassType - otype\n        SinkType - otype\n        VaseType - otype\n        TeddyBearType - otype\n        WateringCanType - otype\n        PepperShakerType - otype\n        LettuceType - otype\n        PencilType - otype\n        TissueBoxType - otype\n        NewspaperType - otype\n        ShowerDoorType - otype\n        HousePlantType - otype\n        TennisRacketType - otype\n        HandTowelType - otype\n        SpoonType - otype\n        TelevisionType - otype\n        DishSpongeType - otype\n        KnifeType - otype\n        CreditCardType - otype\n        LaundryHamperLidType - otype\n        BlindsType - otype\n        PaintingType - otype\n        SaltShakerType - otype\n        DeskLampType - otype\n        PotType - otype\n        SprayBottleType - otype\n        MugType - otype\n        WatchType - otype\n        PanType - otype\n        CupType - otype\n        EggType - otype\n        BookType - otype\n        ToiletPaperType - otype\n        SoapBarType - otype\n        PillowType - otype\n        SoapBottleType - otype\n        BasketBallType - otype\n        CDType - otype\n        LadleType - otype\n        TowelType - otype\n        ForkType - otype\n        ChairType - otype\n        BoxType - otype\n        BaseballBatType - otype\n        CellPhoneType - otype\n        StoveKnobType - otype\n        PaperTowelType - otype\n        WindowType - otype\n        PotatoType - otype\n        WineBottleType - otype\n        ScrubBrushType - otype\n        AppleType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        AlarmClockType - otype\n        BreadType - otype\n        BathtubType - otype\n        ClothType - otype\n        StatueType - otype\n        PaperTowelRollType - otype\n        LaptopType - otype\n        BootsType - otype\n        BowlType - otype\n        ToasterType - otype\n        KettleType - otype\n        RemoteControlType - otype\n        MirrorType - otype\n        CandleType - otype\n        CurtainsType - otype\n        PenType - otype\n        ButterKnifeType - otype\n        SpatulaType - otype\n        LightSwitchType - otype\n        PlateType - otype\n        GlassbottleType - otype\n        PlungerType - otype\n        FloorLampType - otype\n        DrawerType - rtype\n        HandTowelHolderType - rtype\n        DeskType - rtype\n        SinkBasinType - rtype\n        CounterTopType - rtype\n        CoffeeTableType - rtype\n        BedType - rtype\n        SideTableType - rtype\n        BathtubBasinType - rtype\n        ArmChairType - rtype\n        DresserType - rtype\n        StoveBurnerType - rtype\n        DiningTableType - rtype\n        GarbageCanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        CabinetType - rtype\n        SofaType - rtype\n        ShelfType - rtype\n        ToiletType - rtype\n        LaundryHamperType - rtype\n        MicrowaveType - rtype\n        OttomanType - rtype\n        CartType - rtype\n        SafeType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nreturn a washed spatula to a kitchen counter.\n", "codex_output": [";; Simplified Goal: \npick_and_place_simple-Spatula-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))", "pick_and_place_simple-Spatula-Cabinet-CounterTop", ";; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop"]}, "train/pick_clean_then_place_in_recep-ButterKnife-None-Drawer-2/trial_T20190908_044255_995925": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        ToiletPaperRoll - object\n        Apple - object\n        SprayBottle - object\n        CellPhone - object\n        Potato - object\n        AlarmClock - object\n        Bread - object\n        WateringCan - object\n        Pillow - object\n        Painting - object\n        Cloth - object\n        SaltShaker - object\n        Laptop - object\n        ToiletPaper - object\n        PaperTowel - object\n        ScrubBrush - object\n        ShowerDoor - object\n        DishSponge - object\n        Footstool - object\n        Spatula - object\n        KeyChain - object\n        Watch - object\n        Boots - object\n        Cup - object\n        Plate - object\n        LaundryHamperLid - object\n        Curtains - object\n        Candle - object\n        DeskLamp - object\n        BasketBall - object\n        Pot - object\n        HousePlant - object\n        Mug - object\n        Toaster - object\n        Tomato - object\n        TissueBox - object\n        RemoteControl - object\n        LightSwitch - object\n        BaseballBat - object\n        Kettle - object\n        Pen - object\n        FloorLamp - object\n        Window - object\n        Sink - object\n        CreditCard - object\n        Blinds - object\n        Newspaper - object\n        HandTowel - object\n        ShowerGlass - object\n        Bowl - object\n        PaperTowelRoll - object\n        StoveKnob - object\n        WineBottle - object\n        SoapBottle - object\n        Mirror - object\n        Knife - object\n        Pan - object\n        Chair - object\n        SoapBar - object\n        Television - object\n        TennisRacket - object\n        Pencil - object\n        Spoon - object\n        Fork - object\n        ButterKnife - object\n        Box - object\n        TeddyBear - object\n        Lettuce - object\n        Vase - object\n        PepperShaker - object\n        Bathtub - object\n        Towel - object\n        Glassbottle - object\n        Ladle - object\n        Plunger - object\n        Statue - object\n        Book - object\n        Egg - object\n        CD - object\n        Poster - object\n        ToiletPaperRollType - otype\n        AppleType - otype\n        SprayBottleType - otype\n        CellPhoneType - otype\n        PotatoType - otype\n        AlarmClockType - otype\n        BreadType - otype\n        WateringCanType - otype\n        PillowType - otype\n        PaintingType - otype\n        ClothType - otype\n        SaltShakerType - otype\n        LaptopType - otype\n        ToiletPaperType - otype\n        PaperTowelType - otype\n        ScrubBrushType - otype\n        ShowerDoorType - otype\n        DishSpongeType - otype\n        FootstoolType - otype\n        SpatulaType - otype\n        KeyChainType - otype\n        WatchType - otype\n        BootsType - otype\n        CupType - otype\n        PlateType - otype\n        LaundryHamperLidType - otype\n        CurtainsType - otype\n        CandleType - otype\n        DeskLampType - otype\n        BasketBallType - otype\n        PotType - otype\n        HousePlantType - otype\n        MugType - otype\n        ToasterType - otype\n        TomatoType - otype\n        TissueBoxType - otype\n        RemoteControlType - otype\n        LightSwitchType - otype\n        BaseballBatType - otype\n        KettleType - otype\n        PenType - otype\n        FloorLampType - otype\n        WindowType - otype\n        SinkType - otype\n        CreditCardType - otype\n        BlindsType - otype\n        NewspaperType - otype\n        HandTowelType - otype\n        ShowerGlassType - otype\n        BowlType - otype\n        PaperTowelRollType - otype\n        StoveKnobType - otype\n        WineBottleType - otype\n        SoapBottleType - otype\n        MirrorType - otype\n        KnifeType - otype\n        PanType - otype\n        ChairType - otype\n        SoapBarType - otype\n        TelevisionType - otype\n        TennisRacketType - otype\n        PencilType - otype\n        SpoonType - otype\n        ForkType - otype\n        ButterKnifeType - otype\n        BoxType - otype\n        TeddyBearType - otype\n        LettuceType - otype\n        VaseType - otype\n        PepperShakerType - otype\n        BathtubType - otype\n        TowelType - otype\n        GlassbottleType - otype\n        LadleType - otype\n        PlungerType - otype\n        StatueType - otype\n        BookType - otype\n        EggType - otype\n        CDType - otype\n        PosterType - otype\n        OttomanType - rtype\n        BedType - rtype\n        DrawerType - rtype\n        TowelHolderType - rtype\n        CoffeeMachineType - rtype\n        DiningTableType - rtype\n        GarbageCanType - rtype\n        SafeType - rtype\n        ToiletPaperHangerType - rtype\n        ArmChairType - rtype\n        ShelfType - rtype\n        BathtubBasinType - rtype\n        HandTowelHolderType - rtype\n        ToiletType - rtype\n        StoveBurnerType - rtype\n        CounterTopType - rtype\n        CabinetType - rtype\n        LaundryHamperType - rtype\n        FridgeType - rtype\n        SideTableType - rtype\n        DresserType - rtype\n        SofaType - rtype\n        MicrowaveType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeTableType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nturning a lamp on.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-Watch-None-FloorLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput cooked potato on a counter.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nplace a chilled pan in the cupboard.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pan-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n\n\n\n;; Goal: \nplace a rinsed knife in a drawer.\n", "codex_output": [";; Simplified Goal: \npick_and_place_simple-Knife-None-Drawer\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r) \n                (isClean ?o) \n            )\n    )))\n\n<END>", ";; Simplified Goal: \npick_clean_then_place_in_recep-Knife-None-Drawer\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))", ";; Simplified Goal: \npick_clean_then_place_in_recep-Knife-None-Drawer\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))", ";; Simplified Goal: \npick_clean_then_place_in_recep-Knife-None-Drawer\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>"]}, "train/pick_clean_then_place_in_recep-Tomato-None-CounterTop-14/trial_T20190909_012732_375728": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain put_task)\n            (:predicates\n        (atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location) \n        (openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (inReceptacle ?o - object ?r - receptacle) \n        (isReceptacleObject ?o - object) \n        (inReceptacleObject ?innerObject - object ?outerObject - object) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n        (wasInReceptacle ?o - object ?r - receptacle)\n    )\n            (:types\n        agent location receptacle object rtype otype\n        agent1 - agent\n        DeskLamp - object\n        Sink - object\n        WateringCan - object\n        Knife - object\n        RemoteControl - object\n        Toaster - object\n        Pencil - object\n        Watch - object\n        Laptop - object\n        Painting - object\n        Mug - object\n        Tomato - object\n        Spoon - object\n        CD - object\n        ToiletPaper - object\n        StoveKnob - object\n        Bread - object\n        Bathtub - object\n        Pan - object\n        AlarmClock - object\n        Blinds - object\n        PaperTowelRoll - object\n        Pen - object\n        Television - object\n        ToiletPaperRoll - object\n        Potato - object\n        Box - object\n        Curtains - object\n        Ladle - object\n        SaltShaker - object\n        BasketBall - object\n        Window - object\n        KeyChain - object\n        TissueBox - object\n        Lettuce - object\n        Spatula - object\n        Book - object\n        SprayBottle - object\n        LaundryHamperLid - object\n        HousePlant - object\n        Pillow - object\n        Statue - object\n        Vase - object\n        CellPhone - object\n        WineBottle - object\n        SoapBar - object\n        BaseballBat - object\n        Fork - object\n        TeddyBear - object\n        ShowerDoor - object\n        ButterKnife - object\n        Glassbottle - object\n        Cloth - object\n        PepperShaker - object\n        SoapBottle - object\n        Cup - object\n        Towel - object\n        Newspaper - object\n        Egg - object\n        TennisRacket - object\n        DishSponge - object\n        CreditCard - object\n        Plate - object\n        Chair - object\n        Footstool - object\n        PaperTowel - object\n        LightSwitch - object\n        Bowl - object\n        Poster - object\n        Mirror - object\n        Plunger - object\n        FloorLamp - object\n        Boots - object\n        Pot - object\n        ScrubBrush - object\n        ShowerGlass - object\n        Apple - object\n        HandTowel - object\n        Kettle - object\n        Candle - object\n        DeskLampType - otype\n        SinkType - otype\n        WateringCanType - otype\n        KnifeType - otype\n        RemoteControlType - otype\n        ToasterType - otype\n        PencilType - otype\n        WatchType - otype\n        LaptopType - otype\n        PaintingType - otype\n        MugType - otype\n        TomatoType - otype\n        SpoonType - otype\n        CDType - otype\n        ToiletPaperType - otype\n        StoveKnobType - otype\n        BreadType - otype\n        BathtubType - otype\n        PanType - otype\n        AlarmClockType - otype\n        BlindsType - otype\n        PaperTowelRollType - otype\n        PenType - otype\n        TelevisionType - otype\n        ToiletPaperRollType - otype\n        PotatoType - otype\n        BoxType - otype\n        CurtainsType - otype\n        LadleType - otype\n        SaltShakerType - otype\n        BasketBallType - otype\n        WindowType - otype\n        KeyChainType - otype\n        TissueBoxType - otype\n        LettuceType - otype\n        SpatulaType - otype\n        BookType - otype\n        SprayBottleType - otype\n        LaundryHamperLidType - otype\n        HousePlantType - otype\n        PillowType - otype\n        StatueType - otype\n        VaseType - otype\n        CellPhoneType - otype\n        WineBottleType - otype\n        SoapBarType - otype\n        BaseballBatType - otype\n        ForkType - otype\n        TeddyBearType - otype\n        ShowerDoorType - otype\n        ButterKnifeType - otype\n        GlassbottleType - otype\n        ClothType - otype\n        PepperShakerType - otype\n        SoapBottleType - otype\n        CupType - otype\n        TowelType - otype\n        NewspaperType - otype\n        EggType - otype\n        TennisRacketType - otype\n        DishSpongeType - otype\n        CreditCardType - otype\n        PlateType - otype\n        ChairType - otype\n        FootstoolType - otype\n        PaperTowelType - otype\n        LightSwitchType - otype\n        BowlType - otype\n        PosterType - otype\n        MirrorType - otype\n        PlungerType - otype\n        FloorLampType - otype\n        BootsType - otype\n        PotType - otype\n        ScrubBrushType - otype\n        ShowerGlassType - otype\n        AppleType - otype\n        HandTowelType - otype\n        KettleType - otype\n        CandleType - otype\n        BedType - rtype\n        BathtubBasinType - rtype\n        ToiletType - rtype\n        SinkBasinType - rtype\n        DresserType - rtype\n        HandTowelHolderType - rtype\n        ArmChairType - rtype\n        MicrowaveType - rtype\n        ToiletPaperHangerType - rtype\n        CoffeeTableType - rtype\n        ShelfType - rtype\n        OttomanType - rtype\n        CounterTopType - rtype\n        LaundryHamperType - rtype\n        SafeType - rtype\n        FridgeType - rtype\n        CabinetType - rtype\n        DeskType - rtype\n        GarbageCanType - rtype\n        DrawerType - rtype\n        StoveBurnerType - rtype\n        SofaType - rtype\n        SideTableType - rtype\n        CoffeeMachineType - rtype\n        TowelHolderType - rtype\n        DiningTableType - rtype)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nput a cold tomato on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a piece of apple and place it on the kitchen table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated potato in the sink.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nto heat a slice of potato and place it on the white table by the lettuce.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a heated mug into a cupboard.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput a cleaned apple in the fridge.\n\n\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nget the knife from the counter then open and close the fridge door.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nput the book in the desk cabinet.\n\n\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nput a chilled piece of sliced apple in a silver bin.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nheat the white cup from table in the microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nheat the cup from refrigerator with microwave , put it on the shelf.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nmove the remote from the table to a chair.\n\n\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nuse the knife on the table by the stove to slice the cabbage on the white table.\n\n\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \ncool a slice of bread and place it in the trash can.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nput a microwaved egg in the garbage.\n\n\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nremove the tomato from the fridge and cut it up on the table.\n\n\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n;; Goal: \nplace a yellow knife and a cool slice of lettuce in the sink.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \nmove a pencil from the table to the counter.\n\n\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n;; Goal: \nto cool a slice of potato and place it on the table.\n\n\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n;; Goal: \npick up the tennis bat on the floor , turn on the lamp on the dresser.\n\n\n;; Simplified Goal: \nlook_at_obj_in_light-TennisRacket-None-DeskLamp\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TennisRacketType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n\n\n\n;; Goal: \nplace a clean tomato on the counter.\n", "codex_output": [";; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))", ";; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-CounterTop\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))", ";; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-CounterTop\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))", ";; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-Desk\n\n\n;; PDDL Goal: \n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))"]}}