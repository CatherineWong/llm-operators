{"train_3": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine potato from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))"]}, "train_4": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine sugar cane from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))\n\n<END>", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))"]}, "train_5": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine potato from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))"]}, "train_6": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine sugar cane from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))"]}, "train_7": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine wool from the map.\n", "codex_output": ["PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))"]}, "train_8": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine sugar cane from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))"]}, "train_9": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine gold ore from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))\n\n<END>", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))"]}, "train_10": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine beetroot from the map.\n", "codex_output": ["PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal:\n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))"]}, "train_11": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine gold ore from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))"]}, "train_12": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine feather from the map.\n", "codex_output": [";; PDDL Goal:\n\n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))\n\n<END>", "PDDL Goal:\n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))"]}, "train_13": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine coal from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))"]}, "train_14": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine beetroot from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))\n\n<END>"]}, "train_15": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine gold ore from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))"]}, "train_16": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine iron ore from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))"]}, "train_17": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine iron ore from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))"]}, "train_18": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine iron ore from the map.\n", "codex_output": ["PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))"]}, "train_19": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine gold ore from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))"]}, "train_20": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine beetroot from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))"]}, "train_21": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine gold ore from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))"]}, "train_22": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine wood from the map.\n", "codex_output": ["PDDL Goal: \n```(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))```\n \n<END>", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))"]}, "train_23": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine wool from the map.\n", "codex_output": ["PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", ";; PDDL Goal:\n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))"]}, "train_24": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine cobblestone from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Cobblestone)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Cobblestone)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Cobblestone)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Cobblestone)\n ))"]}, "train_25": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine feather from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))\n\n<END>", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))\n\n<END>", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))\n\n<END>", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))\n\n<END>"]}, "train_26": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine feather from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))", ";; PDDL Goal:\n(:goal (and \n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))"]}, "train_27": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine coal from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))"]}, "train_28": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine feather from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))\n<END>", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))\n\n<END>"]}, "train_29": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine sugar cane from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))\n\n<END>"]}, "train_30": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine coal from the map.\n", "codex_output": ["PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))"]}, "train_31": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine coal from the map.\n", "codex_output": [";; PDDL Goal: \n  (:goal (and\n     (inventory-holding i3 o17)\n     (object-of-type o17 Coal)\n   ))\n\n<END>", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))"]}, "train_32": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine wood from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i1 o1)\n   (object-of-type o1 Wood)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))"]}, "train_33": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine wool from the map.\n", "codex_output": ["PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))"]}, "train_34": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine potato from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))"]}, "train_35": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine iron ore from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i1 o4)\n   (object-of-type o4 IronOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))"]}, "train_36": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine gold ore from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))\n\n<END>", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))"]}, "train_37": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine wool from the map.\n", "codex_output": ["PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))"]}, "train_38": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine feather from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))\n\n<END>", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))"]}, "train_39": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine sugar cane from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))\n\n<END>"]}, "train_40": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine coal from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))\n\n<END>"]}, "train_41": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine wool from the map.\n", "codex_output": ["PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))"]}, "train_42": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine iron ore from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>"]}, "train_43": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine coal from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))\n\n<END>", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))"]}, "train_44": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine gold ore from the map.\n", "codex_output": ["PDDL Goal: \n\n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))"]}, "train_45": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine wool from the map.\n", "codex_output": ["PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))"]}, "train_46": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine iron ore from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))"]}, "train_47": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine coal from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))"]}, "train_48": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine potato from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal:\n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))"]}, "train_49": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine sugar cane from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))\n\n<END>"]}, "train_50": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine wool from the map.\n", "codex_output": ["(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n\n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))"]}, "train_51": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine feather from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))\n\n<END>"]}, "train_52": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine wool from the map.\n", "codex_output": ["PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))"]}, "train_53": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine beetroot from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))"]}, "train_54": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine wool from the map.\n", "codex_output": ["PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal:\n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))"]}, "train_55": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine gold ore from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))"]}, "train_56": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine wool from the map.\n", "codex_output": ["PDDL Goal:\n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n\n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))"]}, "train_57": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine feather from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))\n\n<END>", ";; PDDL Goal:\n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))\n\n<END>"]}, "train_58": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine potato from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))\n\n<END>", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))"]}, "train_59": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine potato from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))"]}, "train_60": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine beetroot from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))"]}, "train_61": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine potato from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))"]}, "train_62": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine coal from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))"]}, "train_63": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine wool from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool))\n )", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))"]}, "train_64": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine wood from the map.\n", "codex_output": ["PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))"]}, "train_65": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine cobblestone from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Cobblestone)\n ))\n\n<END>", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Cobblestone)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Cobblestone)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Cobblestone)\n ))"]}, "train_66": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine iron ore from the map.\n", "codex_output": ["PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))"]}, "train_67": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine coal from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))"]}, "train_68": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine iron ore from the map.\n", "codex_output": ["PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))"]}, "train_69": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine potato from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))\n\n<END>"]}, "train_70": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine sugar cane from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))"]}, "train_71": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine feather from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))\n\n<END>", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))"]}, "train_72": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine potato from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))"]}, "train_73": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine wood from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i1 o1)\n   (object-of-type o1 Wood)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))"]}, "train_74": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine feather from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))\n\n<END>", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))\n\n<END>", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))"]}, "train_75": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine feather from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))\n\n<END>"]}, "train_76": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine beetroot from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal:\n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))"]}, "train_77": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine coal from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))"]}, "train_78": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine potato from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal:\n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))"]}, "train_79": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine gold ore from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))"]}, "train_80": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine potato from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))"]}, "train_81": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine iron ore from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))"]}, "train_82": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine wood from the map.\n", "codex_output": ["PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))"]}, "train_83": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine iron ore from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))"]}, "train_84": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine coal from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Coal)\n ))"]}, "train_85": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine wool from the map.\n", "codex_output": ["PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))", "PDDL Goal: \n\n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))"]}, "train_86": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine iron ore from the map.\n", "codex_output": ["PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))"]}, "train_87": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine feather from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))\n\n<END>", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))\n\n<END>", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))\n\n<END>", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))"]}, "train_88": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine wood from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))"]}, "train_89": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine beetroot from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))\n\n<END>", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))"]}, "train_90": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine iron ore from the map.\n", "codex_output": ["PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))"]}, "train_91": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine feather from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Feather)\n ))"]}, "train_92": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine beetroot from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))\n\n<END>", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))\n\n<END>"]}, "train_93": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine beetroot from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal:\n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Beetroot)\n ))"]}, "train_94": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine potato from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))"]}, "train_95": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine gold ore from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))"]}, "train_96": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine sugar cane from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", ";; PDDL Goal:\n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))"]}, "train_97": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine wood from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))"]}, "train_98": {"codex_prompt": "\n;; Natural language goals and PDDL goals\n\n;; Reminder: use ONLY predicates and object types listed in the above PDDL domain. If an English goal contains an object not in the domain, use the most similar available object. All problems are solvable. Propose just ONE goal.\n\n\n<START DOMAIN>\n\n        (define (domain crafting-world-v20230404)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)     \n   (tile-down ?t1 - tile ?t2 - tile)   \n   (tile-left ?t1 - tile ?t2 - tile)   \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n<END DOMAIN>\n\n;; Goal: \nMine iron ore from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n;; Goal: \nMine wood from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wood)\n ))\n\n<END>\n;; Goal: \nMine wool from the map.\n\n\n\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n\n\n;; Goal: \nMine potato from the map.\n", "codex_output": [";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", "PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))", ";; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))"]}}