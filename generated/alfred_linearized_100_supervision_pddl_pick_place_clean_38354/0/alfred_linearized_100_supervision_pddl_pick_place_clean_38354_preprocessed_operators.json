{"CutObject": "(:action CutObject\n        :parameters (?l - location ?a - agent ?o - object ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r CounterTopType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)", "CoolObject": "(:action CoolObject\n        :parameters (?l - location ?a - agent ?o - object ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(inReceptacle ?o ?r)\n\t\t(isHot ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)", "PullObject": "(:action PullObject\n        :parameters (?object - object ?location2 - location ?a - agent ?location1 - location ?r - receptacle)\n\n        :precondition (and \n\t\t(objectType ?object PaperTowelType)\n\t\t(atLocation ?a ?location1)\n\t\t(objectAtLocation ?object ?location2)\n\t\t(inReceptacle ?object ?r)\n\t\t)\n        :effect (and \n\t\t(objectAtLocation ?object ?location1)\n\t\t(not (inReceptacle ?object ?r))\n\t\t(not (objectAtLocation ?object ?location2))\n\t\t)\n)", "HeatObject": "(:action HeatObject\n        :parameters (?o - object ?a - agent)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(cleanable ?o)\n\t\t(coolable ?o)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (isCool ?o))\n\t\t)\n)", "WaitForDelay": "(:action HeatObject\n        :parameters (?o - object ?a - agent)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(cleanable ?o)\n\t\t(coolable ?o)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (isCool ?o))\n\t\t)\n)", "DropObject": "(:action DropObject\n        :parameters (?l - location ?o - object ?a - agent)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(not (holds ?a ?o))\n\t\t)\n)", "CookObject": "(:action CookObject\n        :parameters (?l - location ?a - agent ?o - object ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r StoveBurnerType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t)\n)", "ChillObject": "(:action ChillObject\n        :parameters (?l - location ?a - agent ?o - object ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)", "ViewObject": "(:action ChillObject\n        :parameters (?l - location ?a - agent ?o - object ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)", "ExamineObject": "(:action ExamineObject\n        :parameters (?lStart - location ?o - object ?a - agent ?o - receptacle)\n\n        :precondition (and \n\t\t(atLocation ?a ?lStart)\n\t\t(objectAtLocation ?o ?lStart)\n\t\t)\n        :effect (and \n\t\t(receptacleType ?o CartType)\n\t\t)\n)", "PlaceObject": "(:action PlaceObject\n        :parameters (?l - location ?lOn - location ?a - agent ?oOn - receptacle ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(not (holds ?a ?o))\n\t\t(receptacleAtLocation ?oOn ?lOn)\n\t\t(not (objectAtLocation ?o ?l))\n\t\t(objectAtLocation ?o ?lOn)\n\t\t)\n)", "SwitchObjects": "(:action SwitchObjects\n        :parameters (?l - location ?o - object ?a - agent)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(objectAtLocation ?o ?l)\n\t\t(objectType ?o LightSwitchType)\n\t\t)\n        :effect (and \n\t\t(isOn ?o)\n\t\t(isClean ?o)\n\t\t)\n)", "OpenContainer": "(:action OpenContainer\n        :parameters (?l - location ?r - object ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?r)\n\t\t)\n        :effect (and \n\t\t(opened ?r)\n\t\t)\n)", "CloseContainer": "(:action CloseContainer\n        :parameters (?l - location ?o - object ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t)\n        :effect (and \n\t\t(objectAtLocation ?o ?l)\n\t\t(not (inReceptacle ?o ?r))\n\t\t)\n)", "ShakeObject": "(:action CloseContainer\n        :parameters (?l - location ?o - object ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t)\n        :effect (and \n\t\t(objectAtLocation ?o ?l)\n\t\t(not (inReceptacle ?o ?r))\n\t\t)\n)", "Cut": "(:action CloseContainer\n        :parameters (?l - location ?o - object ?a - agent ?r - receptacle)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t)\n        :effect (and \n\t\t(objectAtLocation ?o ?l)\n\t\t(not (inReceptacle ?o ?r))\n\t\t)\n)", "RemoveObject": "(:action RemoveObject\n        :parameters (?o - object ?rEnd - receptacle ?a - agent ?rStart - receptacle)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rStart)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rEnd)\n\t\t(not (inReceptacle ?o ?rStart))\n\t\t)\n)", "GET": "(:action GET\n        :parameters (?lStart - location ?o - object ?lEnd - location ?r - receptacle)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?r ?lStart)\n\t\t(inReceptacle ?o ?r)\n\t\t(objectAtLocation ?o ?lEnd)\n\t\t)\n        :effect (and \n\t\t(not (inReceptacle ?o ?r))\n\t\t)\n)", "PUT": "(:action PUT\n        :parameters (?l - location ?c - receptacle ?o - object)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)", "CLEAN": "(:action PUT\n        :parameters (?l - location ?c - receptacle ?o - object)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)", "PutContents": "(:action PutContents\n        :parameters (?l - location ?targetObject - object ?a - agent ?o - object ?targetObject - receptacle ?o - receptacle)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(holds ?a ?o)\n\t\t(isReceptacleObject ?targetObject)\n\t\t(receptacleType ?o PlateType)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?targetObject)\n\t\t)\n)", "Cook": "(:action Cook\n        :parameters (?ro - receptacle ?l - location ?rn - receptacle ?a - agent ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(receptacleType ?rn StoveBurnerType)\n\t\t(receptacleAtLocation ?rn ?l)\n\t\t(inReceptacle ?o ?rn)\n\t\t(objectType ?o EggType)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?ro)\n\t\t(receptacleType ?ro PanType)\n\t\t(isHot ?o)\n\t\t(toggleable ?o)\n\t\t(isOn ?o)\n\t\t(isToggled ?o)\n\t\t)\n)", "pickup-food": "(:action pickup-food\n        :parameters (?l - location ?rEnd - receptacle ?a - agent ?rStart - receptacle ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?rStart ?l)\n\t\t(inReceptacle ?o ?rStart)\n\t\t(holds ?a none)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?rEnd)\n\t\t(holds ?a ?o)\n\t\t(not (inReceptacle ?o ?rStart))\n\t\t)\n)", "TurnOnObject": "(:action TurnOnObject\n        :parameters (?o - object ?l - location ?a - agent)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(objectAtLocation ?o ?l)\n\t\t)\n        :effect (and \n\t\t(isOn ?o)\n\t\t)\n)", "GetObject1": "(:action GetObject1\n        :parameters (?l - location ?a - agent ?o - object ?r - receptacle)\n\n        :precondition (and \n\t\t(inReceptacle ?o ?r)\n\t\t(openable ?r)\n\t\t(objectType ?o TomatoType)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holdsAny ?a)\n\t\t(atLocation ?a ?l)\n\t\t)\n        :effect (and \n\t\t(opened ?r)\n\t\t(holds ?a ?o)\n\t\t(not (inReceptacle ?o ?r))\n\t\t)\n)", "findItem": "(:action GetObject1\n        :parameters (?l - location ?a - agent ?o - object ?r - receptacle)\n\n        :precondition (and \n\t\t(inReceptacle ?o ?r)\n\t\t(openable ?r)\n\t\t(objectType ?o TomatoType)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holdsAny ?a)\n\t\t(atLocation ?a ?l)\n\t\t)\n        :effect (and \n\t\t(opened ?r)\n\t\t(holds ?a ?o)\n\t\t(not (inReceptacle ?o ?r))\n\t\t)\n)", "and": "(:action GetObject1\n        :parameters (?l - location ?a - agent ?o - object ?r - receptacle)\n\n        :precondition (and \n\t\t(inReceptacle ?o ?r)\n\t\t(openable ?r)\n\t\t(objectType ?o TomatoType)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holdsAny ?a)\n\t\t(atLocation ?a ?l)\n\t\t)\n        :effect (and \n\t\t(opened ?r)\n\t\t(holds ?a ?o)\n\t\t(not (inReceptacle ?o ?r))\n\t\t)\n)"}