Adding ALFRED path: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/alfred
Adding jacinle path: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/../jacinle
Adding concepts path: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/../concepts
[Counter] Loaded counter tree from pickle.
[Counter] Stored Goals: 718
=========EXPERIMENT PARAMETERS=================
Timestamp: 2023-08-23 01:09:06.492388
Command to replicate: python main.py --experiment_name alfred_cot_250_full_2_872023 --dataset_name alfred_cot_250 --dataset_fraction 1.0 --dataset_pddl_directory data/dataset/alfred_linearized_pddl --pddl_domain_name alfred_linearized --train_iterations 1 --supervision_name supervision --goal_supervision_fraction 0.1 --initial_goal_supervision_prefix ALL --plan_supervision_fraction 0.1 --initial_plans_prefix None --external_plan_supervision data/dataset/alfred-grate-break-fill-restart-supervision.json --external_operator_supervision data/dataset/alfred-grate-break-fill-restart-operator-supervision_ --external_operator_sample_with_prompt  --external_operator_names GrateObject BakeObject FillObject RestartObject --initial_pddl_operators GotoLocation PickupObjectInReceptacle PickupObjectNotInReceptacle PutObjectInReceptacle --initial_pddl_predicates  --operator_propose_minimum_usage 2 --goal_propose_include_codex_types  --planner task_planner_fd --output_directory generated --verbose  --debug_export_failed_pddl None --debug_no_propose_plans_operators_goals  --debug_mock_propose_goals  --debug_mock_propose_plans  --debug_mock_propose_operators  --debug_skip_task_plans  --debug_mock_task_plans  --debug_mock_motion_plans  --debug_skip_motion_plans  --debug_start_problem_idx 0 --debug_skip_problems None --debug_ground_truth_operators  --debug_ground_truth_goals  --debug_stop_after_first_proposal  --codex_goal_temperature 1.0 --codex_operator_temperature 1.0 --n_goal_samples 4 --n_plan_samples 5 --n_operator_samples 3 --n_attempts_to_plan 1 --maximum_operator_arity 4 --motionplan_search_type counter --random_seed 2 --checkpoint_every_n_problem_plans 2 --minimum_n_operators 10 --operator_pseudocounts 0.1 --operator_acceptance_threshold 0.1 
=========EXPERIMENT PARAMETERS=================

load_alfred_solvable_planning_domain_problems: loaded alfred from data/dataset/alfred-cot-250-NLgoals-operators.json
train : 245 / original 245 problems
valid_seen : 163 / original 163 problems
valid_unseen : 170 / original 170 problems
Loaded initial dataset: alfred_cot_250
Initial train problems: 245
Sampling problems for goal supervision: 
	 look_at_obj_in_light : 3
	 pick_and_place_simple : 3
	 pick_heat_then_place_in_recep : 3
	 pick_cool_then_place_in_recep_slice : 3
	 pick_clean_then_place_in_recep : 3
	 pick_heat_then_place_in_recep_slice : 3
	 pick_and_place_simple_slice : 2
	 pick_cool_then_place_in_recep : 3
Total goal supervision problems: 23

load_pddl_file_with_operators: loaded alfred_linearized from data/domains/alfred_linearized.pddl

Ground truth operators: 
GotoLocation
OpenObject
CloseObject
PickupObjectInReceptacle
PickupObjectNotInReceptacle
PutObjectInReceptacle
PutObjectInReceptacleObject
CleanObject
HeatObject
CoolObject
ToggleObject
SliceObject

Initializing with operators: 
GotoLocation
PickupObjectInReceptacle
PickupObjectNotInReceptacle
PutObjectInReceptacle
load_pddl_supervision from the following domain files:
data/domains/supervision_domains/movie_domain.pddl
data/domains/supervision_domains/depot_domain.pddl
data/domains/supervision_domains/travel_domain.pddl
mock_propose_goals_for_problems:: from generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_codex_goals_.json
mock_propose_goals_for_problems:: loaded a total of 222 goals for 222 unsolved problems.
preprocess_goals: preprocessing 222 unsolved problems.
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-RemoteControl-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RemoteControlType)
                (holds ?a ?o)
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o RemoteControlType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-RemoteControl-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RemoteControlType)
                (holds ?a ?o)
            )
    ))))))


<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o RemoteControlType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-RemoteControl-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RemoteControlType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o RemoteControlType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-RemoteControl-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RemoteControlType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o RemoteControlType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-RemoteControl-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RemoteControlType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o RemoteControlType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-RemoteControl-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RemoteControlType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o RemoteControlType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-RemoteControl-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RemoteControlType)
                (holds ?a ?o)
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o RemoteControlType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-RemoteControl-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RemoteControlType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o RemoteControlType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
turn_on-DeskLamp-holding-Bowl


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BowlType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o BowlType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
turn_on_light_then_hold_bowl-DeskLamp-BowlType-Desk


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o BowlType) 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (holds ?a ?o)
            )
    ))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?o BowlType)
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(holds ?a ?o))))))
)
====
Trying to process...
Simplified Goal: 
look_at_obj_in_light-Bowl-None-DeskLamp

PDDL Goal: 
(:goal
    (exists (?a - agent)
    (exists (?r - receptacle)
    (exists (?o - object)
    (exists (?ot - object)
    (exists (?l - location)
        (and 
            (objectType ?ot DeskLampType)
            (toggleable ?ot)
            (isToggled ?ot) 
            (objectAtLocation ?ot ?l)
            (atLocation ?a ?l)
            (objectType ?o BowlType)
            (holds ?a ?o)
        )
))))))

Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o BowlType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
hold_then_toggle-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (holds ?a Bowl)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(holds ?a Bowl)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_carry_then_toggle-Laptop-CD-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot LaptopType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CDType)
                (holds ?a ?o)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot LaptopType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o CDType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_then_hold-CD-None+toggle-LightSwitch


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?o1 - object)
        (exists (?o2 - object)
            (and 
                (objectType ?o1 CDType) 
                (objectType ?o2 LightSwitchType)
                (toggleable ?o2)
                (isToggled ?o2)
                (holds ?a ?o1) 
            )
    ))))
Preprocessed goal: (:goal
	(exists (?o2 - object)
(exists (?o1 - object)
(exists (?a - agent)
(and 
		(objectType ?o1 CDType)
		(objectType ?o2 LightSwitchType)
		(toggleable ?o2)
		(isToggled ?o2)
		(holds ?a ?o1)))))
)
====
Trying to process...
;; Simplified Goal: 
carry_obj_with_actionAndObj-CD-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (not (isToggled ?ot)) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CDType)
                (holds ?a ?o)
            )
    )))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(not (isToggled ?ot))
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o CDType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
carry_obj_and_toggle-Lamp-FloorLamp-CD


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CDType)
                (holds ?a ?o)
            )
    )))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o CDType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Box-Table-Couch
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
;; Simplified Goal: 
pick_and_place_simple-Box-Table-Couch
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Box-None-Sofa


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BoxType)
		(receptacleType ?r SofaType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Box-None-Sofa


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BoxType)
		(receptacleType ?r SofaType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Box-None-Couch


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r CouchType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BoxType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-RemoteControl-None-ArmChair


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o RemoteControlType) 
                (receptacleType ?r ArmChairType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o RemoteControlType)
		(receptacleType ?r ArmChairType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-RemoteControl-None-ArmChair


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o RemoteControlType) 
                (receptacleType ?r ArmChairType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o RemoteControlType)
		(receptacleType ?r ArmChairType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-RemoteControl-None-ArmChair


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o RemoteControlType) 
                (receptacleType ?r ArmChairType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o RemoteControlType)
		(receptacleType ?r ArmChairType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-RemoteControl-None-Chair


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o RemoteControlType) 
                (receptacleType ?r ChairType)
                (inReceptacle ?o ?r) 
            )
    )))
<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o RemoteControlType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Vase-None-Safe


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o VaseType) 
                (receptacleType ?r SafeType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o VaseType)
		(receptacleType ?r SafeType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Vase-None-Safe


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o VaseType) 
                (receptacleType ?r SafeType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o VaseType)
		(receptacleType ?r SafeType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Vase-None-Safe


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o VaseType) 
                (receptacleType ?r SafeType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o VaseType)
		(receptacleType ?r SafeType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Vase-None-Safe


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o VaseType) 
                (receptacleType ?r SafeType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o VaseType)
		(receptacleType ?r SafeType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal:
pick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan

;; PDDL Goal:
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
;; Simplified Goal: 
pick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Lettuce-None-SideTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r SideTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Lettuce-None-SideTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r SideTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
pick_clean_then_place_in_recep-Lettuce-None-SideTable
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
pick_clean_then_place_in_recep-Lettuce-None-SideTable
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Lettuce-None-SideTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r SideTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-PotatoSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Knife-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
            (and 
                (objectType ?o KnifeType)
                (objectType ?ot PotatoType)
                (receptacleType ?r FridgeType)
                (holdsAny ?o)
                (inReceptacle ?ot ?r)
                (sliceable ?ot)
                (isSliced ?ot) 
                (inReceptacle ?ot ?r)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(and 
		(objectType ?o KnifeType)
		(objectType ?ot PotatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?ot ?r)
		(sliceable ?ot)
		(isSliced ?ot)
		(inReceptacle ?ot ?r)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cut_then_place_in_recep-Knife-Potato-Fridge-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r1 - receptacle)
        (exists (?r2 - receptacle)
        (exists (?o1 - object)
        (exists (?o2 - object)
        (exists (?o3 - object)
            (and 
                (objectType ?o1 KnifeType) 
                (objectType ?o2 PotatoType)
                (objectType ?o3 FridgeType)
                (receptacleType ?r1 FridgeType)
                (receptacleType ?r2 CounterTopType)
                (inReceptacle ?o1 ?r2) 
                (inReceptacle ?o2 ?r1)
                (coolable ?o2)
                (isCool ?o2)
                (sliceable ?o2)
                (isSliced ?o2)  
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o2 - object)
(exists (?o1 - object)
(and 
		(objectType ?o1 KnifeType)
		(objectType ?o2 PotatoType)
		(receptacleType ?r1 FridgeType)
		(receptacleType ?r2 CounterTopType)
		(inReceptacle ?o1 ?r2)
		(inReceptacle ?o2 ?r1)
		(coolable ?o2)
		(isCool ?o2)
		(sliceable ?o2)
		(isSliced ?o2))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_complex-ButterKnife-PotatoSliced-Fridge-CoolingShelf-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?ra - receptacle)
        (exists (?ia - object)
        (exists (?rb - receptacle)
        (exists (?ib - object)
            (and 
                (objectType ?ia ButterKnifeType) 
                (objectType ?ib PotatoType)
                (receptacleType ?ra FridgeType)
                (receptacleType ?rb CounterTopType)
                (inReceptacle ?ia ?ra)
                (inReceptacle ?ib ?rb)
                (sliceable ?ib)
                (isSliced ?ib)  
                (coolable ?ib)
                (isCool ?ib) 
            )
    )))))

<END>
Preprocessed goal: (:goal
	(exists (?rb - receptacle)
(exists (?ra - receptacle)
(exists (?ib - object)
(exists (?ia - object)
(and 
		(objectType ?ia ButterKnifeType)
		(objectType ?ib PotatoType)
		(receptacleType ?ra FridgeType)
		(receptacleType ?rb CounterTopType)
		(inReceptacle ?ia ?ra)
		(inReceptacle ?ib ?rb)
		(sliceable ?ib)
		(isSliced ?ib)
		(coolable ?ib)
		(isCool ?ib))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-AppleSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-AppleSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-AppleSliced-None-TrashCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-AppleSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Fruit-None-CoffeeTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o FruitType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Fruit-None-CoffeeTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r) 
                (heatable ?o)
                (isHot ?o) 
                (objectType ?o FruitType)
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Fruit-None-CoffeeTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
        ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
pick_heat_then_place_in_recep-Fruit-None-Table
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
pick_heat_then_place_in_recep-Fruit-None-Table
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Book-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot CabinetType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BookType)
                (holds ?a ?o)
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o BookType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Book-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot CabinetType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BookType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o BookType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Book-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot CabinetType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BookType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o BookType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Book-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot CabinetType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BookType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o BookType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Cup-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CupType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
pick_heat_then_place_in_recep-Cup-None-Shelf
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
pick_heat_then_place_in_recep-Cup-None-Shelf
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Cup-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CupType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Fridge



;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Sink


PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-SoapBar-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SoapBarType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-SoapBar-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SoapBarType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-SoapBar-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SoapBarType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-SoapBar-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SoapBarType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-TennisRacket-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o TennisRacketType)
                (holds ?a ?o)
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o TennisRacketType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_toggle-None-TennisRacket-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?o TennisRacketType)
                (atLocation ?a ?l)
                (objectAtLocation ?o ?l)
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot)
         )
    ))))))
    
<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?o TennisRacketType)
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TennisRacket-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o TennisRacketType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o TennisRacketType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TennisRacket-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o TennisRacketType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o TennisRacketType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-SprayBottle-None-Toilet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SprayBottleType) 
                (receptacleType ?r ToiletType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SprayBottleType)
		(receptacleType ?r ToiletType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-SprayBottle-None-Toilet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SprayBottleType) 
                (receptacleType ?r ToiletType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SprayBottleType)
		(receptacleType ?r ToiletType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-SprayBottle-None-Toilet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SprayBottleType) 
                (receptacleType ?r ToiletType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SprayBottleType)
		(receptacleType ?r ToiletType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-SprayBottle-None-Toilet
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
;; Simplified Goal: 
pick_and_place_simple-SprayBottle-None-Toilet
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_and_place_in_recep-Apple-None-Microwave
pick_and_slice-AppleSliced-None-Apple

;; PDDL Goal: 
(:goal
    (and 
        (exists (?r1 - receptacle)
            (receptacleType ?r1 MicrowaveType)
            (inReceptacle Apple ?r1))
        (exists (?o - object)
            (objectType ?o AppleType)
            (inReceptacle AppleSliced ?r1)
            (sliceable ?o)
            (isSliced ?o)
            (isSliced ?o)
            (isSliced ?o))
    )
)
Preprocessed goal: (:goal
	(and 
		)
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Apple-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-AppleSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
                (= (countSlices ?o) 3)
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
Simplified Goal: 
pick_and_place_simple-AppleSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
I'm sorry, but I couldn't understand your request. Can you please rephrase or provide more context?
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
I'm sorry, but I couldn't understand your request. Can you please rephrase or provide more context?
Preprocessed goal: 
====
Trying to process...
Sorry, but I'm not able to generate the PDDL goal for that statement. Could you please provide more information or rephrase the goal?
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
Sorry, but I'm not able to generate the PDDL goal for that statement. Could you please provide more information or rephrase the goal?
Preprocessed goal: 
====
Trying to process...
I'm sorry, but I couldn't understand the goal you're trying to express. Could you please provide more information or clarify your request?
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
I'm sorry, but I couldn't understand the goal you're trying to express. Could you please provide more information or clarify your request?
Preprocessed goal: 
====
Trying to process...
I'm sorry, but I couldn't understand the goal you provided. Could you please rephrase your request?
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
I'm sorry, but I couldn't understand the goal you provided. Could you please rephrase your request?
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Bread-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Bread-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
pick_cool_then_place_in_recep-Bread-None-Fridge
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
pick_cool_then_place_in_recep-Bread-None-Fridge
Preprocessed goal: 
====
Trying to process...
; Simplified Goal: 
pick_cool_then_place_in_recep-Bread-None-Fridge

; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Mug-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Mug-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Mug-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Mug-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-BreadSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-AppleSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-AppleSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-AppleSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-AppleSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_obj-Knife


;; PDDL Goal: 
(:goal
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?o - object)
(and 
		(objectType ?o KnifeType)))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Knife-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?l - location)
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (atLocation ?o ?l) 
                (objectType ?o KnifeType)
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - agent)
(exists (?l - location)
(and 
		(atLocation ?o ?l)
		(receptacleType ?r CounterTopType)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Knife-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o KnifeType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_obj-Knife
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
;; Simplified Goal: 
pick_obj-Knife
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Bowl-None-Shelf

;; PDDL Goal: 
(:goal
        (exists (?r1 - receptacle)
        (exists (?r2 - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r1 MicrowaveType)
                (receptacleType ?r2 ShelfType)
                (inReceptacle ?o ?r1)
                (inReceptacle ?o ?r2) 
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r1 MicrowaveType)
		(receptacleType ?r2 ShelfType)
		(inReceptacle ?o ?r1)
		(inReceptacle ?o ?r2)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Bowl-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r1 - receptacle)
        (exists (?r2 - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r1 MicrowaveType)
                (receptacleType ?r2 ShelfType)
                (inReceptacle ?o ?r1)
                (inReceptacle ?o ?r2)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r1 MicrowaveType)
		(receptacleType ?r2 ShelfType)
		(inReceptacle ?o ?r1)
		(inReceptacle ?o ?r2)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Bowl-None-Shelf


;; PDDL Goal: 
(:goal
    (exists (?r1 - receptacle) 
            (exists (?r2 - receptacle)
        (exists (?o - object)
            (and
                (objectType ?o BowlType)
                (receptacleType ?r1 MicrowaveType)
                (receptacleType ?r2 ShelfType)
                (inReceptacle ?o ?r1)
                (atLocation ?r2 ?l)
            )
        )
    )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r1 MicrowaveType)
		(receptacleType ?r2 ShelfType)
		(inReceptacle ?o ?r1)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Bowl-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_then_place_in_recep-TomatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Tomato-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_then_slice_and_place_in_recep-TomatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?x - location)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (atLocation ?o ?x)
                (objectType ?x CounterTopType)
                (atLocation ?o ?x)
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o) 
                (receptacleAtLocation ?r ?x)
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?x - location)
(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o)
		(receptacleAtLocation ?r ?x)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Egg-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Egg-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Egg-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Egg-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-None


;; PDDL Goal: 
(:goal
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (sliceable ?o) 
                (isSliced ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(sliceable ?o)
		(isSliced ?o)))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_hold_then_slice-Tomato-ButterKnife


;; PDDL Goal: 
(:goal
        (exists (?o1 - object)
        (exists (?o2 - object)
            (and 
                (objectType ?o1 TomatoType) 
                (objectType ?o2 ButterKnifeType)
                (holds ?a ?o2)
                (sliceable ?o1)
                (isSliced ?o1) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?o2 - object)
(exists (?o1 - object)
(exists (?a - agent)
(and 
		(objectType ?o1 TomatoType)
		(objectType ?o2 ButterKnifeType)
		(holds ?a ?o2)
		(sliceable ?o1)
		(isSliced ?o1)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-None

;; PDDL Goal: 
(:goal
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (sliceable ?o)
                (isSliced ?o) 
                (holds ?a ButterKnife)
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?o - object)
(exists (?a - agent)
(and 
		(objectType ?o TomatoType)
		(sliceable ?o)
		(isSliced ?o)
		(holds ?a ButterKnife))))
)
====
Trying to process...
;; Simplified Goal: 
pick_with_obj_then_slice_off_top-Tomato-Spoon


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o)  
                (holds ?a Spoon)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(exists (?a - agent)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o)
		(holds ?a Spoon)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Statue-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o StatueType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o StatueType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Statue-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o StatueType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o StatueType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Statue-None-FloorLamp
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
;; Simplified Goal: 
look_at_obj_in_light-Statue-None-FloorLamp
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Statue-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o StatueType)
                (holds ?a ?o)
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o StatueType)
		(holds ?a ?o))))))
)
====
Trying to process...
Simplified Goal: 
pick_and_place_simple-Box-None-DiningTable


PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BoxType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
Simplified Goal: 
pick_and_place_simple-Box-None-DiningTable

PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BoxType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Box-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BoxType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Box-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BoxType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Cup-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CupType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Cup-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CupType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Cup-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CupType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Cup-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CupType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Egg-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Egg-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Egg-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Egg-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pot-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pot-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pot-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pot-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_then_place_in_recep-AppleSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-AppleSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-AppleSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-AppleSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Cloth-None-Drawer


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ClothType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ClothType)
		(receptacleType ?r DrawerType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Cloth-None-Drawer


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ClothType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ClothType)
		(receptacleType ?r DrawerType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Cloth-None-Drawer


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ClothType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ClothType)
		(receptacleType ?r DrawerType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Cloth-None-Drawer


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ClothType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ClothType)
		(receptacleType ?r DrawerType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_slice_then_place_in_recep-Tomato-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-PepperShaker-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PepperShakerType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PepperShakerType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_in_outer_recep-BellPepperSliced-WineBottle-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?ro - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
            (and 
                (objectType ?o BellPepperType) 
                (receptacleType ?ro WineBottleType)
                (inReceptacle ?o ?ro) 
                (objectType ?ot FridgeType)
                (heldBy ?o ?r)
                (inReceptacle ?ot ?r)
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))))
Preprocessed goal: (:goal
	(exists (?ro - receptacle)
(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(and 
		(inReceptacle ?o ?ro)
		(inReceptacle ?ot ?r)
		(sliceable ?o)
		(isSliced ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pepper-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PepperType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Bowl-Water-LongTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (exists (?w - object)
            (and 
                (objectType ?o BowlType) 
                (objectType ?w WaterType)
                (receptacleType ?r LongTableType)
                (inReceptacle ?w ?o)
                (inReceptacle ?o ?r) 
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Bowl-Water-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r CounterTopType)
                (inReceptacleObject WaterType ?o)
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r CounterTopType))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Bowl-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (isOn ?o)
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(isOn ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-BowlFilled-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (isReceptacleObject ?o)
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(isReceptacleObject ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-DishSponge-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o DishSpongeType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o DishSpongeType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-DishSponge-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o DishSpongeType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o DishSpongeType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-DishSponge-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o DishSpongeType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o DishSpongeType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-DishSponge-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o DishSpongeType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o DishSpongeType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Pot-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pot-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pot-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
                (holds ?o ?water) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pot-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Plunger-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlungerType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PlungerType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Plunger-None-Cupboard


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ol - object)
            (and 
                (objectType ?o PlungerType) 
                (receptacleType ?r CupboardType)
                (receptacleAtLocation ?r ?ol)
                (objectAtLocation ?o ?l)
                (atLocation ?o ?l) 
                (atLocation ?r ?l)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?ol - location)
(exists (?o - object)
(exists (?l - location)
(and 
		(objectType ?o PlungerType)
		(receptacleAtLocation ?r ?ol)
		(objectAtLocation ?o ?l))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Plunger-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r1 - receptacle)
        (exists (?r2 - receptacle)
        (exists (?o - object)
        (exists (?l1 - location)
        (exists (?l2 - location)
            (and 
                (objectType ?o PlungerType)
                (receptacleType ?r1 ToiletType)
                (receptacleType ?r2 SinkBasinType)
                (objectAtLocation ?r2 ?l2)
                (objectAtLocation ?o ?l1)
                (atLocation ?r1 ?l1)
                (atLocation ?r2 ?l2)
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o - object)
(exists (?l1 - location)
(and 
		(objectType ?o PlungerType)
		(receptacleType ?r1 ToiletType)
		(receptacleType ?r2 SinkBasinType)
		(objectAtLocation ?o ?l1))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Plunger-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlungerType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PlungerType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Knife-None-Table

;; PDDL Goal: 
(:goal
    (exists (?r - receptacle)
    (exists (?o - object)
        (and 
            (objectType ?o KnifeType) 
            (receptacleType ?r TableType)
            (inReceptacle ?o ?r) 
        )
)))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o KnifeType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cook_then_place_in_recep-TomatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_slice_pick_cool_then_place_in_recep- TomatoSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r1 - receptacle)
        (exists (?r2 - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r1 FridgeType)
                (receptacleType ?r2 CounterTopType)
                (inReceptacle ?o ?r1)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
                (inReceptacle ?o ?r2) 
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r1 FridgeType)
		(receptacleType ?r2 CounterTopType)
		(inReceptacle ?o ?r1)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o)
		(inReceptacle ?o ?r2)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Cup-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CupType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Cup-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CupType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Cup-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CupType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Cup-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CupType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Tomato-None-CoffeeTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
pick_clean_then_place_in_recep-Tomato-None-CoffeeTable
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
pick_clean_then_place_in_recep-Tomato-None-CoffeeTable
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Tomato-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Tomato-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Lettuce-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Lettuce-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Lettuce-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Lettuce-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Lettuce-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Lettuce-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Lettuce-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Lettuce-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_use-Knife-Lettuce-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?o1 - object)
        (exists (?o2 - object)
        (exists (?l - location)
            (and 
                (objectType ?o1 KnifeType)
                (holds ?a ?o1)
                (objectType ?o2 LettuceType)
                (objectAtLocation ?o2 ?l)
                (atLocation ?a ?l)
            )
    )))))
Preprocessed goal: (:goal
	(exists (?o2 - object)
(exists (?o1 - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?o1 KnifeType)
		(holds ?a ?o1)
		(objectType ?o2 LettuceType)
		(objectAtLocation ?o2 ?l)
		(atLocation ?a ?l))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-LettuceSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Knife-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DiningTableType)
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o LettuceType)
                (holds ?a ?o)
                (objectType ?r PlateType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o)
            )
    )))))
Preprocessed goal: (:goal
	(exists (?r - object)
(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o LettuceType)
		(holds ?a ?o)
		(objectType ?r PlateType)
		(sliceable ?o)
		(isSliced ?o)))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Knife-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DiningTableType)
                (objectAtLocation ?ot ?l)
                (atLocation ?o ?l)
                (objectType ?o KnifeType)
                (holds ?a ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - agent)
(exists (?l - location)
(and 
		(objectAtLocation ?ot ?l)
		(atLocation ?o ?l)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-Freezer


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-AppleSliced-None-Freezer


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FreezerType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-AppleSliced-None-Freezer


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-LettuceSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-LettuceSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-LettuceSliced-None-CoffeeTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-LettuceSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-WateringCan-None-Pan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o WateringCanType) 
                (receptacleType ?r PanType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o WateringCanType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_fill_water-Pan-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pan-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_pour-Pan-Water-Sink


;; PDDL Goal: 
(:goal
        (exists (?o1 - object)
        (exists (?o2 - object)
            (and 
                (objectType ?o1 PanType) 
                (objectType ?o2 SinkType)
                (holdsAny ?a) 
                (inReceptacle ?o1 ?o2)
            )
    )))
<END>
Preprocessed goal: (:goal
	(exists (?o2 - object)
(exists (?o1 - object)
(exists (?a - agent)
(and 
		(objectType ?o1 PanType)
		(objectType ?o2 SinkType)
		(holdsAny ?a)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pot-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pot-None-CounterTop

;; PDDL Goal:

(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pot-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pot-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Potato-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Potato-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Potato-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Potato-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_slice_then_place-Apple-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Glassbottle-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o GlassbottleType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o GlassbottleType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Glassbottle-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o GlassbottleType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o GlassbottleType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Glass-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o GlassType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Glass-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o GlassType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Mug-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o MugType)
                (holds ?a ?o)
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o MugType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Mug-None-Desk


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o MugType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o MugType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Mug-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o MugType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o MugType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_toggle-Mug-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?o MugType)
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
            )
    ))))))

Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?o MugType)
		(receptacleType ?r DeskType)
		(inReceptacle ?o ?r)
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_fill_then_place_in_recep-BowlFullOfWater-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (inReceptacleObject ?innerObject ?o)
                (objectType ?innerObject WaterType)
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(exists (?innerObject - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(inReceptacleObject ?innerObject ?o)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Bowl-FullUnderwater-Dresser

;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r)
                (holds ?o WateringCan)
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r DresserType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Bowl-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
                (objectType ?innerObject?innerObjType)
                (holds ?o ?innerObject)
                (receptacleType ?rToaster CabinetType)
                (inReceptacleObject ?innerObject ?rToaster) 
                (objectType ?oToaster ToasterType)
                (holds ?a ?ToasterType)
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?rToaster - receptacle)
(exists (?r - receptacle)
(exists (?oToaster - object)
(exists (?o - object)
(exists (?a - agent)
(exists (?ToasterType - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(receptacleType ?rToaster CabinetType)
		(objectType ?oToaster ToasterType)
		(holds ?a ?ToasterType))))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_full-Bowl-Water-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (inReceptacleObject ?innerObject ?o)
                (objectType ?innerObject WaterType)
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(exists (?innerObject - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(inReceptacleObject ?innerObject ?o)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Bowl-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Bowl-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Bowl-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Bowl-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-SideTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r SideTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-EndTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r EndTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_slice-Apple-None-None


;; PDDL Goal: 
(:goal
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o)))
)
====
Trying to process...
;; Simplified Goal: 
slice_obj-AppleSliced-None


;; PDDL Goal: 
(:goal
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o)))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-AppleSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_slice-Apple-None


;; PDDL Goal: 
(:goal
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (sliceable ?o)
                (isSliced ?o)  
                (heatable ?o)
                (isHot ?o)
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(sliceable ?o)
		(isSliced ?o)
		(heatable ?o)
		(isHot ?o)))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Plate-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlateType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PlateType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Plate-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlateType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
  
<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PlateType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Plate-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlateType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PlateType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Plate-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlateType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PlateType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Tomato-None-DiningTable

;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (objectType ?o KnifeType)
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(objectType ?o KnifeType))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Tomato-None-DiningTable

;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (objectType ?ot KnifeType)
                (isSliced ?ot)
                (inReceptacle ?ot ?r)
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(objectType ?ot KnifeType)
		(isSliced ?ot)
		(inReceptacle ?ot ?r)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Tomato-None-DiningTable
pick_and_place_simple-ButterKnife-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle1)
		    (exists (?r2 - receptacle2)
            (exists (?o - object)
            (exists (?o2 - object)
                (and 
                    (objectType ?o TomatoType)
				    (objectType ?o2 ButterKnifeType)
                    (receptacleType ?r DiningTableType)
				    (receptacleType ?r2 DiningTableType)
                    (inReceptacle ?o ?r) 
				    (inReceptacle ?o2 ?r2)
                )
        )))))
Preprocessed goal: (:goal
	(exists (?r2 - receptacle)
(exists (?r - receptacle)
(exists (?o2 - object)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(objectType ?o2 ButterKnifeType)
		(receptacleType ?r DiningTableType)
		(receptacleType ?r2 DiningTableType)
		(inReceptacle ?o ?r)
		(inReceptacle ?o2 ?r2))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Tomato-None-CoffeeTable
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
;; Simplified Goal: 
pick_and_place_simple-Tomato-None-CoffeeTable
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-CoffeeMachine


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CoffeeMachineType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-CoffeeMachine


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CoffeeMachineType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-CoffeeMachine


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CoffeeMachineType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-CoffeeMachine


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CoffeeMachineType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-VegetableSliced-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o VegetableType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (objectAtLocation ?o ?l)
                (atLocation ?l SinkType)
                (sliceable ?o)
                (isSliced ?o)  
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(exists (?l - location)
(and 
		(inReceptacle ?o ?r)
		(objectAtLocation ?o ?l)
		(sliceable ?o)
		(isSliced ?o)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-VegetableSliced-None-SinkBasin


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(receptacleType ?r SinkBasinType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-VegetableSliced-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o VegetableType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-CucumberSliced-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?o CucumberType)
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (objectType ?ot FridgeType)
                (objectAtLocation ?ot ?l)
                (inReceptacle ?ot ?l)
            )
    )))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(and 
		(inReceptacle ?o ?r)
		(objectAtLocation ?ot ?l))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_two_objs-KnifeLettuceSlice-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle1)
        (exists (?r2 - receptacle2)
        (exists (?o - object)
        (exists (?o2 - object)
            (and 
                (objectType ?o KnifeType) 
                (objectType ?o2 LettuceType) 
                (receptacleType ?r SinkType)
                (receptacleType ?r2 SinkType)
                (inReceptacle ?o ?r) 
                (inReceptacle ?o2 ?r2)
                (coolable ?o2)
                (isCool ?o2)  
            )
    )))))
Preprocessed goal: (:goal
	(exists (?r2 - receptacle)
(exists (?r - receptacle)
(exists (?o2 - object)
(exists (?o - object)
(and 
		(objectType ?o KnifeType)
		(objectType ?o2 LettuceType)
		(inReceptacle ?o ?r)
		(inReceptacle ?o2 ?r2)
		(coolable ?o2)
		(isCool ?o2))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Knife-None-Sink
pick_cool_then_place_in_recep-LettuceSliced-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r1 - receptacle)
        (exists (?r2 - receptacle)
        (exists (?o1 - object)
        (exists (?o2 - object)
            (and 
                (objectType ?o1 KnifeType) 
                (receptacleType ?r1 SinkType)
                (inReceptacle ?o1 ?r1)
                (coolable ?o2)
                (isCool ?o2) 
                (objectType ?o2 LettuceType) 
                (receptacleType ?r2 SinkType)
                (inReceptacle ?o2 ?r2) 
            )
    )))))
Preprocessed goal: (:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o2 - object)
(exists (?o1 - object)
(and 
		(objectType ?o1 KnifeType)
		(inReceptacle ?o1 ?r1)
		(coolable ?o2)
		(isCool ?o2)
		(objectType ?o2 LettuceType)
		(inReceptacle ?o2 ?r2))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Knife-Yellow-Sink

;; PDDL Goal:
(:goal
        (exists (?r - receptacle)
        (exists (?o1 - object)
        (exists (?o2 - object)
            (and 
                (objectType ?o1 KnifeType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o1 ?r)
                (objectType ?o2 LettuceType)
                (receptacleType ?r SinkType)
                (inReceptacle ?o2 ?r)
                (coolable ?o2)
                (isCool ?o2)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o2 - object)
(exists (?o1 - object)
(and 
		(objectType ?o1 KnifeType)
		(inReceptacle ?o1 ?r)
		(objectType ?o2 LettuceType)
		(inReceptacle ?o2 ?r)
		(coolable ?o2)
		(isCool ?o2)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-LettuceSliced-None-Sink
pick_and_place_simple-ButterKnife-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle1)
        (exists (?r - receptacle2)
        (exists (?o1 - object)
        (exists (?o2 - object)
            (and 
                (objectType ?o1 LettuceType) 
                (objectType ?o2 ButterKnifeType)
                (receptacleType ?r1 SinkType)
                (receptacleType ?r2 SinkType)
                (inReceptacle ?o1 ?r1)
                (inReceptacle ?o2 ?r2)
                (coolable ?o1)
                (isCool ?o1)  
            )
    )))))
Preprocessed goal: (:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o2 - object)
(exists (?o1 - object)
(and 
		(objectType ?o1 LettuceType)
		(objectType ?o2 ButterKnifeType)
		(inReceptacle ?o1 ?r1)
		(inReceptacle ?o2 ?r2)
		(coolable ?o1)
		(isCool ?o1))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSliced-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSliced-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSliced-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSliced-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: pick_heat_then_place_in_recep-Potato-None-CounterTop

;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Potato-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Potato-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Potato-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Potato-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Knife-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?l - location)
        (exists (?o - object)
        (exists (?ot - object)
            (and 
                (objectType ?o KnifeType)
                (objectAtLocation ?o ?l)
                (receptacleAtLocation ?r ?l)
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (objectType ?ot CupType)
                (objectAtLocation ?ot ?l)
                (receptacleAtLocation ?rt ?l)
                (receptacleType ?rt CounterTopType)
                (inReceptacle ?ot ?rt)
            )
    )))))

<END>
Preprocessed goal: (:goal
	(exists (?rt - receptacle)
(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(and 
		(objectType ?o KnifeType)
		(objectAtLocation ?o ?l)
		(receptacleAtLocation ?r ?l)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(objectType ?ot CupType)
		(objectAtLocation ?ot ?l)
		(receptacleAtLocation ?rt ?l)
		(receptacleType ?rt CounterTopType)
		(inReceptacle ?ot ?rt)))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-CabbageSliced-None-StoveBurner


;; PDDL Goal: 
(:goal
    (exists (?r - receptacle)
    (exists (?o - object)
        (and 
            (objectType ?o CabbageType) 
            (receptacleType ?r StoveBurnerType)
            (inReceptacle ?o ?r)
            (sliceable ?o)
            (isSliced ?o) 
        )
)))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(receptacleType ?r StoveBurnerType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-ButterKnife-None-Table
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
;; Simplified Goal: 
pick_and_place_simple-ButterKnife-None-Table
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-CabbageSliced-None-Table


;; PDDL Goal: 
(:goal
        (exists (?r1 - receptacle)
        (exists (?r2 - receptacle)
        (exists (?o - object)
        (exists (?l1 - location)
        (exists (?l2 - location)
            (and 
                (objectType ?o CabbageType) 
                (receptacleType ?r1 TableType)
                (receptacleType ?r2 TableType)
                (inReceptacle ?o ?r1) 
                (objectAtLocation ?o ?l1) 
                (atLocation ?l1 ?r1)
                (objectAtLocation Knife ?l2) 
                (atLocation ?l2 Stove) 
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?r1 - receptacle)
(exists (?o - object)
(exists (?l2 - location)
(exists (?l1 - location)
(and 
		(inReceptacle ?o ?r1)
		(objectAtLocation ?o ?l1)
		(objectAtLocation Knife ?l2))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoStalk-None-CounterTopRight


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (atLocation ?l CounterTopRight)
                (objectAtLocation ?o ?l)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(exists (?l - location)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(objectAtLocation ?o ?l)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoStalk-None-RightLocation
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
;; Simplified Goal: 
pick_and_place_simple-TomatoStalk-None-RightLocation
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoStalk-None-CounterTopRight


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (atLocation ?o ?l)
                (atLocation ?r ?l)
                (inReceptacle ?o ?r) 
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoStalkRemoved-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-AppleSliced-None-CoffeeTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-AppleSliced-None-DeskLamp

;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DeskLampType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-AppleSliced-None-CoffeeTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-AppleSliced-None-CoffeeTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_move_obj-Knife-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?rtl - rtype)
        (exists (?ot - otype)
        (exists (?ltr - location)
        (exists (?lfr - location)
        (exists (?olt - object)
        (exists (?olf - object)
            (and 
                (atLocation ?a ?ltr)
                (objectAtLocation ?olt ?ltr)
                (objectType ?olt KnifeType)
                (receptacleAtLocation ?r ?ltr)
                (objectType ?r ?rtl)
                (receptacleType ?r CounterTopType)
            )
    ))))))))

(:goal
        (exists (?a - agent)
        (exists (?ot - object)
        (exists (?drt - object)
        (exists (?frt - object)
        (exists (?dtl - location)
        (exists (?ftl - location)
            (and 
                (atLocation ?a ?dtl)
                (atLocation ?ot ?dtl)
                (atLocation ?a ?ftl)
                (atLocation ?drt ?dtl)
                (objectType ?drt DoorType)
                (helds ?a ?ot)
                (objectType ?ot KnifeType)
                (objectType ?frt FridgeType)
                (receptacleAtLocation ?drt ?ftl)
                (objectType ?ftl FridgeType)
                (objectAtLocation ?frt ?ftl)
            )
    ))))))))

;; The above goal can also be represented as:
;; (:goal
;;         (exists (?a - agent)
;;         (exists (?r1 - receptacle)
;;         (exists (?r2 - receptacle)
;;         (exists (?o - object)
;;             (and 
;;                 (atLocation ?a ?l1)
;;                 (objectAtLocation ?o ?l1)
;;                 (objectType ?o KnifeType)
;;                 (receptacleAtLocation ?r1 ?l1)
;;                 (objectType ?r1 CounterTopType)
;;                 (atLocation ?a ?l2)
;;                 (atLocation ?r2 ?l2)
;;                 (objectAtLocation ?fridge ?l2)
;;                 (receptacleType ?r2 FridgeType)
;;                 (opened ?r2)
;;             )
;;     ))))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?olt - object)
(exists (?ltr - location)
(exists (?a - agent)
(and 
		(atLocation ?a ?ltr)
		(objectAtLocation ?olt ?ltr)
		(objectType ?olt KnifeType)
		(receptacleAtLocation ?r ?ltr)
		(receptacleType ?r CounterTopType))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-ButterKnife-None-CounterTop

;; PDDL Goal: 
(and 
     (exists (?a - agent)
     (exists (?r - receptacle)
     (exists (?o - object)
         (and 
             (objectType ?o KnifeType) 
             (receptacleType ?r CounterTopType)
             (inReceptacle ?o ?r) 
         )
 ))) 

;; or

(and 
     (exists (?a - agent)
     (exists (?r - receptacle)
     (exists (?o - object)
         (and 
             (objectType ?o KnifeType) 
             (receptacleType ?r CounterTopType)
             (inReceptacle ?o ?r) 
             (openable ?r) 
             (opened ?r) 
             (opened ?r) 
         )
 )))
Failure, could not find goal_conjunction in 
pick_and_place_simple-ButterKnife-None-CounterTop


(and 
     (exists (?a - agent)
     (exists (?r - receptacle)
     (exists (?o - object)
         (and 
             (objectType ?o KnifeType) 
             (receptacleType ?r CounterTopType)
             (inReceptacle ?o ?r) 
         )
 ))) 



(and 
     (exists (?a - agent)
     (exists (?r - receptacle)
     (exists (?o - object)
         (and 
             (objectType ?o KnifeType) 
             (receptacleType ?r CounterTopType)
             (inReceptacle ?o ?r) 
             (openable ?r) 
             (opened ?r) 
             (opened ?r) 
         )
 ))).
Failed to preprocess goal.
;; Simplified Goal: 
pick_and_place_simple-ButterKnife-None-CounterTop

;; PDDL Goal: 
(and 
     (exists (?a - agent)
     (exists (?r - receptacle)
     (exists (?o - object)
         (and 
             (objectType ?o KnifeType) 
             (receptacleType ?r CounterTopType)
             (inReceptacle ?o ?r) 
         )
 ))) 

;; or

(and 
     (exists (?a - agent)
     (exists (?r - receptacle)
     (exists (?o - object)
         (and 
             (objectType ?o KnifeType) 
             (receptacleType ?r CounterTopType)
             (inReceptacle ?o ?r) 
             (openable ?r) 
             (opened ?r) 
             (opened ?r) 
         )
 )))
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Knife-None-CounterTop
open_then_close_object-Fridge-Fridge
 

;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?o1 - object)
        (exists (?o2 - object)
            (and 
                (objectType ?o1 KnifeType) 
                (holds ?a ?o1)
                (objectType ?o2 FridgeType)
                (openable ?o2)
                (opened ?o2) 
            )
    ))))
Preprocessed goal: (:goal
	(exists (?o2 - receptacle)
(exists (?o1 - object)
(exists (?a - agent)
(and 
		(objectType ?o1 KnifeType)
		(holds ?a ?o1)
		(openable ?o2)
		(opened ?o2)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_open_then_close_obj-Knife-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FridgeType)
                (openable ?ot)
                (receptacleAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o KnifeType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - receptacle)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(openable ?ot)
		(receptacleAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o KnifeType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Apple-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Apple-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Apple-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Apple-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_then_slice_then_place_in_recep-PotatoSliced-None-Fridge
THEN pick_then_place_in_recep-PotatoSliced-Fridge-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r1 - receptacle)
        (exists (?r2 - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r1 FridgeType)
                (receptacleType ?r2 GarbageCanType)
                (inReceptacle ?o ?r1)
                (inReceptacle ?o ?r2)
                (sliceable ?o)
                (isSliced ?o)  
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r1 FridgeType)
		(receptacleType ?r2 GarbageCanType)
		(inReceptacle ?o ?r1)
		(inReceptacle ?o ?r2)
		(sliceable ?o)
		(isSliced ?o)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Knife-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o KnifeType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cut_then_place_in_recep-Knife-PotatoSliced-KitchenCounter


;; PDDL Goal: 
(:goal
    (exists (?r - receptacle)
    (exists (?o - object)
        (and 
            (objectType ?o KnifeType) 
            (receptacleType ?r KitchenCounterType)
            (inReceptacle ?o ?r)
            (sliceable ?o)
            (isSliced ?o)  
        )
)))

;; Simplified Goal: 
pick_cool_then_place_in_recep-PotatoSliced-None-Fridge


;; PDDL Goal: 
(:goal
    (exists (?r - receptacle)
    (exists (?o - object)
        (and 
            (objectType ?o PotatoType) 
            (receptacleType ?r FridgeType)
            (inReceptacle ?o ?r)
            (coolable ?o)
            (isCool ?o) 
            (sliceable ?o)
            (isSliced ?o)  
        )
)))

;; Simplified Goal: 
pick_and_place_simple-PotatoSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
    (exists (?r - receptacle)
    (exists (?o - object)
        (and 
            (objectType ?o PotatoType) 
            (receptacleType ?r GarbageCanType)
            (inReceptacle ?o ?r) 
            (sliceable ?o)
            (isSliced ?o) 
        )
)))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o KnifeType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Knife-None-Fridge

slice_obj_with_obj-PotatoKnife-Knife-Potato

pick_and_place_simple-PotatoSliced-None-Fridge

pick_and_place_simple-PotatoSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
    (and 
        (exists (?r1 - receptacle)
        (exists (?r2 - receptacle)
        (exists (?o1 - object)
        (exists (?o2 - object)
            (and 
                (objectType ?o1 KnifeType) 
                (objectType ?o2 PotatoType)
                (receptacleType ?r1 FridgeType)
                (receptacleType ?r2 GarbageCanType)
                (inReceptacle ?o1 ?r1)
                (inReceptacle ?o2 ?r2)
                (sliceable ?o2)
                (isSliced ?o2) 
            )
    ))))
))
Preprocessed goal: (:goal
	(and 
		)
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-PotatoSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-PotatoSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-PotatoSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-PotatoSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-BreadSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place-AppleSliced-CounterTop-Microwave


;; PDDL Goal: 
(:goal
        (exists (?l1 - location)
        (exists (?l2 - location)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (atLocation ?o ?l1)
                (objectAtLocation ?o ?l2)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o) 
                (not (= ?l1 ?l2))
            )
    ))))
Preprocessed goal: (:goal
	(exists (?o - object)
(exists (?l2 - location)
(and 
		(objectType ?o BreadType)
		(objectAtLocation ?o ?l2)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSliced-None-Microwave

;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Cabbage-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CabbageType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Cabbage-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CabbageType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Lettuce-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Lettuce-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-Cabinet

;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-Cupboard


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CupboardType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Egg-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-TomatoSliced-None-DiningTableRight


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableRightType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_pick_sliced_then_place_in_recep-TomatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?o TomatoType)
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)
                (objectType ?ot RefrigeratorType)
                (atLocation ?ot ?l)
                (objectAtLocation ?o ?l)
            )
    )))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?ot - agent)
(exists (?o - object)
(exists (?l - location)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o)
		(atLocation ?ot ?l)
		(objectAtLocation ?o ?l))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-TomatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-TomatoSliced-None-CoffeeTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o) 
                (atLocation ?r ?l)
                (atLocation ?o ?l)
                (objectAtLocation ?r ?l)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-LettuceSliced-None-Footstool


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r FootstoolType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-LettuceSliced-None-SideTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r SideTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-LettuceSliced-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-LettuceHeadSliced-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-BreadSliced-None-Microwave

;; PDDL Goal: 
(:goal
  (exists (?r - receptacle)
    (exists (?o - object)
      (and 
        (objectType ?o BreadType) 
        (receptacleType ?r ShelfType)
        (inReceptacle ?o ?r) 
        (sliceable ?o)
        (isSliced ?o)
      )
    )
  )
)
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-BreadSliced-None-SideTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r SideTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-BreadSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-BreadSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o) 
                (heatable ?o)
                (isHot ?o)
            )
    )))
<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o)
                (heatable ?o)
                (isHot ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-StoveBurner


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r StoveBurnerType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r StoveBurnerType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-StoveBurner


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r StoveBurnerType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r StoveBurnerType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-StoveBurner


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r StoveBurnerType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r StoveBurnerType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-StoveBurner


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r StoveBurnerType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r StoveBurnerType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Bread-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
Simplified Goal: 
pick_heat_then_place_in_recep-Bread-None-GarbageCan


PDDL Goal: 
(:goal
    (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
        )
    )
)
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Bread-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
Simplified Goal: pick_clean_then_place_in_recep-ButterKnife-None-CounterTop

PDDL Goal:
(:goal
    (exists (?r - receptacle)
    (exists (?o - object)
        (and 
            (objectType ?o ButterKnifeType) 
            (receptacleType ?r CounterTopType)
            (inReceptacle ?o ?r)
            (cleanable ?o)
            (isClean ?o) 
        )
    )
))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ButterKnifeType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place-ButterKnife-None-CounterTop

;; PDDL Goal: 
(:goal
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o ButterKnifeType) 
                (atLocation ?l CounterTop)
                (objectAtLocation ?o ?l)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?o - object)
(exists (?l - location)
(and 
		(objectType ?o ButterKnifeType)
		(objectAtLocation ?o ?l)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-ButterKnife-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ButterKnifeType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ButterKnifeType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-ButterKnife-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ButterKnifeType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ButterKnifeType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Cloth-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o ClothType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o ClothType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Cloth-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o ClothType)
                (holds ?a ?o)
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o ClothType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Cloth-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o ClothType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o ClothType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Cloth-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o ClothType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o ClothType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-RemoteControl-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)        
        (exists (?l - location)
            (and 
                (objectType ?o RemoteControlType) 
                (objectAtLocation ?l ?o)
                (atLocation ?a ?l)
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot)
            )
    )))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?o RemoteControlType)
		(atLocation ?a ?l)
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-RemoteControl-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RemoteControlType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o RemoteControlType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-RemoteControl-None-TallLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot TallLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RemoteControlType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o RemoteControlType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-RemoteControl-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RemoteControlType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o RemoteControlType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
pick_and_place_simple-Candle-None-CounterTop
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
pick_and_place_simple-Candle-None-CounterTop
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-CandleGreen-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CandleType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
                (objectType ?o CandleGreenType)
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CandleType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
pick_and_place_simple-CandleGreen-None-CounterTop
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
pick_and_place_simple-CandleGreen-None-CounterTop
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Candle-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CandleType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CandleType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-RemoteControl-None-Chair


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o RemoteControlType) 
                (receptacleType ?r ChairType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o RemoteControlType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-RemoteControl-None-Chair


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o RemoteControlType) 
                (receptacleType ?r ChairType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o RemoteControlType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-RemoteControl-None-ArmChair


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o RemoteControlType) 
                (receptacleType ?r ArmChairType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o RemoteControlType)
		(receptacleType ?r ArmChairType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-RemoteControl-None-Chair


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o RemoteControlType) 
                (receptacleType ?r ChairType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o RemoteControlType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Spatula-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpatulaType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SpatulaType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Spatula-None-KitchenCounter


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpatulaType) 
                (receptacleType ?r KitchenCounterType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SpatulaType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Spatula-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpatulaType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SpatulaType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Spatula-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpatulaType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SpatulaType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-KeyChain-None-Dresser


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KeyChainType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o KeyChainType)
		(receptacleType ?r DresserType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-KeyChain-None-Dresser


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KeyChainType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o KeyChainType)
		(receptacleType ?r DresserType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-KeyChain-None-Dresser


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KeyChainType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o KeyChainType)
		(receptacleType ?r DresserType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-KeyChain-None-Dresser


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KeyChainType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o KeyChainType)
		(receptacleType ?r DresserType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pen-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PenType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PenType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pen-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PenType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PenType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pen-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PenType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PenType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pen-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PenType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PenType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-KeyChain-None-Sofa


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KeyChainType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o KeyChainType)
		(receptacleType ?r SofaType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-KeyChain-None-Sofa


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KeyChainType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o KeyChainType)
		(receptacleType ?r SofaType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-KeyChain-None-Couch


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KeyChainType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o KeyChainType)
		(receptacleType ?r SofaType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-KeyChain-None-Sofa


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KeyChainType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o KeyChainType)
		(receptacleType ?r SofaType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Glass-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o GlassType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal:
pick_and_place_simple-Glass-None-Cabinet


;; PDDL Goal:
(:goal
    (exists (?r - receptacle)
        (exists (?o - object)
            (and
                (objectType ?o GlassType)
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
            )
        )
    )
)
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Glass-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o GlassType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o)
                (objectAtLocation ?r ?l)
                (objectType ?l StoreType)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Glass-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o GlassType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-SideTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r SideTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-CoffeeTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r) 
                (objectAtLocation ?r ?l)
                (objectType ?l BlindsType)
            )
    ))))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(exists (?l - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r)
		(objectType ?l BlindsType)))))
)
====
Trying to process...
Simplified Goal: pick_and_place_simple-TomatoSliced-None-SideTable

PDDL Goal:
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r SideTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
slice_then_place-BreadSliced-None-Desk


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DeskType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-PotatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-PotatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-PotatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-PotatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
hold_obj_turn_on_lamp-Bowl-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (holds ?a Bowl)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(holds ?a Bowl)))))
)
====
Trying to process...
;; Simplified Goal: 
toggle_obj_with_obj_in_hand-Bowl-Type-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?h - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?h BowlType)
                (holds ?a ?h)
            )
    )))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?l - location)
(exists (?h - object)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?h BowlType)
		(holds ?a ?h))))))
)
====
Trying to process...
;; Simplified Goal: 
toggle_obj_with_obj-Lamp-Bowl-None

;; PDDL Goal: 
(:goal
    (exists (?o1 - object) 
        (exists (?o2 - object)
            (and 
                (objectType ?o1 LampType)
                (objectType ?o2 BowlType)
                (toggleable ?o1)
                (holds ?a ?o2)
                (isToggled ?o1)
            )
        )
    )
)
Preprocessed goal: (:goal
	(exists (?o2 - object)
(exists (?o1 - object)
(exists (?a - agent)
(and 
		(objectType ?o2 BowlType)
		(toggleable ?o1)
		(holds ?a ?o2)
		(isToggled ?o1)))))
)
====
Trying to process...
;; Simplified Goal: 
toggle_obj-LightSwitch-None-FloorLamp


;; PDDL Goal: 
(:goal
    (exists (?a - agent)
    (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (holdsAny ?a) 
            )
    ))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(holdsAny ?a)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Cup-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CupType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Cup-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CupType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Cup-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CupType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Cup-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CupType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-BreadSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o) 
                (atLocation ?l Sink)
                (atLocation ?o ?l)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)
                (atLocation ?l SinkType)
                (atLocation ?o ?l)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-BreadSliced-None-SideTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r SideTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-BreadSliced-None-Table

;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r TableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-BreadSliced-None-SideTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r SideTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-BreadSliced-None-SideTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r SideTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
toggle_lamp-DeskLamp-None-Desk


;; PDDL Goal: 
(:goal
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o DeskLampType)
                (toggleable ?o)
                (objectAtLocation ?o ?l)
                (atLocation ?a ?l)
            )
    )))
Preprocessed goal: (:goal
	(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?o DeskLampType)
		(toggleable ?o)
		(objectAtLocation ?o ?l)
		(atLocation ?a ?l)))))
)
====
Trying to process...
;; Simplified Goal: 
toggle_obj-Lamp-None-FloorLamp


;; PDDL Goal: 
(:goal 
    (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LampType) 
                (receptacleType ?r FloorLampType)
                (inReceptacle ?o ?r)
                (toggleable ?o)
                (isToggled ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(inReceptacle ?o ?r)
		(toggleable ?o)
		(isToggled ?o))))
)
====
Trying to process...
;; Simplified Goal: 
toggle_on-DeskLamp


;; PDDL Goal: 
(:goal 
        (exists (?o - object)
            (and 
                (objectType ?o DeskLampType)
                (toggleable ?o) 
                (isToggled ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?o - object)
(and 
		(objectType ?o DeskLampType)
		(toggleable ?o)
		(isToggled ?o)))
)
====
Trying to process...
;; Simplified Goal: 
toggle_obj_on-DeskLamp
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
;; Simplified Goal: 
toggle_obj_on-DeskLamp
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_on(Apple-None-Microwave)-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?l - location)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?r - receptacle)
            (and 
                (objectType ?o AppleType) 
                (objectAtLocation ?ot ?l)
                (receptacleType ?r CounterTopType)
                (inReceptacle ?ot ?r)
                (heatable ?ot)
                (isHot ?ot) 
                (atLocation ?o ?l)
            )
    )))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(and 
		(objectType ?o AppleType)
		(objectAtLocation ?ot ?l)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?ot ?r)
		(heatable ?ot)
		(isHot ?ot))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-Microwave



;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?m - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (objectAtLocation ?m ?l)
                (objectType ?m MicrowaveType)
                (objectAtLocation ?o ?l)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(exists (?m - object)
(exists (?l - location)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(objectAtLocation ?m ?l)
		(objectAtLocation ?o ?l))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Apple-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Apple-None-SideTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r SideTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-CoffeeTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-SideTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r SideTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-SideTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r SideTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-SideTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r SideTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
pick_and_place_simple-CreditCard-None-DeskLamp
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
pick_and_place_simple-CreditCard-None-DeskLamp
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
grab_object_in_light-CreditCard-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CreditCardType)
                (holds ?a ?o)
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o CreditCardType)
		(holds ?a ?o))))))
)
====
Trying to process...
pick_credit_card_then_toggle_light-CreditCard-None-DeskLamp
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
pick_credit_card_then_toggle_light-CreditCard-None-DeskLamp
Preprocessed goal: 
====
Trying to process...
Simplified Goal: 
pick_and_toggle-Laptop-None-Laptop
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
Simplified Goal: 
pick_and_toggle-Laptop-None-Laptop
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Plunger-None-SinkBasin


;; PDDL Goal: 
(:goal
        (exists (?r1 - receptacle)
        (exists (?r2 - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o PlungerType) 
                (receptacleType ?r1 SinkBasinType)
                (receptacleType ?r2 CabinetType)
                (inReceptacle ?o ?r1) 
                (atLocation ?r2 ?l)
                (objectAtLocation ?r2 ?l)
            )
    )))))
Preprocessed goal: (:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PlungerType)
		(receptacleType ?r1 SinkBasinType)
		(receptacleType ?r2 CabinetType)
		(inReceptacle ?o ?r1)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Plunger-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r1 - receptacle)
        (exists (?r2 - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o PlungerType) 
                (receptacleType ?r1 CabinetType)
                (receptacleType ?r2 SinkType)
                (inReceptacle ?o ?r1)
                (openable ?r2)
                (receptacleAtLocation ?r2 ?l)
                (atLocation ?o ?l)
            )
    )))))
Preprocessed goal: (:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o - object)
(exists (?l - location)
(and 
		(objectType ?o PlungerType)
		(receptacleType ?r1 CabinetType)
		(inReceptacle ?o ?r1)
		(openable ?r2)
		(receptacleAtLocation ?r2 ?l))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Plunger-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlungerType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PlungerType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Plunger-None-Sink

;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlungerType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PlungerType)
		(receptacleType ?r SinkBasinType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Lettuce-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Lettuce-None-DiningTable
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
;; Simplified Goal: 
pick_cool_then_place_in_recep-Lettuce-None-DiningTable
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Lettuce-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Lettuce-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Bread-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Bread-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Bread-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
pick_cool_then_place_in_recep-Tomato-None-DiningTable
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
pick_cool_then_place_in_recep-Tomato-None-DiningTable
Preprocessed goal: 
====
Trying to process...
Simplified Goal: 
pick_cool_then_place_in_recep-Tomato-None-DiningTable


PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Tomato-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Tomato-None-Table


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (coolable ?o) 
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Apple-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Apple-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Apple-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Apple-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-CoffeeMachine


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CoffeeMachineType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-CoffeeMachine


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CoffeeMachineType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-CoffeeMachine


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CoffeeMachineType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-CoffeeMachine


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CoffeeMachineType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Book-None-Desk


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BookType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BookType)
		(receptacleType ?r DeskType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Book-None-Desk


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BookType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BookType)
		(receptacleType ?r DeskType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Book-None-Drawer


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
            (and 
                (objectType ?o BookType) 
                (objectType ?ot DrawerType)
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r) 
                (objectAtLocation ?ot ?r)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BookType)
		(receptacleType ?r DrawerType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Book-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BookType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BookType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Vase-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o VaseType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o VaseType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Vase-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o VaseType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o VaseType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Vase-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o VaseType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o VaseType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Vase-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o VaseType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o VaseType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Candle-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CandleType)
                (holds ?a ?o)
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o CandleType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Candle-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CandleType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o CandleType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Candle-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CandleType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o CandleType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Candle-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CandleType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o CandleType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-CreditCard-None-Chair


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CreditCardType) 
                (receptacleType ?r ChairType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CreditCardType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-CreditCard-None-Chair


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CreditCardType) 
                (receptacleType ?r ChairType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CreditCardType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-CreditCard-None-Chair


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CreditCardType) 
                (receptacleType ?r ChairType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CreditCardType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-CreditCard-None-Chair


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CreditCardType) 
                (receptacleType ?r ChairType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CreditCardType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Lettuce-None-CoffeeTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Lettuce-None-CoffeeTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Lettuce-None-CoffeeTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Lettuce-None-CoffeeTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-CellPhone-None-Drawer


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CellPhoneType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CellPhoneType)
		(receptacleType ?r DrawerType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-CellPhone-None-Drawer


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CellPhoneType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CellPhoneType)
		(receptacleType ?r DrawerType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-CellPhone-None-Drawer


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CellPhoneType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CellPhoneType)
		(receptacleType ?r DrawerType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-CellPhone-None-Drawer


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CellPhoneType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CellPhoneType)
		(receptacleType ?r DrawerType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-PotatoSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-PotatoSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_slice_then_place_in_recep-PotatoSlice-None-Cart


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r CartType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r CartType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-PotatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
carry_with_toggle-RemoteControl-Lamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot RemoteControlType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot RemoteControlType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_carry_then_turn_on-Lamp-RemoteControl-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RemoteControlType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o RemoteControlType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-RemoteControl-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RemoteControlType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o RemoteControlType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
turn_on-LightSwitch-Lamp-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?l - location)
        (exists (?ot - object)
        (exists (?o - object)
            (and 
                (objectType ?o RemoteControlType)
                (holds ?a ?o)
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot)
                (atLocation ?a ?l)
                (objectAtLocation ?ot ?l)
            )
    )))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?o RemoteControlType)
		(holds ?a ?o)
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(atLocation ?a ?l)
		(objectAtLocation ?ot ?l))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Knife-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o KnifeType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-ButterKnife-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ButterKnifeType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ButterKnifeType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Knife-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r) 
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o KnifeType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-ButterKnife-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ButterKnifeType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ButterKnifeType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Pan-None-StoveBurner


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r StoveBurnerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r StoveBurnerType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Pan-None-Stove


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r StoveBurnerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r StoveBurnerType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Pan-None-StoveBurner


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r StoveBurnerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r StoveBurnerType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Pan-Stove-Pan


;; PDDL Goal: 
(:goal
        (exists (?r1 - receptacle) (exists (?r2 - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r1 StoveBurnerType)
                (receptacleType ?r2 StoveBurnerType)
                (inReceptacle ?o ?r1)
                (cleanable ?o)
                (isClean ?o)  
                (inReceptacle ?o ?r2)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r1 StoveBurnerType)
		(receptacleType ?r2 StoveBurnerType)
		(inReceptacle ?o ?r1)
		(cleanable ?o)
		(isClean ?o)
		(inReceptacle ?o ?r2)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Knife-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o KnifeType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_then_cut-AppleYellow-None-Knife


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot KnifeType)
                (objectType ?o AppleType)
                (objectAtLocation ?ot ?l)
                (atLocation ?r ?l)
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (holds ?ot ?o)
            )
    )))))
Preprocessed goal: (:goal
	(exists (?r - agent)
(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(and 
		(objectType ?ot KnifeType)
		(objectType ?o AppleType)
		(objectAtLocation ?ot ?l)
		(atLocation ?r ?l))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Knife-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o KnifeType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-ButterKnife-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FridgeType)
                (receptacleType ?r FridgeType)
                (inReceptacle ?ot ?r)
                (objectAtLocation ?ot ?l)
                (objectType ?o AppleType)
                (holds ?a ?o)
            )
    )))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(receptacleType ?r FridgeType)
		(inReceptacle ?ot ?r)
		(objectAtLocation ?ot ?l)
		(objectType ?o AppleType)
		(holds ?a ?o)))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Candle-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CandleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CandleType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Candle-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CandleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CandleType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Candle-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CandleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CandleType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Candle-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o CandleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (objectAtLocation ?r ?l)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CandleType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Lettuce-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Lettuce-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Lettuce-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Lettuce-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
Simplified Goal: pick_and_place_simple-Box-Sofa-Table

PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot TableType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BoxType)
                (holds ?a ?o)
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o BoxType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Box-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BoxType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o BoxType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Box-None-CoffeeTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
                (objectAtLocation ?ot ?l)
                (atLocation ?ot ?l)
                (objectType ?ot DeskLampType)
                (isOn ?ot)
            )
    )))))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(and 
		(objectType ?o BoxType)
		(receptacleType ?r SofaType)
		(inReceptacle ?o ?r)
		(objectAtLocation ?ot ?l)
		(objectType ?ot DeskLampType)
		(isOn ?ot))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Box-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BoxType)
                (holds ?a ?o)
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o BoxType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Sink
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Sink
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Tomato-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Tomato-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Tomato-None-Microwave

;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Tomato-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Tomato-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Tomato-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Tomato-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Tomato-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Potato-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
look_at_obj_in_light-Statue-None-FloorLamp
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
look_at_obj_in_light-Statue-None-FloorLamp
Preprocessed goal: 
====
Trying to process...
Simplified Goal: 
look_at_obj_in_light-Statue-None-FloorLamp

PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o StatueType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o StatueType)
		(holds ?a ?o))))))
)
====
Trying to process...
pick_and_place_simple-Statue-None-FloorLamp
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
pick_and_place_simple-Statue-None-FloorLamp
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Statue-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o StatueType)
                (holds ?a ?o)
            )
    ))))))

Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o StatueType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Drawer


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DrawerType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_slice_heat_then_place_in_recep-TomatoSliced-None-Drawer


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o)
                (heatable ?o)
                (isHot ?o)
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DrawerType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Drawer


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DrawerType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Drawer


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DrawerType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pot-None-Fridge
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
;; Simplified Goal: 
pick_and_place_simple-Pot-None-Fridge
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_and_move_simple-Pot-CounterTop-Refrigerator


;; PDDL Goal: 
(:goal
        (exists (?o - object)
        (exists (?r1 - receptacle)
        (exists (?r2 - receptacle)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r1 CounterTopType) 
                (receptacleType ?r2 FridgeType) 
                (inReceptacle ?o ?r1)
                (inReceptacle ?o ?r2) 
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotType)
		(receptacleType ?r1 CounterTopType)
		(receptacleType ?r2 FridgeType)
		(inReceptacle ?o ?r1)
		(inReceptacle ?o ?r2)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pot-CounterTop-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r1 - receptacle)
        (exists (?r2 - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r1 FridgeType)
                (receptacleType ?r2 CounterTopType)
                (inReceptacle ?o ?r1) 
                (inReceptacle ?o ?r2) 
            )
    ))))

<END>
Preprocessed goal: (:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotType)
		(receptacleType ?r1 FridgeType)
		(receptacleType ?r2 CounterTopType)
		(inReceptacle ?o ?r1)
		(inReceptacle ?o ?r2)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pot-None-Fridge

;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Apple-None-KitchenTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r KitchenTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Apple-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-AppleSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Apple-None-KitchenTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r KitchenTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
toggle-On-DeskLamp-None


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o DeskLampType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r)
                (toggleable ?o)
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o DeskLampType)
		(receptacleType ?r DresserType)
		(inReceptacle ?o ?r)
		(toggleable ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_toggle_then_place_in_recep-DeskLamp-None-Dresser


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (objectType ?o DeskLampType)
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r) 
            )
    )))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(and 
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(objectType ?o DeskLampType)
		(receptacleType ?r DresserType)
		(inReceptacle ?o ?r))))))
)
====
Trying to process...
;; Simplified Goal: 
toggle_obj-DeskLamp-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot) 
                (objectAtLocation ?ot ?l)
            )
    )))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?l - location)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(objectAtLocation ?ot ?l))))
)
====
Trying to process...
;; Simplified Goal: 
toggle-ON_obj-DeskLamp-None


;; PDDL Goal: 
(:goal
        (exists (?ot - object)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
toggle_obj_in_light-FloorLamp-None-Pencil


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o FloorLampType)
                (toggleable ?o)
                (objectAtLocation ?o ?l)
                (atLocation ?a ?l)
                (objectType ?ot PencilType)
                (holds ?a ?ot)
            )
    ))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?o FloorLampType)
		(toggleable ?o)
		(objectAtLocation ?o ?l)
		(atLocation ?a ?l)
		(objectType ?ot PencilType)
		(holds ?a ?ot))))))
)
====
Trying to process...
;; Simplified Goal: 
turn_on_light_while_holding_obj-Lamp-None-Pencil


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (not (isToggled ?ot)) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PencilType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(not (isToggled ?ot))
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o PencilType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
turn_on_light_while_carrying_obj-FloorLamp-HandTowel


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType HandTowel)
                (holds ?a HandTowel)
            )
    ))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(holds ?a HandTowel)))))
)
====
Trying to process...
;; Simplified Goal: 
turn_on_light_while_carrying_obj-Pencil-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PencilType)
                (holds ?a ?o)
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o PencilType)
		(holds ?a ?o))))))
)
====
Trying to process...
pick_clean_then_place_in_recep-Tomato-None-CounterTop
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
pick_clean_then_place_in_recep-Tomato-None-CounterTop
Preprocessed goal: 
====
Trying to process...
pick_clean_then_place_in_recep-Tomato-None-CounterTop
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
pick_clean_then_place_in_recep-Tomato-None-CounterTop
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Tomato-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Tomato-None-CounterTop

;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_toggle-Pen-None-LightSwitch


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?o - object)
        (exists (?ot - object)
            (and 
                (objectType ?o PenType)
                (objectType ?ot LightSwitchType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (holds ?a ?o)
            )
    ))))
<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?a - agent)
(and 
		(objectType ?o PenType)
		(objectType ?ot LightSwitchType)
		(toggleable ?ot)
		(isToggled ?ot)
		(holds ?a ?o)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_toggle-LightSwitch-None-Pen


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o PenType) 
                (receptacleType ?r LightSwitchType)
                (atLocation ?o ?l)
                (atLocation ?r ?l)
                (isOn ?r)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - agent)
(exists (?o - object)
(exists (?l - location)
(and 
		(objectType ?o PenType)
		(atLocation ?r ?l)))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Pen-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PenType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o PenType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pen-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PenType) 
                (receptacleType ?r DeskLampType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PenType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Pillow-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PillowType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o PillowType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Pillow-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PillowType)
                (holds ?a ?o)
            )
    ))))))

Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o PillowType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Pillow-None-TableLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot TableLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PillowType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o PillowType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Pillow-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o PillowType)
                (holds ?a ?o)
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o PillowType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Mug-None-CoffeeMachine


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CoffeeMachineType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Mug-None-CoffeeMachine


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CoffeeMachineType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Mug-None-CoffeeMachine


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CoffeeMachineType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Mug-None-CoffeeMachine


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CoffeeMachineType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Fork-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ForkType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ForkType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Fork-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ForkType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ForkType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Fork-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ForkType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ForkType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Fork-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ForkType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ForkType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Spatula-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpatulaType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SpatulaType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Spatula-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpatulaType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SpatulaType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Spatula-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpatulaType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SpatulaType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Spatula-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpatulaType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SpatulaType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Egg-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r) 
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-Sink
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-Sink
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_drop_in_sink-Egg


;; PDDL Goal: 
(:goal
        (exists (?o - object)
            (and 
                (objectType ?o EggType)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?o - object)
(and 
		(objectType ?o EggType)
		(heatable ?o)
		(isHot ?o)))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Watch-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o WatchType)
                (holds ?a ?o)
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o WatchType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Watch-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o WatchType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o WatchType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Watch-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o WatchType)
                (holds ?a ?o)
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o WatchType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Watch-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o WatchType)
                (holds ?a ?o)
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o WatchType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Plate-None-Shelf

;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlateType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PlateType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Plate-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlateType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PlateType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Plate-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlateType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PlateType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Plate-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlateType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PlateType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal:
pick_cool_then_place_in_recep-Tomato-None-CounterTop

;; PDDL Goal:
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Tomato-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Tomato-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Tomato-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-PotatoSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-PotatoSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-PotatoSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-PotatoSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Box-None-ArmChair


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r ArmChairType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BoxType)
		(receptacleType ?r ArmChairType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Box-None-Sofa


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BoxType)
		(receptacleType ?r SofaType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Box-None-RedCouch


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r CouchType)
                (inReceptacle ?o ?r)
                (objectAtLocation ?o ?l)
                (objectType ?l KitchenTableType)               
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(exists (?l - location)
(and 
		(objectType ?o BoxType)
		(inReceptacle ?o ?r)
		(objectAtLocation ?o ?l)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Box-None-ArmChair


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r ArmChairType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BoxType)
		(receptacleType ?r ArmChairType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Laptop-None-Bed


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o LaptopType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o LaptopType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Laptop-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o LaptopType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o LaptopType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Laptop-None-Bed


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot BedType)
                (objectAtLocation ?o ?l)
                (atLocation ?a ?l)
                (objectType ?o LaptopType)
                (holds ?a ?o)
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectAtLocation ?o ?l)
		(atLocation ?a ?l)
		(objectType ?o LaptopType)
		(holds ?a ?o)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_up_and_examine-Laptop-None-Bed


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o LaptopType)
                (atLocation ?o ?l)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o LaptopType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-AlarmClock-None-Dresser


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AlarmClockType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AlarmClockType)
		(receptacleType ?r DresserType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-AlarmClock-None-Dresser


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AlarmClockType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AlarmClockType)
		(receptacleType ?r DresserType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-AlarmClock-None-Dresser


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AlarmClockType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AlarmClockType)
		(receptacleType ?r DresserType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-AlarmClock-None-Dresser


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AlarmClockType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AlarmClockType)
		(receptacleType ?r DresserType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-PotatoSliced-None-Vase


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r VaseType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-PotatoSliced-None-Statue


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r StatueType)
                (inReceptacle ?o ?r) 
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-PotatoSliced-None-Chair


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r ChairType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-PotatoSliced-None-Footstool

;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r FootstoolType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-PotatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-PotatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-PotatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-PotatoSliced-None-CoffeeTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Mug-None-CoffeeMachine


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CoffeeMachineType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Mug-None-CoffeeMachine


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CoffeeMachineType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Mug-None-CoffeeMachine


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CoffeeMachineType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Mug-None-CoffeeMachine


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CoffeeMachineType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Glass-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o GlassbottleType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o GlassbottleType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Glassbottle-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o GlassbottleType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o GlassbottleType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Glass-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o GlassType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Glass-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o GlassbottleType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o GlassbottleType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Spoon-None-Drawer


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
            (and 
                (objectType ?o SpoonType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o)
                (objectType ?ot ForkType)
                (inReceptacle ?ot ?r)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(and 
		(objectType ?o SpoonType)
		(receptacleType ?r DrawerType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o)
		(objectType ?ot ForkType)
		(inReceptacle ?ot ?r)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Spoon-None-Drawer

;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SpoonType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SpoonType)
		(receptacleType ?r DrawerType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Spoon-None-Drawer


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
            (and 
                (objectType ?o SpoonType)
                (cleanable ?o)
                (isClean ?o)
                (objectType ?ot ForkType)
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (inReceptacle ?ot ?r)  
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(and 
		(objectType ?o SpoonType)
		(cleanable ?o)
		(isClean ?o)
		(objectType ?ot ForkType)
		(receptacleType ?r DrawerType)
		(inReceptacle ?o ?r)
		(inReceptacle ?ot ?r)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Spoon-Fork-Drawer


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?r2 - receptacle)
        (exists (?o - object)
        (exists (?o2 - object)
            (and 
                (objectType ?o SpoonType) 
                (objectType ?o2 ForkType)
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (inReceptacle ?o2 ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o2 - object)
(exists (?o - object)
(and 
		(objectType ?o SpoonType)
		(objectType ?o2 ForkType)
		(receptacleType ?r DrawerType)
		(inReceptacle ?o ?r)
		(inReceptacle ?o2 ?r)
		(cleanable ?o)
		(isClean ?o)))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-KeyChain-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o KeyChainType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o KeyChainType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_then_toggle-KeyChain-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o KeyChainType)
                (holds ?a ?o)
            )
    ))))
<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o KeyChainType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_toggle-InHandThenLightKeyChain-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?ot - object)
        (exists (?l - location)
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?ot DeskLampType) 
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o KeyChainType)
                (holds ?a ?o)
            )
    ))))))


<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o KeyChainType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Keys-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o KeyChainType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o KeyChainType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Apple-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Kettle-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KettleType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o KettleType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Kettle-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KettleType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o KettleType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Kettle-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KettleType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o KettleType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Kettle-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o KettleType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o KettleType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-CellPhone-None-Desk


;; PDDL Goal: 
(:goal
        (exists (?r1 - receptacle)
        (exists (?r2 - receptacle)
        (exists (?o - object)
        (exists (?l1 - location)
        (exists (?l2 - location)
            (and 
                (objectType ?o CellPhoneType) 
                (receptacleType ?r1 ShelfType)
                (receptacleType ?r2 DeskType)
                (inReceptacle ?o ?r1)
                (atLocation ?r1 ?l1)
                (atLocation ?r2 ?l2)
            )
    ))))))

Preprocessed goal: (:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CellPhoneType)
		(receptacleType ?r1 ShelfType)
		(receptacleType ?r2 DeskType)
		(inReceptacle ?o ?r1)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-CellPhone-None-Desk


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CellPhoneType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CellPhoneType)
		(receptacleType ?r DeskType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-CellPhone-None-Desk


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CellPhoneType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CellPhoneType)
		(receptacleType ?r DeskType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-CellPhone-None-Desk


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CellPhoneType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CellPhoneType)
		(receptacleType ?r DeskType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-CellPhone-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CellPhoneType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o CellPhoneType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-CellPhone-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CellPhoneType)
                (holds ?a ?o)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o CellPhoneType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-CellPhone-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CellPhoneType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o CellPhoneType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-CellPhone-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CellPhoneType)
                (holds ?a ?o)
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o CellPhoneType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Book-None-Drawer


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BookType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BookType)
		(receptacleType ?r DrawerType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Book-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and
                (objectType ?o BookType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BookType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Book-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BookType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BookType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Book-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BookType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BookType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-SoapBar-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SoapBarType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-SoapBar-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SoapBarType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-SoapBar-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SoapBarType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-SoapBar-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SoapBarType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-PotatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (objectAtLocation ?l LettuceType)
                (objectAtLocation ?o ?l)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(exists (?l - location)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(objectAtLocation ?o ?l)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-PotatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o)
                (objectType ?ot LettuceType)
                (objectAtLocation ?ot ?l)
                (objectType ?t DiningTableType)
                (receptacleType ?r ?t)
                (inReceptacle ?ot ?r)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?t - rtype)
(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o)
		(objectType ?ot LettuceType)
		(objectAtLocation ?ot ?l)
		(receptacleType ?r ?t)
		(inReceptacle ?ot ?r)))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-PotatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)
                (objectAtLocation ?ot ?l)
                (objectType ?ot LettuceType)
            )
    )))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o)
		(objectAtLocation ?ot ?l)
		(objectType ?ot LettuceType))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-PotatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
        (exists (?lt - object)
        (exists (?ltl - location)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
                (objectAtLocation ?lt ?ltl)
                (atLocation ?ltl ?l)
                (objectType ?lt LettuceType)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(exists (?ltl - location)
(exists (?lt - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o)
		(objectAtLocation ?lt ?ltl)
		(objectType ?lt LettuceType))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-TomatoSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-TomatoSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
                (and 
                    (objectType ?o TomatoType) 
                    (receptacleType ?r MicrowaveType)
                    (inReceptacle ?o ?r)
                    (coolable ?o)
                    (isCool ?o)
                    (sliceable ?o)
                    (isSliced ?o)  
                )
        )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-TomatoSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-TomatoSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
pick_slice_object-Tomato-Sliced
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
pick_slice_object-Tomato-Sliced
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_slice_simple-Tomato-None-Tomato


;; PDDL Goal: 
(:goal
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(sliceable ?o)
		(isSliced ?o)))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Knife-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o KnifeType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r) 
                (objectAtLocation ?o ?l)
                (atLocation ?l ?r)
                (objectType ?ot PotatoType)
                (sliceable ?ot)
                (isSliced ?ot)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(and 
		(objectType ?o KnifeType)
		(inReceptacle ?o ?r)
		(objectAtLocation ?o ?l)
		(objectType ?ot PotatoType)
		(sliceable ?ot)
		(isSliced ?ot))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_slice-Apple-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?l - location)
        (exists (?o1 - object)
        (exists (?o2 - object)
        (exists (?r - receptacle)
            (and 
                (objectType ?o1 PotatoType) 
                (objectType ?o2 KnifeType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o1 ?r)
                (inReceptacle ?o2 ?r)
                (sliceable ?o1)
                (isSliced ?o1)  
            )
    )))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o2 - object)
(exists (?o1 - object)
(and 
		(objectType ?o1 PotatoType)
		(objectType ?o2 KnifeType)
		(inReceptacle ?o1 ?r)
		(inReceptacle ?o2 ?r)
		(sliceable ?o1)
		(isSliced ?o1)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_slice-Potato-ButterKnife-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?o PotatoType)
                (sliceable ?o)
                (isSliced ?o)
                (objectType ?ot ButterKnifeType)
                (objectAtLocation ?ot ?l)
                (atLocation ?l ?r)
                (objectType ?r SinkType)
            )
    )))))
Preprocessed goal: (:goal
	(exists (?r - object)
(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(and 
		(objectType ?o PotatoType)
		(sliceable ?o)
		(isSliced ?o)
		(objectType ?ot ButterKnifeType)
		(objectAtLocation ?ot ?l)
		(objectType ?r SinkType))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-PotatoSliced-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?o PotatoType)
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o) 
                (objectType ?ot KnifeType)
                (atLocation ?ot ?l)
                (objectAtLocation ?ot ?l)
            )
    )))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o)
		(objectType ?ot KnifeType)
		(objectAtLocation ?ot ?l))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Tomato-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Tomato-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Tomato-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Tomato-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-LettuceSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-LettuceSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_then_place_in_recep-LettuceSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_slice_then_place_in_recep-LettuceSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pencil-None-Table


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PencilType) 
                (receptacleType ?r TableType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PencilType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pencil-None-Desk


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PencilType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PencilType)
		(receptacleType ?r DeskType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pencil-None-Desk


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PencilType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PencilType)
		(receptacleType ?r DeskType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pencil-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PencilType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PencilType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-PotatoSliced-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-PotatoSliced-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-PotatoSliced-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-PotatoSliced-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_slice_cool_heat_then_place_in_recep-TomatoSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?p - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
                (coolable ?o)
                (isCool ?o) 
                (heatable ?o)
                (isHot ?o)
            )
    )))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o)
		(coolable ?o)
		(isCool ?o)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_pick_heat_then_place_in_recep-TomatoSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o) 
                (heatable ?o)
                (isHot ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (atLocation ?o ?l)
                (atLocation ?r ?l)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal:
pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
;; Simplified Goal:
pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-PotatoSliced-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-PotatoSliced-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-PotatoSliced-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r) 
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r SinkBasinType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Towel-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o TowelType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o TowelType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Towel-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o TowelType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o TowelType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Towel-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o TowelType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o TowelType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Towel-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o TowelType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o TowelType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Sink

PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Egg-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Egg-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Egg-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Egg-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pencil-Table-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?o - object)
            (and 
                (objectType ?o PencilType) 
                (objectAtLocation ?o Table)
                (atLocation ?o CounterTop) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?o - object)
(and 
		(objectType ?o PencilType)))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pencil-None-CounterTop
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
;; Simplified Goal: 
pick_and_place_simple-Pencil-None-CounterTop
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pencil-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PencilType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PencilType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pencil-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PencilType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PencilType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-ToiletPaperRoll-None-ToiletPaperHanger


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ToiletPaperRollType) 
                (receptacleType ?r ToiletPaperHangerType)
                (inReceptacle ?o ?r) 
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ToiletPaperRollType)
		(receptacleType ?r ToiletPaperHangerType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-ToiletPaperRoll-None-ToiletPaperHolder


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ToiletPaperRollType) 
                (receptacleType ?r ToiletPaperHangerType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ToiletPaperRollType)
		(receptacleType ?r ToiletPaperHangerType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-ToiletPaperRollEmpty-None-ToiletPaperHanger


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ToiletPaperRollType) 
                (receptacleType ?r ToiletPaperHangerType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ToiletPaperRollType)
		(receptacleType ?r ToiletPaperHangerType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-ToiletPaperRoll-None-ToiletPaperHanger


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ToiletPaperRollType) 
                (receptacleType ?r ToiletPaperHangerType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ToiletPaperRollType)
		(receptacleType ?r ToiletPaperHangerType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-Shelf

PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Tomato-None-SideTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r SideTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Tomato-None-CoffeeTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Tomato-None-SideTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r SideTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Tomato-None-CoffeeTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Fridge-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o FridgeType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-Container-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o ContainerType)
                (holds ?a ?o)
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-RoundContainer-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RoundContainerType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-RoundContainer-None-DeskLamp


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RoundContainerType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-Cabinet


;; PDDL Goal: 
(:goal
    (exists (?r - receptacle)
    (exists (?o - object)
        (and 
            (objectType ?o MugType) 
            (receptacleType ?r CabinetType)
            (inReceptacle ?o ?r)
            (heatable ?o)
            (isHot ?o) 
        )
)))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Mug-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Bread-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Bread-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-BreadSlice-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadSliceType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Bread-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-CD-None-Dresser


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CDType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CDType)
		(receptacleType ?r DresserType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-CD-None-Dresser


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CDType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CDType)
		(receptacleType ?r DresserType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-CD-None-Dresser


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
            (and 
                (objectType ?o CDType) 
                (receptacleType ?r DresserType)
                (inReceptacle ?o ?r)
                (objectType ?ot DeskType)
                (objectAtLocation ?ot ?l)
                (objectAtLocation ?o ?l)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(and 
		(objectType ?o CDType)
		(receptacleType ?r DresserType)
		(inReceptacle ?o ?r)
		(objectAtLocation ?ot ?l)
		(objectAtLocation ?o ?l))))))
)
====
Trying to process...
;; Simplified Goal: 
move_obj_to_obj-CD-None-Desk-Dresser


;; PDDL Goal: 
(:goal
        (exists (?o - object)
        (exists (?src - receptacle)
        (exists (?dest - receptacle)
            (and 
                (objectType ?o CDType) 
                (receptacleType ?src DeskType)
                (receptacleType ?dest DresserType)
                (objectAtLocation ?o ?src)
            )
    ))))
Preprocessed goal: (:goal
	(exists (?src - receptacle)
(exists (?o - object)
(exists (?dest - receptacle)
(and 
		(objectType ?o CDType)
		(receptacleType ?src DeskType)
		(receptacleType ?dest DresserType)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-LettuceSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot KnifeType)
                (sliceable ?o)
                (objectType ?o LettuceType)
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (objectAtLocation ?ot ?l) 
                (atLocation ?l ?r)
            )
    )))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(and 
		(objectType ?ot KnifeType)
		(sliceable ?o)
		(objectType ?o LettuceType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(objectAtLocation ?ot ?l))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-LettuceSliced-None-DiningTable


;; PDDL Goal: 
(:goal
    (exists (?r - receptacle)
    (exists (?o - object)
        (and 
            (objectType ?o LettuceType) 
            (receptacleType ?r DiningTableType)
            (inReceptacle ?o ?r)
            (sliceable ?o)
            (isSliced ?o) 
        )
)))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-LettuceSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?lo - location)
        (exists (?lk - location)
        (exists (?lt - location)
            (and 
                (objectType ?o LettuceType)
                (objectType ?ot KnifeType)
                (sliceable ?o)
                (isSliced ?o)
                (objectAtLocation ?o ?lt)
                (objectAtLocation ?ot ?lk)
                (atLocation ?lk ?lo)
                (receptacleAtLocation ?r ?lo)
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(exists (?lt - location)
(exists (?lo - location)
(exists (?lk - location)
(and 
		(objectType ?o LettuceType)
		(objectType ?ot KnifeType)
		(sliceable ?o)
		(isSliced ?o)
		(objectAtLocation ?o ?lt)
		(objectAtLocation ?ot ?lk)
		(receptacleAtLocation ?r ?lo)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r))))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-LettuceSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-CoffeeTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-Table


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r TableType)
                (inReceptacle ?o ?r)
                (objectAtLocation ?r ?l)
                (objectAtLocation ?o ?l)
                (sliceable ?o)
                (isSliced ?o) 
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(exists (?l - location)
(and 
		(objectType ?o TomatoType)
		(inReceptacle ?o ?r)
		(objectAtLocation ?o ?l)
		(sliceable ?o)
		(isSliced ?o)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-ButterKnife-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
                (objectType ?ot ButterKnifeType)
                (isReceptacleObject ?ot) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(objectType ?ot ButterKnifeType)
		(isReceptacleObject ?ot)
		(sliceable ?o)
		(isSliced ?o)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_slice_then_place_on-ButterKnife-Tomato-CounterTop

;; PDDL Goal: 
(:goal
  (and 
    (objectType ?o TomatoType) 
    (objectType ?k ButterKnifeType)
    (sliceable ?o)
    (isSliced ?o)
    (holds ?a ?k)
    (atLocation ?a ?l)
    (objectAtLocation ?o ?l)
    (objectAtLocation ?k ?l)
    (atLocation ?k ?l)
    (atLocation ?o ?l)
    (receptacleAtLocation ?r ?l)
    (receptacleType ?r CounterTopType)
    (inReceptacle ?k ?r)
  )
)
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(exists (?l - location)
(exists (?k - object)
(exists (?a - agent)
(and 
		(objectType ?o TomatoType)
		(objectType ?k ButterKnifeType)
		(sliceable ?o)
		(isSliced ?o)
		(holds ?a ?k)
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(objectAtLocation ?k ?l)
		(receptacleAtLocation ?r ?l)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?k ?r)))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-None-None-DiningTable

;; PDDL Goal: 
(:goal
  	(exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
            )
        )
  ))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-ObjectCooked-None-KitchenTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (receptacleType ?r KitchenTableType)
                (inReceptacle ?o ?r) 
            )
    )))
<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-CookedFood-None-DiningTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-CookedFood-None-KitchenTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (receptacleType ?r KitchenTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Knife-None-Fridge
pick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r1 - receptacle)
        (exists (?r2 - receptacle)
        (exists (?o1 - object)
        (exists (?o2 - object)
            (and 
                (objectType ?o1 KnifeType) 
                (receptacleType ?r1 FridgeType)
                (inReceptacle ?o1 ?r1) 
                (objectType ?o2 PotatoType) 
                (receptacleType ?r2 GarbageCanType)
                (inReceptacle ?o2 ?r2)
                (coolable ?o2)
                (isCool ?o2) 
                (sliceable ?o2)
                (isSliced ?o2)  
            )
    )))))

<END>
Preprocessed goal: (:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o2 - object)
(exists (?o1 - object)
(and 
		(objectType ?o1 KnifeType)
		(receptacleType ?r1 FridgeType)
		(inReceptacle ?o1 ?r1)
		(objectType ?o2 PotatoType)
		(receptacleType ?r2 GarbageCanType)
		(inReceptacle ?o2 ?r2)
		(coolable ?o2)
		(isCool ?o2)
		(sliceable ?o2)
		(isSliced ?o2))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-ButterKnife-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ButterKnifeType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
            )
    )))

;; Additional Simplified Goal: 
pick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan


;; Additional PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ButterKnifeType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-ButterKnife-None-Fridge, pick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (exists (?r1 - receptacle)
        (exists (?r2 - receptacle)
        (exists (?o1 - object)
        (exists (?o2 - object)
            (and 
                (objectType ?o1 ButterKnifeType) 
                (objectType ?o2 PotatoType)
                (receptacleType ?r1 FridgeType)
                (receptacleType ?r2 GarbageCanType)
                (inReceptacle ?o1 ?r1)
                (inReceptacle ?o2 ?r2)
                (coolable ?o1)
                (isCool ?o1)
                (coolable ?o2)
                (isCool ?o2) 
            )
    )))))
Preprocessed goal: (:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o2 - object)
(exists (?o1 - object)
(and 
		(objectType ?o1 ButterKnifeType)
		(objectType ?o2 PotatoType)
		(receptacleType ?r1 FridgeType)
		(receptacleType ?r2 GarbageCanType)
		(inReceptacle ?o1 ?r1)
		(inReceptacle ?o2 ?r2)
		(coolable ?o1)
		(isCool ?o1)
		(coolable ?o2)
		(isCool ?o2))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-ButterKnife-None-Fridge
pick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan


;; PDDL Goal: 
(:goal
        (and 
            (exists (?r - receptacle)
            (exists (?o - object)
                (and 
                    (objectType ?o ButterKnifeType) 
                    (receptacleType ?r FridgeType)
                    (inReceptacle ?o ?r) 
                )
            ))
            (exists (?r - receptacle)
            (exists (?o - object)
                (and 
                    (objectType ?o PotatoType) 
                    (receptacleType ?r GarbageCanType)
                    (inReceptacle ?o ?r)
                    (coolable ?o)
                    (isCool ?o) 
                    (sliceable ?o)
                    (isSliced ?o)  
                )
            ))
        )
)



<END>
Preprocessed goal: (:goal
	(and 
		)
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Cloth-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ClothType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ClothType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Cloth-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ClothType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ClothType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Cloth-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ClothType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ClothType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Cloth-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ClothType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ClothType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Bread-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Bread-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Bread-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Bread-None-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Pan-None-StoveBurner


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r StoveBurnerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r StoveBurnerType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
pick_clean_then_place_in_recep-Pan-None-StoveBurner
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
pick_clean_then_place_in_recep-Pan-None-StoveBurner
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Pan-None-StoveBurner


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r StoveBurnerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r StoveBurnerType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_clean_then_place_in_recep-Pan-None-StoveBurner


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r StoveBurnerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r StoveBurnerType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Lettuce-None-Toaster


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r ToasterType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
pick_and_place_simple-Lettuce-None-Toaster
Failure, could not find extract ground truth predicates from conjunction in .
Failed to preprocess goal.
pick_and_place_simple-Lettuce-None-Toaster
Preprocessed goal: 
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Lettuce-None-Toaster


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r ToasterType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Lettuce-None-Toaster


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r ToasterType)
                (inReceptacle ?o ?r)
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-SideTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r SideTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-CoffeeTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?o2 - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)
                (objectType ?o2 KnifeType)
                (holdsAny ?o2)  
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o2 - object)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o)
		(objectType ?o2 KnifeType)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-CoffeeTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o1 - object)
        (exists (?o2 - object)
            (and 
                (objectType ?o1 BreadType) 
                (objectType ?o2 MicrowaveType)
                (receptacleType ?r CoffeeTableType)
                (inReceptacle ?o1 ?r) 
                (inReceptacle ?o2 ?r)
                (heatable ?o1)
                (isHot ?o1) 
                (sliceable ?o1)
                (isSliced ?o1) 
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o2 - object)
(exists (?o1 - object)
(and 
		(objectType ?o1 BreadType)
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o1 ?r)
		(inReceptacle ?o2 ?r)
		(heatable ?o1)
		(isHot ?o1)
		(sliceable ?o1)
		(isSliced ?o1)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-BreadSliced-None-SideTable


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r SideTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-Cupboard


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r CupboardType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-Cabinet


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_cool_then_place_in_recep-Pan-None-Drawer


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(receptacleType ?r DrawerType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_slice-Tomato-None-Microwave


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-MicrowaveStand


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (objectAtLocation ?r ?l)
                (atLocation ?l ?r)
                (sliceable ?o)
                (isSliced ?o) 
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-MicrowaveStand


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o TomatoType) 
                (receptacleAtLocation ?r ?l)
                (receptacleType ?r MicrowaveStandType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(exists (?l - location)
(and 
		(objectType ?o TomatoType)
		(receptacleAtLocation ?r ?l)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o)))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-TomatoSliced-None-MicrowaveStand


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r MicrowaveStandType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Egg-None-SinkBasin


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r) 
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r SinkBasinType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Egg-None-Sink


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r SinkType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Cup-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CupType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Cup-WhiteShelf-CounterTop


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r WhiteShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CupType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-Cup-White-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (objectType ?o White) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CupType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-CupType-None-ShelfType


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?l - location)
            (and 
                (objectType ?o CupType) 
                (objectAtLocation ?o ?l)
                (atLocation ?o ?l)
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(exists (?l - location)
(and 
		(objectType ?o CupType)
		(objectAtLocation ?o ?l)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-DeskLamp-None-NightStand


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CDType)
                (holds ?a ?o)
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o CDType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-CD-None-SideTable


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot SideTableType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CDType)
                (holds ?a ?o)
            )
    ))))))
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o CDType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-CD-None-FloorLamp


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (receptacleAtLocation ?r ?l)
                (objectType ?o CDType)
                (holdsAny ?a)
                (holds ?a ?o) 
            )
    ))))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(receptacleAtLocation ?r ?l)
		(objectType ?o CDType)
		(holdsAny ?a)
		(holds ?a ?o)))))))
)
====
Trying to process...
;; Simplified Goal: 
look_at_obj_in_light-CD-None-BedsideTable


;; PDDL Goal: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot BedsideTableType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CDType)
                (holds ?a ?o)
            )
    ))))))

<END>
Preprocessed goal: (:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o CDType)
		(holds ?a ?o))))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_heat_then_place_in_recep-TomatoSliced-None-Fridge


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pencil-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PencilType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PencilType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pencil-None-Desk


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PencilType) 
                (receptacleType ?r DeskType)
                (inReceptacle ?o ?r) 
            )
    )))

<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PencilType)
		(receptacleType ?r DeskType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pencil-None-Shelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PencilType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
    )))
<END>
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PencilType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r))))
)
====
Trying to process...
;; Simplified Goal: 
pick_and_place_simple-Pencil-None-DeskShelf


;; PDDL Goal: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PencilType) 
                (receptacleType ?r DeskShelfType)
                (inReceptacle ?o ?r) 
            )
    )))
Preprocessed goal: (:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PencilType)
		(inReceptacle ?o ?r))))
)
====
Preprocess goals top-K accuracy: 130 / 222 exact match to ground truth goal.
Logging preprocessed goals: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_preprocessed_goals.csv
mock_propose_plans_for_problems:: from generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_codex_plans.json




mock_propose_plans_for_problems:: loaded a total of 245 plans for 245 unsolved problems.
Logging proposed plans: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_codex_plans.csv
propose_operators_for_problems:: proposing for 30 operators.
['TurnOnObject', 'ExamineObject', 'TurnOffObject', 'PickupObject', 'PutObject', 'OpenObject', 'CloseObject', 'SliceObject', 'CoolObject', 'WashObject', 'CleanObject', 'CutObject', 'ChillObject', 'MicrowaveObject', 'HeatObject', 'ThrowAwayObject', 'PlaceObject', 'WarmObject', 'TakeObject', 'RinseObject', 'LookAtObject', 'InspectObject', 'ToastObject', 'CookObject', 'UseObject', 'TurnOnLight', 'InvestigateObject', 'DropObject', 'ThrowObject', 'TurnOnLamp']
Now in: mock_propose_operators_for_problems: from generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_codex_operators.json
	Loaded 27 mock operators: 
	TurnOnObject
	ExamineObject
	TurnOffObject
	OpenObject
	CloseObject
	SliceObject
	CoolObject
	WashObject
	CutObject
	ChillObject
	MicrowaveObject
	HeatObject
	ThrowAwayObject
	PlaceObject
	WarmObject
	TakeObject
	RinseObject
	LookAtObject
	InspectObject
	ToastObject
	CookObject
	UseObject
	TurnOnLight
	InvestigateObject
	DropObject
	ThrowObject
	TurnOnLamp
preprocess_operators: preprocessing 27 operators.
['TurnOnObject', 'ExamineObject', 'TurnOffObject', 'OpenObject', 'CloseObject', 'SliceObject', 'CoolObject', 'WashObject', 'CutObject', 'ChillObject', 'MicrowaveObject', 'HeatObject', 'ThrowAwayObject', 'PlaceObject', 'WarmObject', 'TakeObject', 'RinseObject', 'LookAtObject', 'InspectObject', 'ToastObject', 'CookObject', 'UseObject', 'TurnOnLight', 'InvestigateObject', 'DropObject', 'ThrowObject', 'TurnOnLamp']
Trying to process...

(:action TurnOnObject
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (toggleable ?o)
            (not (isOn ?o))
        )
        :effect (and
            (isOn ?o)
        )
)

Preprocessed operator: TurnOnObject_0
Processed form: (:action TurnOnObject_0
        :parameters (?a - agent ?l - location ?o - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(toggleable ?o)
		(not (isOn ?o))
		)
        :effect (and 
		(isOn ?o)
		)
)
Trying to process...

(:action TurnOnObject
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject LightSwitchType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (toggleable ?o)
            (not (isOn ?o))
            (holds ?a ?toolobject)
        )
        :effect (and
            (isOn ?o)
        )
)

Preprocessed operator: TurnOnObject_1
Processed form: (:action TurnOnObject_1
        :parameters (?toolobject - object ?a - agent ?l - location ?o - object)

        :precondition (and 
		(objectType ?toolobject LightSwitchType)
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(toggleable ?o)
		(not (isOn ?o))
		(holds ?a ?toolobject)
		)
        :effect (and 
		(isOn ?o)
		)
)
Trying to process...

(:action TurnOnObject
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle LampType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (objectAtLocation ?o ?l)
            (toggleable ?o)
            (not (isOn ?o))
            (holds ?a ?o)
        )
        :effect (and
            (isOn ?o)
        )
)

Preprocessed operator: TurnOnObject_2
Processed form: (:action TurnOnObject_2
        :parameters (?a - agent ?l - location ?toolreceptacle - receptacle ?o - object)

        :precondition (and 
		(atLocation ?a ?l)
		(receptacleAtLocation ?toolreceptacle ?l)
		(objectAtLocation ?o ?l)
		(toggleable ?o)
		(not (isOn ?o))
		(holds ?a ?o)
		)
        :effect (and 
		(isOn ?o)
		)
)
====
Trying to process...

;; Operator, ExamineObject.
;; ExamineObject takes an object to examine.
;; This action is applicable to any object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be examined.
;; Preconditions: The agent is at a location and the object is at the same location.
;; Postconditions: The agent has examined the object.
(:action ExamineObject
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
        )
        :effect (and
            (objectExamined ?o)
        )
    )

Preprocessed operator: ExamineObject_0
Processed form: 
Trying to process...

;; Operator, ExamineObjectWithToolObject.
;; ExamineObjectWithToolObject takes an object to examine and a specific tool of type MagnifyingGlassType.
;; MagnifyingGlassType is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be examined, ?toolobject - object to examine with.
;; Preconditions: The toolobject is a MagnifyingGlassType, the agent is at a location and the object to be examined is at the same location, and the agent is holding the tool.
;; Postconditions: The agent has examined the object.
(:action ExamineObjectWithToolObject
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject MagnifyingGlassType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?toolobject)
        )
        :effect (and
            (objectExamined ?o)
        )
    )

Preprocessed operator: ExamineObject_1
Processed form: 
Trying to process...

;; Operator, ExamineObjectWithToolReceptacle.
;; ExamineObjectWithToolReceptacle takes an object to examine and a specific tool of type MicroscopeType.
;; MicroscopeType is an rtype. Therefore, the tool is a receptacle.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be examined, ?toolreceptacle - receptacle to examine with.
;; Preconditions: The toolreceptacle is an MicroscopeType, the agent is at a location and the object to be examined is at the same location, and the agent is holding the object to put in the receptacle.
;; Postconditions: The agent has examined the object.
(:action ExamineObjectWithToolReceptacle
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle MicroscopeType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?o)
        )
        :effect (and
            (objectExamined ?o)
        )
    )

Preprocessed operator: ExamineObject_2
Processed form: 
====
Trying to process...

;; Operator, TurnOffObject - Using a tool object
;; TurnOffObject using a tool object takes an object that can be turned off and a specific tool of type LightSwitchType.
;; LightSwitchType is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of object to be turned off; ?o - object to be turned off, ?toolobject - object to turn off the object with.
;; Preconditions: The toolobject is a LightSwitchType, the agent is at a location and the object to be turned off is at the same location, and the agent is holding the tool.
;; Postconditions: the ?o object is now turned off.
(:action TurnOffObjectWithToolObject
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject LightSwitchType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (turnableOff ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (not (isOn ?o))
            (not (isToggled ?o))
        )
    )

Preprocessed operator: TurnOffObject_0
Processed form: (:action TurnOffObject_0
        :parameters (?toolobject - object ?a - agent ?l - location ?o - object)

        :precondition (and 
		(objectType ?toolobject LightSwitchType)
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(holds ?a ?toolobject)
		)
        :effect (and 
		(not (isOn ?o))
		(not (isToggled ?o))
		)
)
Trying to process...

;; Operator, TurnOffObject - Using a tool receptacle
;; TurnOffObject using a tool receptacle takes an object that can be turned off and a specific tool of type StoveKnobType.
;; StoveKnobType is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of object to be turned off; ?o - object to be turned off, ?toolreceptacle - receptacle to turn off the object with.
;; Preconditions: The toolreceptacle is a StoveKnobType, the agent is at a location and the object to be turned off is at the same location, and the agent is holding the object.
;; Postconditions: the ?o object is now turned off.
(:action TurnOffObjectWithToolReceptacle
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle StoveKnobType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (turnableOff ?o)
            (holds ?a ?o)
        )
        :effect (and
            (not (isOn ?o))
            (not (isToggled ?o))
        )
    )

Preprocessed operator: TurnOffObject_1
Processed form: (:action TurnOffObject_1
        :parameters (?a - agent ?l - location ?o - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(holds ?a ?o)
		)
        :effect (and 
		(not (isOn ?o))
		(not (isToggled ?o))
		)
)
Trying to process...

;; Operator, TurnOffObject - No tool needed
;; TurnOffObject with no tool needed takes an object that can be turned off without any specific tool.
;; Parameters: ?a - agent, ?l - location of object to be turned off; ?o - object to be turned off.
;; Preconditions: The agent is at a location and the object to be turned off is at the same location, and the object is turnable off.
;; Postconditions: the ?o object is now turned off.
(:action TurnOffObjectNoTool
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (turnableOff ?o)
        )
        :effect (and
            (not (isOn ?o))
            (not (isToggled ?o))
        )
    )

Preprocessed operator: TurnOffObject_2
Processed form: (:action TurnOffObject_2
        :parameters (?a - agent ?l - location ?o - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		)
        :effect (and 
		(not (isOn ?o))
		(not (isToggled ?o))
		)
)
====
Trying to process...

;; Operator, OpenObject.
;; OpenObject takes any openable object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be opened.
;; Preconditions: The agent is at a location and the object is at the same location, and the object is openable and not already opened.
;; Postconditions: the ?o object is now opened.
(:action OpenObject
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (openable ?o)
            (not (opened ?o))
        )
        :effect (and
            (opened ?o)
        )
)

Preprocessed operator: OpenObject_0
Processed form: (:action OpenObject_0
        :parameters (?a - agent ?l - location ?o - receptacle)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		)
        :effect (and 
		(opened ?o)
		)
)
Trying to process...

;; Operator, OpenObjectWithTool.
;; OpenObjectWithTool takes any openable object and a specific tool object of type KeyType.
;; KeyType is an otype. Therefore, the tool object is an object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be opened; ?toolobject - object used to open.
;; Preconditions: The agent is at a location and the object is at the same location, the object is openable and not already opened, and the agent is holding the tool object.
;; Postconditions: the ?o object is now opened.
(:action OpenObjectWithTool
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (openable ?o)
            (not (opened ?o))
            (holds ?a ?toolobject)
            (objectType ?toolobject KeyType)
        )
        :effect (and
            (opened ?o)
        )
)

Preprocessed operator: OpenObject_1
Processed form: (:action OpenObject_1
        :parameters (?a - agent ?l - location ?o - receptacle ?toolobject - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(holds ?a ?toolobject)
		)
        :effect (and 
		(opened ?o)
		)
)
Trying to process...

;; Operator, OpenReceptacle.
;; OpenReceptacle takes any openable receptacle.
;; Parameters: ?a - agent, ?l - location of the receptacle; ?r - receptacle to be opened.
;; Preconditions: The agent is at a location and the receptacle is at the same location, and the receptacle is openable and not already opened.
;; Postconditions: the ?r receptacle is now opened.
(:action OpenReceptacle
        :parameters (?a - agent ?l - location ?r - receptacle)
        :precondition (and
            (atLocation ?a ?l)
            (receptacleAtLocation ?r ?l)
            (openable ?r)
            (not (opened ?r))
        )
        :effect (and
            (opened ?r)
        )
)

Preprocessed operator: OpenObject_2
Processed form: (:action OpenObject_2
        :parameters (?a - agent ?l - location ?r - receptacle)

        :precondition (and 
		(atLocation ?a ?l)
		(receptacleAtLocation ?r ?l)
		(openable ?r)
		(not (opened ?r))
		)
        :effect (and 
		(opened ?r)
		)
)
====
Trying to process...

(:action CloseObjectNoTool
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (openable ?o)
            (opened ?o)
        )
        :effect (and
            (not (opened ?o))
        )
)

Preprocessed operator: CloseObject_0
Processed form: (:action CloseObject_0
        :parameters (?a - agent ?l - location ?o - receptacle)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		)
        :effect (and 
		(not (opened ?o))
		)
)
Trying to process...

(:action CloseObjectToolObject
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (openable ?o)
            (opened ?o)
            (holds ?a ?toolobject)
            (toolToClose ?o ?toolobject)
        )
        :effect (and
            (not (opened ?o))
        )
)

Preprocessed operator: CloseObject_1
Processed form: (:action CloseObject_1
        :parameters (?a - agent ?l - location ?o - receptacle ?toolobject - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(holds ?a ?toolobject)
		)
        :effect (and 
		(not (opened ?o))
		)
)
Trying to process...

(:action CloseObjectToolReceptacle
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (openable ?o)
            (opened ?o)
            (holds ?a ?toolreceptacle)
            (toolToClose ?o ?toolreceptacle)
        )
        :effect (and
            (not (opened ?o))
        )
)

Preprocessed operator: CloseObject_2
Processed form: (:action CloseObject_2
        :parameters (?a - agent ?l - location ?o - receptacle ?toolreceptacle - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(holds ?a ?toolreceptacle)
		)
        :effect (and 
		(not (opened ?o))
		)
)
====
Trying to process...

(:action SliceObject_toolobject
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject KnifeType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (sliceable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (isSliced ?o)
        )
    )

Preprocessed operator: SliceObject_0
Processed form: (:action SliceObject_0
        :parameters (?toolobject - object ?a - agent ?l - location ?o - object)

        :precondition (and 
		(objectType ?toolobject KnifeType)
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(sliceable ?o)
		(holds ?a ?toolobject)
		)
        :effect (and 
		(isSliced ?o)
		)
)
Trying to process...

(:action SliceObject_toolreceptacle
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle DrawerType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (sliceable ?o)
            (receptacleAtLocation ?toolreceptacle ?l)
            (openable ?toolreceptacle)
            (opened ?toolreceptacle)
        )
        :effect (and
            (isSliced ?o)
        )
    )

Preprocessed operator: SliceObject_1
Processed form: (:action SliceObject_1
        :parameters (?toolreceptacle - receptacle ?a - agent ?l - location ?o - object)

        :precondition (and 
		(receptacleType ?toolreceptacle DrawerType)
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(sliceable ?o)
		(receptacleAtLocation ?toolreceptacle ?l)
		(openable ?toolreceptacle)
		(opened ?toolreceptacle)
		)
        :effect (and 
		(isSliced ?o)
		)
)
Trying to process...

(:action SliceObject_no_tool
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (sliceable ?o)
        )
        :effect (and
            (isSliced ?o)
        )
    )

Preprocessed operator: SliceObject_2
Processed form: (:action SliceObject_2
        :parameters (?a - agent ?l - location ?o - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(sliceable ?o)
		)
        :effect (and 
		(isSliced ?o)
		)
)
====
Trying to process...

(:action CoolObjectWithTool
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject IcePackType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (coolable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (isCool ?o)
        )
    )

Preprocessed operator: CoolObject_0
Processed form: (:action CoolObject_0
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(coolable ?o)
		(holds ?a ?toolobject)
		)
        :effect (and 
		(isCool ?o)
		)
)
Trying to process...

(:action CoolObjectWithReceptacle
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle FridgeType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
            (isCool ?o)
        )
    )

Preprocessed operator: CoolObject_1
Processed form: (:action CoolObject_1
        :parameters (?toolreceptacle - receptacle ?a - agent ?l - location ?o - object)

        :precondition (and 
		(receptacleType ?toolreceptacle FridgeType)
		(atLocation ?a ?l)
		(receptacleAtLocation ?toolreceptacle ?l)
		(holds ?a ?o)
		)
        :effect (and 
		(isCool ?o)
		)
)
Trying to process...

(:action CoolObjectWithoutTool
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (coolable ?o)
        )
        :effect (and
            (isCool ?o)
        )
    )

Preprocessed operator: CoolObject_2
Processed form: (:action CoolObject_2
        :parameters (?a - agent ?l - location ?o - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(coolable ?o)
		)
        :effect (and 
		(isCool ?o)
		)
)
====
Trying to process...

(:action WashObjectWithSoapBottle
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject SoapBottleType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (cleanable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (isClean ?o)
        )
    )

Preprocessed operator: WashObject_0
Processed form: (:action WashObject_0
        :parameters (?toolobject - object ?a - agent ?l - location ?o - object)

        :precondition (and 
		(objectType ?toolobject SoapBottleType)
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(cleanable ?o)
		(holds ?a ?toolobject)
		)
        :effect (and 
		(isClean ?o)
		)
)
Trying to process...

(:action WashObjectWithSinkBasin
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle SinkBasinType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
            (isClean ?o)
        )
    )

Preprocessed operator: WashObject_1
Processed form: (:action WashObject_1
        :parameters (?toolreceptacle - receptacle ?a - agent ?l - location ?o - object)

        :precondition (and 
		(receptacleType ?toolreceptacle SinkBasinType)
		(atLocation ?a ?l)
		(receptacleAtLocation ?toolreceptacle ?l)
		(holds ?a ?o)
		)
        :effect (and 
		(isClean ?o)
		)
)
Trying to process...

(:action WashObjectWithoutTool
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (cleanable ?o)
        )
        :effect (and
            (isClean ?o)
        )
)

Preprocessed operator: WashObject_2
Processed form: (:action WashObject_2
        :parameters (?a - agent ?l - location ?o - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(cleanable ?o)
		)
        :effect (and 
		(isClean ?o)
		)
)
====
Trying to process...

;; Operator, CutObject 1.
;; CutObject takes an object to cut and a specific tool of type KnifeType.
;; KnifeType is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of object to be cut; ?o - object to be cut, ?toolobject - object to cut with.
;; Preconditions: The toolobject is a KnifeType, the agent is at a location and the object to be cut is at the same location, the object is cuttable, and the agent is holding the tool.
;; Postconditions: The ?o object is now sliced.
(:action CutObject1
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject KnifeType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (cuttable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (isSliced ?o)
        )
    )

Preprocessed operator: CutObject_0
Processed form: (:action CutObject_0
        :parameters (?toolobject - object ?a - agent ?l - location ?o - object)

        :precondition (and 
		(objectType ?toolobject KnifeType)
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(holds ?a ?toolobject)
		)
        :effect (and 
		(isSliced ?o)
		)
)
Trying to process...

;; Operator, CutObject 2.
;; CutObject takes an object to cut and a specific tool of type ButterKnifeType.
;; ButterKnifeType is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of object to be cut; ?o - object to be cut, ?toolobject - object to cut with.
;; Preconditions: The toolobject is a ButterKnifeType, the agent is at a location and the object to be cut is at the same location, the object is cuttable, and the agent is holding the tool.
;; Postconditions: The ?o object is now sliced.
(:action CutObject2
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject ButterKnifeType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (cuttable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (isSliced ?o)
        )
    )

Preprocessed operator: CutObject_1
Processed form: (:action CutObject_1
        :parameters (?toolobject - object ?a - agent ?l - location ?o - object)

        :precondition (and 
		(objectType ?toolobject ButterKnifeType)
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(holds ?a ?toolobject)
		)
        :effect (and 
		(isSliced ?o)
		)
)
Trying to process...

;; Operator, CutObject 3.
;; CutObject takes an object to cut and a specific tool of type KnifeType.
;; KnifeType is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of object to be cut; ?o - object to be cut, ?toolreceptacle - receptacle to cut the object on.
;; Preconditions: The toolreceptacle is a cutting board, the agent is at a location, the object to be cut is at the same location, and the agent is holding the object and the toolreceptacle is at the same location as the agent.
;; Postconditions: The ?o object is now sliced.
(:action CutObject3
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle CuttingBoardType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (cuttable ?o)
            (holds ?a ?o)
            (holds ?a ?toolreceptacle)
        )
        :effect (and
            (isSliced ?o)
        )
    )

Preprocessed operator: CutObject_2
Processed form: (:action CutObject_2
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(holds ?a ?o)
		(holds ?a ?toolreceptacle)
		)
        :effect (and 
		(isSliced ?o)
		)
)
====
Trying to process...

;; Operator, ChillObject - Operator 1
;; ChillObject takes an object to chill.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be chilled.
;; Preconditions: The agent is at a location and the object is at the same location, and the object is coolable.
;; Postconditions: the ?o object is now cool.
(:action ChillObject
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (coolable ?o)
        )
        :effect (and
            (isCool ?o)
        )
)

Preprocessed operator: ChillObject_0
Processed form: (:action ChillObject_0
        :parameters (?a - agent ?l - location ?o - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(coolable ?o)
		)
        :effect (and 
		(isCool ?o)
		)
)
Trying to process...

;; Operator, ChillObject - Operator 2
;; ChillObject takes an object to chill using a chill receptacle of type FridgeType.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be chilled, ?chillreceptacle - receptacle to chill the object in.
;; Preconditions: The chillreceptacle is of type FridgeType, the agent is at a location and the receptacle is at the same location, and the agent is holding the object to be chilled.
;; Postconditions: the ?o object is now cool.
(:action ChillObject
        :parameters (?a - agent ?l - location ?o - object ?chillreceptacle - receptacle)
        :precondition (and
            (receptacleType ?chillreceptacle FridgeType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?chillreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
           (isCool ?o)
        )
    )

Preprocessed operator: ChillObject_1
Processed form: (:action ChillObject_1
        :parameters (?chillreceptacle - receptacle ?a - agent ?l - location ?o - object)

        :precondition (and 
		(receptacleType ?chillreceptacle FridgeType)
		(atLocation ?a ?l)
		(receptacleAtLocation ?chillreceptacle ?l)
		(holds ?a ?o)
		)
        :effect (and 
		(isCool ?o)
		)
)
Trying to process...

;; Operator, ChillObject - Operator 3
;; ChillObject takes an object to chill using a chill tool of type IcePackType.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be chilled, ?chilltool - tool to chill the object with.
;; Preconditions: The chilltool is of type IcePackType, the agent is at a location and the object is at the same location, and the agent is holding the chilltool and the object to be chilled is coolable.
;; Postconditions: the ?o object is now cool.
(:action ChillObject
        :parameters (?a - agent ?l - location ?o - object ?chilltool - object)
        :precondition (and
            (objectType ?chilltool IcePackType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (coolable ?o)
            (holds ?a ?chilltool)
        )
        :effect (and
           (isCool ?o)
        )
    )

Preprocessed operator: ChillObject_2
Processed form: (:action ChillObject_2
        :parameters (?a - agent ?l - location ?o - object ?chilltool - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(coolable ?o)
		(holds ?a ?chilltool)
		)
        :effect (and 
		(isCool ?o)
		)
)
====
Trying to process...

(:action MicrowaveObjectTool
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle MicrowaveType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
           (isHeated ?o)
        )
    )

Preprocessed operator: MicrowaveObject_0
Processed form: 
Trying to process...

(:action MicrowaveObjectNoTool
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (microwavable ?o)
        )
        :effect (and
           (isHeated ?o)
        )
    )

Preprocessed operator: MicrowaveObject_1
Processed form: 
Trying to process...

(:action MicrowaveObjectMicrowaveSafeTool
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject MicrowaveSafeType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (microwavable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
           (isHeated ?o)
        )
    )

Preprocessed operator: MicrowaveObject_2
Processed form: 
====
Trying to process...

;; Operator, HeatObject Option 1.
;; HeatObject Option 1 takes an object to heat and a specific tool of type StoveBurnerType.
;; StoveBurnerType is an rtype. Therefore, the tool is a receptacle.
;; Parameters: ?a - agent, ?l - location of the tool; ?o - object to be heated, ?toolreceptacle - receptacle to heat the object on.
;; Preconditions: The toolreceptacle is a StoveBurnerType, the agent is at a location and the receptacle is at the same location, and the agent is holding the object to be heated.
;; Postconditions: the ?o object is now hot.
(:action HeatObjectOption1
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle StoveBurnerType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
           (isHot ?o)
        )
    )

Preprocessed operator: HeatObject_0
Processed form: (:action HeatObject_0
        :parameters (?toolreceptacle - receptacle ?a - agent ?l - location ?o - object)

        :precondition (and 
		(receptacleType ?toolreceptacle StoveBurnerType)
		(atLocation ?a ?l)
		(receptacleAtLocation ?toolreceptacle ?l)
		(holds ?a ?o)
		)
        :effect (and 
		(isHot ?o)
		)
)
Trying to process...

;; Operator, HeatObject Option 2.
;; HeatObject Option 2 takes an object to heat and a specific tool of type MicrowaveType.
;; MicrowaveType is an rtype. Therefore, the tool is a receptacle.
;; Parameters: ?a - agent, ?l - location of the tool; ?o - object to be heated, ?toolreceptacle - receptacle to heat the object in.
;; Preconditions: The toolreceptacle is a MicrowaveType, the agent is at a location and the receptacle is at the same location, and the agent is holding the object to be heated.
;; Postconditions: the ?o object is now hot.
(:action HeatObjectOption2
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle MicrowaveType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
           (isHot ?o)
        )
    )

Preprocessed operator: HeatObject_1
Processed form: (:action HeatObject_1
        :parameters (?toolreceptacle - receptacle ?a - agent ?l - location ?o - object)

        :precondition (and 
		(receptacleType ?toolreceptacle MicrowaveType)
		(atLocation ?a ?l)
		(receptacleAtLocation ?toolreceptacle ?l)
		(holds ?a ?o)
		)
        :effect (and 
		(isHot ?o)
		)
)
Trying to process...

;; Operator, HeatObject Option 3.
;; HeatObject Option 3 takes an object to heat without any tool.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be heated.
;; Preconditions: The agent is at a location and the object is at the same location, and the agent is holding the object to be heated.
;; Postconditions: the ?o object is now hot.
(:action HeatObjectOption3
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?o)
        )
        :effect (and
           (isHot ?o)
        )
    )

Preprocessed operator: HeatObject_2
Processed form: (:action HeatObject_2
        :parameters (?a - agent ?l - location ?o - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(holds ?a ?o)
		)
        :effect (and 
		(isHot ?o)
		)
)
====
Trying to process...

;; Operator, ThrowAwayObject 1.
;; ThrowAwayObject 1 takes any object to throw away.
;; This action is applicable to any throwaway object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be thrown away.
;; Preconditions: The agent is at a location and the object is at the same location, and the object is throwaway.
;; Postconditions: The object is no longer at any location.
(:action ThrowAwayObject1
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (throwaway ?o)
        )
        :effect (and
            (not (objectAtLocation ?o ?l))
        )
)

Preprocessed operator: ThrowAwayObject_0
Processed form: (:action ThrowAwayObject_0
        :parameters (?a - agent ?l - location ?o - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		)
        :effect (and 
		(not (objectAtLocation ?o ?l))
		)
)
Trying to process...

;; Operator, ThrowAwayObject 2.
;; ThrowAwayObject 2 takes any object to throw away and a specific tool of type GarbageCanType.
;; GarbageCanType is an rtype. Therefore, the tool is an receptacle.
;; Parameters: ?a - agent, ?l - location of the receptacle; ?o - object to be thrown away, ?toolreceptacle - receptacle to throw the object in.
;; Preconditions: The toolreceptacle is a GarbageCanType, the agent is at a location and the receptacle is at the same location, and the agent is holding the object to be thrown away.
;; Postconditions: The object is no longer at any location.
(:action ThrowAwayObject2
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle GarbageCanType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
            (not (objectAtLocation ?o ?l))
        )
)

Preprocessed operator: ThrowAwayObject_1
Processed form: (:action ThrowAwayObject_1
        :parameters (?toolreceptacle - receptacle ?a - agent ?l - location ?o - object)

        :precondition (and 
		(receptacleType ?toolreceptacle GarbageCanType)
		(atLocation ?a ?l)
		(receptacleAtLocation ?toolreceptacle ?l)
		(holds ?a ?o)
		)
        :effect (and 
		(not (objectAtLocation ?o ?l))
		)
)
Trying to process...

;; Operator, ThrowAwayObject 3.
;; ThrowAwayObject 3 takes any object to throw away, a specific tool object of type TrashBagType, and a specific tool receptacle of type GarbageCanType.
;; TrashBagType and GarbageCanType are objectTypes, so both the tool object and tool receptacle are objects.
;; Parameters: ?a - agent, ?lTrashbag - location of the receptacle; ?lGarbageCan - location of the receptacle; ?o - object to be thrown away, ?trashbag - toolobject to hold the object, ?garbagecan - toolreceptacle to throw the object in.
;; Preconditions: The trashbag object is TrashBagType, the garbagecan receptacle is GarbageCanType, the agent is at a location and both the trashbag and garbagecan are at the same location, the agent is holding the object to be thrown away.
;; Postconditions: The object is no longer at any location.
(:action ThrowAwayObject3
        :parameters (?a - agent ?lTrashbag - location ?lGarbageCan - location ?o - object ?trashbag - object ?garbagecan - receptacle)
        :precondition (and
            (objectType ?trashbag TrashBagType)
            (receptacleType ?garbagecan GarbageCanType)
            (atLocation ?a ?lTrashbag)
            (atLocation ?garbagecan ?lGarbageCan)
            (objectAtLocation ?trashbag ?lTrashbag)
            (receptacleAtLocation ?garbagecan ?lGarbageCan)
            (holds ?a ?o)
        )
        :effect (and
            (not (objectAtLocation ?o ?lTrashbag))
        )
)

Preprocessed operator: ThrowAwayObject_2
Processed form: 
====
Trying to process...

(:action PlaceObjectOption1
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle BowlType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
            (inReceptacle ?o ?toolreceptacle)
        )
    )

Preprocessed operator: PlaceObject_0
Processed form: (:action PlaceObject_0
        :parameters (?a - agent ?l - location ?toolreceptacle - receptacle ?o - object)

        :precondition (and 
		(atLocation ?a ?l)
		(receptacleAtLocation ?toolreceptacle ?l)
		(holds ?a ?o)
		)
        :effect (and 
		(inReceptacle ?o ?toolreceptacle)
		)
)
Trying to process...

(:action PlaceObjectOption2
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject SpoonType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?o)
        )
        :effect (and
            (not (objectAtLocation ?o ?l))
            (atLocation ?o ?newLocation)
        )
    )

Preprocessed operator: PlaceObject_1
Processed form: (:action PlaceObject_1
        :parameters (?toolobject - object ?a - agent ?l - location ?o - object)

        :precondition (and 
		(objectType ?toolobject SpoonType)
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(holds ?a ?o)
		)
        :effect (and 
		(not (objectAtLocation ?o ?l))
		)
)
Trying to process...

(:action PlaceObjectOption3
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?o)
        )
        :effect (and
            (not (objectAtLocation ?o ?l))
            (atLocation ?o ?newLocation)
        )
    )

Preprocessed operator: PlaceObject_2
Processed form: (:action PlaceObject_2
        :parameters (?a - agent ?l - location ?o - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(holds ?a ?o)
		)
        :effect (and 
		(not (objectAtLocation ?o ?l))
		)
)
====
Trying to process...

;; Operator, WarmObject
;; WarmObject takes an object to warm and a specific tool of type MicrowaveType.
;; MicrowaveType is an rtype. Therefore, the tool is a receptacle.
;; Parameters: ?a - agent, ?l - location of the receptacle; ?o - object to be warmed, ?toolreceptacle - receptacle to warm the object in.
;; Preconditions: The toolreceptacle is a MicrowaveType, the agent is at a location and the receptacle is at the same location, and the agent is holding the object to be warmed.
;; Postconditions: the ?o object is now hot.
(:action WarmObject
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle MicrowaveType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
           (isHot ?o)
        )
    )

Preprocessed operator: WarmObject_0
Processed form: (:action WarmObject_0
        :parameters (?toolreceptacle - receptacle ?a - agent ?l - location ?o - object)

        :precondition (and 
		(receptacleType ?toolreceptacle MicrowaveType)
		(atLocation ?a ?l)
		(receptacleAtLocation ?toolreceptacle ?l)
		(holds ?a ?o)
		)
        :effect (and 
		(isHot ?o)
		)
)
Trying to process...

;; Operator, WarmObject
;; WarmObject takes an object to warm and a specific tool of type HeatSource.
;; HeatSource is an rtype. Therefore, the tool is a receptacle.
;; Parameters: ?a - agent, ?l - location of the receptacle; ?o - object to be warmed, ?toolreceptacle - receptacle to warm the object in.
;; Preconditions: The toolreceptacle is a HeatSource, the agent is at a location and the receptacle is at the same location, and the agent is holding the object to be warmed.
;; Postconditions: the ?o object is now hot.
(:action WarmObject
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle HeatSourceType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
           (isHot ?o)
        )
    )

Preprocessed operator: WarmObject_1
Processed form: (:action WarmObject_1
        :parameters (?a - agent ?l - location ?toolreceptacle - receptacle ?o - object)

        :precondition (and 
		(atLocation ?a ?l)
		(receptacleAtLocation ?toolreceptacle ?l)
		(holds ?a ?o)
		)
        :effect (and 
		(isHot ?o)
		)
)
Trying to process...

;; Operator, WarmObject
;; WarmObject takes an object to warm and a specific tool of type HeatSourceObject.
;; HeatSourceObject is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be warmed, ?toolobject - object to warm the object with.
;; Preconditions: The toolobject is a HeatSourceObjectType, the agent is at a location and the object is at the same location, and the agent is holding the object to be warmed.
;; Postconditions: the ?o object is now hot.
(:action WarmObject
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject HeatSourceObjectType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?o)
        )
        :effect (and
           (isHot ?o)
        )
    )

Preprocessed operator: WarmObject_2
Processed form: (:action WarmObject_2
        :parameters (?a - agent ?l - location ?o - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(holds ?a ?o)
		)
        :effect (and 
		(isHot ?o)
		)
)
====
Trying to process...

;; Operator, TakeObject1.
;; TakeObject1 takes an object to take.
;; This action is applicable to any object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be taken.
;; Preconditions: The agent is at a location and the object is at the same location.
;; Postconditions: the agent is now holding the object.
(:action TakeObject1
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
        )
        :effect (and
            (holds ?a ?o)
        )
    )

Preprocessed operator: TakeObject_0
Processed form: (:action TakeObject_0
        :parameters (?a - agent ?l - location ?o - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		)
        :effect (and 
		(holds ?a ?o)
		)
)
Trying to process...

;; Operator, TakeObject2.
;; TakeObject2 takes an object to take and a tool object of type GraspingToolType.
;; GraspingToolType is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be taken, ?toolobject - object to grasp the object with.
;; Preconditions: The toolobject is a GraspingToolType, the agent is at a location and the object to be taken is at the same location, and the agent is not already holding an object.
;; Postconditions: the agent is now holding the object.
(:action TakeObject2
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject GraspingToolType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (not (holdsAny ?a))
        )
        :effect (and
            (holds ?a ?o)
        )
    )

Preprocessed operator: TakeObject_1
Processed form: (:action TakeObject_1
        :parameters (?a - agent ?l - location ?o - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(not (holdsAny ?a))
		)
        :effect (and 
		(holds ?a ?o)
		)
)
Trying to process...

;; Operator, TakeObject3.
;; TakeObject3 takes an object to take and a tool object of type FingersType.
;; FingersType is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be taken, ?toolobject - object to grasp the object with.
;; Preconditions: The toolobject is a FingersType, the agent is at a location and the object to be taken is at the same location, and the agent is not already holding an object.
;; Postconditions: the agent is now holding the object.
(:action TakeObject3
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject FingersType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (not (holdsAny ?a))
        )
        :effect (and
            (holds ?a ?o)
        )
    )

Preprocessed operator: TakeObject_2
Processed form: (:action TakeObject_2
        :parameters (?a - agent ?l - location ?o - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(not (holdsAny ?a))
		)
        :effect (and 
		(holds ?a ?o)
		)
)
====
Trying to process...

(:action RinseObject
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject SprayerType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (rinsable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (isRinsed ?o)
        )
    )

Preprocessed operator: RinseObject_0
Processed form: 
Trying to process...

(:action RinsePlate
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle SinkBasinType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
           (isRinsed ?o)
        )
    )

Preprocessed operator: RinseObject_1
Processed form: 
Trying to process...

(:action RinseBook
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle DeskType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
           (isRinsed ?o)
        )
    )

Preprocessed operator: RinseObject_2
Processed form: 
====
Trying to process...

;; Operator, LookAtObject (Option 1)
;; LookAtObject takes an object to look at and a specific tool of type MirrorType.
;; MirrorType is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be looked at, ?toolobject - object to use for looking.
;; Preconditions: The toolobject is a MirrorType, the agent is at a location and the object to be looked at is at the same location, and the agent is holding the tool.
;; Postconditions: None.
(:action LookAtObject-1
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject MirrorType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?toolobject)
        )
        :effect (and)
    )

Preprocessed operator: LookAtObject_0
Processed form: 
Trying to process...

;; Operator, LookAtObject (Option 2)
;; LookAtObject takes an object to look at and a specific tool of type TelescopeType.
;; TelescopeType is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be looked at, ?toolobject - object to use for looking.
;; Preconditions: The toolobject is a TelescopeType, the agent is at a location and the object to be looked at is at the same location, and the agent is holding the tool.
;; Postconditions: None.
(:action LookAtObject-2
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject TelescopeType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?toolobject)
        )
        :effect (and)
    )

Preprocessed operator: LookAtObject_1
Processed form: 
Trying to process...

;; Operator, LookAtObject (Option 3)
;; LookAtObject takes an object to look at and does not require any tool.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be looked at.
;; Preconditions: The agent is at a location and the object to be looked at is at the same location.
;; Postconditions: None.
(:action LookAtObject-3
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
        )
        :effect (and)
    )

Preprocessed operator: LookAtObject_2
Processed form: 
====
Trying to process...

(:action InspectObjectWithTool
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject MagnifyingGlassType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (inspectable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (isInspected ?o)
        )
    )

Preprocessed operator: InspectObject_0
Processed form: 
Trying to process...

(:action InspectObject
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (inspectable ?o)
        )
        :effect (and
            (isInspected ?o)
        )
    )

Preprocessed operator: InspectObject_1
Processed form: 
Trying to process...

(:action InspectObjectWithReceptacle
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle MicroscopeType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?o)
        )
        :effect (and
            (isInspected ?o)
        )
    )

Preprocessed operator: InspectObject_2
Processed form: 
====
Trying to process...

;; Operator, ToastObject.
;; ToastObject takes an object to toast and a specific tool of type ToasterType.
;; ToasterType is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of the toaster; ?o - object to be toasted, ?toolobject - object to toast with.
;; Preconditions: The toolobject is a ToasterType, the agent is at a location and the toaster is at the same location, the object is toastable, and the agent is holding the tool.
;; Postconditions: the ?o object is now toasted.
(:action ToastObject
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject ToasterType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (toastable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (isToasted ?o)
        )
    )

Preprocessed operator: ToastObject_0
Processed form: 
Trying to process...

;; Operator, ToastObject.
;; ToastObject takes an object to toast and a specific tool object of type PanType.
;; PanType is an otype. Therefore, the tool is an object.
;; Parameters: ?a - agent, ?l - location of the pan; ?o - object to be toasted, ?toolobject - object to toast with.
;; Preconditions: The toolobject is a PanType, the agent is at a location and the pan is at the same location, the object is toastable, and the agent is holding the tool.
;; Postconditions: the ?o object is now toasted.
(:action ToastObject
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject PanType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (toastable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (isToasted ?o)
        )
    )

Preprocessed operator: ToastObject_1
Processed form: 
Trying to process...

;; Operator, ToastObject.
;; ToastObject takes an object to toast and a specific tool receptacle of type StoveBurnerType.
;; StoveBurnerType is an rtype. Therefore, the tool is a receptacle.
;; Parameters: ?a - agent, ?l - location of the stove; ?o - object to be toasted, ?toolreceptacle - receptacle to toast with.
;; Preconditions: The toolreceptacle is a StoveBurnerType, the agent is at a location and the stove is at the same location, the object is toastable, and the agent is holding the object to be toasted.
;; Postconditions: the ?o object is now toasted.
(:action ToastObject
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle StoveBurnerType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (toastable ?o)
            (holds ?a ?o)
        )
        :effect (and
            (isToasted ?o)
        )
    )

Preprocessed operator: ToastObject_2
Processed form: 
====
Trying to process...

(:action CookObjectWithToolObject
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject PanType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (cookable ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (isCooked ?o)
        )
    )

Preprocessed operator: CookObject_0
Processed form: 
Trying to process...

(:action CookObjectWithToolReceptacle
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle StoveBurnerType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
           (isCooked ?o)
        )
    )

Preprocessed operator: CookObject_1
Processed form: 
Trying to process...

(:action CookObjectWithoutTool
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (cookable ?o)
        )
        :effect (and
            (isCooked ?o)
        )
    )

Preprocessed operator: CookObject_2
Processed form: 
====
Trying to process...

;; Operator, UseObject - Option 1
;; UseObject takes an object that can be used.
;; This action is applicable to any object that can be used without any tools.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be used.
;; Preconditions: The agent is at a location and the object is at the same location, and the object is usable.
;; Postconditions: the ?o object is now used.
(:action UseObject
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (usable ?o)
        )
        :effect (and
            (isUsed ?o)
        )
)

Preprocessed operator: UseObject_0
Processed form: 
Trying to process...

;; Operator, UseObject - Option 2
;; UseObject takes an object and a specific tool object of certain types.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be used, ?toolobject - object to use the object with.
;; Preconditions: The agent is at a location and the object is at the same location, the object is usable, the agent is holding the toolobject, and the toolobject type is compatible with the object to be used.
;; Postconditions: the ?o object is now used.
(:action UseObject
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (usable ?o)
            (holds ?a ?toolobject)
            (compatibleToolObject ?o ?toolobject)
        )
        :effect (and
            (isUsed ?o)
        )
)

Preprocessed operator: UseObject_1
Processed form: 
Trying to process...

;; Operator, UseObject - Option 3
;; UseObject takes an object and a specific tool receptacle of certain types.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be used, ?toolreceptacle - object to use the object with.
;; Preconditions: The agent is at a location and the object is at the same location, the object is usable, the agent is holding the toolreceptacle, and the toolreceptacle type is compatible with the object to be used.
;; Postconditions: the ?o object is now used.
(:action UseObject
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (usable ?o)
            (holds ?a ?toolreceptacle)
            (compatibleToolReceptacle ?o ?toolreceptacle)
        )
        :effect (and
            (isUsed ?o)
        )
)

Preprocessed operator: UseObject_2
Processed form: 
====
Trying to process...

;; Operator, TurnOnLight.
;; TurnOnLight takes a light switch object of type LightSwitchType.
;; Parameters: ?a - agent, ?l - location of the light switch; ?o - light switch object.
;; Preconditions: The ?o light switch object is a LightSwitchType, the agent is at the location ?l, and the light switch is at the location ?l.
;; Postconditions: The light switch is now turned on.
(:action TurnOnLight
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (objectType ?o LightSwitchType)
            (atLocation ?o ?l)
            (atLocation ?a ?l)
        )
        :effect (and
            (isOn ?o)
        )
    )

Preprocessed operator: TurnOnLight_0
Processed form: (:action TurnOnLight_0
        :parameters (?o - object ?a - agent ?l - location)

        :precondition (and 
		(objectType ?o LightSwitchType)
		(atLocation ?a ?l)
		)
        :effect (and 
		(isOn ?o)
		)
)
Trying to process...

;; Operator, TurnOnLight.
;; TurnOnLight takes a lamp object of type FloorLampType as a tool object.
;; Parameters: ?a - agent, ?l - location of the lamp; ?o - lamp object; ?toolobject - floor lamp object.
;; Preconditions: The ?o lamp object is a FloorLampType, the agent is at the location ?l, the lamp is at the location ?l, and the agent is holding the floor lamp.
;; Postconditions: The ?o lamp object is now turned on.
(:action TurnOnLight
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?o FloorLampType)
            (atLocation ?o ?l)
            (holds ?a ?toolobject)
            (holds ?a ?o)
        )
        :effect (and
            (isOn ?o)
        )
    )

Preprocessed operator: TurnOnLight_1
Processed form: (:action TurnOnLight_1
        :parameters (?o - object ?a - agent ?toolobject - object)

        :precondition (and 
		(objectType ?o FloorLampType)
		(holds ?a ?toolobject)
		(holds ?a ?o)
		)
        :effect (and 
		(isOn ?o)
		)
)
Trying to process...

;; Operator, TurnOnLight.
;; TurnOnLight takes a lamp object of type DeskLampType as a tool object and a table of type DeskType as a tool receptacle.
;; Parameters: ?a - agent, ?l - location of the lamp; ?o - lamp object; ?toolobject - desk lamp object; ?toolreceptacle - desk table object.
;; Preconditions: The ?o lamp object is a DeskLampType, the agent is at the location ?l, the lamp is at the location ?l, the agent is holding the desk lamp, and the desk table is at the location ?l.
;; Postconditions: The ?o lamp object is now turned on.
(:action TurnOnLight
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object ?toolreceptacle - object)
        :precondition (and
            (objectType ?o DeskLampType)
            (atLocation ?o ?l)
            (receptacleType ?toolreceptacle DeskType)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?toolobject)
            (holds ?a ?o)
        )
        :effect (and
            (isOn ?o)
        )
    )

Preprocessed operator: TurnOnLight_2
Processed form: 
====
Trying to process...

;; Operator, InvestigateObject without using any tool objects or tool receptacles.
;; InvestigateObject takes any object to investigate.
;; This action is applicable to any object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be investigated.
;; Preconditions: The agent is at a location and the object is at the same location.
;; Postconditions: the agent knows more information about the ?o object.
(:action InvestigateObject
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
        )
        :effect (and
            (knowsMore ?a ?o)
        )
)

Preprocessed operator: InvestigateObject_0
Processed form: 
Trying to process...

;; Operator, InvestigateObject using a specific tool object of type MagnifyingGlassType.
;; MagnifyingGlassType is an otype. Therefore, the tool object is an object.
;; InvestigateObject takes any object to investigate.
;; This action is applicable to any object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be investigated; ?toolobject - object to investigate with.
;; Preconditions: The toolobject is a MagnifyingGlassType, the agent is at a location and the object is at the same location, and the agent is holding the tool.
;; Postconditions: the agent knows more information about the ?o object.
(:action InvestigateObject
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (objectType ?toolobject MagnifyingGlassType)
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?toolobject)
        )
        :effect (and
            (knowsMore ?a ?o)
        )
)

Preprocessed operator: InvestigateObject_1
Processed form: 
Trying to process...

;; Operator, InvestigateObject using a specific tool receptacle of type MicroscopeType.
;; MicroscopeType is an rtype. Therefore, the tool receptacle is a receptacle.
;; InvestigateObject takes any object to investigate.
;; This action is applicable to any object.
;; Parameters: ?a - agent, ?l - location of the object; ?o - object to be investigated; ?toolreceptacle - receptacle to investigate with.
;; Preconditions: The toolreceptacle is a MicroscopeType, the agent is at a location and the receptacle is at the same location, and the agent is holding the object to be investigated.
;; Postconditions: the agent knows more information about the ?o object.
(:action InvestigateObject
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (receptacleType ?toolreceptacle MicroscopeType)
            (atLocation ?a ?l)
            (receptacleAtLocation ?toolreceptacle ?l)
            (holds ?a ?o)
        )
        :effect (and
            (knowsMore ?a ?o)
        )
)

Preprocessed operator: InvestigateObject_2
Processed form: 
====
Trying to process...

(:action DropObject
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (holds ?a ?o)
        )
        :effect (and
            (atLocation ?o ?l)
            (not (holds ?a ?o))
        )
    )

Preprocessed operator: DropObject_0
Processed form: (:action DropObject_0
        :parameters (?a - agent ?l - location ?o - agent)

        :precondition (and 
		(atLocation ?a ?l)
		(holds ?a ?o)
		)
        :effect (and 
		(atLocation ?o ?l)
		)
)
Trying to process...

(:action DropObjectInReceptacle
        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (receptacleAtLocation ?r ?l)
            (holds ?a ?o)
        )
        :effect (and
            (inReceptacle ?o ?r)
            (not (holds ?a ?o))
        )
    )

Preprocessed operator: DropObject_1
Processed form: (:action DropObject_1
        :parameters (?a - agent ?l - location ?o - object ?r - receptacle)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(receptacleAtLocation ?r ?l)
		(holds ?a ?o)
		)
        :effect (and 
		(inReceptacle ?o ?r)
		(not (holds ?a ?o))
		)
)
Trying to process...

(:action DropObjectWithTool
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?o)
            (holds ?a ?toolobject)
        )
        :effect (and
            (atLocation ?o ?l)
            (not (holds ?a ?o))
            (not (holds ?a ?toolobject))
        )
    )

Preprocessed operator: DropObject_2
Processed form: (:action DropObject_2
        :parameters (?a - agent ?l - location ?o - agent ?toolobject - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(holds ?a ?o)
		(holds ?a ?toolobject)
		)
        :effect (and 
		(atLocation ?o ?l)
		(not (holds ?a ?toolobject))
		)
)
====
Trying to process...

(:action ThrowObjectWithTool
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?toolobject)
            (throwable ?toolobject)
        )
        :effect (and
            (not (objectAtLocation ?o ?l))
            (thrown ?o)
        )
    )

Preprocessed operator: ThrowObject_0
Processed form: (:action ThrowObject_0
        :parameters (?a - agent ?l - location ?o - object ?toolobject - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(holds ?a ?toolobject)
		)
        :effect (and 
		(not (objectAtLocation ?o ?l))
		)
)
Trying to process...

(:action ThrowObjectWithReceptacle
        :parameters (?a - agent ?l - location ?o - object ?toolreceptacle - receptacle)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (holds ?a ?o)
            (throwable ?toolreceptacle)
        )
        :effect (and
            (not (objectAtLocation ?o ?l))
            (thrown ?o)
        )
    )

Preprocessed operator: ThrowObject_1
Processed form: (:action ThrowObject_1
        :parameters (?a - agent ?l - location ?o - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(holds ?a ?o)
		)
        :effect (and 
		(not (objectAtLocation ?o ?l))
		)
)
Trying to process...

(:action ThrowObjectWithoutTool
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
        )
        :effect (and
            (not (objectAtLocation ?o ?l))
            (thrown ?o)
        )
    )

Preprocessed operator: ThrowObject_2
Processed form: (:action ThrowObject_2
        :parameters (?a - agent ?l - location ?o - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		)
        :effect (and 
		(not (objectAtLocation ?o ?l))
		)
)
====
Trying to process...

;; Operator, TurnOnLamp - Operator that turns on a lamp.
;; TurnOnLamp takes a lamp object.
;; Parameters: ?a - agent, ?l - location of the lamp, ?o - lamp object.
;; Preconditions: The agent is at a location and the lamp is at the same location, and the lamp object is toggleable and off.
;; Postconditions: The lamp object is on.
(:action TurnOnLamp
        :parameters (?a - agent ?l - location ?o - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (toggleable ?o)
            (isOff ?o)
        )
        :effect (and
            (isOn ?o)
        )
)

Preprocessed operator: TurnOnLamp_0
Processed form: (:action TurnOnLamp_0
        :parameters (?a - agent ?l - location ?o - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(toggleable ?o)
		)
        :effect (and 
		(isOn ?o)
		)
)
Trying to process...

;; Operator, TurnOnLampWithSwitch - Operator that turns on a lamp using a switch.
;; TurnOnLampWithSwitch takes a lamp object and a switch object.
;; Parameters: ?a - agent, ?l - location of the lamp, ?o - lamp object, ?switch - switch object.
;; Preconditions: The agent is at a location and the lamp and switch are at the same location, and the lamp object is toggleable and off, and the switch object is toggleable and off.
;; Postconditions: The lamp object is on, and the switch object is toggled.
(:action TurnOnLampWithSwitch
        :parameters (?a - agent ?l - location ?o - object ?switch - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (objectAtLocation ?switch ?l)
            (toggleable ?o)
            (isOff ?o)
            (toggleable ?switch)
            (isOff ?switch)
        )
        :effect (and
            (isOn ?o)
            (isToggled ?switch)
        )
)

Preprocessed operator: TurnOnLamp_1
Processed form: (:action TurnOnLamp_1
        :parameters (?a - agent ?l - location ?o - object ?switch - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(objectAtLocation ?switch ?l)
		(toggleable ?o)
		(toggleable ?switch)
		)
        :effect (and 
		(isOn ?o)
		(isToggled ?switch)
		)
)
Trying to process...

;; Operator, TurnOnLampWithBulb - Operator that turns on a lamp using a bulb.
;; TurnOnLampWithBulb takes a lamp object and a bulb object.
;; Parameters: ?a - agent, ?l - location of the lamp, ?o - lamp object, ?bulb - bulb object.
;; Preconditions: The agent is at a location and the lamp and bulb are at the same location, and the lamp object is toggleable and off, and the bulb object is toggleable and off.
;; Postconditions: The lamp object is on, and the bulb object is toggled.
(:action TurnOnLampWithBulb
        :parameters (?a - agent ?l - location ?o - object ?bulb - object)
        :precondition (and
            (atLocation ?a ?l)
            (objectAtLocation ?o ?l)
            (objectAtLocation ?bulb ?l)
            (toggleable ?o)
            (isOff ?o)
            (toggleable ?bulb)
            (isOff ?bulb)
        )
        :effect (and
            (isOn ?o)
            (isToggled ?bulb)
        )
)

Preprocessed operator: TurnOnLamp_2
Processed form: (:action TurnOnLamp_2
        :parameters (?a - agent ?l - location ?o - object ?bulb - object)

        :precondition (and 
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(objectAtLocation ?bulb ?l)
		(toggleable ?o)
		(toggleable ?bulb)
		)
        :effect (and 
		(isOn ?o)
		(isToggled ?bulb)
		)
)
====
Logging preprocessed operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_preprocessed_operators.csv
task_planner.attempt_task_plan_for_problem: attempt 0 : 0 / 245, train/look_at_obj_in_light-RemoteControl-None-FloorLamp-202/trial_T20190909_014548_223224
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 52 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'CutObject_2', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'HeatObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'ChillObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	examine a remote control by the light of a tall lamp.
	 Ground truth goal: 
	(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RemoteControlType)
                (holds ?a ?o)
            )
    ))))))
	 Proposed goal:
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	(:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o RemoteControlType)
		(holds ?a ?o))))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_10_bar_6_bar_2_bar_30 loc_bar_4_bar_4_bar_2_bar_60)
(takeobject_0 agent1 loc_bar_4_bar_4_bar_2_bar_60 remotecontrol_3_dot_520442248_comma_3_dot_520442248_comma_2_dot_1829792_comma_2_dot_1829792_comma_0_dot_965454_comma_0_dot_965454)
(gotolocation agent1 loc_bar_4_bar_4_bar_2_bar_60 loc_bar__minus_15_bar_14_bar_0_bar_0)
(turnonlamp_1 agent1 loc_bar__minus_15_bar_14_bar_0_bar_0 floorlamp__minus_14_dot_748_comma__minus_14_dot_748_comma_16_dot_056_comma_16_dot_056_comma_0_dot_0001871585844_comma_0_dot_0001871585844 floorlamp__minus_14_dot_748_comma__minus_14_dot_748_comma_16_dot_056_comma_16_dot_056_comma_0_dot_0001871585844_comma_0_dot_0001871585844)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 0 / 245
Motion planning for: train/look_at_obj_in_light-RemoteControl-None-FloorLamp-202/trial_T20190909_014548_223224
Proposed goal is: 
(:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o RemoteControlType)
		(holds ?a ?o))))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RemoteControlType)
                (holds ?a ?o)
            )
    ))))))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['remotecontrol'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'TurnOnLamp_1', 'postcondition_ground_predicates': [{'predicate_name': 'isOn', 'arguments': ['floorlamp'], 'is_neg': False}, {'predicate_name': 'isToggled', 'arguments': ['floorlamp'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'toggleable', 'arguments': ['floorlamp'], 'is_neg': False}, {'predicate_name': 'toggleable', 'arguments': ['floorlamp'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation remotecontrol)
(PickupObject remotecontrol)
(GotoLocation floorlamp)
(ToggleObject floorlamp)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'toggleable', 'arguments': ['floorlamp'], 'is_neg': False}

{'predicate_name': 'isToggled', 'arguments': ['floorlamp'], 'is_neg': False}

{'predicate_name': 'holds', 'arguments': ['?a', 'remotecontrol'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['remotecontrol'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('RemoteControl|-00.85|+00.55|+00.65',),
 ('RemoteControl|+00.88|+00.24|+00.55',),
 ('RemoteControl|-01.65|+00.71|+03.76',),
 ('RemoteControl|-00.60|+00.55|+00.56',)]

PERMISSIBLE OBJECT SET:
[('RemoteControl|-00.85|+00.55|+00.65',),
 ('RemoteControl|+00.88|+00.24|+00.55',),
 ('RemoteControl|-01.65|+00.71|+03.76',),
 ('RemoteControl|-00.60|+00.55|+00.56',)]


Permissible Objects:
('RemoteControl|-00.85|+00.55|+00.65',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "RemoteControl|-00.85|+00.55|+00.65"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "RemoteControl|-00.85|+00.55|+00.65"})]
Action feasible: True

OPERATOR:
{'action': 'TurnOnLamp_1',
 'postcondition_ground_predicates': [{'arguments': ['floorlamp'],
                                      'is_neg': False,
                                      'predicate_name': 'isOn'},
                                     {'arguments': ['floorlamp'],
                                      'is_neg': False,
                                      'predicate_name': 'isToggled'}],
 'precondition_ground_predicates': [{'arguments': ['floorlamp'],
                                     'is_neg': False,
                                     'predicate_name': 'toggleable'},
                                    {'arguments': ['floorlamp'],
                                     'is_neg': False,
                                     'predicate_name': 'toggleable'}]}

GOAL OBJECT SET:
[('FloorLamp|-03.69|+00.00|+04.01',), ('FloorLamp|-03.69|+00.00|+04.01',)]

PERMISSIBLE OBJECT SET:
[('FloorLamp|-03.69|+00.00|+04.01',),
 ('FloorLamp|-03.69|+00.00|+04.01', 'RemoteControl|-00.85|+00.55|+00.65')]


Permissible Objects:
('FloorLamp|-03.69|+00.00|+04.01',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "FloorLamp|-03.69|+00.00|+04.01"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "FloorLamp|-03.69|+00.00|+04.01"})]
Action feasible: True


Motion plan operator success!: {'action': 'TurnOnLamp_1', 'postcondition_ground_predicates': [{'predicate_name': 'isOn', 'arguments': ['floorlamp'], 'is_neg': False}, {'predicate_name': 'isToggled', 'arguments': ['floorlamp'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'toggleable', 'arguments': ['floorlamp'], 'is_neg': False}, {'predicate_name': 'toggleable', 'arguments': ['floorlamp'], 'is_neg': False}]}
=============================================
Problem Number: 0
Problem ID: train/look_at_obj_in_light-RemoteControl-None-FloorLamp-202/trial_T20190909_014548_223224
Motion plan result: task_success: True
Total Actions Taken: 2
=============================================
Top operators after success are:
TakeObject_0 1.0 1.1 / 1.1
TurnOnLamp_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
SliceObject_2 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
CoolObject_2 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
WashObject_1 1.0 0.1 / 0.1
WashObject_2 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
CutObject_2 1.0 0.1 / 0.1
ChillObject_0 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_0 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
HeatObject_2 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_0 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
WarmObject_1 1.0 0.1 / 0.1
WarmObject_2 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 1 / 1 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 1 / 245, train/look_at_obj_in_light-RemoteControl-None-FloorLamp-208/trial_T20190908_214829_482790
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 52 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'CutObject_2', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'HeatObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'ChillObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	examine a remote control using the light of a floor lamp.
	 Ground truth goal: 
	(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RemoteControlType)
                (holds ?a ?o)
            )
    ))))))
	 Proposed goal:
	(:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o RemoteControlType)
		(holds ?a ?o))))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_7_bar_2_bar_2_bar_30 loc_bar_5_bar_3_bar_1_bar_0)
(gotolocation agent1 loc_bar_5_bar_3_bar_1_bar_0 loc_bar__minus_5_bar_8_bar_1_bar_60)
(takeobject_0 agent1 loc_bar__minus_5_bar_8_bar_1_bar_60 remotecontrol__minus_1_dot_614460228_comma__minus_1_dot_614460228_comma_7_dot_75475504_comma_7_dot_75475504_comma_1_dot_569454_comma_1_dot_569454)
(gotolocation agent1 loc_bar__minus_5_bar_8_bar_1_bar_60 loc_bar_5_bar_3_bar_1_bar_0)
(turnonlamp_1 agent1 loc_bar_5_bar_3_bar_1_bar_0 floorlamp_6_dot_84815932_comma_6_dot_84815932_comma_1_dot_49665022_comma_1_dot_49665022_comma_0_dot_0_comma_0_dot_0 floorlamp_6_dot_84815932_comma_6_dot_84815932_comma_1_dot_49665022_comma_1_dot_49665022_comma_0_dot_0_comma_0_dot_0)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 1 / 245
Motion planning for: train/look_at_obj_in_light-RemoteControl-None-FloorLamp-208/trial_T20190908_214829_482790
Proposed goal is: 
(:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o RemoteControlType)
		(holds ?a ?o))))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RemoteControlType)
                (holds ?a ?o)
            )
    ))))))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['remotecontrol'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'TurnOnLamp_1', 'postcondition_ground_predicates': [{'predicate_name': 'isOn', 'arguments': ['floorlamp'], 'is_neg': False}, {'predicate_name': 'isToggled', 'arguments': ['floorlamp'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'toggleable', 'arguments': ['floorlamp'], 'is_neg': False}, {'predicate_name': 'toggleable', 'arguments': ['floorlamp'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation armchair)
(PickupObject remotecontrol)
(GotoLocation floorlamp)
(ToggleObject floorlamp)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'toggleable', 'arguments': ['floorlamp'], 'is_neg': False}

{'predicate_name': 'isToggled', 'arguments': ['floorlamp'], 'is_neg': False}

{'predicate_name': 'holds', 'arguments': ['?a', 'remotecontrol'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['remotecontrol'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('RemoteControl|-00.40|+00.39|+01.94',)]

PERMISSIBLE OBJECT SET:
[('RemoteControl|-00.40|+00.39|+01.94',)]


Permissible Objects:
('RemoteControl|-00.40|+00.39|+01.94',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "RemoteControl|-00.40|+00.39|+01.94"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "RemoteControl|-00.40|+00.39|+01.94"})]
Action feasible: True

OPERATOR:
{'action': 'TurnOnLamp_1',
 'postcondition_ground_predicates': [{'arguments': ['floorlamp'],
                                      'is_neg': False,
                                      'predicate_name': 'isOn'},
                                     {'arguments': ['floorlamp'],
                                      'is_neg': False,
                                      'predicate_name': 'isToggled'}],
 'precondition_ground_predicates': [{'arguments': ['floorlamp'],
                                     'is_neg': False,
                                     'predicate_name': 'toggleable'},
                                    {'arguments': ['floorlamp'],
                                     'is_neg': False,
                                     'predicate_name': 'toggleable'}]}

GOAL OBJECT SET:
[('FloorLamp|+01.71|+00.00|+00.37',), ('FloorLamp|+01.71|+00.00|+00.37',)]

PERMISSIBLE OBJECT SET:
[('FloorLamp|+01.71|+00.00|+00.37',),
 ('FloorLamp|+01.71|+00.00|+00.37', 'RemoteControl|-00.40|+00.39|+01.94')]


Permissible Objects:
('FloorLamp|+01.71|+00.00|+00.37',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "FloorLamp|+01.71|+00.00|+00.37"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "FloorLamp|+01.71|+00.00|+00.37"})]
Action feasible: True


Motion plan operator success!: {'action': 'TurnOnLamp_1', 'postcondition_ground_predicates': [{'predicate_name': 'isOn', 'arguments': ['floorlamp'], 'is_neg': False}, {'predicate_name': 'isToggled', 'arguments': ['floorlamp'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'toggleable', 'arguments': ['floorlamp'], 'is_neg': False}, {'predicate_name': 'toggleable', 'arguments': ['floorlamp'], 'is_neg': False}]}
=============================================
Problem Number: 1
Problem ID: train/look_at_obj_in_light-RemoteControl-None-FloorLamp-208/trial_T20190908_214829_482790
Motion plan result: task_success: True
Total Actions Taken: 2
=============================================
Top operators after success are:
TakeObject_0 1.0 2.1 / 2.1
TurnOnLamp_1 1.0 2.1 / 2.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
SliceObject_2 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
CoolObject_2 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
WashObject_1 1.0 0.1 / 0.1
WashObject_2 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
CutObject_2 1.0 0.1 / 0.1
ChillObject_0 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_0 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
HeatObject_2 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_0 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
WarmObject_1 1.0 0.1 / 0.1
WarmObject_2 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 2 / 245, train/look_at_obj_in_light-Bowl-None-DeskLamp-327/trial_T20190907_094422_792919
Now attempting to plan for goal: 0 / 4
	Running planner with existing operators + 52 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'CutObject_2', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'HeatObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'ChillObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	turn on the lamp on the desk while holding the bowl.
	 Ground truth goal: 
	(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BowlType)
                (holds ?a ?o)
            )
    ))))))
	 Proposed goal:
	(:goal
	(exists (?ot - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(holds ?a Bowl)))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: False
	 Plan string: Plan not found with FD! Error: INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpr44keifp /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpz7zg2qn9 --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpbf7yat1g
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.007s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 412 rules.
Computing model... [0.060s CPU, 0.052s wall-clock]
2824 relevant atoms
5097 auxiliary atoms
7921 final queue length
10758 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.090s CPU, 0.086s wall-clock]
No relaxed solution! Generating unsolvable task...
Translator variables: 1
Translator derived variables: 0
Translator facts: 2
Translator goal facts: 1
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 0
Translator axioms: 0
Translator task size: 4
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.090s CPU, 0.091s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpbf7yat1g
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpbf7yat1g
[t=0.000104345s, 408510704 KB] reading input...
[t=0.000408032s, 408510704 KB] done reading input!
[t=0.00416609s, 408520944 KB] Initializing landmark sum heuristic...
[t=0.00418372s, 408520944 KB] Generating landmark graph...
[t=0.00418926s, 408520944 KB] Building a landmark graph with reasonable orders.
[t=0.00419213s, 408520944 KB] Initializing Exploration...
[t=0.00419861s, 408520944 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.00421689s, 408520944 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00422374s, 408520944 KB] Landmarks generation time: 3.3866e-05s
[t=0.00422747s, 408520944 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00423218s, 408520944 KB] 1 edges
[t=0.00423464s, 408520944 KB] approx. reasonable orders
[t=0.00423891s, 408520944 KB] approx. obedient reasonable orders
[t=0.00424149s, 408520944 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00424448s, 408520944 KB] Landmarks generation time: 5.9122e-05s
[t=0.00424961s, 408520944 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00425207s, 408520944 KB] 1 edges
[t=0.00425609s, 408520944 KB] Landmark graph generation time: 7.38e-05s
[t=0.00425838s, 408520944 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0042633s, 408520944 KB] Landmark graph contains 1 orderings.
[t=0.00427355s, 408520944 KB] Simplifying 0 unary operators... done! [0 unary operators]
[t=0.00427983s, 408520944 KB] time to simplify: 7.749e-06s
[t=0.00428302s, 408520944 KB] Initializing additive heuristic...
[t=0.00428589s, 408520944 KB] Initializing FF heuristic...
[t=0.00431181s, 408520944 KB] Building successor generator...done!
[t=0.00432132s, 408520944 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00432595s, 408520944 KB] time for successor generation creation: 1.845e-06s
[t=0.00432849s, 408520944 KB] Variables: 1
[t=0.00433177s, 408520944 KB] FactPairs: 2
[t=0.00433407s, 408520944 KB] Bytes per state: 4
[t=0.00435773s, 408520944 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00436486s, 408520944 KB] 1 initial landmarks, 1 goal landmarks
[t=0.00437388s, 408520944 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity
[t=0.00437876s, 408520944 KB] Completely explored state space -- no solution!
[t=0.00438093s, 408520944 KB] Actual search time: 1.3202e-05s
[t=0.00438573s, 408520944 KB] Expanded 0 state(s).
[t=0.00438573s, 408520944 KB] Reopened 0 state(s).
[t=0.00438573s, 408520944 KB] Evaluated 1 state(s).
[t=0.00438573s, 408520944 KB] Evaluations: 1
[t=0.00438573s, 408520944 KB] Generated 0 state(s).
[t=0.00438573s, 408520944 KB] Dead ends: 1 state(s).
[t=0.00438573s, 408520944 KB] Number of registered states: 1
[t=0.00438573s, 408520944 KB] Int hash set load factor: 1/1 = 1
[t=0.00438573s, 408520944 KB] Int hash set resizes: 0
[t=0.00438573s, 408520944 KB] Search time: 2.8167e-05s
[t=0.00438573s, 408520944 KB] Total time: 0.00438573s
Search stopped without finding a solution.
Peak memory: 408520944 KB
search exit code: 12

Driver aborting after search
INFO     Planner time: 0.14s
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 2 / 245, train/look_at_obj_in_light-Bowl-None-DeskLamp-327/trial_T20190907_094422_792919
Now attempting to plan for goal: 1 / 4
	Running planner with existing operators + 52 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'CutObject_2', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'HeatObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'ChillObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	turn on the lamp on the desk while holding the bowl.
	 Ground truth goal: 
	(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BowlType)
                (holds ?a ?o)
            )
    ))))))
	 Proposed goal:
	(:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?o BowlType)
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(holds ?a ?o))))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	 Plan string: (gotolocation agent1 loc_bar__minus_1_bar__minus_7_bar_2_bar_30 loc_bar__minus_3_bar__minus_10_bar_3_bar_45)
(gotolocation agent1 loc_bar__minus_3_bar__minus_10_bar_3_bar_45 loc_bar__minus_3_bar__minus_9_bar_3_bar_60)
(takeobject_0 agent1 loc_bar__minus_3_bar__minus_9_bar_3_bar_60 bowl__minus_5_dot_82908772_comma__minus_5_dot_82908772_comma__minus_8_dot_76445864_comma__minus_8_dot_76445864_comma_2_dot_7967176_comma_2_dot_7967176)
(gotolocation agent1 loc_bar__minus_3_bar__minus_9_bar_3_bar_60 loc_bar__minus_3_bar__minus_10_bar_3_bar_45)
(turnonlamp_1 agent1 loc_bar__minus_3_bar__minus_10_bar_3_bar_45 desklamp__minus_5_dot_95776844_comma__minus_5_dot_95776844_comma__minus_9_dot_6770506_comma__minus_9_dot_6770506_comma_2_dot_7722584_comma_2_dot_7722584 desklamp__minus_5_dot_95776844_comma__minus_5_dot_95776844_comma__minus_9_dot_6770506_comma__minus_9_dot_6770506_comma_2_dot_7722584_comma_2_dot_7722584)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 2 / 245
Motion planning for: train/look_at_obj_in_light-Bowl-None-DeskLamp-327/trial_T20190907_094422_792919
Proposed goal is: 
(:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?o BowlType)
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(holds ?a ?o))))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BowlType)
                (holds ?a ?o)
            )
    ))))))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['bowl'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'TurnOnLamp_1', 'postcondition_ground_predicates': [{'predicate_name': 'isOn', 'arguments': ['desklamp'], 'is_neg': False}, {'predicate_name': 'isToggled', 'arguments': ['desklamp'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'toggleable', 'arguments': ['desklamp'], 'is_neg': False}, {'predicate_name': 'toggleable', 'arguments': ['desklamp'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation dresser)
(PickupObject bowl)
(GotoLocation desklamp)
(ToggleObject desklamp)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'toggleable', 'arguments': ['desklamp'], 'is_neg': False}

{'predicate_name': 'isToggled', 'arguments': ['desklamp'], 'is_neg': False}

{'predicate_name': 'holds', 'arguments': ['?a', 'bowl'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['bowl'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Bowl|-01.46|+00.70|-02.19',)]

PERMISSIBLE OBJECT SET:
[('Bowl|-01.46|+00.70|-02.19',)]


Permissible Objects:
('Bowl|-01.46|+00.70|-02.19',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bowl|-01.46|+00.70|-02.19"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bowl|-01.46|+00.70|-02.19"})]
Action feasible: True

OPERATOR:
{'action': 'TurnOnLamp_1',
 'postcondition_ground_predicates': [{'arguments': ['desklamp'],
                                      'is_neg': False,
                                      'predicate_name': 'isOn'},
                                     {'arguments': ['desklamp'],
                                      'is_neg': False,
                                      'predicate_name': 'isToggled'}],
 'precondition_ground_predicates': [{'arguments': ['desklamp'],
                                     'is_neg': False,
                                     'predicate_name': 'toggleable'},
                                    {'arguments': ['desklamp'],
                                     'is_neg': False,
                                     'predicate_name': 'toggleable'}]}

GOAL OBJECT SET:
[('DeskLamp|-01.49|+00.69|-02.42',), ('DeskLamp|-01.49|+00.69|-02.42',)]

PERMISSIBLE OBJECT SET:
[('DeskLamp|-01.49|+00.69|-02.42',),
 ('DeskLamp|-01.49|+00.69|-02.42', 'Bowl|-01.46|+00.70|-02.19')]


Permissible Objects:
('DeskLamp|-01.49|+00.69|-02.42',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "DeskLamp|-01.49|+00.69|-02.42"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "DeskLamp|-01.49|+00.69|-02.42"})]
Action feasible: True


Motion plan operator success!: {'action': 'TurnOnLamp_1', 'postcondition_ground_predicates': [{'predicate_name': 'isOn', 'arguments': ['desklamp'], 'is_neg': False}, {'predicate_name': 'isToggled', 'arguments': ['desklamp'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'toggleable', 'arguments': ['desklamp'], 'is_neg': False}, {'predicate_name': 'toggleable', 'arguments': ['desklamp'], 'is_neg': False}]}
=============================================
Problem Number: 2
Problem ID: train/look_at_obj_in_light-Bowl-None-DeskLamp-327/trial_T20190907_094422_792919
Motion plan result: task_success: True
Total Actions Taken: 2
=============================================
Top operators after success are:
TakeObject_0 1.0 3.1 / 3.1
TurnOnLamp_1 1.0 3.1 / 3.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
SliceObject_2 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
CoolObject_2 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
WashObject_1 1.0 0.1 / 0.1
WashObject_2 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
CutObject_2 1.0 0.1 / 0.1
ChillObject_0 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_0 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
HeatObject_2 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_0 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
WarmObject_1 1.0 0.1 / 0.1
WarmObject_2 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 3 / 3 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 3 / 245, train/look_at_obj_in_light-CD-None-DeskLamp-316/trial_T20190909_114522_623490
Now attempting to plan for goal: 0 / 4
	Running planner with existing operators + 52 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'CutObject_2', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'HeatObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'ChillObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	carry a cd while turning on a lamp.
	 Ground truth goal: 
	(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CDType)
                (holds ?a ?o)
            )
    ))))))
	 Proposed goal:
	(:goal
	(exists (?o2 - object)
(exists (?o1 - object)
(exists (?a - agent)
(and 
		(objectType ?o1 CDType)
		(objectType ?o2 LightSwitchType)
		(toggleable ?o2)
		(isToggled ?o2)
		(holds ?a ?o1)))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: False
	 Plan string: Plan not found with FD! Error: INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpy_kfwoe7 /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp4m38f52s --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpv674h6ak
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.007s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 412 rules.
Computing model... [0.040s CPU, 0.043s wall-clock]
2003 relevant atoms
4330 auxiliary atoms
6333 final queue length
7995 total queue pushes
Completing instantiation... [0.020s CPU, 0.014s wall-clock]
Instantiating: [0.070s CPU, 0.070s wall-clock]
No relaxed solution! Generating unsolvable task...
Translator variables: 1
Translator derived variables: 0
Translator facts: 2
Translator goal facts: 1
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 0
Translator axioms: 0
Translator task size: 4
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.080s CPU, 0.074s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpv674h6ak
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpv674h6ak
[t=0.000102951s, 408500464 KB] reading input...
[t=0.000155882s, 408500464 KB] done reading input!
[t=0.0036262s, 408500464 KB] Initializing landmark sum heuristic...
[t=0.00363186s, 408500464 KB] Generating landmark graph...
[t=0.00363576s, 408500464 KB] Building a landmark graph with reasonable orders.
[t=0.00363797s, 408500464 KB] Initializing Exploration...
[t=0.0036408s, 408500464 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.00365359s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00365679s, 408500464 KB] Landmarks generation time: 2.0869e-05s
[t=0.00365925s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00366187s, 408500464 KB] 1 edges
[t=0.00366495s, 408500464 KB] approx. reasonable orders
[t=0.00366876s, 408500464 KB] approx. obedient reasonable orders
[t=0.00367311s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00367491s, 408500464 KB] Landmarks generation time: 4.2271e-05s
[t=0.00367799s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00368205s, 408500464 KB] 1 edges
[t=0.00368377s, 408500464 KB] Landmark graph generation time: 5.3177e-05s
[t=0.00368565s, 408500464 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00368775s, 408500464 KB] Landmark graph contains 1 orderings.
[t=0.00369676s, 408500464 KB] Simplifying 0 unary operators... done! [0 unary operators]
[t=0.00369988s, 408500464 KB] time to simplify: 4.51e-06s
[t=0.00370218s, 408500464 KB] Initializing additive heuristic...
[t=0.00370382s, 408500464 KB] Initializing FF heuristic...
[t=0.00372452s, 408500464 KB] Building successor generator...done!
[t=0.00373391s, 408500464 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00373608s, 408500464 KB] time for successor generation creation: 1.558e-06s
[t=0.00373826s, 408500464 KB] Variables: 1
[t=0.00373998s, 408500464 KB] FactPairs: 2
[t=0.00374162s, 408500464 KB] Bytes per state: 4
[t=0.00376384s, 408500464 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00376798s, 408500464 KB] 1 initial landmarks, 1 goal landmarks
[t=0.00377421s, 408500464 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity
[t=0.00377762s, 408500464 KB] Completely explored state space -- no solution!
[t=0.00378094s, 408500464 KB] Actual search time: 1.2136e-05s
[t=0.003785s, 408500464 KB] Expanded 0 state(s).
[t=0.003785s, 408500464 KB] Reopened 0 state(s).
[t=0.003785s, 408500464 KB] Evaluated 1 state(s).
[t=0.003785s, 408500464 KB] Evaluations: 1
[t=0.003785s, 408500464 KB] Generated 0 state(s).
[t=0.003785s, 408500464 KB] Dead ends: 1 state(s).
[t=0.003785s, 408500464 KB] Number of registered states: 1
[t=0.003785s, 408500464 KB] Int hash set load factor: 1/1 = 1
[t=0.003785s, 408500464 KB] Int hash set resizes: 0
[t=0.003785s, 408500464 KB] Search time: 2.1443e-05s
[t=0.003785s, 408500464 KB] Total time: 0.003785s
Search stopped without finding a solution.
Peak memory: 408500464 KB
search exit code: 12

Driver aborting after search
INFO     Planner time: 0.13s
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 3 / 245, train/look_at_obj_in_light-CD-None-DeskLamp-316/trial_T20190909_114522_623490
Now attempting to plan for goal: 1 / 4
	Running planner with existing operators + 52 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'CutObject_2', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'HeatObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'ChillObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	carry a cd while turning on a lamp.
	 Ground truth goal: 
	(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CDType)
                (holds ?a ?o)
            )
    ))))))
	 Proposed goal:
	(:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(not (isToggled ?ot))
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o CDType)
		(holds ?a ?o))))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_0_bar_1_bar_3_bar_30 loc_bar_0_bar_2_bar_3_bar_60)
(takeobject_0 agent1 loc_bar_0_bar_2_bar_3_bar_60 cd__minus_1_dot_356322288_comma__minus_1_dot_356322288_comma_2_dot_5726804_comma_2_dot_5726804_comma_2_dot_650754212_comma_2_dot_650754212)
(gotolocation agent1 loc_bar_0_bar_2_bar_3_bar_60 loc_bar__minus_2_bar__minus_6_bar_2_bar_45)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 3 / 245
Motion planning for: train/look_at_obj_in_light-CD-None-DeskLamp-316/trial_T20190909_114522_623490
Proposed goal is: 
(:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(not (isToggled ?ot))
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o CDType)
		(holds ?a ?o))))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CDType)
                (holds ?a ?o)
            )
    ))))))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['cd'], 'is_neg': False}], 'precondition_ground_predicates': []}

Ground truth PDDL plan is: 
(GotoLocation sidetable)
(PickupObject cd)
(GotoLocation desklamp)
(ToggleObject desklamp)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'toggleable', 'arguments': ['desklamp'], 'is_neg': False}

{'predicate_name': 'isToggled', 'arguments': ['desklamp'], 'is_neg': False}

{'predicate_name': 'holds', 'arguments': ['?a', 'cd'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['cd'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('CD|-00.34|+00.66|+00.64',),
 ('CD|-00.58|+00.69|-01.90',),
 ('CD|-00.56|+00.37|+00.53',)]

PERMISSIBLE OBJECT SET:
[('CD|-00.34|+00.66|+00.64',),
 ('CD|-00.58|+00.69|-01.90',),
 ('CD|-00.56|+00.37|+00.53',)]


Permissible Objects:
('CD|-00.34|+00.66|+00.64',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "CD|-00.34|+00.66|+00.64"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "CD|-00.34|+00.66|+00.64"})]
Action feasible: True

	 Fluent(predicate='isToggled', objects=('DeskLamp|-00.44|+00.69|-02.27',)) True
	 State: False

	 Fluent(predicate='isToggled', objects=('DeskLamp|-00.44|+00.69|-02.27',)) True
	 State: False
	 Fluent(predicate='holds', objects=('CD|-00.58|+00.69|-01.90',)) True
	 State: False

	 Fluent(predicate='isToggled', objects=('DeskLamp|-00.44|+00.69|-02.27',)) True
	 State: False
	 Fluent(predicate='holds', objects=('CD|-00.56|+00.37|+00.53',)) True
	 State: False

GOAL CHECK FUNCTION FAILED!
=============================================
Problem Number: 3
Problem ID: train/look_at_obj_in_light-CD-None-DeskLamp-316/trial_T20190909_114522_623490
Motion plan result: task_success: False
Total Actions Taken: 1
=============================================
Top operators after success are:
TakeObject_0 1.0 4.1 / 4.1
TurnOnLamp_1 1.0 3.1 / 3.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
SliceObject_2 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
CoolObject_2 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
WashObject_1 1.0 0.1 / 0.1
WashObject_2 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
CutObject_2 1.0 0.1 / 0.1
ChillObject_0 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_0 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
HeatObject_2 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_0 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
WarmObject_1 1.0 0.1 / 0.1
WarmObject_2 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 3 / 245, train/look_at_obj_in_light-CD-None-DeskLamp-316/trial_T20190909_114522_623490
Now attempting to plan for goal: 2 / 4
	Running planner with existing operators + 52 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'CutObject_2', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'HeatObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'ChillObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	carry a cd while turning on a lamp.
	 Ground truth goal: 
	(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CDType)
                (holds ?a ?o)
            )
    ))))))
	 Proposed goal:
	(:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o CDType)
		(holds ?a ?o))))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: False
	 Plan string: Plan not found with FD! Error: INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpmqlowyn8 /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmphjafvwr2 --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp8aeerfj5
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.007s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 415 rules.
Computing model... [0.050s CPU, 0.041s wall-clock]
2003 relevant atoms
4414 auxiliary atoms
6417 final queue length
8078 total queue pushes
Completing instantiation... [0.020s CPU, 0.014s wall-clock]
Instantiating: [0.080s CPU, 0.069s wall-clock]
No relaxed solution! Generating unsolvable task...
Translator variables: 1
Translator derived variables: 0
Translator facts: 2
Translator goal facts: 1
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 0
Translator axioms: 0
Translator task size: 4
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.080s CPU, 0.073s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp8aeerfj5
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp8aeerfj5
[t=0.000140056s, 408509680 KB] reading input...
[t=0.000455879s, 408509680 KB] done reading input!
[t=0.00416851s, 408518896 KB] Initializing landmark sum heuristic...
[t=0.00417782s, 408518896 KB] Generating landmark graph...
[t=0.00418208s, 408518896 KB] Building a landmark graph with reasonable orders.
[t=0.00418475s, 408518896 KB] Initializing Exploration...
[t=0.00419045s, 408518896 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.00420307s, 408518896 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00420664s, 408518896 KB] Landmarks generation time: 2.3657e-05s
[t=0.00421008s, 408518896 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00421312s, 408518896 KB] 1 edges
[t=0.00421517s, 408518896 KB] approx. reasonable orders
[t=0.00421747s, 408518896 KB] approx. obedient reasonable orders
[t=0.00421952s, 408518896 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00422165s, 408518896 KB] Landmarks generation time: 4.2722e-05s
[t=0.00422378s, 408518896 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00422714s, 408518896 KB] 1 edges
[t=0.00422915s, 408518896 KB] Landmark graph generation time: 5.2562e-05s
[t=0.00423358s, 408518896 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00425223s, 408518896 KB] Landmark graph contains 1 orderings.
[t=0.00429918s, 408518896 KB] Simplifying 0 unary operators... done! [0 unary operators]
[t=0.00430557s, 408518896 KB] time to simplify: 8.487e-06s
[t=0.00431709s, 408518896 KB] Initializing additive heuristic...
[t=0.00432218s, 408518896 KB] Initializing FF heuristic...
[t=0.00437462s, 408519920 KB] Building successor generator...done!
[t=0.00438294s, 408519920 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00438618s, 408519920 KB] time for successor generation creation: 1.804e-06s
[t=0.0043895s, 408519920 KB] Variables: 1
[t=0.00439229s, 408519920 KB] FactPairs: 2
[t=0.00439438s, 408519920 KB] Bytes per state: 4
[t=0.0044312s, 408528112 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00443665s, 408528112 KB] 1 initial landmarks, 1 goal landmarks
[t=0.00444624s, 408528112 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity
[t=0.00444998s, 408528112 KB] Completely explored state space -- no solution!
[t=0.00445207s, 408528112 KB] Actual search time: 1.3448e-05s
[t=0.00445481s, 408528112 KB] Expanded 0 state(s).
[t=0.00445481s, 408528112 KB] Reopened 0 state(s).
[t=0.00445481s, 408528112 KB] Evaluated 1 state(s).
[t=0.00445481s, 408528112 KB] Evaluations: 1
[t=0.00445481s, 408528112 KB] Generated 0 state(s).
[t=0.00445481s, 408528112 KB] Dead ends: 1 state(s).
[t=0.00445481s, 408528112 KB] Number of registered states: 1
[t=0.00445481s, 408528112 KB] Int hash set load factor: 1/1 = 1
[t=0.00445481s, 408528112 KB] Int hash set resizes: 0
[t=0.00445481s, 408528112 KB] Search time: 2.4067e-05s
[t=0.00445481s, 408528112 KB] Total time: 0.00445481s
Search stopped without finding a solution.
Peak memory: 408528112 KB
search exit code: 12

Driver aborting after search
INFO     Planner time: 0.12s
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 3 / 245, train/look_at_obj_in_light-CD-None-DeskLamp-316/trial_T20190909_114522_623490
Now attempting to plan for goal: 3 / 4
	Running planner with existing operators + 52 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'CutObject_2', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'HeatObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'ChillObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	carry a cd while turning on a lamp.
	 Ground truth goal: 
	(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o CDType)
                (holds ?a ?o)
            )
    ))))))
	 Proposed goal:
	(:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot LaptopType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o CDType)
		(holds ?a ?o))))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: False
	 Plan string: Plan not found with FD! Error: INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmptddmtxtn /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp6usp6izb --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp9cuzconl
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.007s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 415 rules.
Computing model... [0.050s CPU, 0.042s wall-clock]
2003 relevant atoms
4414 auxiliary atoms
6417 final queue length
8078 total queue pushes
Completing instantiation... [0.020s CPU, 0.013s wall-clock]
Instantiating: [0.080s CPU, 0.069s wall-clock]
No relaxed solution! Generating unsolvable task...
Translator variables: 1
Translator derived variables: 0
Translator facts: 2
Translator goal facts: 1
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 0
Translator axioms: 0
Translator task size: 4
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.080s CPU, 0.073s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp9cuzconl
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp9cuzconl
[t=8.9954e-05s, 408500464 KB] reading input...
[t=0.000151741s, 408500464 KB] done reading input!
[t=0.00373735s, 408500464 KB] Initializing landmark sum heuristic...
[t=0.00374633s, 408500464 KB] Generating landmark graph...
[t=0.00375048s, 408500464 KB] Building a landmark graph with reasonable orders.
[t=0.00375531s, 408500464 KB] Initializing Exploration...
[t=0.00375847s, 408500464 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.00377114s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00377495s, 408500464 KB] Landmarks generation time: 2.1402e-05s
[t=0.00377721s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00377967s, 408500464 KB] 1 edges
[t=0.00378192s, 408500464 KB] approx. reasonable orders
[t=0.0037843s, 408500464 KB] approx. obedient reasonable orders
[t=0.00378639s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00378832s, 408500464 KB] Landmarks generation time: 4.1164e-05s
[t=0.00379102s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0037932s, 408500464 KB] 1 edges
[t=0.00379496s, 408500464 KB] Landmark graph generation time: 4.9897e-05s
[t=0.00379705s, 408500464 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00379927s, 408500464 KB] Landmark graph contains 1 orderings.
[t=0.00380849s, 408500464 KB] Simplifying 0 unary operators... done! [0 unary operators]
[t=0.00381177s, 408500464 KB] time to simplify: 4.797e-06s
[t=0.00381468s, 408500464 KB] Initializing additive heuristic...
[t=0.00381657s, 408500464 KB] Initializing FF heuristic...
[t=0.00383977s, 408500464 KB] Building successor generator...done!
[t=0.00384568s, 408500464 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00384789s, 408500464 KB] time for successor generation creation: 1.476e-06s
[t=0.00385035s, 408500464 KB] Variables: 1
[t=0.0038522s, 408500464 KB] FactPairs: 2
[t=0.003854s, 408500464 KB] Bytes per state: 4
[t=0.00387294s, 408500464 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00387762s, 408500464 KB] 1 initial landmarks, 1 goal landmarks
[t=0.00388483s, 408500464 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity
[t=0.00388737s, 408500464 KB] Completely explored state space -- no solution!
[t=0.0038893s, 408500464 KB] Actual search time: 1.0537e-05s
[t=0.00389147s, 408500464 KB] Expanded 0 state(s).
[t=0.00389147s, 408500464 KB] Reopened 0 state(s).
[t=0.00389147s, 408500464 KB] Evaluated 1 state(s).
[t=0.00389147s, 408500464 KB] Evaluations: 1
[t=0.00389147s, 408500464 KB] Generated 0 state(s).
[t=0.00389147s, 408500464 KB] Dead ends: 1 state(s).
[t=0.00389147s, 408500464 KB] Number of registered states: 1
[t=0.00389147s, 408500464 KB] Int hash set load factor: 1/1 = 1
[t=0.00389147s, 408500464 KB] Int hash set resizes: 0
[t=0.00389147s, 408500464 KB] Search time: 1.886e-05s
[t=0.00389147s, 408500464 KB] Total time: 0.00389147s
Search stopped without finding a solution.
Peak memory: 408500464 KB
search exit code: 12

Driver aborting after search
INFO     Planner time: 0.11s
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 4 / 245, train/pick_and_place_simple-Box-None-Sofa-220/trial_T20190907_165527_462462
Now attempting to plan for goal: 0 / 2
	Running planner with existing operators + 52 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'CutObject_2', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'HeatObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'ChillObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	take the box from the table , put it on the couch.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BoxType)
		(inReceptacle ?o ?r))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: 
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
		Failed to parse plan string: 
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 4 / 245, train/pick_and_place_simple-Box-None-Sofa-220/trial_T20190907_165527_462462
Now attempting to plan for goal: 1 / 2
	Running planner with existing operators + 52 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'CutObject_2', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'HeatObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'ChillObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	take the box from the table , put it on the couch.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BoxType)
		(receptacleType ?r SofaType)
		(inReceptacle ?o ?r))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_19_bar_7_bar_1_bar_30 loc_bar__minus_11_bar_2_bar_2_bar_60)
(gotolocation agent1 loc_bar__minus_11_bar_2_bar_2_bar_60 loc_bar__minus_9_bar_7_bar_2_bar_60)
(takeobject_0 agent1 loc_bar__minus_9_bar_7_bar_2_bar_60 box__minus_9_dot_05871392_comma__minus_9_dot_05871392_comma_5_dot_0059352_comma_5_dot_0059352_comma_2_dot_668_comma_2_dot_668)
(gotolocation agent1 loc_bar__minus_9_bar_7_bar_2_bar_60 loc_bar__minus_11_bar_2_bar_2_bar_60)
(placeobject_0 agent1 loc_bar__minus_11_bar_2_bar_2_bar_60 sofa__minus_10_dot_732_comma__minus_10_dot_732_comma__minus_0_dot_4984_comma__minus_0_dot_4984_comma__minus_0_dot_184_comma__minus_0_dot_184 box__minus_9_dot_05871392_comma__minus_9_dot_05871392_comma_5_dot_0059352_comma_5_dot_0059352_comma_2_dot_668_comma_2_dot_668)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 4 / 245
Motion planning for: train/pick_and_place_simple-Box-None-Sofa-220/trial_T20190907_165527_462462
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BoxType)
		(receptacleType ?r SofaType)
		(inReceptacle ?o ?r))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r SofaType)
                (inReceptacle ?o ?r) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['box'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['box', 'sofa'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['sofa', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['box'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation coffeetable)
(PickupObject box)
(GotoLocation sofa)
(PutObject box sofa)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['box', 'sofa'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['box'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Box|-02.26|+00.67|+01.25',)]

PERMISSIBLE OBJECT SET:
[('Box|-02.26|+00.67|+01.25',)]


Permissible Objects:
('Box|-02.26|+00.67|+01.25',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Box|-02.26|+00.67|+01.25"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Box|-02.26|+00.67|+01.25"})]
Action feasible: True

OPERATOR:
{'action': 'PlaceObject_0',
 'postcondition_ground_predicates': [{'arguments': ['box', 'sofa'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'}],
 'precondition_ground_predicates': [{'arguments': ['sofa', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['box'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89'),
 ('Box|-02.26|+00.67|+01.25', 'Sofa|-02.68|-00.05|-00.12')]

PERMISSIBLE OBJECT SET:
[('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89'),
 ('Box|-02.26|+00.67|+01.25', 'Sofa|-02.68|-00.05|-00.12')]


Permissible Objects:
('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Sofa|-03.79|+00.01|+03.89"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Sofa|-03.79|+00.01|+03.89"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Box|-02.26|+00.67|+01.25", "receptacle_object_id": "Sofa|-03.79|+00.01|+03.89"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Box|-02.26|+00.67|+01.25", "receptacle_object_id": "Sofa|-03.79|+00.01|+03.89"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Box|-02.26|+00.67|+01.25"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Box|-02.26|+00.67|+01.25"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Box|-02.26|+00.67|+01.25"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Box|-02.26|+00.67|+01.25"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Sofa|-03.79|+00.01|+03.89"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Box|-02.26|+00.67|+01.25", "receptacle_object_id": "Sofa|-03.79|+00.01|+03.89"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Sofa|-03.79|+00.01|+03.89"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Box|-02.26|+00.67|+01.25", "receptacle_object_id": "Sofa|-03.79|+00.01|+03.89"})]
Error Message: object not found: Sofa|-03.79|+00.01|+03.89
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Box|-02.26|+00.67|+01.25"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Box|-02.26|+00.67|+01.25"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Box|-02.26|+00.67|+01.25"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Box|-02.26|+00.67|+01.25"})]
Error Message: object not found: Box|-02.26|+00.67|+01.25
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Box|-02.26|+00.67|+01.25"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Box|-02.26|+00.67|+01.25", "receptacle_object_id": "Sofa|-03.79|+00.01|+03.89"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Box|-02.26|+00.67|+01.25"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Box|-02.26|+00.67|+01.25", "receptacle_object_id": "Sofa|-03.79|+00.01|+03.89"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Box|-02.26|+00.67|+01.25"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Box|-02.26|+00.67|+01.25"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Box|-02.26|+00.67|+01.25"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Box|-02.26|+00.67|+01.25"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Box|-02.26|+00.67|+01.25"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Box|-02.26|+00.67|+01.25"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Sofa|-03.79|+00.01|+03.89"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Sofa|-03.79|+00.01|+03.89"})]
Error Message: object not found: Sofa|-03.79|+00.01|+03.89
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sofa|-03.79|+00.01|+03.89"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sofa|-03.79|+00.01|+03.89"})]
Error Message: object not found: Sofa|-03.79|+00.01|+03.89
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Box|-02.26|+00.67|+01.25"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Box|-02.26|+00.67|+01.25"})]
Error Message: object not found: Box|-02.26|+00.67|+01.25
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Sofa|-03.79|+00.01|+03.89"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Sofa|-03.79|+00.01|+03.89"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Sofa|-03.79|+00.01|+03.89", "receptacle_object_id": "Box|-02.26|+00.67|+01.25"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Sofa|-03.79|+00.01|+03.89", "receptacle_object_id": "Box|-02.26|+00.67|+01.25"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Box|-02.26|+00.67|+01.25"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Box|-02.26|+00.67|+01.25"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Box|-02.26|+00.67|+01.25"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Box|-02.26|+00.67|+01.25"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Box|-02.26|+00.67|+01.25"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Box|-02.26|+00.67|+01.25"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Box|-02.26|+00.67|+01.25"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Box|-02.26|+00.67|+01.25"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Box|-02.26|+00.67|+01.25"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Box|-02.26|+00.67|+01.25"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Box|-02.26|+00.67|+01.25"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Box|-02.26|+00.67|+01.25"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Box|-02.26|+00.67|+01.25"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Box|-02.26|+00.67|+01.25"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Box|-02.26|+00.67|+01.25"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Box|-02.26|+00.67|+01.25"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Box|-02.26|+00.67|+01.25"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Box|-02.26|+00.67|+01.25"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False

Rollout 15/50

Permissible Objects:
('Box|-02.26|+00.67|+01.25', 'Sofa|-02.68|-00.05|-00.12')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Sofa|-02.68|-00.05|-00.12"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Sofa|-02.68|-00.05|-00.12"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-02.68|-00.05|-00.12')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Box|-02.26|+00.67|+01.25", "receptacle_object_id": "Sofa|-02.68|-00.05|-00.12"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Box|-02.26|+00.67|+01.25", "receptacle_object_id": "Sofa|-02.68|-00.05|-00.12"})]
Action feasible: True

	 Fluent(predicate='inReceptacle', objects=('Box|-02.26|+00.67|+01.25', 'Sofa|-03.79|+00.01|+03.89')) True
	 State: False


Motion plan operator success!: {'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['box', 'sofa'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['sofa', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['box'], 'is_neg': False}]}
=============================================
Problem Number: 4
Problem ID: train/pick_and_place_simple-Box-None-Sofa-220/trial_T20190907_165527_462462
Motion plan result: task_success: True
Total Actions Taken: 18
=============================================
Top operators after success are:
TakeObject_0 1.0 5.1 / 5.1
TurnOnLamp_1 1.0 3.1 / 3.1
PlaceObject_0 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
SliceObject_2 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
CoolObject_2 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
WashObject_1 1.0 0.1 / 0.1
WashObject_2 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
CutObject_2 1.0 0.1 / 0.1
ChillObject_0 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_0 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
HeatObject_2 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
WarmObject_1 1.0 0.1 / 0.1
WarmObject_2 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 4 / 5 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 5 / 245, train/pick_and_place_simple-RemoteControl-None-ArmChair-230/trial_T20190909_020906_064567
Now attempting to plan for goal: 0 / 2
	Running planner with existing operators + 52 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'CutObject_2', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'HeatObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'ChillObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	move the remote from the table to a chair.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o RemoteControlType) 
                (receptacleType ?r ArmChairType)
                (inReceptacle ?o ?r) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o RemoteControlType)
		(inReceptacle ?o ?r))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: 
		Failed to parse plan string: 
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 5 / 245, train/pick_and_place_simple-RemoteControl-None-ArmChair-230/trial_T20190909_020906_064567
Now attempting to plan for goal: 1 / 2
	Running planner with existing operators + 52 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'CutObject_2', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'HeatObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'ChillObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	move the remote from the table to a chair.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o RemoteControlType) 
                (receptacleType ?r ArmChairType)
                (inReceptacle ?o ?r) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o RemoteControlType)
		(receptacleType ?r ArmChairType)
		(inReceptacle ?o ?r))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_22_bar_8_bar_3_bar_30 loc_bar__minus_10_bar_22_bar_2_bar_60)
(gotolocation agent1 loc_bar__minus_10_bar_22_bar_2_bar_60 loc_bar__minus_17_bar_8_bar_1_bar_45)
(takeobject_0 agent1 loc_bar__minus_17_bar_8_bar_1_bar_45 remotecontrol__minus_13_dot_73041724_comma__minus_13_dot_73041724_comma_8_dot_24723052_comma_8_dot_24723052_comma_3_dot_133654_comma_3_dot_133654)
(gotolocation agent1 loc_bar__minus_17_bar_8_bar_1_bar_45 loc_bar__minus_10_bar_22_bar_2_bar_60)
(placeobject_0 agent1 loc_bar__minus_10_bar_22_bar_2_bar_60 armchair__minus_10_dot_764_comma__minus_10_dot_764_comma_18_dot_464_comma_18_dot_464_comma_0_dot_0037252904_comma_0_dot_0037252904 remotecontrol__minus_13_dot_73041724_comma__minus_13_dot_73041724_comma_8_dot_24723052_comma_8_dot_24723052_comma_3_dot_133654_comma_3_dot_133654)
Sucessfully found 1 plans for goals.
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 5 / 245
Motion planning for: train/pick_and_place_simple-RemoteControl-None-ArmChair-230/trial_T20190909_020906_064567
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o RemoteControlType)
		(receptacleType ?r ArmChairType)
		(inReceptacle ?o ?r))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o RemoteControlType) 
                (receptacleType ?r ArmChairType)
                (inReceptacle ?o ?r) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['remotecontrol'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['remotecontrol', 'armchair'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['armchair', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['remotecontrol'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation coffeetable)
(PickupObject remotecontrol)
(GotoLocation armchair)
(PutObject remotecontrol armchair)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['remotecontrol', 'armchair'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['remotecontrol'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('RemoteControl|-03.53|+00.46|+06.56',),
 ('RemoteControl|-03.43|+00.78|+02.06',)]

PERMISSIBLE OBJECT SET:
[('RemoteControl|-03.53|+00.46|+06.56',),
 ('RemoteControl|-03.43|+00.78|+02.06',)]


Permissible Objects:
('RemoteControl|-03.53|+00.46|+06.56',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "RemoteControl|-03.53|+00.46|+06.56"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "RemoteControl|-03.53|+00.46|+06.56"})]
Action feasible: True

OPERATOR:
{'action': 'PlaceObject_0',
 'postcondition_ground_predicates': [{'arguments': ['remotecontrol',
                                                    'armchair'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'}],
 'precondition_ground_predicates': [{'arguments': ['armchair', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['remotecontrol'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('RemoteControl|-03.53|+00.46|+06.56', 'ArmChair|-03.66|+00.00|+04.56'),
 ('RemoteControl|-03.53|+00.46|+06.56', 'ArmChair|-02.69|+00.00|+04.62'),
 ('RemoteControl|-03.43|+00.78|+02.06', 'ArmChair|-03.66|+00.00|+04.56'),
 ('RemoteControl|-03.43|+00.78|+02.06', 'ArmChair|-03.66|+00.00|+04.56'),
 ('RemoteControl|-03.43|+00.78|+02.06', 'ArmChair|-02.69|+00.00|+04.62'),
 ('RemoteControl|-03.43|+00.78|+02.06', 'ArmChair|-02.69|+00.00|+04.62')]

PERMISSIBLE OBJECT SET:
[('RemoteControl|-03.53|+00.46|+06.56', 'ArmChair|-03.66|+00.00|+04.56'),
 ('RemoteControl|-03.53|+00.46|+06.56', 'ArmChair|-02.69|+00.00|+04.62'),
 ('RemoteControl|-03.43|+00.78|+02.06', 'ArmChair|-03.66|+00.00|+04.56'),
 ('RemoteControl|-03.43|+00.78|+02.06',
  'ArmChair|-03.66|+00.00|+04.56',
  'RemoteControl|-03.53|+00.46|+06.56'),
 ('RemoteControl|-03.43|+00.78|+02.06', 'ArmChair|-02.69|+00.00|+04.62'),
 ('RemoteControl|-03.43|+00.78|+02.06',
  'ArmChair|-02.69|+00.00|+04.62',
  'RemoteControl|-03.53|+00.46|+06.56')]


Permissible Objects:
('RemoteControl|-03.53|+00.46|+06.56', 'ArmChair|-03.66|+00.00|+04.56')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "ArmChair|-03.66|+00.00|+04.56"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "ArmChair|-03.66|+00.00|+04.56"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('RemoteControl|-03.53|+00.46|+06.56', 'ArmChair|-03.66|+00.00|+04.56')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "RemoteControl|-03.53|+00.46|+06.56", "receptacle_object_id": "ArmChair|-03.66|+00.00|+04.56"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "RemoteControl|-03.53|+00.46|+06.56", "receptacle_object_id": "ArmChair|-03.66|+00.00|+04.56"})]
Action feasible: True


Motion plan operator success!: {'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['remotecontrol', 'armchair'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['armchair', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['remotecontrol'], 'is_neg': False}]}
=============================================
Problem Number: 5
Problem ID: train/pick_and_place_simple-RemoteControl-None-ArmChair-230/trial_T20190909_020906_064567
Motion plan result: task_success: True
Total Actions Taken: 3
=============================================
Top operators after success are:
TakeObject_0 1.0 6.1 / 6.1
TurnOnLamp_1 1.0 3.1 / 3.1
PlaceObject_0 1.0 2.1 / 2.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
SliceObject_2 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
CoolObject_2 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
WashObject_1 1.0 0.1 / 0.1
WashObject_2 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
CutObject_2 1.0 0.1 / 0.1
ChillObject_0 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_0 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
HeatObject_2 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
WarmObject_1 1.0 0.1 / 0.1
WarmObject_2 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 6 / 245, train/pick_and_place_simple-Vase-None-Safe-204/trial_T20190919_000336_714640
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 52 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'CutObject_2', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'HeatObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'ChillObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	put a blue vase in the safe on the floor.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o VaseType) 
                (receptacleType ?r SafeType)
                (inReceptacle ?o ?r) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o VaseType)
		(receptacleType ?r SafeType)
		(inReceptacle ?o ?r))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_7_bar__minus_12_bar_0_bar_30 loc_bar__minus_3_bar_2_bar_1_bar_60)
(gotolocation agent1 loc_bar__minus_3_bar_2_bar_1_bar_60 loc_bar__minus_7_bar__minus_5_bar_2_bar_60)
(takeobject_0 agent1 loc_bar__minus_7_bar__minus_5_bar_2_bar_60 vase__minus_8_dot_04414652_comma__minus_8_dot_04414652_comma__minus_7_dot_28146124_comma__minus_7_dot_28146124_comma_2_dot_63630414_comma_2_dot_63630414)
(gotolocation agent1 loc_bar__minus_7_bar__minus_5_bar_2_bar_60 loc_bar__minus_3_bar_2_bar_1_bar_60)
(placeobject_0 agent1 loc_bar__minus_3_bar_2_bar_1_bar_60 safe_0_dot_7896_comma_0_dot_7896_comma__minus_0_dot_4084_comma__minus_0_dot_4084_comma_0_dot_00526052712_comma_0_dot_00526052712 vase__minus_8_dot_04414652_comma__minus_8_dot_04414652_comma__minus_7_dot_28146124_comma__minus_7_dot_28146124_comma_2_dot_63630414_comma_2_dot_63630414)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 6 / 245
Motion planning for: train/pick_and_place_simple-Vase-None-Safe-204/trial_T20190919_000336_714640
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o VaseType)
		(receptacleType ?r SafeType)
		(inReceptacle ?o ?r))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o VaseType) 
                (receptacleType ?r SafeType)
                (inReceptacle ?o ?r) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['vase'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['vase', 'safe'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['safe', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['vase'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation diningtable)
(PickupObject vase)
(GotoLocation safe)
(PutObject vase safe)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['vase', 'safe'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['vase'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Vase|-00.60|+00.75|+01.59',),
 ('Vase|-00.60|+00.75|+01.40',),
 ('Vase|-01.55|+00.46|+04.46',),
 ('Vase|-02.01|+00.66|-01.82',)]

PERMISSIBLE OBJECT SET:
[('Vase|-00.60|+00.75|+01.59',),
 ('Vase|-00.60|+00.75|+01.40',),
 ('Vase|-01.55|+00.46|+04.46',),
 ('Vase|-02.01|+00.66|-01.82',)]


Permissible Objects:
('Vase|-00.60|+00.75|+01.59',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Action feasible: True

OPERATOR:
{'action': 'PlaceObject_0',
 'postcondition_ground_predicates': [{'arguments': ['vase', 'safe'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'}],
 'precondition_ground_predicates': [{'arguments': ['safe', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['vase'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10'),
 ('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10'),
 ('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10'),
 ('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10'),
 ('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10'),
 ('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10'),
 ('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')]

PERMISSIBLE OBJECT SET:
[('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10'),
 ('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10'),
 ('Vase|-00.60|+00.75|+01.40',
  'Safe|+00.20|+00.00|-00.10',
  'Vase|-00.60|+00.75|+01.59'),
 ('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10'),
 ('Vase|-01.55|+00.46|+04.46',
  'Safe|+00.20|+00.00|-00.10',
  'Vase|-00.60|+00.75|+01.59'),
 ('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10'),
 ('Vase|-02.01|+00.66|-01.82',
  'Safe|+00.20|+00.00|-00.10',
  'Vase|-00.60|+00.75|+01.59')]


Permissible Objects:
('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: object not found: Safe|+00.20|+00.00|-00.10
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: object not found: Safe|+00.20|+00.00|-00.10
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Safe|+00.20|+00.00|-00.10", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Safe|+00.20|+00.00|-00.10", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 18/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 19/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 20/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 21/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Safe|+00.20|+00.00|-00.10
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 22/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 23/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 24/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.59', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 25/50

Permissible Objects:
('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Error Message: object not found: Vase|-00.60|+00.75|+01.40
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Error Message: object not found: Vase|-00.60|+00.75|+01.40
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: object not found: Safe|+00.20|+00.00|-00.10
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: object not found: Safe|+00.20|+00.00|-00.10
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Error Message: object not found: Vase|-00.60|+00.75|+01.40
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.40
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Safe|+00.20|+00.00|-00.10", "receptacle_object_id": "Vase|-00.60|+00.75|+01.40"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Safe|+00.20|+00.00|-00.10", "receptacle_object_id": "Vase|-00.60|+00.75|+01.40"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 18/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.40
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 19/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 20/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.40
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 21/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Safe|+00.20|+00.00|-00.10
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 22/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 23/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.40
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 24/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.40
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 25/50

Permissible Objects:
('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10', 'Vase|-00.60|+00.75|+01.59')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Error Message: object not found: Vase|-00.60|+00.75|+01.40
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Error Message: object not found: Vase|-00.60|+00.75|+01.40
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: object not found: Safe|+00.20|+00.00|-00.10
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: object not found: Safe|+00.20|+00.00|-00.10
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Error Message: object not found: Vase|-00.60|+00.75|+01.40
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 18/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 19/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.40
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 20/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Safe|+00.20|+00.00|-00.10", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Safe|+00.20|+00.00|-00.10", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 21/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 22/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Vase|-00.60|+00.75|+01.40"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Vase|-00.60|+00.75|+01.40"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 23/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Safe|+00.20|+00.00|-00.10", "receptacle_object_id": "Vase|-00.60|+00.75|+01.40"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Safe|+00.20|+00.00|-00.10", "receptacle_object_id": "Vase|-00.60|+00.75|+01.40"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 24/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 25/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 26/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 27/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 28/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.40
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 29/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 30/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 31/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.40
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 32/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 33/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Safe|+00.20|+00.00|-00.10
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 34/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 35/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 36/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 37/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 38/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.40
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 39/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.40"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.40"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.40
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 40/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.40", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-00.60|+00.75|+01.40', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 41/50

Permissible Objects:
('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Error Message: object not found: Vase|-01.55|+00.46|+04.46
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Error Message: object not found: Vase|-01.55|+00.46|+04.46
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: object not found: Safe|+00.20|+00.00|-00.10
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Error Message: object not found: Vase|-01.55|+00.46|+04.46
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: object not found: Safe|+00.20|+00.00|-00.10
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-01.55|+00.46|+04.46
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Safe|+00.20|+00.00|-00.10", "receptacle_object_id": "Vase|-01.55|+00.46|+04.46"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Safe|+00.20|+00.00|-00.10", "receptacle_object_id": "Vase|-01.55|+00.46|+04.46"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 18/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-01.55|+00.46|+04.46
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 19/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 20/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-01.55|+00.46|+04.46
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 21/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Safe|+00.20|+00.00|-00.10
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 22/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 23/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-01.55|+00.46|+04.46
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 24/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-01.55|+00.46|+04.46
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 25/50

Permissible Objects:
('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10', 'Vase|-00.60|+00.75|+01.59')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Error Message: object not found: Vase|-01.55|+00.46|+04.46
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Error Message: object not found: Vase|-01.55|+00.46|+04.46
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: object not found: Safe|+00.20|+00.00|-00.10
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Error Message: object not found: Vase|-01.55|+00.46|+04.46
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: object not found: Safe|+00.20|+00.00|-00.10
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 18/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 19/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-01.55|+00.46|+04.46
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 20/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Safe|+00.20|+00.00|-00.10", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Safe|+00.20|+00.00|-00.10", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 21/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Vase|-01.55|+00.46|+04.46"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Vase|-01.55|+00.46|+04.46"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 22/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Safe|+00.20|+00.00|-00.10", "receptacle_object_id": "Vase|-01.55|+00.46|+04.46"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Safe|+00.20|+00.00|-00.10", "receptacle_object_id": "Vase|-01.55|+00.46|+04.46"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 23/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 24/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 25/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 26/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 27/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 28/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-01.55|+00.46|+04.46
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 29/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 30/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 31/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-01.55|+00.46|+04.46
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 32/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 33/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Safe|+00.20|+00.00|-00.10
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 34/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 35/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 36/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 37/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 38/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-01.55|+00.46|+04.46
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 39/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-01.55|+00.46|+04.46"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-01.55|+00.46|+04.46"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-01.55|+00.46|+04.46
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 40/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-01.55|+00.46|+04.46", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-01.55|+00.46|+04.46', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 41/50

Permissible Objects:
('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Error Message: object not found: Vase|-02.01|+00.66|-01.82
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Error Message: object not found: Vase|-02.01|+00.66|-01.82
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: object not found: Safe|+00.20|+00.00|-00.10
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Error Message: object not found: Vase|-02.01|+00.66|-01.82
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: object not found: Safe|+00.20|+00.00|-00.10
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-02.01|+00.66|-01.82
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Safe|+00.20|+00.00|-00.10", "receptacle_object_id": "Vase|-02.01|+00.66|-01.82"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Safe|+00.20|+00.00|-00.10", "receptacle_object_id": "Vase|-02.01|+00.66|-01.82"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 18/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-02.01|+00.66|-01.82
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 19/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 20/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-02.01|+00.66|-01.82
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 21/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Safe|+00.20|+00.00|-00.10
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 22/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 23/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-02.01|+00.66|-01.82
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 24/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-02.01|+00.66|-01.82
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 25/50

Permissible Objects:
('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10', 'Vase|-00.60|+00.75|+01.59')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Error Message: object not found: Vase|-02.01|+00.66|-01.82
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Error Message: object not found: Vase|-02.01|+00.66|-01.82
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: object not found: Safe|+00.20|+00.00|-00.10
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Error Message: object not found: Vase|-02.01|+00.66|-01.82
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: object not found: Safe|+00.20|+00.00|-00.10
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 18/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 19/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-02.01|+00.66|-01.82
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 20/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Safe|+00.20|+00.00|-00.10", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Safe|+00.20|+00.00|-00.10", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 21/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Vase|-02.01|+00.66|-01.82"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Vase|-02.01|+00.66|-01.82"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 22/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Safe|+00.20|+00.00|-00.10", "receptacle_object_id": "Vase|-02.01|+00.66|-01.82"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Safe|+00.20|+00.00|-00.10", "receptacle_object_id": "Vase|-02.01|+00.66|-01.82"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 23/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 24/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 25/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 26/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 27/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 28/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-02.01|+00.66|-01.82
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 29/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 30/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-00.60|+00.75|+01.59", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 31/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-02.01|+00.66|-01.82
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 32/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 33/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Safe|+00.20|+00.00|-00.10
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 34/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-00.60|+00.75|+01.59"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-00.60|+00.75|+01.59
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 35/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-00.60|+00.75|+01.59"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 36/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 37/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 38/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-02.01|+00.66|-01.82
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 39/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Vase|-02.01|+00.66|-01.82"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Vase|-02.01|+00.66|-01.82"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Error Message: object not found: Vase|-02.01|+00.66|-01.82
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 40/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Safe|+00.20|+00.00|-00.10"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Vase|-02.01|+00.66|-01.82", "receptacle_object_id": "Vase|-00.60|+00.75|+01.59"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Vase|-02.01|+00.66|-01.82', 'Safe|+00.20|+00.00|-00.10')) True
	 State: False

Rollout 41/50
Exceeded max number of trajs!
=============================================
Problem Number: 6
Problem ID: train/pick_and_place_simple-Vase-None-Safe-204/trial_T20190919_000336_714640
Motion plan result: task_success: False
Total Actions Taken: 224
Failed at operator: 2 / 2 operators in task plan.
=============================================
Top operators after success are:
TakeObject_0 1.0 7.1 / 7.1
TurnOnLamp_1 1.0 3.1 / 3.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
SliceObject_2 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
CoolObject_2 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
WashObject_1 1.0 0.1 / 0.1
WashObject_2 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
CutObject_2 1.0 0.1 / 0.1
ChillObject_0 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_0 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
HeatObject_2 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
WarmObject_1 1.0 0.1 / 0.1
WarmObject_2 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PlaceObject_0 0.6774193548387097 2.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 6 / 245, train/pick_and_place_simple-Vase-None-Safe-204/trial_T20190919_000336_714640
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 6 / 245, train/pick_and_place_simple-Vase-None-Safe-204/trial_T20190919_000336_714640
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 6 / 245, train/pick_and_place_simple-Vase-None-Safe-204/trial_T20190919_000336_714640
Sucessfully found 0 plans for goals.
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 5 / 7 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
task_planner.attempt_task_plan_for_problem: attempt 0 : 7 / 245, train/pick_heat_then_place_in_recep-Apple-None-SideTable-28/trial_T20190906_180710_251060
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 52 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'CutObject_2', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'HeatObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'ChillObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	put a warm apple on the table.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_16_bar__minus_9_bar_3_bar_30 loc_bar__minus_10_bar__minus_12_bar_2_bar_45)
(gotolocation agent1 loc_bar__minus_10_bar__minus_12_bar_2_bar_45 loc_bar__minus_10_bar__minus_4_bar_0_bar_60)
(takeobject_0 agent1 loc_bar__minus_10_bar__minus_4_bar_0_bar_60 apple__minus_10_dot_24330328_comma__minus_10_dot_24330328_comma__minus_2_dot_5353236_comma__minus_2_dot_5353236_comma_3_dot_824130536_comma_3_dot_824130536)
(heatobject_2 agent1 loc_bar__minus_10_bar__minus_4_bar_0_bar_60 apple__minus_10_dot_24330328_comma__minus_10_dot_24330328_comma__minus_2_dot_5353236_comma__minus_2_dot_5353236_comma_3_dot_824130536_comma_3_dot_824130536)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 7 / 245
Motion planning for: train/pick_heat_then_place_in_recep-Apple-None-SideTable-28/trial_T20190906_180710_251060
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['apple'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'HeatObject_2', 'postcondition_ground_predicates': [{'predicate_name': 'isHot', 'arguments': ['apple'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['apple'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation sidetable)
(PickupObject apple)
(GotoLocation microwave)
(HeatObject apple)
(GotoLocation sidetable)
(PutObject apple sidetable)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['apple', 'sidetable'], 'is_neg': False}

{'predicate_name': 'heatable', 'arguments': ['apple'], 'is_neg': False}

{'predicate_name': 'isHot', 'arguments': ['apple'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['apple'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Apple|-04.06|+00.75|-00.25',), ('Apple|-02.56|+00.96|-00.63',)]

PERMISSIBLE OBJECT SET:
[('Apple|-04.06|+00.75|-00.25',), ('Apple|-02.56|+00.96|-00.63',)]


Permissible Objects:
('Apple|-04.06|+00.75|-00.25',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Action feasible: True

OPERATOR:
{'action': 'HeatObject_2',
 'postcondition_ground_predicates': [{'arguments': ['apple'],
                                      'is_neg': False,
                                      'predicate_name': 'isHot'}],
 'precondition_ground_predicates': [{'arguments': ['apple'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Apple|-04.06|+00.75|-00.25',),
 ('Apple|-02.56|+00.96|-00.63',),
 ('Apple|-02.56|+00.96|-00.63',)]

PERMISSIBLE OBJECT SET:
[('Apple|-04.06|+00.75|-00.25',),
 ('Apple|-02.56|+00.96|-00.63',),
 ('Apple|-02.56|+00.96|-00.63', 'Apple|-04.06|+00.75|-00.25')]


Permissible Objects:
('Apple|-04.06|+00.75|-00.25',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Error Message: object not found: Apple|-04.06|+00.75|-00.25
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-04.06|+00.75|-00.25',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-04.06|+00.75|-00.25"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-04.06|+00.75|-00.25"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-04.06|+00.75|-00.25',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-04.06|+00.75|-00.25"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-04.06|+00.75|-00.25"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-04.06|+00.75|-00.25"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-04.06|+00.75|-00.25"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Error Message: object not found: Apple|-04.06|+00.75|-00.25
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-04.06|+00.75|-00.25',)) True
	 State: False

Rollout 3/50

Permissible Objects:
('Apple|-02.56|+00.96|-00.63',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Error Message: object not found: Apple|-02.56|+00.96|-00.63
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.56|+00.96|-00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.56|+00.96|-00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-02.56|+00.96|-00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.56|+00.96|-00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-02.56|+00.96|-00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.56|+00.96|-00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Error Message: object not found: Apple|-02.56|+00.96|-00.63
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 3/50

Permissible Objects:
('Apple|-02.56|+00.96|-00.63', 'Apple|-04.06|+00.75|-00.25')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Error Message: object not found: Apple|-04.06|+00.75|-00.25
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Error Message: object not found: Apple|-02.56|+00.96|-00.63
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-04.06|+00.75|-00.25"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-04.06|+00.75|-00.25"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.56|+00.96|-00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.56|+00.96|-00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-04.06|+00.75|-00.25"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-04.06|+00.75|-00.25"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-04.06|+00.75|-00.25"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-04.06|+00.75|-00.25"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Error Message: object not found: Apple|-04.06|+00.75|-00.25
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-02.56|+00.96|-00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.56|+00.96|-00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-02.56|+00.96|-00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.56|+00.96|-00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Error Message: object not found: Apple|-02.56|+00.96|-00.63
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.56|+00.96|-00.63", "receptacle_object_id": "Apple|-04.06|+00.75|-00.25"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-04.06|+00.75|-00.25"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.56|+00.96|-00.63", "receptacle_object_id": "Apple|-04.06|+00.75|-00.25"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-04.06|+00.75|-00.25"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-04.06|+00.75|-00.25", "receptacle_object_id": "Apple|-02.56|+00.96|-00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.56|+00.96|-00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-04.06|+00.75|-00.25", "receptacle_object_id": "Apple|-02.56|+00.96|-00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.56|+00.96|-00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.56|+00.96|-00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.56|+00.96|-00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-04.06|+00.75|-00.25"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-04.06|+00.75|-00.25"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 10/50

Permissible Objects:
('Apple|-04.06|+00.75|-00.25',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Error Message: object not found: Apple|-04.06|+00.75|-00.25
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-04.06|+00.75|-00.25',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-04.06|+00.75|-00.25',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-04.06|+00.75|-00.25',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-04.06|+00.75|-00.25", "receptacle_object_id": "Apple|-04.06|+00.75|-00.25"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-04.06|+00.75|-00.25',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Error Message: object not found: Apple|-04.06|+00.75|-00.25
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-04.06|+00.75|-00.25',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Error Message: object not found: Apple|-04.06|+00.75|-00.25
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-04.06|+00.75|-00.25',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-04.06|+00.75|-00.25',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Apple|-02.56|+00.96|-00.63',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Error Message: object not found: Apple|-02.56|+00.96|-00.63
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.56|+00.96|-00.63", "receptacle_object_id": "Apple|-02.56|+00.96|-00.63"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Error Message: object not found: Apple|-02.56|+00.96|-00.63
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Error Message: object not found: Apple|-02.56|+00.96|-00.63
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Apple|-02.56|+00.96|-00.63', 'Apple|-04.06|+00.75|-00.25')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Error Message: object not found: Apple|-04.06|+00.75|-00.25
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Error Message: object not found: Apple|-02.56|+00.96|-00.63
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-04.06|+00.75|-00.25", "receptacle_object_id": "Apple|-04.06|+00.75|-00.25"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-04.06|+00.75|-00.25", "receptacle_object_id": "Apple|-02.56|+00.96|-00.63"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.56|+00.96|-00.63", "receptacle_object_id": "Apple|-04.06|+00.75|-00.25"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.56|+00.96|-00.63", "receptacle_object_id": "Apple|-02.56|+00.96|-00.63"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Error Message: object not found: Apple|-04.06|+00.75|-00.25
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Error Message: object not found: Apple|-02.56|+00.96|-00.63
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Error Message: object not found: Apple|-04.06|+00.75|-00.25
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Error Message: object not found: Apple|-02.56|+00.96|-00.63
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-04.06|+00.75|-00.25"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-02.56|+00.96|-00.63"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Apple|-02.56|+00.96|-00.63',)) True
	 State: False

Rollout 16/50
=============================================
Problem Number: 7
Problem ID: train/pick_heat_then_place_in_recep-Apple-None-SideTable-28/trial_T20190906_180710_251060
Motion plan result: task_success: False
Total Actions Taken: 47
Failed at operator: 2 / 2 operators in task plan.
=============================================
Top operators after success are:
TakeObject_0 1.0 8.1 / 8.1
TurnOnLamp_1 1.0 3.1 / 3.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
SliceObject_2 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
CoolObject_2 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
WashObject_1 1.0 0.1 / 0.1
WashObject_2 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
CutObject_2 1.0 0.1 / 0.1
ChillObject_0 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_0 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
WarmObject_1 1.0 0.1 / 0.1
WarmObject_2 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PlaceObject_0 0.6774193548387097 2.1 / 3.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 7 / 245, train/pick_heat_then_place_in_recep-Apple-None-SideTable-28/trial_T20190906_180710_251060
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 7 / 245, train/pick_heat_then_place_in_recep-Apple-None-SideTable-28/trial_T20190906_180710_251060
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 7 / 245, train/pick_heat_then_place_in_recep-Apple-None-SideTable-28/trial_T20190906_180710_251060
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 8 / 245, train/pick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan-18/trial_T20190909_070711_069611
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 50 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'CutObject_2', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'ChillObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	put a cold potato slice in the garbage can.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_1_bar_15_bar_0_bar_30 loc_bar_3_bar_27_bar_3_bar_60)
(chillobject_0 agent1 loc_bar_3_bar_27_bar_3_bar_60 potato_1_dot_2209644_comma_1_dot_2209644_comma_26_dot_666156_comma_26_dot_666156_comma_3_dot_1799052_comma_3_dot_1799052)
(sliceobject_2 agent1 loc_bar_3_bar_27_bar_3_bar_60 potato_1_dot_2209644_comma_1_dot_2209644_comma_26_dot_666156_comma_26_dot_666156_comma_3_dot_1799052_comma_3_dot_1799052)
(takeobject_0 agent1 loc_bar_3_bar_27_bar_3_bar_60 potato_1_dot_2209644_comma_1_dot_2209644_comma_26_dot_666156_comma_26_dot_666156_comma_3_dot_1799052_comma_3_dot_1799052)
(gotolocation agent1 loc_bar_3_bar_27_bar_3_bar_60 loc_bar_4_bar_24_bar_1_bar_60)
(putobjectinreceptacle agent1 loc_bar_4_bar_24_bar_1_bar_60 potatotype potato_1_dot_2209644_comma_1_dot_2209644_comma_26_dot_666156_comma_26_dot_666156_comma_3_dot_1799052_comma_3_dot_1799052 garbagecan_8_dot_00458908_comma_8_dot_00458908_comma_26_dot_0127182_comma_26_dot_0127182_comma_0_dot_0_comma_0_dot_0)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 8 / 245
Motion planning for: train/pick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan-18/trial_T20190909_070711_069611
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Attempting to execute the following motion plan:
{'action': 'ChillObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'isCool', 'arguments': ['potato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'coolable', 'arguments': ['potato'], 'is_neg': False}]}

{'action': 'SliceObject_2', 'postcondition_ground_predicates': [{'predicate_name': 'isSliced', 'arguments': ['potato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'sliceable', 'arguments': ['potato'], 'is_neg': False}]}

{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['potato'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PutObjectInReceptacle', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['potato', 'garbagecan'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['potato'], 'is_neg': True}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['garbagecan', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['potato'], 'is_neg': False}]}

Ground truth PDDL plan is: 
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
(GotoLocation diningtable)
(PickupObject butterknife)
(GotoLocation potato)
(SliceObject potato)
(GotoLocation diningtable)
(PutObject butterknife diningtable)
(GotoLocation diningtable)
(PickupObject potato)
(GotoLocation fridge)
(CoolObject potato)
(GotoLocation garbagecan)
(PutObject potato garbagecan)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['potato', 'garbagecan'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['potato'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'ChillObject_0',
 'postcondition_ground_predicates': [{'arguments': ['potato'],
                                      'is_neg': False,
                                      'predicate_name': 'isCool'}],
 'precondition_ground_predicates': [{'arguments': ['potato'],
                                     'is_neg': False,
                                     'predicate_name': 'coolable'}]}

GOAL OBJECT SET:
[('Potato|+00.31|+00.79|+06.67',)]

PERMISSIBLE OBJECT SET:
[('Potato|+00.31|+00.79|+06.67',)]


Permissible Objects:
('Potato|+00.31|+00.79|+06.67',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.31|+00.79|+06.67"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.31|+00.79|+06.67"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Potato|+00.31|+00.79|+06.67',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Potato|+00.31|+00.79|+06.67',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+00.31|+00.79|+06.67"})]
Error Message: object not found: Potato|+00.31|+00.79|+06.67
Action feasible: False
	 Fluent(predicate='isCool', objects=('Potato|+00.31|+00.79|+06.67',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.31|+00.79|+06.67"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Potato|+00.31|+00.79|+06.67',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.31|+00.79|+06.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Potato|+00.31|+00.79|+06.67',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.31|+00.79|+06.67", "receptacle_object_id": "Potato|+00.31|+00.79|+06.67"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Potato|+00.31|+00.79|+06.67',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.31|+00.79|+06.67"})]
Error Message: object not found: Potato|+00.31|+00.79|+06.67
Action feasible: False
	 Fluent(predicate='isCool', objects=('Potato|+00.31|+00.79|+06.67',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|+00.31|+00.79|+06.67"})]
Error Message: object not found: Potato|+00.31|+00.79|+06.67
Action feasible: False
	 Fluent(predicate='isCool', objects=('Potato|+00.31|+00.79|+06.67',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|+00.31|+00.79|+06.67"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Potato|+00.31|+00.79|+06.67',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.31|+00.79|+06.67"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+00.31|+00.79|+06.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Potato|+00.31|+00.79|+06.67',)) True
	 State: False

Error Message: object not found: Potato|+00.31|+00.79|+06.67
Action feasible: False
	 Fluent(predicate='isCool', objects=('Potato|+00.31|+00.79|+06.67',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.31|+00.79|+06.67"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.31|+00.79|+06.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Potato|+00.31|+00.79|+06.67',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Potato|+00.31|+00.79|+06.67',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.31|+00.79|+06.67"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.31|+00.79|+06.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Potato|+00.31|+00.79|+06.67',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Potato|+00.31|+00.79|+06.67',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.31|+00.79|+06.67"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.31|+00.79|+06.67", "receptacle_object_id": "Potato|+00.31|+00.79|+06.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Potato|+00.31|+00.79|+06.67',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Potato|+00.31|+00.79|+06.67',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.31|+00.79|+06.67"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.31|+00.79|+06.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Potato|+00.31|+00.79|+06.67',)) True
	 State: False

Error Message: object not found: Potato|+00.31|+00.79|+06.67
Action feasible: False
	 Fluent(predicate='isCool', objects=('Potato|+00.31|+00.79|+06.67',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.31|+00.79|+06.67"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|+00.31|+00.79|+06.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Potato|+00.31|+00.79|+06.67',)) True
	 State: False

Error Message: object not found: Potato|+00.31|+00.79|+06.67
Action feasible: False
	 Fluent(predicate='isCool', objects=('Potato|+00.31|+00.79|+06.67',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.31|+00.79|+06.67"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|+00.31|+00.79|+06.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Potato|+00.31|+00.79|+06.67',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Potato|+00.31|+00.79|+06.67',)) True
	 State: False

Rollout 14/50
=============================================
Problem Number: 8
Problem ID: train/pick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan-18/trial_T20190909_070711_069611
Motion plan result: task_success: False
Total Actions Taken: 15
=============================================
Top operators after success are:
TakeObject_0 1.0 8.1 / 8.1
TurnOnLamp_1 1.0 3.1 / 3.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
SliceObject_2 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
CoolObject_2 1.0 0.1 / 0.1
WashObject_0 1.0CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
 0.1 / 0.1
WashObject_1 1.0 0.1 / 0.1
WashObject_2 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
CutObject_2 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_0 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
WarmObject_1 1.0 0.1 / 0.1
WarmObject_2 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PutObjectInReceptacle 1.0 0.1 / 0.1
PlaceObject_0 0.6774193548387097 2.1 / 3.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 8 / 245, train/pick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan-18/trial_T20190909_070711_069611
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 8 / 245, train/pick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan-18/trial_T20190909_070711_069611
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 8 / 245, train/pick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan-18/trial_T20190909_070711_069611
Sucessfully found 0 plans for goals.
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 5 / 9 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 9 / 245, train/pick_clean_then_place_in_recep-Lettuce-None-SideTable-21/trial_T20190907_101234_922599
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 49 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'CutObject_2', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	place a cleaned head of lettuce on a small side table.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r SideTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_8_bar__minus_1_bar_3_bar_30 loc_bar__minus_1_bar_1_bar_1_bar_45)
(gotolocation agent1 loc_bar__minus_1_bar_1_bar_1_bar_45 loc_bar__minus_4_bar_1_bar_0_bar_45)
(takeobject_0 agent1 loc_bar__minus_4_bar_1_bar_0_bar_45 lettuce__minus_4_dot_33652736_comma__minus_4_dot_33652736_comma_3_dot_821450232_comma_3_dot_821450232_comma_3_dot_892964124_comma_3_dot_892964124)
(gotolocation agent1 loc_bar__minus_4_bar_1_bar_0_bar_45 loc_bar__minus_1_bar_1_bar_1_bar_45)
(putobjectinreceptacle agent1 loc_bar__minus_1_bar_1_bar_1_bar_45 lettucetype lettuce__minus_4_dot_33652736_comma__minus_4_dot_33652736_comma_3_dot_821450232_comma_3_dot_821450232_comma_3_dot_892964124_comma_3_dot_892964124 sidetable_3_dot_0924_comma_3_dot_0924_comma_1_dot_7924_comma_1_dot_7924_comma_2_dot_8004_comma_2_dot_8004)
(washobject_2 agent1 loc_bar__minus_1_bar_1_bar_1_bar_45 lettuce__minus_4_dot_33652736_comma__minus_4_dot_33652736_comma_3_dot_821450232_comma_3_dot_821450232_comma_3_dot_892964124_comma_3_dot_892964124)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 9 / 245
Motion planning for: train/pick_clean_then_place_in_recep-Lettuce-None-SideTable-21/trial_T20190907_101234_922599
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r SideTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['lettuce'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PutObjectInReceptacle', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['lettuce', 'sidetable'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['lettuce'], 'is_neg': True}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['sidetable', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['lettuce'], 'is_neg': False}]}

{'action': 'WashObject_2', 'postcondition_ground_predicates': [{'predicate_name': 'isClean', 'arguments': ['lettuce'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'cleanable', 'arguments': ['lettuce'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation diningtable)
(PickupObject lettuce)
(GotoLocation sinkbasin)
(CleanObject lettuce)
(GotoLocation sidetable)
(PutObject lettuce sidetable)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['lettuce', 'sidetable'], 'is_neg': False}

{'predicate_name': 'cleanable', 'arguments': ['lettuce'], 'is_neg': False}

{'predicate_name': 'isClean', 'arguments': ['lettuce'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['lettuce'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Lettuce|-01.08|+00.97|+00.96',)]

PERMISSIBLE OBJECT SET:
[('Lettuce|-01.08|+00.97|+00.96',)]


Permissible Objects:
('Lettuce|-01.08|+00.97|+00.96',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True

OPERATOR:
{'action': 'PutObjectInReceptacle',
 'postcondition_ground_predicates': [{'arguments': ['lettuce', 'sidetable'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'},
                                     {'arguments': ['lettuce'],
                                      'is_neg': True,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': [{'arguments': ['sidetable', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['lettuce'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Lettuce|-01.08|+00.97|+00.96', 'SideTable|+00.77|+00.70|+00.45')]

PERMISSIBLE OBJECT SET:
[('Lettuce|-01.08|+00.97|+00.96', 'SideTable|+00.77|+00.70|+00.45')]


Permissible Objects:
('Lettuce|-01.08|+00.97|+00.96', 'SideTable|+00.77|+00.70|+00.45')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"})]
Action feasible: True

OPERATOR:
{'action': 'WashObject_2',
 'postcondition_ground_predicates': [{'arguments': ['lettuce'],
                                      'is_neg': False,
                                      'predicate_name': 'isClean'}],
 'precondition_ground_predicates': [{'arguments': ['lettuce'],
                                     'is_neg': False,
                                     'predicate_name': 'cleanable'}]}

GOAL OBJECT SET:
[('Lettuce|-01.08|+00.97|+00.96',), ('Lettuce|-01.08|+00.97|+00.96',)]

PERMISSIBLE OBJECT SET:
[('Lettuce|-01.08|+00.97|+00.96',),
 ('Lettuce|-01.08|+00.97|+00.96', 'SideTable|+00.77|+00.70|+00.45')]


Permissible Objects:
('Lettuce|-01.08|+00.97|+00.96',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Error Message: object not found: Lettuce|-01.08|+00.97|+00.96
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Lettuce|-01.08|+00.97|+00.96', 'SideTable|+00.77|+00.70|+00.45')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Error Message: object not found: Lettuce|-01.08|+00.97|+00.96
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SideTable|+00.77|+00.70|+00.45"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SideTable|+00.77|+00.70|+00.45"})]
Error Message: object not found: SideTable|+00.77|+00.70|+00.45
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 2/50

Permissible Objects:
('Lettuce|-01.08|+00.97|+00.96',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Error Message: object not found: Lettuce|-01.08|+00.97|+00.96
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Error Message: object not found: Lettuce|-01.08|+00.97|+00.96
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Error Message: object not found: Lettuce|-01.08|+00.97|+00.96
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: object not found: Lettuce|-01.08|+00.97|+00.96
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: object not found: Lettuce|-01.08|+00.97|+00.96
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: object not found: Lettuce|-01.08|+00.97|+00.96
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Lettuce|-01.08|+00.97|+00.96', 'SideTable|+00.77|+00.70|+00.45')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "SideTable|+00.77|+00.70|+00.45"})]
Error Message: object not found: SideTable|+00.77|+00.70|+00.45
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Error Message: object not found: Lettuce|-01.08|+00.97|+00.96
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "SideTable|+00.77|+00.70|+00.45"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "SideTable|+00.77|+00.70|+00.45"})]
Error Message: SideTable|+00.77|+00.70|+00.45 must have the property CanPickup to be picked up.
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SideTable|+00.77|+00.70|+00.45", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SideTable|+00.77|+00.70|+00.45", "receptacle_object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SideTable|+00.77|+00.70|+00.45"})]
Error Message: object not found: SideTable|+00.77|+00.70|+00.45
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Error Message: object not found: Lettuce|-01.08|+00.97|+00.96
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "SideTable|+00.77|+00.70|+00.45"})]
Error Message: object not found: SideTable|+00.77|+00.70|+00.45
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Error Message: object not found: Lettuce|-01.08|+00.97|+00.96
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "SideTable|+00.77|+00.70|+00.45"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "SideTable|+00.77|+00.70|+00.45"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: object not found: SideTable|+00.77|+00.70|+00.45
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: object not found: Lettuce|-01.08|+00.97|+00.96
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "SideTable|+00.77|+00.70|+00.45"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "SideTable|+00.77|+00.70|+00.45"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "SideTable|+00.77|+00.70|+00.45", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "SideTable|+00.77|+00.70|+00.45", "receptacle_object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SideTable|+00.77|+00.70|+00.45"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: object not found: SideTable|+00.77|+00.70|+00.45
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: object not found: Lettuce|-01.08|+00.97|+00.96
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "SideTable|+00.77|+00.70|+00.45"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: object not found: SideTable|+00.77|+00.70|+00.45
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: object not found: Lettuce|-01.08|+00.97|+00.96
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "SideTable|+00.77|+00.70|+00.45"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 32/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "SideTable|+00.77|+00.70|+00.45"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: object not found: SideTable|+00.77|+00.70|+00.45
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 33/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: object not found: Lettuce|-01.08|+00.97|+00.96
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 34/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "SideTable|+00.77|+00.70|+00.45"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 35/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 36/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "SideTable|+00.77|+00.70|+00.45"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: SideTable|+00.77|+00.70|+00.45 must have the property CanPickup to be picked up.
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 37/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 38/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "SideTable|+00.77|+00.70|+00.45", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 39/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "SideTable|+00.77|+00.70|+00.45", "receptacle_object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 40/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 41/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 42/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SideTable|+00.77|+00.70|+00.45"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: object not found: SideTable|+00.77|+00.70|+00.45
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 43/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: object not found: Lettuce|-01.08|+00.97|+00.96
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 44/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "SideTable|+00.77|+00.70|+00.45"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: object not found: SideTable|+00.77|+00.70|+00.45
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 45/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: object not found: Lettuce|-01.08|+00.97|+00.96
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 46/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "SideTable|+00.77|+00.70|+00.45"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 47/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 48/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "SideTable|+00.77|+00.70|+00.45"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: object not found: SideTable|+00.77|+00.70|+00.45
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Rollout 49/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96", "receptacle_object_id": "SideTable|+00.77|+00.70|+00.45"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Lettuce|-01.08|+00.97|+00.96"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

Error Message: object not found: Lettuce|-01.08|+00.97|+00.96
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|-01.08|+00.97|+00.96',)) True
	 State: False

=============================================
Problem Number: 9
Problem ID: train/pick_clean_then_place_in_recep-Lettuce-None-SideTable-21/trial_T20190907_101234_922599
Motion plan result: task_success: False
Total Actions Taken: 69
Failed at operator: 3 / 3 operators in task plan.
=============================================
Top operators after success are:
TakeObject_0 1.0 9.1 / 9.1
TurnOnLamp_1 1.0 3.1 / 3.1
PutObjectInReceptacle 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
SliceObject_2 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
CoolObject_2 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
WashObject_1 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
CutObject_2 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_0 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
WarmObject_1 1.0 0.1 / 0.1
WarmObject_2 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PlaceObject_0 0.6774193548387097 2.1 / 3.1
WashObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 9 / 245, train/pick_clean_then_place_in_recep-Lettuce-None-SideTable-21/trial_T20190907_101234_922599
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 9 / 245, train/pick_clean_then_place_in_recep-Lettuce-None-SideTable-21/trial_T20190907_101234_922599
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 9 / 245, train/pick_clean_then_place_in_recep-Lettuce-None-SideTable-21/trial_T20190907_101234_922599
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 10 / 245, train/pick_cool_then_place_in_recep-PotatoSliced-None-CounterTop-20/trial_T20190909_124223_494312
Now attempting to plan for goal: 0 / 4
	Running planner with existing operators + 48 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'CutObject_2', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	pick up knife , cut potato , put potato in the fridge , remove from fridge , place on counter.
	 Ground truth goal: 
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_1_bar_9_bar_0_bar_30 loc_bar_2_bar__minus_5_bar_2_bar_60)
(sliceobject_2 agent1 loc_bar_2_bar__minus_5_bar_2_bar_60 potato_1_dot_829888104_comma_1_dot_829888104_comma__minus_7_dot_00534248_comma__minus_7_dot_00534248_comma_3_dot_771224_comma_3_dot_771224)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 10 / 245
Motion planning for: train/pick_cool_then_place_in_recep-PotatoSliced-None-CounterTop-20/trial_T20190909_124223_494312
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Attempting to execute the following motion plan:
{'action': 'SliceObject_2', 'postcondition_ground_predicates': [{'predicate_name': 'isSliced', 'arguments': ['potato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'sliceable', 'arguments': ['potato'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject knife)
(GotoLocation potato)
(SliceObject potato)
(GotoLocation cabinet)
(PutObject knife cabinet)
(GotoLocation countertop)
(PickupObject potato)
(GotoLocation fridge)
(CoolObject potato)
(GotoLocation countertop)
(PutObject potato countertop)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['potato', 'countertop'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['potato'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'SliceObject_2',
 'postcondition_ground_predicates': [{'arguments': ['potato'],
                                      'is_neg': False,
                                      'predicate_name': 'isSliced'}],
 'precondition_ground_predicates': [{'arguments': ['potato'],
                                     'is_neg': False,
                                     'predicate_name': 'sliceable'}]}

GOAL OBJECT SET:
[('Potato|-00.56|+00.94|-02.23',), ('Potato|+00.46|+00.94|-01.75',)]

PERMISSIBLE OBJECT SET:
[('Potato|-00.56|+00.94|-02.23',), ('Potato|+00.46|+00.94|-01.75',)]


Permissible Objects:
('Potato|-00.56|+00.94|-02.23',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Potato|+00.46|+00.94|-01.75',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Potato|-00.56|+00.94|-02.23',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Potato|-00.56|+00.94|-02.23"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-00.56|+00.94|-02.23"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-00.56|+00.94|-02.23"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-00.56|+00.94|-02.23"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-00.56|+00.94|-02.23"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-00.56|+00.94|-02.23"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-00.56|+00.94|-02.23"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-00.56|+00.94|-02.23"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Potato|+00.46|+00.94|-01.75',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.46|+00.94|-01.75", "receptacle_object_id": "Potato|+00.46|+00.94|-01.75"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.46|+00.94|-01.75"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.46|+00.94|-01.75"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.46|+00.94|-01.75"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.46|+00.94|-01.75"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.46|+00.94|-01.75", "receptacle_object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.46|+00.94|-01.75"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.46|+00.94|-01.75"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.46|+00.94|-01.75"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 14/50
=============================================
Problem Number: 10
Problem ID: train/pick_cool_then_place_in_recep-PotatoSliced-None-CounterTop-20/trial_T20190909_124223_494312
Motion plan result: task_success: False
Total Actions Taken: 30
=============================================
Top operators after success are:
TakeObject_0 1.0 9.1 / 9.1
TurnOnLamp_1 1.0 3.1 / 3.1
PutObjectInReceptacle 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
CoolObject_2 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
WashObject_1 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
CutObject_2 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_0 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
WarmObject_1 1.0 0.1 / 0.1
WarmObject_2 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PlaceObject_0 0.6774193548387097 2.1 / 3.1
SliceObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 10 / 245, train/pick_cool_then_place_in_recep-PotatoSliced-None-CounterTop-20/trial_T20190909_124223_494312
Now attempting to plan for goal: 1 / 4
	Running planner with existing operators + 49 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'CutObject_2', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	pick up knife , cut potato , put potato in the fridge , remove from fridge , place on counter.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(and 
		(objectType ?o KnifeType)
		(objectType ?ot PotatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?ot ?r)
		(sliceable ?ot)
		(isSliced ?ot)
		(inReceptacle ?ot ?r)))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_1_bar_9_bar_0_bar_30 loc_bar_4_bar_1_bar_3_bar_45)
(gotolocation agent1 loc_bar_4_bar_1_bar_3_bar_45 loc_bar__minus_1_bar__minus_5_bar_2_bar_30)
(takeobject_0 agent1 loc_bar__minus_1_bar__minus_5_bar_2_bar_30 potato__minus_2_dot_2590248_comma__minus_2_dot_2590248_comma__minus_8_dot_93582632_comma__minus_8_dot_93582632_comma_3_dot_771223784_comma_3_dot_771223784)
(gotolocation agent1 loc_bar__minus_1_bar__minus_5_bar_2_bar_30 loc_bar__minus_3_bar__minus_3_bar_3_bar_60)
(placeobject_0 agent1 loc_bar__minus_3_bar__minus_3_bar_3_bar_60 fridge__minus_5_dot_98224832_comma__minus_5_dot_98224832_comma__minus_2_dot_812_comma__minus_2_dot_812_comma_0_dot_0_comma_0_dot_0 potato__minus_2_dot_2590248_comma__minus_2_dot_2590248_comma__minus_8_dot_93582632_comma__minus_8_dot_93582632_comma_3_dot_771223784_comma_3_dot_771223784)
(putobjectinreceptacle agent1 loc_bar__minus_3_bar__minus_3_bar_3_bar_60 potatotype potato__minus_2_dot_2590248_comma__minus_2_dot_2590248_comma__minus_8_dot_93582632_comma__minus_8_dot_93582632_comma_3_dot_771223784_comma_3_dot_771223784 fridge__minus_5_dot_98224832_comma__minus_5_dot_98224832_comma__minus_2_dot_812_comma__minus_2_dot_812_comma_0_dot_0_comma_0_dot_0)
(takeobject_0 agent1 loc_bar__minus_3_bar__minus_3_bar_3_bar_60 potato__minus_2_dot_2590248_comma__minus_2_dot_2590248_comma__minus_8_dot_93582632_comma__minus_8_dot_93582632_comma_3_dot_771223784_comma_3_dot_771223784)
(cutobject_2 agent1 loc_bar__minus_3_bar__minus_3_bar_3_bar_60 potato__minus_2_dot_2590248_comma__minus_2_dot_2590248_comma__minus_8_dot_93582632_comma__minus_8_dot_93582632_comma_3_dot_771223784_comma_3_dot_771223784 potato__minus_2_dot_2590248_comma__minus_2_dot_2590248_comma__minus_8_dot_93582632_comma__minus_8_dot_93582632_comma_3_dot_771223784_comma_3_dot_771223784)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 10 / 245
Motion planning for: train/pick_cool_then_place_in_recep-PotatoSliced-None-CounterTop-20/trial_T20190909_124223_494312
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(and 
		(objectType ?o KnifeType)
		(objectType ?ot PotatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?ot ?r)
		(sliceable ?ot)
		(isSliced ?ot)
		(inReceptacle ?ot ?r)))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['potato'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['potato', 'fridge'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['fridge', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['potato'], 'is_neg': False}]}

{'action': 'PutObjectInReceptacle', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['potato', 'fridge'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['potato'], 'is_neg': True}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['fridge', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['potato'], 'is_neg': False}]}

{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['potato'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'CutObject_2', 'postcondition_ground_predicates': [{'predicate_name': 'isSliced', 'arguments': ['potato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['potato'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['potato'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject knife)
(GotoLocation potato)
(SliceObject potato)
(GotoLocation cabinet)
(PutObject knife cabinet)
(GotoLocation countertop)
(PickupObject potato)
(GotoLocation fridge)
(CoolObject potato)
(GotoLocation countertop)
(PutObject potato countertop)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['potato', 'countertop'], 'is_neg': False}

CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
{'predicate_name': 'coolable', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['potato'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['potato'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Potato|-00.56|+00.94|-02.23',), ('Potato|+00.46|+00.94|-01.75',)]

PERMISSIBLE OBJECT SET:
[('Potato|-00.56|+00.94|-02.23',), ('Potato|+00.46|+00.94|-01.75',)]


Permissible Objects:
('Potato|-00.56|+00.94|-02.23',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True

OPERATOR:
{'action': 'PlaceObject_0',
 'postcondition_ground_predicates': [{'arguments': ['potato', 'fridge'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'}],
 'precondition_ground_predicates': [{'arguments': ['fridge', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['potato'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Potato|-00.56|+00.94|-02.23', 'Fridge|-01.50|+00.00|-00.70'),
 ('Potato|+00.46|+00.94|-01.75', 'Fridge|-01.50|+00.00|-00.70'),
 ('Potato|+00.46|+00.94|-01.75', 'Fridge|-01.50|+00.00|-00.70')]

PERMISSIBLE OBJECT SET:
[('Potato|-00.56|+00.94|-02.23', 'Fridge|-01.50|+00.00|-00.70'),
 ('Potato|+00.46|+00.94|-01.75', 'Fridge|-01.50|+00.00|-00.70'),
 ('Potato|+00.46|+00.94|-01.75',
  'Fridge|-01.50|+00.00|-00.70',
  'Potato|-00.56|+00.94|-02.23')]


Permissible Objects:
('Potato|-00.56|+00.94|-02.23', 'Fridge|-01.50|+00.00|-00.70')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Potato|-00.56|+00.94|-02.23', 'Fridge|-01.50|+00.00|-00.70')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Error Message: Target openable Receptacle is CLOSED, can't place if target is not open!
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Potato|-00.56|+00.94|-02.23', 'Fridge|-01.50|+00.00|-00.70')) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Potato|-00.56|+00.94|-02.23', 'Fridge|-01.50|+00.00|-00.70')) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Potato|-00.56|+00.94|-02.23', 'Fridge|-01.50|+00.00|-00.70')) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Potato|-00.56|+00.94|-02.23', 'Fridge|-01.50|+00.00|-00.70')) True
	 State: False

Action feasible: True

OPERATOR:
{'action': 'PutObjectInReceptacle',
 'postcondition_ground_predicates': [{'arguments': ['potato', 'fridge'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'},
                                     {'arguments': ['potato'],
                                      'is_neg': True,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': [{'arguments': ['fridge', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['potato'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Potato|-00.56|+00.94|-02.23', 'Fridge|-01.50|+00.00|-00.70'),
 ('Potato|+00.46|+00.94|-01.75', 'Fridge|-01.50|+00.00|-00.70'),
 ('Potato|+00.46|+00.94|-01.75', 'Fridge|-01.50|+00.00|-00.70')]

PERMISSIBLE OBJECT SET:
[('Potato|-00.56|+00.94|-02.23', 'Fridge|-01.50|+00.00|-00.70'),
 ('Potato|+00.46|+00.94|-01.75', 'Fridge|-01.50|+00.00|-00.70'),
 ('Potato|+00.46|+00.94|-01.75',
  'Fridge|-01.50|+00.00|-00.70',
  'Potato|-00.56|+00.94|-02.23')]


Permissible Objects:
('Potato|-00.56|+00.94|-02.23', 'Fridge|-01.50|+00.00|-00.70')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Exception: list index out of range
Action feasible: False

OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['potato'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Potato|-00.56|+00.94|-02.23',),
 ('Potato|-00.56|+00.94|-02.23',),
 ('Potato|+00.46|+00.94|-01.75',),
 ('Potato|+00.46|+00.94|-01.75',),
 ('Potato|+00.46|+00.94|-01.75',)]

PERMISSIBLE OBJECT SET:
[('Potato|-00.56|+00.94|-02.23',),
 ('Potato|-00.56|+00.94|-02.23', 'Fridge|-01.50|+00.00|-00.70'),
 ('Potato|+00.46|+00.94|-01.75',),
 ('Potato|+00.46|+00.94|-01.75', 'Fridge|-01.50|+00.00|-00.70'),
 ('Potato|+00.46|+00.94|-01.75',
  'Fridge|-01.50|+00.00|-00.70',
  'Potato|-00.56|+00.94|-02.23')]


Permissible Objects:
('Potato|-00.56|+00.94|-02.23',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True

OPERATOR:
{'action': 'CutObject_2',
 'postcondition_ground_predicates': [{'arguments': ['potato'],
                                      'is_neg': False,
                                      'predicate_name': 'isSliced'}],
 'precondition_ground_predicates': [{'arguments': ['potato'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'},
                                    {'arguments': ['potato'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Potato|-00.56|+00.94|-02.23',),
 ('Potato|-00.56|+00.94|-02.23',),
 ('Potato|+00.46|+00.94|-01.75',),
 ('Potato|+00.46|+00.94|-01.75',),
 ('Potato|+00.46|+00.94|-01.75',)]

PERMISSIBLE OBJECT SET:
[('Potato|-00.56|+00.94|-02.23',),
 ('Potato|-00.56|+00.94|-02.23', 'Fridge|-01.50|+00.00|-00.70'),
 ('Potato|+00.46|+00.94|-01.75',),
 ('Potato|+00.46|+00.94|-01.75', 'Fridge|-01.50|+00.00|-00.70'),
 ('Potato|+00.46|+00.94|-01.75',
  'Fridge|-01.50|+00.00|-00.70',
  'Potato|-00.56|+00.94|-02.23')]


Permissible Objects:
('Potato|-00.56|+00.94|-02.23',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Potato|-00.56|+00.94|-02.23', 'Fridge|-01.50|+00.00|-00.70')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Potato|+00.46|+00.94|-01.75',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Potato|+00.46|+00.94|-01.75', 'Fridge|-01.50|+00.00|-00.70')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Potato|+00.46|+00.94|-01.75', 'Fridge|-01.50|+00.00|-00.70', 'Potato|-00.56|+00.94|-02.23')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Potato|-00.56|+00.94|-02.23',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Potato|-00.56|+00.94|-02.23', 'Fridge|-01.50|+00.00|-00.70')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-01.50|+00.00|-00.70", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-01.50|+00.00|-00.70", "receptacle_object_id": "Potato|-00.56|+00.94|-02.23"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Error Message: object not found: Fridge|-01.50|+00.00|-00.70
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Error Message: object not found: Fridge|-01.50|+00.00|-00.70
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-01.50|+00.00|-00.70", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-01.50|+00.00|-00.70", "receptacle_object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: Target openable Receptacle is CLOSED, can't place if target is not open!
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: object not found: Fridge|-01.50|+00.00|-00.70
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: object not found: Fridge|-01.50|+00.00|-00.70
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 32/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 33/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 34/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 35/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 36/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: Fridge|-01.50|+00.00|-00.70 must have the property CanPickup to be picked up.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 37/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 38/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-01.50|+00.00|-00.70", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 39/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-01.50|+00.00|-00.70", "receptacle_object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 40/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 41/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 42/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: object not found: Fridge|-01.50|+00.00|-00.70
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 43/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 44/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: object not found: Fridge|-01.50|+00.00|-00.70
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 45/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 46/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 47/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 48/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Rollout 49/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False

Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.56|+00.94|-02.23',)) True
	 State: False


Permissible Objects:
('Potato|+00.46|+00.94|-01.75',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.46|+00.94|-01.75", "receptacle_object_id": "Potato|+00.46|+00.94|-01.75"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Potato|+00.46|+00.94|-01.75', 'Fridge|-01.50|+00.00|-00.70')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.46|+00.94|-01.75", "receptacle_object_id": "Potato|+00.46|+00.94|-01.75"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.46|+00.94|-01.75", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-01.50|+00.00|-00.70", "receptacle_object_id": "Potato|+00.46|+00.94|-01.75"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-01.50|+00.00|-00.70", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Error Message: object not found: Fridge|-01.50|+00.00|-00.70
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Error Message: object not found: Fridge|-01.50|+00.00|-00.70
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.46|+00.94|-01.75", "receptacle_object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.46|+00.94|-01.75", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-01.50|+00.00|-00.70", "receptacle_object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-01.50|+00.00|-00.70", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: object not found: Fridge|-01.50|+00.00|-00.70
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: object not found: Fridge|-01.50|+00.00|-00.70
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 32/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 33/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 34/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 35/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 36/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 37/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 38/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.46|+00.94|-01.75", "receptacle_object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 39/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.46|+00.94|-01.75", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 40/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-01.50|+00.00|-00.70", "receptacle_object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 41/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-01.50|+00.00|-00.70", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 42/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 43/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: object not found: Fridge|-01.50|+00.00|-00.70
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 44/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 45/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: object not found: Fridge|-01.50|+00.00|-00.70
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 46/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 47/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 48/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 49/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False


Permissible Objects:
('Potato|+00.46|+00.94|-01.75', 'Fridge|-01.50|+00.00|-00.70', 'Potato|-00.56|+00.94|-02.23')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.46|+00.94|-01.75", "receptacle_object_id": "Potato|+00.46|+00.94|-01.75"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.46|+00.94|-01.75", "receptacle_object_id": "Potato|-00.56|+00.94|-02.23"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.46|+00.94|-01.75", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Potato|+00.46|+00.94|-01.75"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-01.50|+00.00|-00.70", "receptacle_object_id": "Potato|+00.46|+00.94|-01.75"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-01.50|+00.00|-00.70", "receptacle_object_id": "Potato|-00.56|+00.94|-02.23"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-01.50|+00.00|-00.70", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Error Message: object not found: Fridge|-01.50|+00.00|-00.70
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Error Message: object not found: Fridge|-01.50|+00.00|-00.70
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 32/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 33/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 34/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 35/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 36/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.46|+00.94|-01.75", "receptacle_object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 37/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.46|+00.94|-01.75", "receptacle_object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 38/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.46|+00.94|-01.75", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 39/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 40/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 41/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-00.56|+00.94|-02.23", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: Target openable Receptacle is CLOSED, can't place if target is not open!
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 42/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-01.50|+00.00|-00.70", "receptacle_object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 43/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-01.50|+00.00|-00.70", "receptacle_object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 44/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-01.50|+00.00|-00.70", "receptacle_object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 45/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 46/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 47/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Fridge|-01.50|+00.00|-00.70"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: object not found: Fridge|-01.50|+00.00|-00.70
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 48/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|+00.46|+00.94|-01.75"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: object not found: Potato|+00.46|+00.94|-01.75
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Rollout 49/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.50|+00.00|-00.70"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|-00.56|+00.94|-02.23"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

Error Message: object not found: Potato|-00.56|+00.94|-02.23
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Potato|+00.46|+00.94|-01.75',)) True
	 State: False

=============================================
Problem Number: 10
Problem ID: train/pick_cool_then_place_in_recep-PotatoSliced-None-CounterTop-20/trial_T20190909_124223_494312
Motion plan result: task_success: False
Total Actions Taken: 177
Failed at operator: 5 / 5 operators in task plan.
=============================================
Top operators after success are:
TakeObject_0 1.0 11.1 / 11.1
TurnOnLamp_1 1.0 3.1 / 3.1
PutObjectInReceptacle 1.0 2.1 / 2.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
CoolObject_2 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
WashObject_1 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_0 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
WarmObject_1 1.0 0.1 / 0.1
WarmObject_2 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PlaceObject_0 0.7560975609756099 3.1 / 4.1
SliceObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 10 / 245, train/pick_cool_then_place_in_recep-PotatoSliced-None-CounterTop-20/trial_T20190909_124223_494312
Now attempting to plan for goal: 2 / 4
	Running planner with existing operators + 47 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'HeatObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	pick up knife , cut potato , put potato in the fridge , remove from fridge , place on counter.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o2 - object)
(exists (?o1 - object)
(and 
		(objectType ?o1 KnifeType)
		(objectType ?o2 PotatoType)
		(receptacleType ?r1 FridgeType)
		(receptacleType ?r2 CounterTopType)
		(inReceptacle ?o1 ?r2)
		(inReceptacle ?o2 ?r1)
		(coolable ?o2)
		(isCool ?o2)
		(sliceable ?o2)
		(isSliced ?o2))))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	 Plan string: (gotolocation agent1 loc_bar_1_bar_9_bar_0_bar_30 loc_bar_4_bar_1_bar_3_bar_45)
(takeobject_0 agent1 loc_bar_4_bar_1_bar_3_bar_45 butterknife_1_dot_178266288_comma_1_dot_178266288_comma_1_dot_22134304_comma_1_dot_22134304_comma_3_dot_7227464_comma_3_dot_7227464)
(gotolocation agent1 loc_bar_4_bar_1_bar_3_bar_45 loc_bar__minus_1_bar__minus_5_bar_2_bar_30)
(coolobject_2 agent1 loc_bar__minus_1_bar__minus_5_bar_2_bar_30 potato__minus_2_dot_2590248_comma__minus_2_dot_2590248_comma__minus_8_dot_93582632_comma__minus_8_dot_93582632_comma_3_dot_771223784_comma_3_dot_771223784)
(takeobject_0 agent1 loc_bar__minus_1_bar__minus_5_bar_2_bar_30 potato__minus_2_dot_2590248_comma__minus_2_dot_2590248_comma__minus_8_dot_93582632_comma__minus_8_dot_93582632_comma_3_dot_771223784_comma_3_dot_771223784)
(gotolocation agent1 loc_bar__minus_1_bar__minus_5_bar_2_bar_30 loc_bar__minus_3_bar__minus_3_bar_3_bar_60)
(putobjectinreceptacle agent1 loc_bar__minus_3_bar__minus_3_bar_3_bar_60 potatotype potato__minus_2_dot_2590248_comma__minus_2_dot_2590248_comma__minus_8_dot_93582632_comma__minus_8_dot_93582632_comma_3_dot_771223784_comma_3_dot_771223784 fridge__minus_5_dot_98224832_comma__minus_5_dot_98224832_comma__minus_2_dot_812_comma__minus_2_dot_812_comma_0_dot_0_comma_0_dot_0)
(cutobject_1 butterknife_1_dot_178266288_comma_1_dot_178266288_comma_1_dot_22134304_comma_1_dot_22134304_comma_3_dot_7227464_comma_3_dot_7227464 agent1 loc_bar__minus_3_bar__minus_3_bar_3_bar_60 potato__minus_2_dot_2590248_comma__minus_2_dot_2590248_comma__minus_8_dot_93582632_comma__minus_8_dot_93582632_comma_3_dot_771223784_comma_3_dot_771223784)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 10 / 245
Motion planning for: train/pick_cool_then_place_in_recep-PotatoSliced-None-CounterTop-20/trial_T20190909_124223_494312
Proposed goal is: 
(:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o2 - object)
(exists (?o1 - object)
(and 
		(objectType ?o1 KnifeType)
		(objectType ?o2 PotatoType)
		(receptacleType ?r1 FridgeType)
		(receptacleType ?r2 CounterTopType)
		(inReceptacle ?o1 ?r2)
		(inReceptacle ?o2 ?r1)
		(coolable ?o2)
		(isCool ?o2)
		(sliceable ?o2)
		(isSliced ?o2))))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['butterknife'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'CoolObject_2', 'postcondition_ground_predicates': [{'predicate_name': 'isCool', 'arguments': ['potato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'coolable', 'arguments': ['potato'], 'is_neg': False}]}

{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['potato'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PutObjectInReceptacle', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['potato', 'fridge'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['potato'], 'is_neg': True}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['fridge', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['potato'], 'is_neg': False}]}

{'action': 'CutObject_1', 'postcondition_ground_predicates': [{'predicate_name': 'isSliced', 'arguments': ['potato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['butterknife'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject knife)
(GotoLocation potato)
(SliceObject potato)
(GotoLocation cabinet)
(PutObject knife cabinet)
(GotoLocation countertop)
(PickupObject potato)
(GotoLocation fridge)
(CoolObject potato)
(GotoLocation countertop)
(PutObject potato countertop)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['potato', 'countertop'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['potato'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['butterknife'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('ButterKnife|+00.29|+00.93|+00.31',)]

PERMISSIBLE OBJECT SET:
[('ButterKnife|+00.29|+00.93|+00.31',)]


Permissible Objects:
('ButterKnife|+00.29|+00.93|+00.31',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "ButterKnife|+00.29|+00.93|+00.31"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "ButterKnife|+00.29|+00.93|+00.31"})]
Error Message: ButterKnife|+00.29|+00.93|+00.31 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('ButterKnife|+00.29|+00.93|+00.31',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('ButterKnife|+00.29|+00.93|+00.31',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "ButterKnife|+00.29|+00.93|+00.31"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('ButterKnife|+00.29|+00.93|+00.31',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "ButterKnife|+00.29|+00.93|+00.31"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('ButterKnife|+00.29|+00.93|+00.31',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "ButterKnife|+00.29|+00.93|+00.31"})]
Error Message: ButterKnife|+00.29|+00.93|+00.31 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('ButterKnife|+00.29|+00.93|+00.31',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "ButterKnife|+00.29|+00.93|+00.31", "receptacle_object_id": "ButterKnife|+00.29|+00.93|+00.31"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='holds', objects=('ButterKnife|+00.29|+00.93|+00.31',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "ButterKnife|+00.29|+00.93|+00.31"})]
Error Message: object not found: ButterKnife|+00.29|+00.93|+00.31
Action feasible: False
	 Fluent(predicate='holds', objects=('ButterKnife|+00.29|+00.93|+00.31',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "ButterKnife|+00.29|+00.93|+00.31"})]
Error Message: object not found: ButterKnife|+00.29|+00.93|+00.31
Action feasible: False
	 Fluent(predicate='holds', objects=('ButterKnife|+00.29|+00.93|+00.31',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "ButterKnife|+00.29|+00.93|+00.31"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='holds', objects=('ButterKnife|+00.29|+00.93|+00.31',)) True
	 State: False

Rollout 7/50
=============================================
Problem Number: 10
Problem ID: train/pick_cool_then_place_in_recep-PotatoSliced-None-CounterTop-20/trial_T20190909_124223_494312
Motion plan result: task_success: False
Total Actions Taken: 8
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 3.1 / 3.1
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
PutObjectInReceptacle 1.0 2.1 / 2.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
CoolObject_2 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
WashObject_1 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_0 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
WarmObject_1 1.0 0.1 / 0.1
WarmObject_2 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.9173553719008264 11.1 / 12.1
PlaceObject_0 0.7560975609756099 3.1 / 4.1
SliceObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 10 / 245, train/pick_cool_then_place_in_recep-PotatoSliced-None-CounterTop-20/trial_T20190909_124223_494312
Now attempting to plan for goal: 3 / 4
	Running planner with existing operators + 47 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	pick up knife , cut potato , put potato in the fridge , remove from fridge , place on counter.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?rb - receptacle)
(exists (?ra - receptacle)
(exists (?ib - object)
(exists (?ia - object)
(and 
		(objectType ?ia ButterKnifeType)
		(objectType ?ib PotatoType)
		(receptacleType ?ra FridgeType)
		(receptacleType ?rb CounterTopType)
		(inReceptacle ?ia ?ra)
		(inReceptacle ?ib ?rb)
		(sliceable ?ib)
		(isSliced ?ib)
		(coolable ?ib)
		(isCool ?ib))))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_1_bar_9_bar_0_bar_30 loc_bar_4_bar_1_bar_3_bar_45)
(takeobject_0 agent1 loc_bar_4_bar_1_bar_3_bar_45 butterknife_1_dot_178266288_comma_1_dot_178266288_comma_1_dot_22134304_comma_1_dot_22134304_comma_3_dot_7227464_comma_3_dot_7227464)
(gotolocation agent1 loc_bar_4_bar_1_bar_3_bar_45 loc_bar_2_bar__minus_5_bar_2_bar_60)
(gotolocation agent1 loc_bar_2_bar__minus_5_bar_2_bar_60 loc_bar__minus_3_bar__minus_3_bar_3_bar_60)
(placeobject_0 agent1 loc_bar__minus_3_bar__minus_3_bar_3_bar_60 fridge__minus_5_dot_98224832_comma__minus_5_dot_98224832_comma__minus_2_dot_812_comma__minus_2_dot_812_comma_0_dot_0_comma_0_dot_0 butterknife_1_dot_178266288_comma_1_dot_178266288_comma_1_dot_22134304_comma_1_dot_22134304_comma_3_dot_7227464_comma_3_dot_7227464)
(gotolocation agent1 loc_bar__minus_3_bar__minus_3_bar_3_bar_60 loc_bar_2_bar__minus_5_bar_2_bar_60)
(coolobject_2 agent1 loc_bar_2_bar__minus_5_bar_2_bar_60 potato_1_dot_829888104_comma_1_dot_829888104_comma__minus_7_dot_00534248_comma__minus_7_dot_00534248_comma_3_dot_771224_comma_3_dot_771224)
(cutobject_1 butterknife_1_dot_178266288_comma_1_dot_178266288_comma_1_dot_22134304_comma_1_dot_22134304_comma_3_dot_7227464_comma_3_dot_7227464 agent1 loc_bar_2_bar__minus_5_bar_2_bar_60 potato_1_dot_829888104_comma_1_dot_829888104_comma__minus_7_dot_00534248_comma__minus_7_dot_00534248_comma_3_dot_771224_comma_3_dot_771224)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 10 / 245
Motion planning for: train/pick_cool_then_place_in_recep-PotatoSliced-None-CounterTop-20/trial_T20190909_124223_494312
Proposed goal is: 
(:goal
	(exists (?rb - receptacle)
(exists (?ra - receptacle)
(exists (?ib - object)
(exists (?ia - object)
(and 
		(objectType ?ia ButterKnifeType)
		(objectType ?ib PotatoType)
		(receptacleType ?ra FridgeType)
		(receptacleType ?rb CounterTopType)
		(inReceptacle ?ia ?ra)
		(inReceptacle ?ib ?rb)
		(sliceable ?ib)
		(isSliced ?ib)
		(coolable ?ib)
		(isCool ?ib))))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['butterknife'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['butterknife', 'fridge'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['fridge', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['butterknife'], 'is_neg': False}]}

{'action': 'CoolObject_2', 'postcondition_ground_predicates': [{'predicate_name': 'isCool', 'arguments': ['potato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'coolable', 'arguments': ['potato'], 'is_neg': False}]}

{'action': 'CutObject_1', 'postcondition_ground_predicates': [{'predicate_name': 'isSliced', 'arguments': ['potato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['butterknife'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject knife)
(GotoLocation potato)
(SliceObject potato)
(GotoLocation cabinet)
(PutObject knife cabinet)
(GotoLocation countertop)
(PickupObject potato)
(GotoLocation fridge)
(CoolObject potato)
(GotoLocation countertop)
(PutObject potato countertop)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['potato', 'countertop'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['potato'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['butterknife'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('ButterKnife|+00.29|+00.93|+00.31',)]

PERMISSIBLE OBJECT SET:
[('ButterKnife|+00.29|+00.93|+00.31',)]


Permissible Objects:
('ButterKnife|+00.29|+00.93|+00.31',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "ButterKnife|+00.29|+00.93|+00.31"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "ButterKnife|+00.29|+00.93|+00.31"})]
Error Message: ButterKnife|+00.29|+00.93|+00.31 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('ButterKnife|+00.29|+00.93|+00.31',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('ButterKnife|+00.29|+00.93|+00.31',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "ButterKnife|+00.29|+00.93|+00.31"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('ButterKnife|+00.29|+00.93|+00.31',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "ButterKnife|+00.29|+00.93|+00.31"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('ButterKnife|+00.29|+00.93|+00.31',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "ButterKnife|+00.29|+00.93|+00.31"})]
Error Message: ButterKnife|+00.29|+00.93|+00.31 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('ButterKnife|+00.29|+00.93|+00.31',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "ButterKnife|+00.29|+00.93|+00.31", "receptacle_object_id": "ButterKnife|+00.29|+00.93|+00.31"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='holds', objects=('ButterKnife|+00.29|+00.93|+00.31',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "ButterKnife|+00.29|+00.93|+00.31"})]
Error Message: object not found: ButterKnife|+00.29|+00.93|+00.31
Action feasible: False
	 Fluent(predicate='holds', objects=('ButterKnife|+00.29|+00.93|+00.31',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "ButterKnife|+00.29|+00.93|+00.31"})]
Error Message: object not found: ButterKnife|+00.29|+00.93|+00.31
Action feasible: False
	 Fluent(predicate='holds', objects=('ButterKnife|+00.29|+00.93|+00.31',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "ButterKnife|+00.29|+00.93|+00.31"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='holds', objects=('ButterKnife|+00.29|+00.93|+00.31',)) True
	 State: False

Rollout 7/50
=============================================
Problem Number: 10
Problem ID: train/pick_cool_then_place_in_recep-PotatoSliced-None-CounterTop-20/trial_T20190909_124223_494312
Motion plan result: task_success: False
Total Actions Taken: 8
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 3.1 / 3.1
PutObjectInReceptacle 1.0 2.1 / 2.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
CoolObject_2 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
WashObject_1 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_0 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
WarmObject_1 1.0 0.1 / 0.1
WarmObject_2 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8473282442748091 11.1 / 13.1
PlaceObject_0 0.7560975609756099 3.1 / 4.1
SliceObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 5 / 11 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 11 / 245, train/pick_cool_then_place_in_recep-AppleSliced-None-GarbageCan-19/trial_T20190909_112602_867479
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 47 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	put a chilled piece of sliced apple in a silver bin.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	 Plan string: (gotolocation agent1 loc_bar__minus_5_bar__minus_10_bar_3_bar_30 loc_bar__minus_3_bar_0_bar_1_bar_60)
(gotolocation agent1 loc_bar__minus_3_bar_0_bar_1_bar_60 loc_bar__minus_8_bar__minus_13_bar_2_bar_60)
(coolobject_2 agent1 loc_bar__minus_8_bar__minus_13_bar_2_bar_60 apple__minus_7_dot_65803336_comma__minus_7_dot_65803336_comma__minus_15_dot_33153532_comma__minus_15_dot_33153532_comma_3_dot_332784_comma_3_dot_332784)
(takeobject_0 agent1 loc_bar__minus_8_bar__minus_13_bar_2_bar_60 apple__minus_7_dot_65803336_comma__minus_7_dot_65803336_comma__minus_15_dot_33153532_comma__minus_15_dot_33153532_comma_3_dot_332784_comma_3_dot_332784)
(gotolocation agent1 loc_bar__minus_8_bar__minus_13_bar_2_bar_60 loc_bar__minus_3_bar_0_bar_1_bar_60)
(placeobject_0 agent1 loc_bar__minus_3_bar_0_bar_1_bar_60 garbagecan__minus_1_dot_136_comma__minus_1_dot_136_comma__minus_0_dot_14_comma__minus_0_dot_14_comma_0_dot_0001941937516_comma_0_dot_0001941937516 apple__minus_7_dot_65803336_comma__minus_7_dot_65803336_comma__minus_15_dot_33153532_comma__minus_15_dot_33153532_comma_3_dot_332784_comma_3_dot_332784)
(gotolocation agent1 loc_bar__minus_3_bar_0_bar_1_bar_60 loc_bar__minus_4_bar__minus_12_bar_1_bar_45)
(takeobject_0 agent1 loc_bar__minus_4_bar__minus_12_bar_1_bar_45 butterknife__minus_0_dot_641715528_comma__minus_0_dot_641715528_comma__minus_11_dot_2454548_comma__minus_11_dot_2454548_comma_3_dot_654968_comma_3_dot_654968)
(gotolocation agent1 loc_bar__minus_4_bar__minus_12_bar_1_bar_45 loc_bar__minus_8_bar__minus_13_bar_2_bar_60)
(cutobject_1 butterknife__minus_0_dot_641715528_comma__minus_0_dot_641715528_comma__minus_11_dot_2454548_comma__minus_11_dot_2454548_comma_3_dot_654968_comma_3_dot_654968 agent1 loc_bar__minus_8_bar__minus_13_bar_2_bar_60 apple__minus_7_dot_65803336_comma__minus_7_dot_65803336_comma__minus_15_dot_33153532_comma__minus_15_dot_33153532_comma_3_dot_332784_comma_3_dot_332784)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 11 / 245
Motion planning for: train/pick_cool_then_place_in_recep-AppleSliced-None-GarbageCan-19/trial_T20190909_112602_867479
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Attempting to execute the following motion plan:
{'action': 'CoolObject_2', 'postcondition_ground_predicates': [{'predicate_name': 'isCool', 'arguments': ['apple'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'coolable', 'arguments': ['apple'], 'is_neg': False}]}

{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['apple'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['apple', 'garbagecan'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['garbagecan', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['apple'], 'is_neg': False}]}

{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['butterknife'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'CutObject_1', 'postcondition_ground_predicates': [{'predicate_name': 'isSliced', 'arguments': ['apple'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['butterknife'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation diningtable)
(PickupObject knife)
(GotoLocation apple)
(SliceObject apple)
(PutObject knife diningtable)
(PickupObject apple)
(GotoLocation fridge)
(CoolObject apple)
(GotoLocation garbagecan)
(PutObject apple garbagecan)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['apple', 'garbagecan'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['apple'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['apple'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['apple'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['apple'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'CoolObject_2',
 'postcondition_ground_predicates': [{'arguments': ['apple'],
                                      'is_neg': False,
                                      'predicate_name': 'isCool'}],
 'precondition_ground_predicates': [{'arguments': ['apple'],
                                     'is_neg': False,
                                     'predicate_name': 'coolable'}]}

GOAL OBJECT SET:
[('Apple|-00.07|+01.06|-00.85',),
 ('Apple|-01.91|+00.83|-03.83',),
 ('Apple|-02.87|+00.76|-00.68',),
 ('Apple|-00.10|+01.06|-00.95',)]

PERMISSIBLE OBJECT SET:
[('Apple|-00.07|+01.06|-00.85',),
 ('Apple|-01.91|+00.83|-03.83',),
 ('Apple|-02.87|+00.76|-00.68',),
 ('Apple|-00.10|+01.06|-00.95',)]


Permissible Objects:
('Apple|-00.07|+01.06|-00.85',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.07|+01.06|-00.85"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.07|+01.06|-00.85"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.07|+01.06|-00.85',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Apple|-01.91|+00.83|-03.83',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-01.91|+00.83|-03.83"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-01.91|+00.83|-03.83"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-01.91|+00.83|-03.83',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Apple|-02.87|+00.76|-00.68',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.87|+00.76|-00.68"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.87|+00.76|-00.68"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.87|+00.76|-00.68',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Apple|-00.10|+01.06|-00.95',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.10|+01.06|-00.95"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.10|+01.06|-00.95"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.10|+01.06|-00.95',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Apple|-00.07|+01.06|-00.85',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.07|+01.06|-00.85"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.07|+01.06|-00.85',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.07|+01.06|-00.85"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.07|+01.06|-00.85',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.07|+01.06|-00.85"})]
Error Message: Apple|-00.07|+01.06|-00.85 is not visible.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.07|+01.06|-00.85',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.07|+01.06|-00.85", "receptacle_object_id": "Apple|-00.07|+01.06|-00.85"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.07|+01.06|-00.85',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-00.07|+01.06|-00.85"})]
Error Message: object not found: Apple|-00.07|+01.06|-00.85
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.07|+01.06|-00.85',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-00.07|+01.06|-00.85"})]
Error Message: object not found: Apple|-00.07|+01.06|-00.85
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.07|+01.06|-00.85',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.07|+01.06|-00.85"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.07|+01.06|-00.85',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Apple|-01.91|+00.83|-03.83',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-01.91|+00.83|-03.83"})]
Error Message: object not found: Apple|-01.91|+00.83|-03.83
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-01.91|+00.83|-03.83',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-01.91|+00.83|-03.83"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-01.91|+00.83|-03.83',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.91|+00.83|-03.83"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-01.91|+00.83|-03.83',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-01.91|+00.83|-03.83", "receptacle_object_id": "Apple|-01.91|+00.83|-03.83"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-01.91|+00.83|-03.83',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-01.91|+00.83|-03.83"})]
Error Message: object not found: Apple|-01.91|+00.83|-03.83
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-01.91|+00.83|-03.83',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-01.91|+00.83|-03.83"})]
Error Message: object not found: Apple|-01.91|+00.83|-03.83
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-01.91|+00.83|-03.83',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-01.91|+00.83|-03.83"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-01.91|+00.83|-03.83',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.91|+00.83|-03.83"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-01.91|+00.83|-03.83"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-01.91|+00.83|-03.83',)) True
	 State: False

Error Message: object not found: Apple|-01.91|+00.83|-03.83
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-01.91|+00.83|-03.83',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.91|+00.83|-03.83"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-01.91|+00.83|-03.83"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-01.91|+00.83|-03.83',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-01.91|+00.83|-03.83',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.91|+00.83|-03.83"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.91|+00.83|-03.83"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-01.91|+00.83|-03.83',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-01.91|+00.83|-03.83',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.91|+00.83|-03.83"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-01.91|+00.83|-03.83", "receptacle_object_id": "Apple|-01.91|+00.83|-03.83"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-01.91|+00.83|-03.83',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-01.91|+00.83|-03.83',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.91|+00.83|-03.83"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-01.91|+00.83|-03.83"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-01.91|+00.83|-03.83',)) True
	 State: False

Error Message: object not found: Apple|-01.91|+00.83|-03.83
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-01.91|+00.83|-03.83',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.91|+00.83|-03.83"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-01.91|+00.83|-03.83"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-01.91|+00.83|-03.83',)) True
	 State: False

Error Message: object not found: Apple|-01.91|+00.83|-03.83
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-01.91|+00.83|-03.83',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.91|+00.83|-03.83"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-01.91|+00.83|-03.83"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-01.91|+00.83|-03.83',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-01.91|+00.83|-03.83',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Apple|-02.87|+00.76|-00.68',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-02.87|+00.76|-00.68"})]
Error Message: object not found: Apple|-02.87|+00.76|-00.68
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.87|+00.76|-00.68',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.87|+00.76|-00.68"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.87|+00.76|-00.68',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.87|+00.76|-00.68"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.87|+00.76|-00.68',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.87|+00.76|-00.68", "receptacle_object_id": "Apple|-02.87|+00.76|-00.68"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.87|+00.76|-00.68',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.87|+00.76|-00.68"})]
Error Message: object not found: Apple|-02.87|+00.76|-00.68
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.87|+00.76|-00.68',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-02.87|+00.76|-00.68"})]
Error Message: object not found: Apple|-02.87|+00.76|-00.68
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.87|+00.76|-00.68',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-02.87|+00.76|-00.68"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.87|+00.76|-00.68',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.87|+00.76|-00.68"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-02.87|+00.76|-00.68"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.87|+00.76|-00.68',)) True
	 State: False

Error Message: object not found: Apple|-02.87|+00.76|-00.68
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.87|+00.76|-00.68',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.87|+00.76|-00.68"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.87|+00.76|-00.68"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.87|+00.76|-00.68',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.87|+00.76|-00.68',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.87|+00.76|-00.68"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.87|+00.76|-00.68"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.87|+00.76|-00.68',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.87|+00.76|-00.68',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.87|+00.76|-00.68"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.87|+00.76|-00.68", "receptacle_object_id": "Apple|-02.87|+00.76|-00.68"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.87|+00.76|-00.68',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.87|+00.76|-00.68',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.87|+00.76|-00.68"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.87|+00.76|-00.68"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.87|+00.76|-00.68',)) True
	 State: False

Error Message: object not found: Apple|-02.87|+00.76|-00.68
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.87|+00.76|-00.68',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.87|+00.76|-00.68"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-02.87|+00.76|-00.68"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.87|+00.76|-00.68',)) True
	 State: False

Error Message: object not found: Apple|-02.87|+00.76|-00.68
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.87|+00.76|-00.68',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.87|+00.76|-00.68"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-02.87|+00.76|-00.68"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.87|+00.76|-00.68',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.87|+00.76|-00.68',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Apple|-00.10|+01.06|-00.95',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.10|+01.06|-00.95"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.10|+01.06|-00.95',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.10|+01.06|-00.95"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.10|+01.06|-00.95',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.10|+01.06|-00.95"})]
Error Message: Apple|-00.10|+01.06|-00.95 is not visible.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.10|+01.06|-00.95',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.10|+01.06|-00.95", "receptacle_object_id": "Apple|-00.10|+01.06|-00.95"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.10|+01.06|-00.95',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-00.10|+01.06|-00.95"})]
Error Message: object not found: Apple|-00.10|+01.06|-00.95
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.10|+01.06|-00.95',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-00.10|+01.06|-00.95"})]
Error Message: object not found: Apple|-00.10|+01.06|-00.95
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.10|+01.06|-00.95',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.10|+01.06|-00.95"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.10|+01.06|-00.95',)) True
	 State: False

Rollout 7/50
=============================================
Problem Number: 11
Problem ID: train/pick_cool_then_place_in_recep-AppleSliced-None-GarbageCan-19/trial_T20190909_112602_867479
Motion plan result: task_success: False
Total Actions Taken: 46
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 3.1 / 3.1
PutObjectInReceptacle 1.0 2.1 / 2.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
WashObject_1 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_0 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
WarmObject_1 1.0 0.1 / 0.1
WarmObject_2 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8473282442748091 11.1 / 13.1
PlaceObject_0 0.7560975609756099 3.1 / 4.1
SliceObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 11 / 245, train/pick_cool_then_place_in_recep-AppleSliced-None-GarbageCan-19/trial_T20190909_112602_867479
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 11 / 245, train/pick_cool_then_place_in_recep-AppleSliced-None-GarbageCan-19/trial_T20190909_112602_867479
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 11 / 245, train/pick_cool_then_place_in_recep-AppleSliced-None-GarbageCan-19/trial_T20190909_112602_867479
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 12 / 245, train/pick_heat_then_place_in_recep-PotatoSliced-None-SideTable-28/trial_T20190906_212031_031197
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 47 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'ChillObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	place a piece of microwaved fruit on the black table.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: False
	 Plan string: Plan not found with FD! Error: INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmptak1y2dt /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpvhvuhug5 --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpmr9q1mel
Parsing...
Parsing: [0.000s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.002s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.006s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 377 rules.
Computing model... [0.140s CPU, 0.140s wall-clock]
14784 relevant atoms
19950 auxiliary atoms
34734 final queue length
53564 total queue pushes
Completing instantiation... [0.170s CPU, 0.173s wall-clock]
Instantiating: [0.320s CPU, 0.330s wall-clock]
No relaxed solution! Generating unsolvable task...
Translator variables: 1
Translator derived variables: 0
Translator facts: 2
Translator goal facts: 1
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 0
Translator axioms: 0
Translator task size: 4
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.340s CPU, 0.342s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpmr9q1mel
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpmr9q1mel
[t=0.00186689s, 408509680 KB] reading input...
[t=0.00208325s, 408509680 KB] done reading input!
[t=0.00602995s, 408509680 KB] Initializing landmark sum heuristic...
[t=0.00603545s, 408509680 KB] Generating landmark graph...
[t=0.0060507s, 408509680 KB] Building a landmark graph with reasonable orders.
[t=0.00605365s, 408509680 KB] Initializing Exploration...
[t=0.00606792s, 408509680 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.00609838s, 408509680 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00611609s, 408509680 KB] Landmarks generation time: 6.4206e-05s
[t=0.00611909s, 408509680 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00612196s, 408509680 KB] 1 edges
[t=0.00612417s, 408509680 KB] approx. reasonable orders
[t=0.00612642s, 408509680 KB] approx. obedient reasonable orders
[t=0.00612971s, 408509680 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00613237s, 408509680 KB] Landmarks generation time: 9.5325e-05s
[t=0.00613512s, 408509680 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00613729s, 408509680 KB] 1 edges
[t=0.00613934s, 408509680 KB] Landmark graph generation time: 0.000105165s
[t=0.0061418s, 408509680 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00614446s, 408509680 KB] Landmark graph contains 1 orderings.
[t=0.00615275s, 408509680 KB] Simplifying 0 unary operators... done! [0 unary operators]
[t=0.00615648s, 408509680 KB] time to simplify: 4.92e-06s
[t=0.00615947s, 408509680 KB] Initializing additive heuristic...
[t=0.00616115s, 408509680 KB] Initializing FF heuristic...
[t=0.00620277s, 408509680 KB] Building successor generator...done!
[t=0.00621006s, 408509680 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00621302s, 408509680 KB] time for successor generation creation: 6.15e-07s
[t=0.00621671s, 408509680 KB] Variables: 1
[t=0.00621909s, 408509680 KB] FactPairs: 2
[t=0.00622118s, 408509680 KB] Bytes per state: 4
[t=0.0062525s, 408509680 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00625664s, 408509680 KB] 1 initial landmarks, 1 goal landmarks
[t=0.00627444s, 408509680 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity
[t=0.00627767s, 408509680 KB] Completely explored state space -- no solution!
[t=0.00627956s, 408509680 KB] Actual search time: 2.1894e-05s
[t=0.00628276s, 408509680 KB] Expanded 0 state(s).
[t=0.00628276s, 408509680 KB] Reopened 0 state(s).
[t=0.00628276s, 408509680 KB] Evaluated 1 state(s).
[t=0.00628276s, 408509680 KB] Evaluations: 1
[t=0.00628276s, 408509680 KB] Generated 0 state(s).
[t=0.00628276s, 408509680 KB] Dead ends: 1 state(s).
[t=0.00628276s, 408509680 KB] Number of registered states: 1
[t=0.00628276s, 408509680 KB] Int hash set load factor: 1/1 = 1
[t=0.00628276s, 408509680 KB] Int hash set resizes: 0
[t=0.00628276s, 408509680 KB] Search time: 3.034e-05s
[t=0.00628276s, 408509680 KB] Total time: 0.00628276s
Search stopped without finding a solution.
Peak memory: 408509680 KB
search exit code: 12

Driver aborting after search
INFO     Planner time: 0.39s
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 12 / 245, train/pick_heat_then_place_in_recep-PotatoSliced-None-SideTable-28/trial_T20190906_212031_031197
Sucessfully found 0 plans for goals.
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
task_planner.attempt_task_plan_for_problem: attempt 0 : 12 / 245, train/pick_heat_then_place_in_recep-PotatoSliced-None-SideTable-28/trial_T20190906_212031_031197
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 12 / 245, train/pick_heat_then_place_in_recep-PotatoSliced-None-SideTable-28/trial_T20190906_212031_031197
Sucessfully found 0 plans for goals.
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 5 / 13 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 13 / 245, train/look_at_obj_in_light-Book-None-DeskLamp-302/trial_T20190909_085155_106731
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 46 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	pick up the book from the bed and turn on the lamp on top of the cabinet.
	 Ground truth goal: 
	(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BookType)
                (holds ?a ?o)
            )
    ))))))
	 Proposed goal:
	(:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o BookType)
		(holds ?a ?o))))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_1_bar_1_bar_1_bar_30 loc_bar_1_bar__minus_3_bar_1_bar_45)
(takeobject_0 agent1 loc_bar_1_bar__minus_3_bar_1_bar_45 book_4_dot_39353656_comma_4_dot_39353656_comma__minus_2_dot_598084212_comma__minus_2_dot_598084212_comma_2_dot_314777852_comma_2_dot_314777852)
(gotolocation agent1 loc_bar_1_bar__minus_3_bar_1_bar_45 loc_bar_2_bar_3_bar_0_bar_60)
(turnonlamp_1 agent1 loc_bar_2_bar_3_bar_0_bar_60 desklamp_1_dot_908377884_comma_1_dot_908377884_comma_5_dot_39931776_comma_5_dot_39931776_comma_2_dot_69906664_comma_2_dot_69906664 desklamp_1_dot_908377884_comma_1_dot_908377884_comma_5_dot_39931776_comma_5_dot_39931776_comma_2_dot_69906664_comma_2_dot_69906664)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 13 / 245
Motion planning for: train/look_at_obj_in_light-Book-None-DeskLamp-302/trial_T20190909_085155_106731
Proposed goal is: 
(:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o BookType)
		(holds ?a ?o))))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o BookType)
                (holds ?a ?o)
            )
    ))))))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['book'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'TurnOnLamp_1', 'postcondition_ground_predicates': [{'predicate_name': 'isOn', 'arguments': ['desklamp'], 'is_neg': False}, {'predicate_name': 'isToggled', 'arguments': ['desklamp'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'toggleable', 'arguments': ['desklamp'], 'is_neg': False}, {'predicate_name': 'toggleable', 'arguments': ['desklamp'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation bed)
(PickupObject book)
(GotoLocation desklamp)
(ToggleObject desklamp)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'toggleable', 'arguments': ['desklamp'], 'is_neg': False}

{'predicate_name': 'isToggled', 'arguments': ['desklamp'], 'is_neg': False}

{'predicate_name': 'holds', 'arguments': ['?a', 'book'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['book'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Book|+01.10|+00.58|-00.65',), ('Book|+01.68|+00.58|-00.65',)]

PERMISSIBLE OBJECT SET:
[('Book|+01.10|+00.58|-00.65',), ('Book|+01.68|+00.58|-00.65',)]


Permissible Objects:
('Book|+01.10|+00.58|-00.65',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Book|+01.10|+00.58|-00.65"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Book|+01.10|+00.58|-00.65"})]
Action feasible: True

OPERATOR:
{'action': 'TurnOnLamp_1',
 'postcondition_ground_predicates': [{'arguments': ['desklamp'],
                                      'is_neg': False,
                                      'predicate_name': 'isOn'},
                                     {'arguments': ['desklamp'],
                                      'is_neg': False,
                                      'predicate_name': 'isToggled'}],
 'precondition_ground_predicates': [{'arguments': ['desklamp'],
                                     'is_neg': False,
                                     'predicate_name': 'toggleable'},
                                    {'arguments': ['desklamp'],
                                     'is_neg': False,
                                     'predicate_name': 'toggleable'}]}

GOAL OBJECT SET:
[('DeskLamp|+00.48|+00.67|+01.35',), ('DeskLamp|+00.48|+00.67|+01.35',)]

PERMISSIBLE OBJECT SET:
[('DeskLamp|+00.48|+00.67|+01.35',),
 ('DeskLamp|+00.48|+00.67|+01.35', 'Book|+01.10|+00.58|-00.65')]


Permissible Objects:
('DeskLamp|+00.48|+00.67|+01.35',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "DeskLamp|+00.48|+00.67|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "DeskLamp|+00.48|+00.67|+01.35"})]
Action feasible: True


Motion plan operator success!: {'action': 'TurnOnLamp_1', 'postcondition_ground_predicates': [{'predicate_name': 'isOn', 'arguments': ['desklamp'], 'is_neg': False}, {'predicate_name': 'isToggled', 'arguments': ['desklamp'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'toggleable', 'arguments': ['desklamp'], 'is_neg': False}, {'predicate_name': 'toggleable', 'arguments': ['desklamp'], 'is_neg': False}]}
=============================================
Problem Number: 13
Problem ID: train/look_at_obj_in_light-Book-None-DeskLamp-302/trial_T20190909_085155_106731
Motion plan result: task_success: True
Total Actions Taken: 2
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 4.1 / 4.1
PutObjectInReceptacle 1.0 2.1 / 2.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
WashObject_1 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_0 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
WarmObject_1 1.0 0.1 / 0.1
WarmObject_2 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8581560283687943 12.1 / 14.1
PlaceObject_0 0.7560975609756099 3.1 / 4.1
SliceObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 14 / 245, train/pick_heat_then_place_in_recep-Mug-None-Shelf-20/trial_T20190907_054109_225243
Now attempting to plan for goal: 0 / 2
	Running planner with existing operators + 46 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'HeatObject_1', 'TurnOffObject_0', 'ChillObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	put the heated cup on the shelf.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CupType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: False
	 Plan string: Plan not found with FD! Error: INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp5m59wslo /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpb1kdqoq2 --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp0j1ycdy5
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.002s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.006s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 374 rules.
Computing model... [0.060s CPU, 0.062s wall-clock]
4705 relevant atoms
6696 auxiliary atoms
11401 final queue length
16743 total queue pushes
Completing instantiation... [0.040s CPU, 0.038s wall-clock]
Instantiating: [0.110s CPU, 0.115s wall-clock]
No relaxed solution! Generating unsolvable task...
Translator variables: 1
Translator derived variables: 0
Translator facts: 2
Translator goal facts: 1
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 0
Translator axioms: 0
Translator task size: 4
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.110s CPU, 0.120s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp0j1ycdy5
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp0j1ycdy5
[t=0.000167362s, 408517872 KB] reading input...
[t=0.00062771s, 408517872 KB] done reading input!
[t=0.00449663s, 408528112 KB] Initializing landmark sum heuristic...
[t=0.00450844s, 408528112 KB] Generating landmark graph...
[t=0.0045141s, 408528112 KB] Building a landmark graph with reasonable orders.
[t=0.00451754s, 408528112 KB] Initializing Exploration...
[t=0.00452324s, 408528112 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.00453891s, 408528112 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00454551s, 408528112 KB] Landmarks generation time: 3.0135e-05s
[t=0.00454879s, 408528112 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00455235s, 408528112 KB] 1 edges
[t=0.00455539s, 408528112 KB] approx. reasonable orders
[t=0.00455813s, 408528112 KB] approx. obedient reasonable orders
[t=0.00456084s, 408528112 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00456338s, 408528112 KB] Landmarks generation time: 5.3341e-05s
[t=0.00456547s, 408528112 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00456826s, 408528112 KB] 1 edges
[t=0.00457023s, 408528112 KB] Landmark graph generation time: 6.3099e-05s
[t=0.00457273s, 408528112 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00457556s, 408528112 KB] Landmark graph contains 1 orderings.
[t=0.00458536s, 408528112 KB] Simplifying 0 unary operators... done! [0 unary operators]
[t=0.00458925s, 408528112 KB] time to simplify: 5.33e-06s
[t=0.004592s, 408528112 KB] Initializing additive heuristic...
[t=0.00459409s, 408528112 KB] Initializing FF heuristic...
[t=0.00461963s, 408528112 KB] Building successor generator...done!
[t=0.00462705s, 408528112 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00463001s, 408528112 KB] time for successor generation creation: 1.64e-06s
[t=0.00463251s, 408528112 KB] Variables: 1
[t=0.00463489s, 408528112 KB] FactPairs: 2
[t=0.0046369s, 408528112 KB] Bytes per state: 4
[t=0.00465789s, 408528112 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00466293s, 408528112 KB] 1 initial landmarks, 1 goal landmarks
[t=0.00467179s, 408528112 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity
[t=0.00467486s, 408528112 KB] Completely explored state space -- no solution!
[t=0.00467716s, 408528112 KB] Actual search time: 1.23e-05s
[t=0.00467982s, 408528112 KB] Expanded 0 state(s).
[t=0.00467982s, 408528112 KB] Reopened 0 state(s).
[t=0.00467982s, 408528112 KB] Evaluated 1 state(s).
[t=0.00467982s, 408528112 KB] Evaluations: 1
[t=0.00467982s, 408528112 KB] Generated 0 state(s).
[t=0.00467982s, 408528112 KB] Dead ends: 1 state(s).
[t=0.00467982s, 408528112 KB] Number of registered states: 1
[t=0.00467982s, 408528112 KB] Int hash set load factor: 1/1 = 1
[t=0.00467982s, 408528112 KB] Int hash set resizes: 0
[t=0.00467982s, 408528112 KB] Search time: 2.2263e-05s
[t=0.00467982s, 408528112 KB] Total time: 0.00467982s
Search stopped without finding a solution.
Peak memory: 408528112 KB
search exit code: 12

Driver aborting after search
INFO     Planner time: 0.17s
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 14 / 245, train/pick_heat_then_place_in_recep-Mug-None-Shelf-20/trial_T20190907_054109_225243
Now attempting to plan for goal: 1 / 2
	Running planner with existing operators + 45 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	put the heated cup on the shelf.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	 Plan string: (gotolocation agent1 loc_bar_5_bar_8_bar_2_bar_30 loc_bar_0_bar__minus_4_bar_3_bar_60)
(gotolocation agent1 loc_bar_0_bar__minus_4_bar_3_bar_60 loc_bar_7_bar_8_bar_0_bar_60)
(gotolocation agent1 loc_bar_7_bar_8_bar_0_bar_60 loc_bar__minus_2_bar_3_bar_1_bar_45)
(takeobject_0 agent1 loc_bar__minus_2_bar_3_bar_1_bar_45 mug_0_dot_722755968_comma_0_dot_722755968_comma_3_dot_0509496_comma_3_dot_0509496_comma_3_dot_68773_comma_3_dot_68773)
(gotolocation agent1 loc_bar__minus_2_bar_3_bar_1_bar_45 loc_bar_6_bar_6_bar_0_bar_45)
(warmobject_1 agent1 loc_bar_6_bar_6_bar_0_bar_45 shelf_6_dot_20640184_comma_6_dot_20640184_comma_9_dot_9316_comma_9_dot_9316_comma_2_dot_1681444_comma_2_dot_1681444 mug_0_dot_722755968_comma_0_dot_722755968_comma_3_dot_0509496_comma_3_dot_0509496_comma_3_dot_68773_comma_3_dot_68773)
(putobjectinreceptacle agent1 loc_bar_6_bar_6_bar_0_bar_45 mugtype mug_0_dot_722755968_comma_0_dot_722755968_comma_3_dot_0509496_comma_3_dot_0509496_comma_3_dot_68773_comma_3_dot_68773 shelf_6_dot_20640184_comma_6_dot_20640184_comma_9_dot_9316_comma_9_dot_9316_comma_2_dot_1681444_comma_2_dot_1681444)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 14 / 245
Motion planning for: train/pick_heat_then_place_in_recep-Mug-None-Shelf-20/trial_T20190907_054109_225243
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['mug'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'WarmObject_1', 'postcondition_ground_predicates': [{'predicate_name': 'isHot', 'arguments': ['mug'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['shelf', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['mug'], 'is_neg': False}]}

{'action': 'PutObjectInReceptacle', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['mug', 'shelf'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['mug'], 'is_neg': True}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['shelf', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['mug'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation diningtable)
(PickupObject mug)
(GotoLocation microwave)
(HeatObject mug)
(GotoLocation shelf)
(PutObject mug shelf)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['mug', 'shelf'], 'is_neg': False}

{'predicate_name': 'heatable', 'arguments': ['mug'], 'is_neg': False}

{'predicate_name': 'isHot', 'arguments': ['mug'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['mug'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Mug|+00.18|+00.92|+00.76',), ('Mug|+01.26|+00.95|-01.93',)]

PERMISSIBLE OBJECT SET:
[('Mug|+00.18|+00.92|+00.76',), ('Mug|+01.26|+00.95|-01.93',)]


Permissible Objects:
('Mug|+00.18|+00.92|+00.76',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True

OPERATOR:
{'action': 'WarmObject_1',
 'postcondition_ground_predicates': [{'arguments': ['mug'],
                                      'is_neg': False,
                                      'predicate_name': 'isHot'}],
 'precondition_ground_predicates': [{'arguments': ['shelf', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['mug'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Mug|+00.18|+00.92|+00.76',),
 ('Mug|+00.18|+00.92|+00.76',),
 ('Mug|+00.18|+00.92|+00.76',),
 ('Mug|+00.18|+00.92|+00.76',),
 ('Mug|+01.26|+00.95|-01.93',),
 ('Mug|+01.26|+00.95|-01.93',),
 ('Mug|+01.26|+00.95|-01.93',),
 ('Mug|+01.26|+00.95|-01.93',),
 ('Mug|+01.26|+00.95|-01.93',),
 ('Mug|+01.26|+00.95|-01.93',),
 ('Mug|+01.26|+00.95|-01.93',)]

PERMISSIBLE OBJECT SET:
[('Mug|+00.18|+00.92|+00.76',),
 ('Mug|+00.18|+00.92|+00.76', 'Shelf|+01.55|+00.87|+02.48'),
 ('Mug|+00.18|+00.92|+00.76', 'Shelf|+01.55|+00.54|+02.48'),
 ('Mug|+00.18|+00.92|+00.76', 'Shelf|+01.55|+00.16|+02.48'),
 ('Mug|+01.26|+00.95|-01.93',),
 ('Mug|+01.26|+00.95|-01.93', 'Shelf|+01.55|+00.87|+02.48'),
 ('Mug|+01.26|+00.95|-01.93',
  'Shelf|+01.55|+00.87|+02.48',
  'Mug|+00.18|+00.92|+00.76'),
 ('Mug|+01.26|+00.95|-01.93', 'Shelf|+01.55|+00.54|+02.48'),
 ('Mug|+01.26|+00.95|-01.93',
  'Shelf|+01.55|+00.54|+02.48',
  'Mug|+00.18|+00.92|+00.76'),
 ('Mug|+01.26|+00.95|-01.93', 'Shelf|+01.55|+00.16|+02.48'),
 ('Mug|+01.26|+00.95|-01.93',
  'Shelf|+01.55|+00.16|+02.48',
  'Mug|+00.18|+00.92|+00.76')]


Permissible Objects:
('Mug|+00.18|+00.92|+00.76',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 3/50

Permissible Objects:
('Mug|+00.18|+00.92|+00.76', 'Shelf|+01.55|+00.87|+02.48')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.87|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.87|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.87|+02.48", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.87|+02.48", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 10/50

Permissible Objects:
('Mug|+00.18|+00.92|+00.76', 'Shelf|+01.55|+00.54|+02.48')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.54|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.54|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.54|+02.48", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.54|+02.48", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 10/50

Permissible Objects:
('Mug|+00.18|+00.92|+00.76', 'Shelf|+01.55|+00.16|+02.48')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.16|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.16|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.16|+02.48", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.16|+02.48", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 10/50

Permissible Objects:
('Mug|+01.26|+00.95|-01.93',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: object not found: Mug|+01.26|+00.95|-01.93
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: object not found: Mug|+01.26|+00.95|-01.93
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 3/50

Permissible Objects:
('Mug|+01.26|+00.95|-01.93', 'Shelf|+01.55|+00.87|+02.48')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.87|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: object not found: Mug|+01.26|+00.95|-01.93
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.87|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: object not found: Mug|+01.26|+00.95|-01.93
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.26|+00.95|-01.93", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.26|+00.95|-01.93", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.87|+02.48", "receptacle_object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.87|+02.48", "receptacle_object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 10/50

Permissible Objects:
('Mug|+01.26|+00.95|-01.93', 'Shelf|+01.55|+00.87|+02.48', 'Mug|+00.18|+00.92|+00.76')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.87|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: object not found: Mug|+01.26|+00.95|-01.93
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.87|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: object not found: Mug|+01.26|+00.95|-01.93
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.26|+00.95|-01.93", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.26|+00.95|-01.93", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Error Message: object not found: Mug|+01.26|+00.95|-01.93
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.87|+02.48", "receptacle_object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.87|+02.48", "receptacle_object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.87|+02.48", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.87|+02.48", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.26|+00.95|-01.93", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.26|+00.95|-01.93", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Error Message: object not found: Mug|+01.26|+00.95|-01.93
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 18/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 19/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 20/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 21/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Error Message: object not found: Mug|+01.26|+00.95|-01.93
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 22/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Error Message: object not found: Mug|+01.26|+00.95|-01.93
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 23/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 24/50

Permissible Objects:
('Mug|+01.26|+00.95|-01.93', 'Shelf|+01.55|+00.54|+02.48')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: object not found: Mug|+01.26|+00.95|-01.93
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.54|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: object not found: Mug|+01.26|+00.95|-01.93
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.54|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.26|+00.95|-01.93", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.26|+00.95|-01.93", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.54|+02.48", "receptacle_object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.54|+02.48", "receptacle_object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 10/50

Permissible Objects:
('Mug|+01.26|+00.95|-01.93', 'Shelf|+01.55|+00.54|+02.48', 'Mug|+00.18|+00.92|+00.76')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: object not found: Mug|+01.26|+00.95|-01.93
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.54|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: object not found: Mug|+01.26|+00.95|-01.93
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.54|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.54|+02.48", "receptacle_object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.54|+02.48", "receptacle_object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.26|+00.95|-01.93", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.26|+00.95|-01.93", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.54|+02.48", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.54|+02.48", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.26|+00.95|-01.93", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.26|+00.95|-01.93", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Error Message: object not found: Mug|+01.26|+00.95|-01.93
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Error Message: object not found: Mug|+01.26|+00.95|-01.93
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 18/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 19/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 20/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 21/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Error Message: object not found: Mug|+01.26|+00.95|-01.93
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 22/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Error Message: object not found: Mug|+01.26|+00.95|-01.93
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 23/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 24/50

Permissible Objects:
('Mug|+01.26|+00.95|-01.93', 'Shelf|+01.55|+00.16|+02.48')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: object not found: Mug|+01.26|+00.95|-01.93
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.16|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: object not found: Mug|+01.26|+00.95|-01.93
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.16|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.26|+00.95|-01.93", "receptacle_object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.26|+00.95|-01.93", "receptacle_object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.16|+02.48", "receptacle_object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.16|+02.48", "receptacle_object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 10/50

Permissible Objects:
('Mug|+01.26|+00.95|-01.93', 'Shelf|+01.55|+00.16|+02.48', 'Mug|+00.18|+00.92|+00.76')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: object not found: Mug|+01.26|+00.95|-01.93
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.16|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: object not found: Mug|+01.26|+00.95|-01.93
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.16|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.16|+02.48", "receptacle_object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.16|+02.48", "receptacle_object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.26|+00.95|-01.93", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.26|+00.95|-01.93", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.16|+02.48"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.16|+02.48", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.16|+02.48", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.26|+00.95|-01.93", "receptacle_object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.26|+00.95|-01.93", "receptacle_object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.16|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.26|+00.95|-01.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.26|+00.95|-01.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+01.26|+00.95|-01.93',)) True
	 State: False

Rollout 18/50

Permissible Objects:
('Mug|+00.18|+00.92|+00.76',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Mug|+00.18|+00.92|+00.76', 'Shelf|+01.55|+00.87|+02.48')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.87|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.87|+02.48", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.87|+02.48", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.87|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.87|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Shelf|+01.55|+00.87|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: Shelf|+01.55|+00.87|+02.48 must have the property CanPickup to be picked up.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.87|+02.48", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.87|+02.48", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Shelf|+01.55|+00.87|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Shelf|+01.55|+00.87|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 32/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Shelf|+01.55|+00.87|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 33/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 34/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 35/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 36/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 37/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 38/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.87|+02.48", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 39/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.87|+02.48", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 40/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 41/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 42/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Shelf|+01.55|+00.87|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 43/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 44/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Shelf|+01.55|+00.87|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 45/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 46/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 47/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 48/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Shelf|+01.55|+00.87|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 49/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False


Permissible Objects:
('Mug|+00.18|+00.92|+00.76', 'Shelf|+01.55|+00.54|+02.48')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.54|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.54|+02.48", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.54|+02.48", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.54|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Error Message: object not found: Shelf|+01.55|+00.54|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Shelf|+01.55|+00.54|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: Shelf|+01.55|+00.54|+02.48 must have the property CanPickup to be picked up.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.54|+02.48", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.54|+02.48", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Shelf|+01.55|+00.54|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Shelf|+01.55|+00.54|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 32/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 33/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Shelf|+01.55|+00.54|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 34/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 35/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 36/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 37/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 38/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 39/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 40/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.54|+02.48", "receptacle_object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 41/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Shelf|+01.55|+00.54|+02.48", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 42/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 43/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Shelf|+01.55|+00.54|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 44/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 45/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Shelf|+01.55|+00.54|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 46/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 47/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 48/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+00.18|+00.92|+00.76"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Mug|+00.18|+00.92|+00.76
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Rollout 49/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+00.18|+00.92|+00.76"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+00.18|+00.92|+00.76", "receptacle_object_id": "Shelf|+01.55|+00.54|+02.48"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Shelf|+01.55|+00.54|+02.48"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Error Message: object not found: Shelf|+01.55|+00.54|+02.48
Action feasible: False
	 Fluent(predicate='isHot', objects=('Mug|+00.18|+00.92|+00.76',)) True
	 State: False

Exceeded max number of trajs!
=============================================
Problem Number: 14
Problem ID: train/pick_heat_then_place_in_recep-Mug-None-Shelf-20/trial_T20190907_054109_225243
Motion plan result: task_success: False
Total Actions Taken: 240
Failed at operator: 2 / 3 operators in task plan.
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 4.1 / 4.1
PutObjectInReceptacle 1.0 2.1 / 2.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
WashObject_1 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_0 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
WarmObject_2 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8675496688741722 13.1 / 15.1
PlaceObject_0 0.7560975609756099 3.1 / 4.1
SliceObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 14 / 245, train/pick_heat_then_place_in_recep-Mug-None-Shelf-20/trial_T20190907_054109_225243
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 14 / 245, train/pick_heat_then_place_in_recep-Mug-None-Shelf-20/trial_T20190907_054109_225243
Sucessfully found 0 plans for goals.
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 6 / 15 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 15 / 245, train/pick_heat_then_place_in_recep-Potato-None-Fridge-2/trial_T20190909_030845_198194
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 46 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	put a warm potato in the fridge.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_3_bar_3_bar_0_bar_30 loc_bar_0_bar__minus_3_bar_2_bar_60)
(gotolocation agent1 loc_bar_0_bar__minus_3_bar_2_bar_60 loc_bar__minus_4_bar_1_bar_3_bar_0)
(takeobject_0 agent1 loc_bar__minus_4_bar_1_bar_3_bar_0 potato__minus_6_dot_79142664_comma__minus_6_dot_79142664_comma_0_dot_806018592_comma_0_dot_806018592_comma_6_dot_80325748_comma_6_dot_80325748)
(warmobject_2 agent1 loc_bar__minus_4_bar_1_bar_3_bar_0 potato__minus_6_dot_79142664_comma__minus_6_dot_79142664_comma_0_dot_806018592_comma_0_dot_806018592_comma_6_dot_80325748_comma_6_dot_80325748)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 15 / 245
Motion planning for: train/pick_heat_then_place_in_recep-Potato-None-Fridge-2/trial_T20190909_030845_198194
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotatoType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['potato'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'WarmObject_2', 'postcondition_ground_predicates': [{'predicate_name': 'isHot', 'arguments': ['potato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['potato'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation sinkbasin)
(PickupObject potato)
(GotoLocation microwave)
(HeatObject potato)
(GotoLocation fridge)
(PutObject potato fridge)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['potato', 'fridge'], 'is_neg': False}

{'predicate_name': 'heatable', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'isHot', 'arguments': ['potato'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['potato'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Potato|-01.70|+01.70|+00.20',),
 ('Potato|+00.26|+00.78|-01.38',),
 ('Potato|+01.99|+00.94|+01.41',)]

PERMISSIBLE OBJECT SET:
[('Potato|-01.70|+01.70|+00.20',),
 ('Potato|+00.26|+00.78|-01.38',),
 ('Potato|+01.99|+00.94|+01.41',)]


Permissible Objects:
('Potato|-01.70|+01.70|+00.20',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Error Message: Potato|-01.70|+01.70|+00.20 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Potato|+00.26|+00.78|-01.38',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Action feasible: True

OPERATOR:
{'action': 'WarmObject_2',
 'postcondition_ground_predicates': [{'arguments': ['potato'],
                                      'is_neg': False,
                                      'predicate_name': 'isHot'}],
 'precondition_ground_predicates': [{'arguments': ['potato'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Potato|-01.70|+01.70|+00.20',),
 ('Potato|-01.70|+01.70|+00.20',),
 ('Potato|+00.26|+00.78|-01.38',),
 ('Potato|+01.99|+00.94|+01.41',),
 ('Potato|+01.99|+00.94|+01.41',)]

PERMISSIBLE OBJECT SET:
[('Potato|-01.70|+01.70|+00.20',),
 ('Potato|-01.70|+01.70|+00.20', 'Potato|+00.26|+00.78|-01.38'),
 ('Potato|+00.26|+00.78|-01.38',),
 ('Potato|+01.99|+00.94|+01.41',),
 ('Potato|+01.99|+00.94|+01.41', 'Potato|+00.26|+00.78|-01.38')]


Permissible Objects:
('Potato|-01.70|+01.70|+00.20',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Error Message: object not found: Potato|-01.70|+01.70|+00.20
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|-01.70|+01.70|+00.20"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|-01.70|+01.70|+00.20"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|-01.70|+01.70|+00.20"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|-01.70|+01.70|+00.20"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|-01.70|+01.70|+00.20"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|-01.70|+01.70|+00.20"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 3/50

Permissible Objects:
('Potato|-01.70|+01.70|+00.20', 'Potato|+00.26|+00.78|-01.38')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: object not found: Potato|+00.26|+00.78|-01.38
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Error Message: object not found: Potato|-01.70|+01.70|+00.20
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|-01.70|+01.70|+00.20"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|-01.70|+01.70|+00.20"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: object not found: Potato|+00.26|+00.78|-01.38
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|-01.70|+01.70|+00.20"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|-01.70|+01.70|+00.20"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|-01.70|+01.70|+00.20"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|-01.70|+01.70|+00.20"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-01.70|+01.70|+00.20", "receptacle_object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-01.70|+01.70|+00.20", "receptacle_object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.26|+00.78|-01.38", "receptacle_object_id": "Potato|-01.70|+01.70|+00.20"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|-01.70|+01.70|+00.20"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.26|+00.78|-01.38", "receptacle_object_id": "Potato|-01.70|+01.70|+00.20"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|-01.70|+01.70|+00.20"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-01.70|+01.70|+00.20"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-01.70|+01.70|+00.20"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 10/50

Permissible Objects:
('Potato|+00.26|+00.78|-01.38',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: object not found: Potato|+00.26|+00.78|-01.38
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+00.26|+00.78|-01.38',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+00.26|+00.78|-01.38',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: object not found: Potato|+00.26|+00.78|-01.38
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+00.26|+00.78|-01.38',)) True
	 State: False

Rollout 3/50

Permissible Objects:
('Potato|+01.99|+00.94|+01.41',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Error Message: object not found: Potato|+01.99|+00.94|+01.41
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+01.99|+00.94|+01.41"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+01.99|+00.94|+01.41"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+01.99|+00.94|+01.41"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+01.99|+00.94|+01.41"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+01.99|+00.94|+01.41"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+01.99|+00.94|+01.41"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Error Message: object not found: Potato|+01.99|+00.94|+01.41
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 3/50

Permissible Objects:
('Potato|+01.99|+00.94|+01.41', 'Potato|+00.26|+00.78|-01.38')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Error Message: object not found: Potato|+01.99|+00.94|+01.41
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: object not found: Potato|+00.26|+00.78|-01.38
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+01.99|+00.94|+01.41"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+01.99|+00.94|+01.41"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+01.99|+00.94|+01.41"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+01.99|+00.94|+01.41"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+01.99|+00.94|+01.41"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+01.99|+00.94|+01.41"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Error Message: object not found: Potato|+01.99|+00.94|+01.41
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: object not found: Potato|+00.26|+00.78|-01.38
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+01.99|+00.94|+01.41", "receptacle_object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+01.99|+00.94|+01.41", "receptacle_object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.26|+00.78|-01.38", "receptacle_object_id": "Potato|+01.99|+00.94|+01.41"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+01.99|+00.94|+01.41"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.26|+00.78|-01.38", "receptacle_object_id": "Potato|+01.99|+00.94|+01.41"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+01.99|+00.94|+01.41"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.26|+00.78|-01.38"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+01.99|+00.94|+01.41"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+01.99|+00.94|+01.41"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 10/50

Permissible Objects:
('Potato|-01.70|+01.70|+00.20',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-01.70|+01.70|+00.20", "receptacle_object_id": "Potato|-01.70|+01.70|+00.20"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Error Message: object not found: Potato|-01.70|+01.70|+00.20
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Error Message: object not found: Potato|-01.70|+01.70|+00.20
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Potato|-01.70|+01.70|+00.20', 'Potato|+00.26|+00.78|-01.38')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: object not found: Potato|+00.26|+00.78|-01.38
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.26|+00.78|-01.38", "receptacle_object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.26|+00.78|-01.38", "receptacle_object_id": "Potato|-01.70|+01.70|+00.20"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-01.70|+01.70|+00.20", "receptacle_object_id": "Potato|+00.26|+00.78|-01.38"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|-01.70|+01.70|+00.20", "receptacle_object_id": "Potato|-01.70|+01.70|+00.20"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: object not found: Potato|+00.26|+00.78|-01.38
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Error Message: object not found: Potato|-01.70|+01.70|+00.20
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: object not found: Potato|+00.26|+00.78|-01.38
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Error Message: object not found: Potato|-01.70|+01.70|+00.20
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|-01.70|+01.70|+00.20"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|-01.70|+01.70|+00.20',)) True
	 State: False

Rollout 16/50

Permissible Objects:
('Potato|+00.26|+00.78|-01.38',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: object not found: Potato|+00.26|+00.78|-01.38
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+00.26|+00.78|-01.38',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+00.26|+00.78|-01.38',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+00.26|+00.78|-01.38',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.26|+00.78|-01.38", "receptacle_object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+00.26|+00.78|-01.38',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: object not found: Potato|+00.26|+00.78|-01.38
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+00.26|+00.78|-01.38',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: object not found: Potato|+00.26|+00.78|-01.38
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+00.26|+00.78|-01.38',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+00.26|+00.78|-01.38',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Potato|+01.99|+00.94|+01.41',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Error Message: object not found: Potato|+01.99|+00.94|+01.41
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+01.99|+00.94|+01.41", "receptacle_object_id": "Potato|+01.99|+00.94|+01.41"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Error Message: object not found: Potato|+01.99|+00.94|+01.41
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Error Message: object not found: Potato|+01.99|+00.94|+01.41
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Potato|+01.99|+00.94|+01.41', 'Potato|+00.26|+00.78|-01.38')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Error Message: object not found: Potato|+01.99|+00.94|+01.41
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: object not found: Potato|+00.26|+00.78|-01.38
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+01.99|+00.94|+01.41", "receptacle_object_id": "Potato|+01.99|+00.94|+01.41"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+01.99|+00.94|+01.41", "receptacle_object_id": "Potato|+00.26|+00.78|-01.38"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.26|+00.78|-01.38", "receptacle_object_id": "Potato|+01.99|+00.94|+01.41"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Potato|+00.26|+00.78|-01.38", "receptacle_object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Error Message: object not found: Potato|+01.99|+00.94|+01.41
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: object not found: Potato|+00.26|+00.78|-01.38
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Error Message: object not found: Potato|+01.99|+00.94|+01.41
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Error Message: object not found: Potato|+00.26|+00.78|-01.38
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|+01.99|+00.94|+01.41"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Potato|+00.26|+00.78|-01.38"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Potato|+01.99|+00.94|+01.41',)) True
	 State: False

Rollout 16/50
=============================================
Problem Number: 15
Problem ID: train/pick_heat_then_place_in_recep-Potato-None-Fridge-2/trial_T20190909_030845_198194
Motion plan result: task_success: False
Total Actions Taken: 84
Failed at operator: 2 / 2 operators in task plan.
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 4.1 / 4.1
PutObjectInReceptacle 1.0 2.1 / 2.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
WashObject_1 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_0 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8757763975155278 14.1 / 16.1
PlaceObject_0 0.7560975609756099 3.1 / 4.1
SliceObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 15 / 245, train/pick_heat_then_place_in_recep-Potato-None-Fridge-2/trial_T20190909_030845_198194
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 15 / 245, train/pick_heat_then_place_in_recep-Potato-None-Fridge-2/trial_T20190909_030845_198194
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 15 / 245, train/pick_heat_then_place_in_recep-Potato-None-Fridge-2/trial_T20190909_030845_198194
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 16 / 245, train/pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin-15/trial_T20190909_043958_476680
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 44 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	put a heated tomato slice in the sink.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	 Plan string: (gotolocation agent1 loc_bar__minus_2_bar_2_bar_1_bar_30 loc_bar__minus_10_bar_8_bar_3_bar_30)
(gotolocation agent1 loc_bar__minus_10_bar_8_bar_3_bar_30 loc_bar__minus_9_bar_0_bar_1_bar_30)
(takeobject_0 agent1 loc_bar__minus_9_bar_0_bar_1_bar_30 tomato__minus_4_dot_50811672_comma__minus_4_dot_50811672_comma__minus_0_dot_2143393756_comma__minus_0_dot_2143393756_comma_3_dot_8405164_comma_3_dot_8405164)
(gotolocation agent1 loc_bar__minus_9_bar_0_bar_1_bar_30 loc_bar__minus_10_bar_9_bar_3_bar_45)
(heatobject_0 stoveburner__minus_12_dot_5924_comma__minus_12_dot_5924_comma_9_dot_4972_comma_9_dot_4972_comma_3_dot_836_comma_3_dot_836 agent1 loc_bar__minus_10_bar_9_bar_3_bar_45 tomato__minus_4_dot_50811672_comma__minus_4_dot_50811672_comma__minus_0_dot_2143393756_comma__minus_0_dot_2143393756_comma_3_dot_8405164_comma_3_dot_8405164)
(gotolocation agent1 loc_bar__minus_10_bar_9_bar_3_bar_45 loc_bar__minus_11_bar_5_bar_3_bar_45)
(takeobject_0 agent1 loc_bar__minus_11_bar_5_bar_3_bar_45 butterknife__minus_13_dot_854512_comma__minus_13_dot_854512_comma_4_dot_75873756_comma_4_dot_75873756_comma_3_dot_6633684_comma_3_dot_6633684)
(putobjectinreceptacle agent1 loc_bar__minus_11_bar_5_bar_3_bar_45 tomatotype tomato__minus_4_dot_50811672_comma__minus_4_dot_50811672_comma__minus_0_dot_2143393756_comma__minus_0_dot_2143393756_comma_3_dot_8405164_comma_3_dot_8405164 countertop__minus_13_dot_5272_comma__minus_13_dot_5272_comma_5_dot_428_comma_5_dot_428_comma_3_dot_8052_comma_3_dot_8052)
(cutobject_1 butterknife__minus_13_dot_854512_comma__minus_13_dot_854512_comma_4_dot_75873756_comma_4_dot_75873756_comma_3_dot_6633684_comma_3_dot_6633684 agent1 loc_bar__minus_11_bar_5_bar_3_bar_45 tomato__minus_4_dot_50811672_comma__minus_4_dot_50811672_comma__minus_0_dot_2143393756_comma__minus_0_dot_2143393756_comma_3_dot_8405164_comma_3_dot_8405164)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 16 / 245
Motion planning for: train/pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin-15/trial_T20190909_043958_476680
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['tomato'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'HeatObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'isHot', 'arguments': ['tomato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['stoveburner', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['tomato'], 'is_neg': False}]}

{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['butterknife'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PutObjectInReceptacle', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['tomato', 'countertop'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['tomato'], 'is_neg': True}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['countertop', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['tomato'], 'is_neg': False}]}

{'action': 'CutObject_1', 'postcondition_ground_predicates': [{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['butterknife'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject butterknife)
(GotoLocation tomato)
(SliceObject tomato)
(PutObject butterknife garbagecan)
(PickupObject tomato)
(GotoLocation microwave)
(HeatObject tomato)
(GotoLocation sinkbasin)
(PutObject tomato sinkbasin)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['tomato', 'sinkbasin'], 'is_neg': False}

{'predicate_name': 'heatable', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'isHot', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['tomato'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Tomato|-01.13|+00.96|-00.05',),
 ('Tomato|-01.19|+00.16|+03.79',),
 ('Tomato|-03.08|+00.98|+01.27',)]

PERMISSIBLE OBJECT SET:
[('Tomato|-01.13|+00.96|-00.05',),
 ('Tomato|-01.19|+00.16|+03.79',),
 ('Tomato|-03.08|+00.98|+01.27',)]


Permissible Objects:
('Tomato|-01.13|+00.96|-00.05',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Action feasible: True

OPERATOR:
{'action': 'HeatObject_0',
 'postcondition_ground_predicates': [{'arguments': ['tomato'],
                                      'is_neg': False,
                                      'predicate_name': 'isHot'}],
 'precondition_ground_predicates': [{'arguments': ['stoveburner', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['tomato'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Tomato|-01.13|+00.96|-00.05',),
 ('Tomato|-01.13|+00.96|-00.05',),
 ('Tomato|-01.13|+00.96|-00.05',),
 ('Tomato|-01.13|+00.96|-00.05',),
 ('Tomato|-01.13|+00.96|-00.05',),
 ('Tomato|-01.19|+00.16|+03.79',),
 ('Tomato|-01.19|+00.16|+03.79',),
 ('Tomato|-01.19|+00.16|+03.79',),
 ('Tomato|-01.19|+00.16|+03.79',),
 ('Tomato|-01.19|+00.16|+03.79',),
 ('Tomato|-01.19|+00.16|+03.79',),
 ('Tomato|-01.19|+00.16|+03.79',),
 ('Tomato|-01.19|+00.16|+03.79',),
 ('Tomato|-01.19|+00.16|+03.79',),
 ('Tomato|-03.08|+00.98|+01.27',),
 ('Tomato|-03.08|+00.98|+01.27',),
 ('Tomato|-03.08|+00.98|+01.27',),
 ('Tomato|-03.08|+00.98|+01.27',),
 ('Tomato|-03.08|+00.98|+01.27',),
 ('Tomato|-03.08|+00.98|+01.27',),
 ('Tomato|-03.08|+00.98|+01.27',),
 ('Tomato|-03.08|+00.98|+01.27',),
 ('Tomato|-03.08|+00.98|+01.27',)]

PERMISSIBLE OBJECT SET:
[('Tomato|-01.13|+00.96|-00.05',),
 ('Tomato|-01.13|+00.96|-00.05', 'StoveBurner|-03.15|+00.96|+02.37'),
 ('Tomato|-01.13|+00.96|-00.05', 'StoveBurner|-03.42|+00.96|+02.37'),
 ('Tomato|-01.13|+00.96|-00.05', 'StoveBurner|-03.42|+00.96|+01.97'),
 ('Tomato|-01.13|+00.96|-00.05', 'StoveBurner|-03.14|+00.96|+01.97'),
 ('Tomato|-01.19|+00.16|+03.79',),
 ('Tomato|-01.19|+00.16|+03.79', 'StoveBurner|-03.15|+00.96|+02.37'),
 ('Tomato|-01.19|+00.16|+03.79',
  'StoveBurner|-03.15|+00.96|+02.37',
  'Tomato|-01.13|+00.96|-00.05'),
 ('Tomato|-01.19|+00.16|+03.79', 'StoveBurner|-03.42|+00.96|+02.37'),
 ('Tomato|-01.19|+00.16|+03.79',
  'StoveBurner|-03.42|+00.96|+02.37',
  'Tomato|-01.13|+00.96|-00.05'),
 ('Tomato|-01.19|+00.16|+03.79', 'StoveBurner|-03.42|+00.96|+01.97'),
 ('Tomato|-01.19|+00.16|+03.79',
  'StoveBurner|-03.42|+00.96|+01.97',
  'Tomato|-01.13|+00.96|-00.05'),
 ('Tomato|-01.19|+00.16|+03.79', 'StoveBurner|-03.14|+00.96|+01.97'),
 ('Tomato|-01.19|+00.16|+03.79',
  'StoveBurner|-03.14|+00.96|+01.97',
  'Tomato|-01.13|+00.96|-00.05'),
 ('Tomato|-03.08|+00.98|+01.27',),
 ('Tomato|-03.08|+00.98|+01.27', 'StoveBurner|-03.15|+00.96|+02.37'),
 ('Tomato|-03.08|+00.98|+01.27',
  'StoveBurner|-03.15|+00.96|+02.37',
  'Tomato|-01.13|+00.96|-00.05'),
 ('Tomato|-03.08|+00.98|+01.27', 'StoveBurner|-03.42|+00.96|+02.37'),
 ('Tomato|-03.08|+00.98|+01.27',
  'StoveBurner|-03.42|+00.96|+02.37',
  'Tomato|-01.13|+00.96|-00.05'),
 ('Tomato|-03.08|+00.98|+01.27', 'StoveBurner|-03.42|+00.96|+01.97'),
 ('Tomato|-03.08|+00.98|+01.27',
  'StoveBurner|-03.42|+00.96|+01.97',
  'Tomato|-01.13|+00.96|-00.05'),
 ('Tomato|-03.08|+00.98|+01.27', 'StoveBurner|-03.14|+00.96|+01.97'),
 ('Tomato|-03.08|+00.98|+01.27',
  'StoveBurner|-03.14|+00.96|+01.97',
  'Tomato|-01.13|+00.96|-00.05')]


Permissible Objects:
('Tomato|-01.13|+00.96|-00.05',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: object not found: Tomato|-01.13|+00.96|-00.05
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: object not found: Tomato|-01.13|+00.96|-00.05
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 3/50

Permissible Objects:
('Tomato|-01.13|+00.96|-00.05', 'StoveBurner|-03.15|+00.96|+02.37')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: object not found: StoveBurner|-03.15|+00.96|+02.37
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: object not found: Tomato|-01.13|+00.96|-00.05
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: object not found: StoveBurner|-03.15|+00.96|+02.37
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: object not found: Tomato|-01.13|+00.96|-00.05
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 10/50

Permissible Objects:
('Tomato|-01.13|+00.96|-00.05', 'StoveBurner|-03.42|+00.96|+02.37')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: object not found: Tomato|-01.13|+00.96|-00.05
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: object not found: StoveBurner|-03.42|+00.96|+02.37
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: object not found: Tomato|-01.13|+00.96|-00.05
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 10/50

Permissible Objects:
('Tomato|-01.13|+00.96|-00.05', 'StoveBurner|-03.42|+00.96|+01.97')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: object not found: Tomato|-01.13|+00.96|-00.05
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Error Message: target object is controlled by another sim object. target object cannot be turned on/off directly
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: object not found: Tomato|-01.13|+00.96|-00.05
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Error Message: object not found: StoveBurner|-03.42|+00.96|+01.97
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Error Message: Tomato_66cbdca0(Clone)_copy_26 is not a valid Object Type to be placed in StoveBurner_decb16cc
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 10/50

Permissible Objects:
('Tomato|-01.13|+00.96|-00.05', 'StoveBurner|-03.14|+00.96|+01.97')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Error Message: target object is controlled by another sim object. target object cannot be turned on/off directly
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: object not found: Tomato|-01.13|+00.96|-00.05
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Error Message: object not found: StoveBurner|-03.14|+00.96|+01.97
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: object not found: Tomato|-01.13|+00.96|-00.05
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Error Message: StoveBurner_f453422f is full right now
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.13|+00.96|-00.05',)) True
	 State: False

Rollout 10/50

Permissible Objects:
('Tomato|-01.19|+00.16|+03.79',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: object not found: Tomato|-01.19|+00.16|+03.79
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: object not found: Tomato|-01.19|+00.16|+03.79
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 3/50

Permissible Objects:
('Tomato|-01.19|+00.16|+03.79', 'StoveBurner|-03.15|+00.96|+02.37')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: object not found: StoveBurner|-03.15|+00.96|+02.37
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: object not found: Tomato|-01.19|+00.16|+03.79
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: object not found: StoveBurner|-03.15|+00.96|+02.37
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: object not found: Tomato|-01.19|+00.16|+03.79
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 10/50

Permissible Objects:
('Tomato|-01.19|+00.16|+03.79', 'StoveBurner|-03.15|+00.96|+02.37', 'Tomato|-01.13|+00.96|-00.05')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: object not found: StoveBurner|-03.15|+00.96|+02.37
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: object not found: Tomato|-01.19|+00.16|+03.79
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: object not found: Tomato|-01.13|+00.96|-00.05
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: object not found: StoveBurner|-03.15|+00.96|+02.37
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: object not found: Tomato|-01.19|+00.16|+03.79
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: object not found: Tomato|-01.13|+00.96|-00.05
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 18/50

Permissible Objects:
('Tomato|-01.19|+00.16|+03.79', 'StoveBurner|-03.42|+00.96|+02.37')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: object not found: Tomato|-01.19|+00.16|+03.79
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: object not found: StoveBurner|-03.42|+00.96|+02.37
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: object not found: Tomato|-01.19|+00.16|+03.79
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 10/50

Permissible Objects:
('Tomato|-01.19|+00.16|+03.79', 'StoveBurner|-03.42|+00.96|+02.37', 'Tomato|-01.13|+00.96|-00.05')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: object not found: StoveBurner|-03.42|+00.96|+02.37
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: object not found: Tomato|-01.19|+00.16|+03.79
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: object not found: Tomato|-01.13|+00.96|-00.05
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: object not found: Tomato|-01.19|+00.16|+03.79
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: object not found: Tomato|-01.13|+00.96|-00.05
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 18/50

Permissible Objects:
('Tomato|-01.19|+00.16|+03.79', 'StoveBurner|-03.42|+00.96|+01.97')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: object not found: Tomato|-01.19|+00.16|+03.79
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Error Message: target object is controlled by another sim object. target object cannot be turned on/off directly
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: object not found: Tomato|-01.19|+00.16|+03.79
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Error Message: object not found: StoveBurner|-03.42|+00.96|+01.97
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 10/50

Permissible Objects:
('Tomato|-01.19|+00.16|+03.79', 'StoveBurner|-03.42|+00.96|+01.97', 'Tomato|-01.13|+00.96|-00.05')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: object not found: Tomato|-01.19|+00.16|+03.79
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: object not found: Tomato|-01.13|+00.96|-00.05
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Error Message: target object is controlled by another sim object. target object cannot be turned on/off directly
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: object not found: Tomato|-01.19|+00.16|+03.79
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: object not found: Tomato|-01.13|+00.96|-00.05
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Error Message: object not found: StoveBurner|-03.42|+00.96|+01.97
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: Tomato_66cbdca0(Clone)_copy_26 is not a valid Object Type to be placed in StoveBurner_decb16cc
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.42|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 18/50

Permissible Objects:
('Tomato|-01.19|+00.16|+03.79', 'StoveBurner|-03.14|+00.96|+01.97')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Error Message: target object is controlled by another sim object. target object cannot be turned on/off directly
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: object not found: Tomato|-01.19|+00.16|+03.79
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Error Message: object not found: StoveBurner|-03.14|+00.96|+01.97
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: object not found: Tomato|-01.19|+00.16|+03.79
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 10/50

Permissible Objects:
('Tomato|-01.19|+00.16|+03.79', 'StoveBurner|-03.14|+00.96|+01.97', 'Tomato|-01.13|+00.96|-00.05')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Error Message: target object is controlled by another sim object. target object cannot be turned on/off directly
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: object not found: Tomato|-01.19|+00.16|+03.79
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: object not found: Tomato|-01.13|+00.96|-00.05
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Error Message: object not found: StoveBurner|-03.14|+00.96|+01.97
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: object not found: Tomato|-01.19|+00.16|+03.79
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: object not found: Tomato|-01.13|+00.96|-00.05
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: StoveBurner_f453422f is full right now
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.19|+00.16|+03.79", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.19|+00.16|+03.79"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.14|+00.96|+01.97"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.19|+00.16|+03.79"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-01.19|+00.16|+03.79',)) True
	 State: False

Rollout 18/50

Permissible Objects:
('Tomato|-03.08|+00.98|+01.27',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: object not found: Tomato|-03.08|+00.98|+01.27
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: object not found: Tomato|-03.08|+00.98|+01.27
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 3/50

Permissible Objects:
('Tomato|-03.08|+00.98|+01.27', 'StoveBurner|-03.15|+00.96|+02.37')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: object not found: Tomato|-03.08|+00.98|+01.27
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: object not found: StoveBurner|-03.15|+00.96|+02.37
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: object not found: Tomato|-03.08|+00.98|+01.27
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: object not found: StoveBurner|-03.15|+00.96|+02.37
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-03.08|+00.98|+01.27", "receptacle_object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-03.08|+00.98|+01.27", "receptacle_object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37", "receptacle_object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37", "receptacle_object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 10/50

Permissible Objects:
('Tomato|-03.08|+00.98|+01.27', 'StoveBurner|-03.15|+00.96|+02.37', 'Tomato|-01.13|+00.96|-00.05')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: object not found: Tomato|-03.08|+00.98|+01.27
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: object not found: Tomato|-01.13|+00.96|-00.05
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: object not found: StoveBurner|-03.15|+00.96|+02.37
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: object not found: Tomato|-03.08|+00.98|+01.27
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: object not found: Tomato|-01.13|+00.96|-00.05
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: object not found: StoveBurner|-03.15|+00.96|+02.37
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37", "receptacle_object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37", "receptacle_object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-03.08|+00.98|+01.27", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-03.08|+00.98|+01.27", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-03.08|+00.98|+01.27", "receptacle_object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-03.08|+00.98|+01.27", "receptacle_object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.15|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 18/50

Permissible Objects:
('Tomato|-03.08|+00.98|+01.27', 'StoveBurner|-03.42|+00.96|+02.37')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: object not found: Tomato|-03.08|+00.98|+01.27
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: object not found: StoveBurner|-03.42|+00.96|+02.37
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: object not found: Tomato|-03.08|+00.98|+01.27
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-03.08|+00.98|+01.27", "receptacle_object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-03.08|+00.98|+01.27", "receptacle_object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37", "receptacle_object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37", "receptacle_object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 10/50

Permissible Objects:
('Tomato|-03.08|+00.98|+01.27', 'StoveBurner|-03.42|+00.96|+02.37', 'Tomato|-01.13|+00.96|-00.05')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: object not found: Tomato|-03.08|+00.98|+01.27
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: object not found: StoveBurner|-03.42|+00.96|+02.37
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: object not found: Tomato|-01.13|+00.96|-00.05
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: object not found: Tomato|-03.08|+00.98|+01.27
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Error Message: object not found: Tomato|-01.13|+00.96|-00.05
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37", "receptacle_object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37", "receptacle_object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-03.08|+00.98|+01.27", "receptacle_object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-03.08|+00.98|+01.27", "receptacle_object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.13|+00.96|-00.05"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.13|+00.96|-00.05", "receptacle_object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-03.08|+00.98|+01.27", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-03.08|+00.98|+01.27", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37", "receptacle_object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.13|+00.96|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-03.08|+00.98|+01.27"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-03.08|+00.98|+01.27"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "StoveBurner|-03.42|+00.96|+02.37"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-03.08|+00.98|+01.27',)) True
	 State: False

Rollout 18/50
Exceeded max number of trajs!
=============================================
Problem Number: 16
Problem ID: train/pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin-15/trial_T20190909_043958_476680
Motion plan result: task_success: False
Total Actions Taken: 218
Failed at operator: 2 / 5 operators in task plan.
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 4.1 / 4.1
PutObjectInReceptacle 1.0 2.1 / 2.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
WashObject_1 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8830409356725145 15.1 / 17.1
PlaceObject_0 0.7560975609756099 3.1 / 4.1
SliceObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 16 / 245, train/pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin-15/trial_T20190909_043958_476680
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 16 / 245, train/pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin-15/trial_T20190909_043958_476680
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 16 / 245, train/pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin-15/trial_T20190909_043958_476680
Sucessfully found 0 plans for goals.
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 6 / 17 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 17 / 245, train/pick_clean_then_place_in_recep-SoapBar-None-Cabinet-418/trial_T20190907_035143_529621
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 44 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	place wet soap in a cabinet.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SoapBarType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_7_bar__minus_3_bar_1_bar_30 loc_bar__minus_8_bar__minus_12_bar_3_bar_45)
(gotolocation agent1 loc_bar__minus_8_bar__minus_12_bar_3_bar_45 loc_bar__minus_8_bar__minus_14_bar_3_bar_60)
(takeobject_0 agent1 loc_bar__minus_8_bar__minus_14_bar_3_bar_60 soapbar__minus_11_dot_058012_comma__minus_11_dot_058012_comma__minus_14_dot_27493096_comma__minus_14_dot_27493096_comma_0_dot_26605272_comma_0_dot_26605272)
(gotolocation agent1 loc_bar__minus_8_bar__minus_14_bar_3_bar_60 loc_bar__minus_8_bar__minus_12_bar_3_bar_45)
(washobject_1 sinkbasin__minus_10_dot_6764_comma__minus_10_dot_6764_comma__minus_12_dot_25439928_comma__minus_12_dot_25439928_comma_3_dot_4556_comma_3_dot_4556 agent1 loc_bar__minus_8_bar__minus_12_bar_3_bar_45 soapbar__minus_11_dot_058012_comma__minus_11_dot_058012_comma__minus_14_dot_27493096_comma__minus_14_dot_27493096_comma_0_dot_26605272_comma_0_dot_26605272)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 17 / 245
Motion planning for: train/pick_clean_then_place_in_recep-SoapBar-None-Cabinet-418/trial_T20190907_035143_529621
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SoapBarType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['soapbar'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'WashObject_1', 'postcondition_ground_predicates': [{'predicate_name': 'isClean', 'arguments': ['soapbar'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['sinkbasin', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['soapbar'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation cabinet)
(PickupObject soapbar)
(GotoLocation sinkbasin)
(CleanObject soapbar)
(GotoLocation cabinet)
(PutObject soapbar cabinet)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['soapbar', 'cabinet'], 'is_neg': False}

{'predicate_name': 'cleanable', 'arguments': ['soapbar'], 'is_neg': False}

{'predicate_name': 'isClean', 'arguments': ['soapbar'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['soapbar'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('SoapBar|-02.76|+00.07|-03.57',),
 ('SoapBar|-02.44|+00.81|-02.26',),
 ('SoapBar|-02.39|+00.07|-02.85',)]

PERMISSIBLE OBJECT SET:
[('SoapBar|-02.76|+00.07|-03.57',),
 ('SoapBar|-02.44|+00.81|-02.26',),
 ('SoapBar|-02.39|+00.07|-02.85',)]


Permissible Objects:
('SoapBar|-02.76|+00.07|-03.57',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Error Message: SoapBar|-02.76|+00.07|-03.57 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('SoapBar|-02.44|+00.81|-02.26',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "SoapBar|-02.44|+00.81|-02.26"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "SoapBar|-02.44|+00.81|-02.26"})]
Action feasible: True

OPERATOR:
{'action': 'WashObject_1',
 'postcondition_ground_predicates': [{'arguments': ['soapbar'],
                                      'is_neg': False,
                                      'predicate_name': 'isClean'}],
 'precondition_ground_predicates': [{'arguments': ['sinkbasin', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['soapbar'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('SoapBar|-02.76|+00.07|-03.57',),
 ('SoapBar|-02.76|+00.07|-03.57',),
 ('SoapBar|-02.76|+00.07|-03.57',),
 ('SoapBar|-02.76|+00.07|-03.57',),
 ('SoapBar|-02.76|+00.07|-03.57',),
 ('SoapBar|-02.44|+00.81|-02.26',),
 ('SoapBar|-02.44|+00.81|-02.26',),
 ('SoapBar|-02.44|+00.81|-02.26',),
 ('SoapBar|-02.44|+00.81|-02.26',),
 ('SoapBar|-02.39|+00.07|-02.85',),
 ('SoapBar|-02.39|+00.07|-02.85',),
 ('SoapBar|-02.39|+00.07|-02.85',),
 ('SoapBar|-02.39|+00.07|-02.85',),
 ('SoapBar|-02.39|+00.07|-02.85',)]

PERMISSIBLE OBJECT SET:
[('SoapBar|-02.76|+00.07|-03.57',),
 ('SoapBar|-02.76|+00.07|-03.57', 'Sink|-02.66|+00.79|-03.07|SinkBasin'),
 ('SoapBar|-02.76|+00.07|-03.57',
  'Sink|-02.66|+00.79|-03.07|SinkBasin',
  'Faucet|-03.00|+01.17|-03.07'),
 ('SoapBar|-02.76|+00.07|-03.57',
  'Sink|-02.66|+00.79|-03.07|SinkBasin',
  'Faucet|-00.61|+01.94|-00.01'),
 ('SoapBar|-02.76|+00.07|-03.57',
  'Sink|-02.66|+00.79|-03.07|SinkBasin',
  'SoapBar|-02.44|+00.81|-02.26'),
 ('SoapBar|-02.44|+00.81|-02.26',),
 ('SoapBar|-02.44|+00.81|-02.26', 'Sink|-02.66|+00.79|-03.07|SinkBasin'),
 ('SoapBar|-02.44|+00.81|-02.26',
  'Sink|-02.66|+00.79|-03.07|SinkBasin',
  'Faucet|-03.00|+01.17|-03.07'),
 ('SoapBar|-02.44|+00.81|-02.26',
  'Sink|-02.66|+00.79|-03.07|SinkBasin',
  'Faucet|-00.61|+01.94|-00.01'),
 ('SoapBar|-02.39|+00.07|-02.85',),
 ('SoapBar|-02.39|+00.07|-02.85', 'Sink|-02.66|+00.79|-03.07|SinkBasin'),
 ('SoapBar|-02.39|+00.07|-02.85',
  'Sink|-02.66|+00.79|-03.07|SinkBasin',
  'Faucet|-03.00|+01.17|-03.07'),
 ('SoapBar|-02.39|+00.07|-02.85',
  'Sink|-02.66|+00.79|-03.07|SinkBasin',
  'Faucet|-00.61|+01.94|-00.01'),
 ('SoapBar|-02.39|+00.07|-02.85',
  'Sink|-02.66|+00.79|-03.07|SinkBasin',
  'SoapBar|-02.44|+00.81|-02.26')]


Permissible Objects:
('SoapBar|-02.76|+00.07|-03.57',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Error Message: object not found: SoapBar|-02.76|+00.07|-03.57
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('SoapBar|-02.76|+00.07|-03.57', 'Sink|-02.66|+00.79|-03.07|SinkBasin')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Error Message: object not found: Sink|-02.66|+00.79|-03.07|SinkBasin
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Error Message: object not found: SoapBar|-02.76|+00.07|-03.57
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 2/50

Permissible Objects:
('SoapBar|-02.76|+00.07|-03.57', 'Sink|-02.66|+00.79|-03.07|SinkBasin', 'Faucet|-03.00|+01.17|-03.07')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Error Message: object not found: Sink|-02.66|+00.79|-03.07|SinkBasin
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Error Message: object not found: SoapBar|-02.76|+00.07|-03.57
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-03.00|+01.17|-03.07"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-03.00|+01.17|-03.07"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57", "receptacle_object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-03.00|+01.17|-03.07"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57", "receptacle_object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-03.00|+01.17|-03.07"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57", "receptacle_object_id": "Faucet|-03.00|+01.17|-03.07"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57", "receptacle_object_id": "Faucet|-03.00|+01.17|-03.07"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-03.00|+01.17|-03.07"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Faucet|-03.00|+01.17|-03.07"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-03.00|+01.17|-03.07"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Faucet|-03.00|+01.17|-03.07"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-03.00|+01.17|-03.07"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Faucet|-03.00|+01.17|-03.07"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-03.00|+01.17|-03.07"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-03.00|+01.17|-03.07"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Faucet|-03.00|+01.17|-03.07"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-03.00|+01.17|-03.07"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57", "receptacle_object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-03.00|+01.17|-03.07"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57", "receptacle_object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-03.00|+01.17|-03.07"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Faucet|-03.00|+01.17|-03.07", "receptacle_object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Faucet|-03.00|+01.17|-03.07", "receptacle_object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin", "receptacle_object_id": "SoapBar|-02.76|+00.07|-03.57"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-03.00|+01.17|-03.07"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin", "receptacle_object_id": "SoapBar|-02.76|+00.07|-03.57"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-03.00|+01.17|-03.07"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Faucet|-03.00|+01.17|-03.07", "receptacle_object_id": "SoapBar|-02.76|+00.07|-03.57"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Faucet|-03.00|+01.17|-03.07", "receptacle_object_id": "SoapBar|-02.76|+00.07|-03.57"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin", "receptacle_object_id": "Faucet|-03.00|+01.17|-03.07"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin", "receptacle_object_id": "Faucet|-03.00|+01.17|-03.07"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 12/50

Permissible Objects:
('SoapBar|-02.76|+00.07|-03.57', 'Sink|-02.66|+00.79|-03.07|SinkBasin', 'Faucet|-00.61|+01.94|-00.01')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Error Message: object not found: Sink|-02.66|+00.79|-03.07|SinkBasin
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Error Message: object not found: SoapBar|-02.76|+00.07|-03.57
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-00.61|+01.94|-00.01"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-00.61|+01.94|-00.01"})]
Error Message: object is visible but occluded by something: Faucet|-00.61|+01.94|-00.01
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57", "receptacle_object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-00.61|+01.94|-00.01"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57", "receptacle_object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-00.61|+01.94|-00.01"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57", "receptacle_object_id": "Faucet|-00.61|+01.94|-00.01"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57", "receptacle_object_id": "Faucet|-00.61|+01.94|-00.01"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57", "receptacle_object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-00.61|+01.94|-00.01"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57", "receptacle_object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-00.61|+01.94|-00.01"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Faucet|-00.61|+01.94|-00.01", "receptacle_object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Faucet|-00.61|+01.94|-00.01", "receptacle_object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin", "receptacle_object_id": "SoapBar|-02.76|+00.07|-03.57"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-00.61|+01.94|-00.01"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin", "receptacle_object_id": "SoapBar|-02.76|+00.07|-03.57"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-00.61|+01.94|-00.01"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Faucet|-00.61|+01.94|-00.01", "receptacle_object_id": "SoapBar|-02.76|+00.07|-03.57"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Faucet|-00.61|+01.94|-00.01", "receptacle_object_id": "SoapBar|-02.76|+00.07|-03.57"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin", "receptacle_object_id": "Faucet|-00.61|+01.94|-00.01"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin", "receptacle_object_id": "Faucet|-00.61|+01.94|-00.01"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 10/50

Permissible Objects:
('SoapBar|-02.76|+00.07|-03.57', 'Sink|-02.66|+00.79|-03.07|SinkBasin', 'SoapBar|-02.44|+00.81|-02.26')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Error Message: object not found: Sink|-02.66|+00.79|-03.07|SinkBasin
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Error Message: object not found: SoapBar|-02.76|+00.07|-03.57
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.44|+00.81|-02.26"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.44|+00.81|-02.26"})]
Error Message: object not found: SoapBar|-02.44|+00.81|-02.26
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57", "receptacle_object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.44|+00.81|-02.26"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57", "receptacle_object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.44|+00.81|-02.26"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57", "receptacle_object_id": "SoapBar|-02.44|+00.81|-02.26"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57", "receptacle_object_id": "SoapBar|-02.44|+00.81|-02.26"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57", "receptacle_object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.44|+00.81|-02.26"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.76|+00.07|-03.57", "receptacle_object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.44|+00.81|-02.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.44|+00.81|-02.26", "receptacle_object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.44|+00.81|-02.26", "receptacle_object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Error Message: object not found: SoapBar|-02.76|+00.07|-03.57
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin", "receptacle_object_id": "SoapBar|-02.76|+00.07|-03.57"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.44|+00.81|-02.26"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin", "receptacle_object_id": "SoapBar|-02.76|+00.07|-03.57"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.44|+00.81|-02.26"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.44|+00.81|-02.26", "receptacle_object_id": "SoapBar|-02.76|+00.07|-03.57"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.44|+00.81|-02.26", "receptacle_object_id": "SoapBar|-02.76|+00.07|-03.57"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin", "receptacle_object_id": "SoapBar|-02.44|+00.81|-02.26"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin", "receptacle_object_id": "SoapBar|-02.44|+00.81|-02.26"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.76|+00.07|-03.57"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

Rollout 10/50

Permissible Objects:
('SoapBar|-02.44|+00.81|-02.26',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.44|+00.81|-02.26"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.44|+00.81|-02.26"})]
Error Message: object not found: SoapBar|-02.44|+00.81|-02.26
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.44|+00.81|-02.26',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('SoapBar|-02.44|+00.81|-02.26', 'Sink|-02.66|+00.79|-03.07|SinkBasin')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Error Message: object not found: Sink|-02.66|+00.79|-03.07|SinkBasin
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.44|+00.81|-02.26',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.44|+00.81|-02.26"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.44|+00.81|-02.26"})]
Error Message: object not found: SoapBar|-02.44|+00.81|-02.26
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.44|+00.81|-02.26',)) True
	 State: False

Rollout 2/50

Permissible Objects:
('SoapBar|-02.44|+00.81|-02.26', 'Sink|-02.66|+00.79|-03.07|SinkBasin', 'Faucet|-03.00|+01.17|-03.07')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"})]
Error Message: object not found: Sink|-02.66|+00.79|-03.07|SinkBasin
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.44|+00.81|-02.26',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.44|+00.81|-02.26"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SoapBar|-02.44|+00.81|-02.26"})]
Error Message: object not found: SoapBar|-02.44|+00.81|-02.26
Action feasible: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.44|+00.81|-02.26',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-03.00|+01.17|-03.07"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-03.00|+01.17|-03.07"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('SoapBar|-02.44|+00.81|-02.26',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.44|+00.81|-02.26", "receptacle_object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-03.00|+01.17|-03.07"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SoapBar|-02.44|+00.81|-02.26", "receptacle_object_id": "Sink|-02.66|+00.79|-03.07|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-03.00|+01.17|-03.07"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('SoapBar|-02.44|+00.81|-02.26',)) True
	 State: False

Action feasible: True

	 Fluent(predicate='inReceptacle', objects=('SoapBar|-02.76|+00.07|-03.57', 'Cabinet|-02.29|+00.32|-03.25')) True
	 State: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('SoapBar|-02.76|+00.07|-03.57', 'Cabinet|-02.30|+00.35|-02.25')) True
	 State: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

	 Fluent(predicate='isClean', objects=('SoapBar|-02.76|+00.07|-03.57',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('SoapBar|-02.44|+00.81|-02.26', 'Cabinet|-02.29|+00.32|-03.25')) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('SoapBar|-02.44|+00.81|-02.26', 'Cabinet|-02.30|+00.35|-02.25')) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('SoapBar|-02.44|+00.81|-02.26', 'Cabinet|-02.29|+00.32|-03.81')) True
	 State: False

	 Fluent(predicate='isClean', objects=('SoapBar|-02.39|+00.07|-02.85',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('SoapBar|-02.39|+00.07|-02.85', 'Cabinet|-02.30|+00.35|-02.25')) True
	 State: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.39|+00.07|-02.85',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('SoapBar|-02.39|+00.07|-02.85', 'Cabinet|-02.29|+00.32|-03.81')) True
	 State: False
	 Fluent(predicate='isClean', objects=('SoapBar|-02.39|+00.07|-02.85',)) True
	 State: False

GOAL CHECK FUNCTION FAILED!
=============================================
Problem Number: 17
Problem ID: train/pick_clean_then_place_in_recep-SoapBar-None-Cabinet-418/trial_T20190907_035143_529621
Motion plan result: task_success: False
Total Actions Taken: 44
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 4.1 / 4.1
PutObjectInReceptacle 1.0 2.1 / 2.1
WashObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8895027624309393 16.1 / 18.1
PlaceObject_0 0.7560975609756099 3.1 / 4.1
SliceObject_2 0.09090909090909091 CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
0.1 / 1.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 17 / 245, train/pick_clean_then_place_in_recep-SoapBar-None-Cabinet-418/trial_T20190907_035143_529621
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 17 / 245, train/pick_clean_then_place_in_recep-SoapBar-None-Cabinet-418/trial_T20190907_035143_529621
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 17 / 245, train/pick_clean_then_place_in_recep-SoapBar-None-Cabinet-418/trial_T20190907_035143_529621
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 18 / 245, train/look_at_obj_in_light-TennisRacket-None-DeskLamp-324/trial_T20190907_065446_910042
Now attempting to plan for goal: 0 / 2
	Running planner with existing operators + 43 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'HeatObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	pick up the tennis bat on the floor , turn on the lamp on the dresser.
	 Ground truth goal: 
	(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o TennisRacketType)
                (holds ?a ?o)
            )
    ))))))
	 Proposed goal:
	(:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?o TennisRacketType)
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot))))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_4_bar__minus_4_bar_3_bar_30 loc_bar_7_bar__minus_3_bar_2_bar_45)
(turnonlamp_1 agent1 loc_bar_7_bar__minus_3_bar_2_bar_45 desklamp_6_dot_97601748_comma_6_dot_97601748_comma__minus_5_dot_67595912_comma__minus_5_dot_67595912_comma_3_dot_1815324_comma_3_dot_1815324 desklamp_6_dot_97601748_comma_6_dot_97601748_comma__minus_5_dot_67595912_comma__minus_5_dot_67595912_comma_3_dot_1815324_comma_3_dot_1815324)
(gotolocation agent1 loc_bar_7_bar__minus_3_bar_2_bar_45 loc_bar__minus_6_bar__minus_6_bar_0_bar_60)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 18 / 245
Motion planning for: train/look_at_obj_in_light-TennisRacket-None-DeskLamp-324/trial_T20190907_065446_910042
Proposed goal is: 
(:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?o TennisRacketType)
		(atLocation ?a ?l)
		(objectAtLocation ?o ?l)
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot))))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o TennisRacketType)
                (holds ?a ?o)
            )
    ))))))
Attempting to execute the following motion plan:
{'action': 'TurnOnLamp_1', 'postcondition_ground_predicates': [{'predicate_name': 'isOn', 'arguments': ['desklamp'], 'is_neg': False}, {'predicate_name': 'isToggled', 'arguments': ['desklamp'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'toggleable', 'arguments': ['desklamp'], 'is_neg': False}, {'predicate_name': 'toggleable', 'arguments': ['desklamp'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation tennisracket)
(PickupObject tennisracket)
(GotoLocation desklamp)
(ToggleObject desklamp)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'toggleable', 'arguments': ['desklamp'], 'is_neg': False}

{'predicate_name': 'isToggled', 'arguments': ['desklamp'], 'is_neg': False}

{'predicate_name': 'holds', 'arguments': ['?a', 'tennisracket'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TurnOnLamp_1',
 'postcondition_ground_predicates': [{'arguments': ['desklamp'],
                                      'is_neg': False,
                                      'predicate_name': 'isOn'},
                                     {'arguments': ['desklamp'],
                                      'is_neg': False,
                                      'predicate_name': 'isToggled'}],
 'precondition_ground_predicates': [{'arguments': ['desklamp'],
                                     'is_neg': False,
                                     'predicate_name': 'toggleable'},
                                    {'arguments': ['desklamp'],
                                     'is_neg': False,
                                     'predicate_name': 'toggleable'}]}

GOAL OBJECT SET:
[('DeskLamp|+01.74|+00.80|-01.42',)]

PERMISSIBLE OBJECT SET:
[('DeskLamp|+01.74|+00.80|-01.42',)]


Permissible Objects:
('DeskLamp|+01.74|+00.80|-01.42',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "DeskLamp|+01.74|+00.80|-01.42"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "DeskLamp|+01.74|+00.80|-01.42"})]
Action feasible: True

	 Fluent(predicate='holds', objects=('TennisRacket|-01.60|+00.00|-01.37',)) True
	 State: False

GOAL CHECK FUNCTION FAILED!
=============================================
Problem Number: 18
Problem ID: train/look_at_obj_in_light-TennisRacket-None-DeskLamp-324/trial_T20190907_065446_910042
Motion plan result: task_success: False
Total Actions Taken: 1
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 5.1 / 5.1
PutObjectInReceptacle 1.0 2.1 / 2.1
WashObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8895027624309393 16.1 / 18.1
PlaceObject_0 0.7560975609756099 3.1 / 4.1
SliceObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 18 / 245, train/look_at_obj_in_light-TennisRacket-None-DeskLamp-324/trial_T20190907_065446_910042
Now attempting to plan for goal: 1 / 2
	Running planner with existing operators + 44 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	pick up the tennis bat on the floor , turn on the lamp on the dresser.
	 Ground truth goal: 
	(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o TennisRacketType)
                (holds ?a ?o)
            )
    ))))))
	 Proposed goal:
	(:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o TennisRacketType)
		(holds ?a ?o))))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_4_bar__minus_4_bar_3_bar_30 loc_bar_7_bar__minus_3_bar_2_bar_45)
(gotolocation agent1 loc_bar_7_bar__minus_3_bar_2_bar_45 loc_bar__minus_6_bar__minus_6_bar_0_bar_60)
(takeobject_0 agent1 loc_bar__minus_6_bar__minus_6_bar_0_bar_60 tennisracket__minus_6_dot_388_comma__minus_6_dot_388_comma__minus_5_dot_468_comma__minus_5_dot_468_comma_0_dot_00402465464_comma_0_dot_00402465464)
(gotolocation agent1 loc_bar__minus_6_bar__minus_6_bar_0_bar_60 loc_bar_7_bar__minus_3_bar_2_bar_45)
(turnonlamp_1 agent1 loc_bar_7_bar__minus_3_bar_2_bar_45 desklamp_6_dot_97601748_comma_6_dot_97601748_comma__minus_5_dot_67595912_comma__minus_5_dot_67595912_comma_3_dot_1815324_comma_3_dot_1815324 desklamp_6_dot_97601748_comma_6_dot_97601748_comma__minus_5_dot_67595912_comma__minus_5_dot_67595912_comma_3_dot_1815324_comma_3_dot_1815324)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 18 / 245
Motion planning for: train/look_at_obj_in_light-TennisRacket-None-DeskLamp-324/trial_T20190907_065446_910042
Proposed goal is: 
(:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot DeskLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o TennisRacketType)
		(holds ?a ?o))))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o TennisRacketType)
                (holds ?a ?o)
            )
    ))))))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['tennisracket'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'TurnOnLamp_1', 'postcondition_ground_predicates': [{'predicate_name': 'isOn', 'arguments': ['desklamp'], 'is_neg': False}, {'predicate_name': 'isToggled', 'arguments': ['desklamp'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'toggleable', 'arguments': ['desklamp'], 'is_neg': False}, {'predicate_name': 'toggleable', 'arguments': ['desklamp'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation tennisracket)
(PickupObject tennisracket)
(GotoLocation desklamp)
(ToggleObject desklamp)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'toggleable', 'arguments': ['desklamp'], 'is_neg': False}

{'predicate_name': 'isToggled', 'arguments': ['desklamp'], 'is_neg': False}

{'predicate_name': 'holds', 'arguments': ['?a', 'tennisracket'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['tennisracket'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('TennisRacket|-01.60|+00.00|-01.37',)]

PERMISSIBLE OBJECT SET:
[('TennisRacket|-01.60|+00.00|-01.37',)]


Permissible Objects:
('TennisRacket|-01.60|+00.00|-01.37',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "TennisRacket|-01.60|+00.00|-01.37"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "TennisRacket|-01.60|+00.00|-01.37"})]
Action feasible: True

OPERATOR:
{'action': 'TurnOnLamp_1',
 'postcondition_ground_predicates': [{'arguments': ['desklamp'],
                                      'is_neg': False,
                                      'predicate_name': 'isOn'},
                                     {'arguments': ['desklamp'],
                                      'is_neg': False,
                                      'predicate_name': 'isToggled'}],
 'precondition_ground_predicates': [{'arguments': ['desklamp'],
                                     'is_neg': False,
                                     'predicate_name': 'toggleable'},
                                    {'arguments': ['desklamp'],
                                     'is_neg': False,
                                     'predicate_name': 'toggleable'}]}

GOAL OBJECT SET:
[('DeskLamp|+01.74|+00.80|-01.42',), ('DeskLamp|+01.74|+00.80|-01.42',)]

PERMISSIBLE OBJECT SET:
[('DeskLamp|+01.74|+00.80|-01.42',),
 ('DeskLamp|+01.74|+00.80|-01.42', 'TennisRacket|-01.60|+00.00|-01.37')]


Permissible Objects:
('DeskLamp|+01.74|+00.80|-01.42',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "DeskLamp|+01.74|+00.80|-01.42"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "DeskLamp|+01.74|+00.80|-01.42"})]
Action feasible: True


CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
Motion plan operator success!: {'action': 'TurnOnLamp_1', 'postcondition_ground_predicates': [{'predicate_name': 'isOn', 'arguments': ['desklamp'], 'is_neg': False}, {'predicate_name': 'isToggled', 'arguments': ['desklamp'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'toggleable', 'arguments': ['desklamp'], 'is_neg': False}, {'predicate_name': 'toggleable', 'arguments': ['desklamp'], 'is_neg': False}]}
=============================================
Problem Number: 18
Problem ID: train/look_at_obj_in_light-TennisRacket-None-DeskLamp-324/trial_T20190907_065446_910042
Motion plan result: task_success: True
Total Actions Taken: 2
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 6.1 / 6.1
PutObjectInReceptacle 1.0 2.1 / 2.1
WashObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8952879581151832 17.1 / 19.1
PlaceObject_0 0.7560975609756099 3.1 / 4.1
SliceObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 7 / 19 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 19 / 245, train/pick_and_place_simple-SprayBottle-None-Toilet-418/trial_T20190906_190917_905379
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 44 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	place a spray bottle on top of a toilet cistern.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SprayBottleType) 
                (receptacleType ?r ToiletType)
                (inReceptacle ?o ?r) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SprayBottleType)
		(receptacleType ?r ToiletType)
		(inReceptacle ?o ?r))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_8_bar__minus_2_bar_3_bar_30 loc_bar__minus_2_bar__minus_10_bar_2_bar_15)
(gotolocation agent1 loc_bar__minus_2_bar__minus_10_bar_2_bar_15 loc_bar__minus_8_bar__minus_15_bar_3_bar_60)
(takeobject_0 agent1 loc_bar__minus_8_bar__minus_15_bar_3_bar_60 spraybottle__minus_10_dot_4812212_comma__minus_10_dot_4812212_comma__minus_15_dot_0615692_comma__minus_15_dot_0615692_comma_3_dot_23161626_comma_3_dot_23161626)
(gotolocation agent1 loc_bar__minus_8_bar__minus_15_bar_3_bar_60 loc_bar__minus_2_bar__minus_10_bar_2_bar_15)
(placeobject_0 agent1 loc_bar__minus_2_bar__minus_10_bar_2_bar_15 toilet__minus_1_dot_810838224_comma__minus_1_dot_810838224_comma__minus_12_dot_2095146_comma__minus_12_dot_2095146_comma_0_dot_0025726184_comma_0_dot_0025726184 spraybottle__minus_10_dot_4812212_comma__minus_10_dot_4812212_comma__minus_15_dot_0615692_comma__minus_15_dot_0615692_comma_3_dot_23161626_comma_3_dot_23161626)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 19 / 245
Motion planning for: train/pick_and_place_simple-SprayBottle-None-Toilet-418/trial_T20190906_190917_905379
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o SprayBottleType)
		(receptacleType ?r ToiletType)
		(inReceptacle ?o ?r))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SprayBottleType) 
                (receptacleType ?r ToiletType)
                (inReceptacle ?o ?r) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['spraybottle'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['spraybottle', 'toilet'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['toilet', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['spraybottle'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject spraybottle)
(GotoLocation toilet)
(PutObject spraybottle toilet)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['spraybottle', 'toilet'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['spraybottle'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('SprayBottle|-02.62|+00.81|-03.77',)]

PERMISSIBLE OBJECT SET:
[('SprayBottle|-02.62|+00.81|-03.77',)]


Permissible Objects:
('SprayBottle|-02.62|+00.81|-03.77',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "SprayBottle|-02.62|+00.81|-03.77"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "SprayBottle|-02.62|+00.81|-03.77"})]
Action feasible: True

OPERATOR:
{'action': 'PlaceObject_0',
 'postcondition_ground_predicates': [{'arguments': ['spraybottle', 'toilet'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'}],
 'precondition_ground_predicates': [{'arguments': ['toilet', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['spraybottle'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')]

PERMISSIBLE OBJECT SET:
[('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')]


Permissible Objects:
('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Toilet|-00.45|+00.00|-03.05"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Toilet|-00.45|+00.00|-03.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SprayBottle|-02.62|+00.81|-03.77", "receptacle_object_id": "Toilet|-00.45|+00.00|-03.05"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SprayBottle|-02.62|+00.81|-03.77", "receptacle_object_id": "Toilet|-00.45|+00.00|-03.05"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "SprayBottle|-02.62|+00.81|-03.77"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "SprayBottle|-02.62|+00.81|-03.77"})]
Error Message: object not found: SprayBottle|-02.62|+00.81|-03.77
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "SprayBottle|-02.62|+00.81|-03.77"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "SprayBottle|-02.62|+00.81|-03.77"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Toilet|-00.45|+00.00|-03.05"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "SprayBottle|-02.62|+00.81|-03.77", "receptacle_object_id": "Toilet|-00.45|+00.00|-03.05"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Toilet|-00.45|+00.00|-03.05"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "SprayBottle|-02.62|+00.81|-03.77", "receptacle_object_id": "Toilet|-00.45|+00.00|-03.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "SprayBottle|-02.62|+00.81|-03.77"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "SprayBottle|-02.62|+00.81|-03.77"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "SprayBottle|-02.62|+00.81|-03.77"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "SprayBottle|-02.62|+00.81|-03.77"})]
Error Message: object not found: SprayBottle|-02.62|+00.81|-03.77
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "SprayBottle|-02.62|+00.81|-03.77"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "SprayBottle|-02.62|+00.81|-03.77", "receptacle_object_id": "Toilet|-00.45|+00.00|-03.05"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "SprayBottle|-02.62|+00.81|-03.77"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "SprayBottle|-02.62|+00.81|-03.77", "receptacle_object_id": "Toilet|-00.45|+00.00|-03.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Toilet|-00.45|+00.00|-03.05"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Toilet|-00.45|+00.00|-03.05"})]
Error Message: object not found: Toilet|-00.45|+00.00|-03.05
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SprayBottle|-02.62|+00.81|-03.77"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SprayBottle|-02.62|+00.81|-03.77"})]
Error Message: object not found: SprayBottle|-02.62|+00.81|-03.77
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Toilet|-00.45|+00.00|-03.05"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Toilet|-00.45|+00.00|-03.05"})]
Error Message: object not found: Toilet|-00.45|+00.00|-03.05
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Toilet|-00.45|+00.00|-03.05"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Toilet|-00.45|+00.00|-03.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Toilet|-00.45|+00.00|-03.05", "receptacle_object_id": "SprayBottle|-02.62|+00.81|-03.77"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Toilet|-00.45|+00.00|-03.05", "receptacle_object_id": "SprayBottle|-02.62|+00.81|-03.77"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 12/50

Permissible Objects:
('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "SprayBottle|-02.62|+00.81|-03.77"})]
Error Message: object not found: SprayBottle|-02.62|+00.81|-03.77
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Toilet|-00.45|+00.00|-03.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "SprayBottle|-02.62|+00.81|-03.77"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Toilet|-00.45|+00.00|-03.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "SprayBottle|-02.62|+00.81|-03.77"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Toilet|-00.45|+00.00|-03.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SprayBottle|-02.62|+00.81|-03.77", "receptacle_object_id": "SprayBottle|-02.62|+00.81|-03.77"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "SprayBottle|-02.62|+00.81|-03.77", "receptacle_object_id": "Toilet|-00.45|+00.00|-03.05"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Toilet|-00.45|+00.00|-03.05", "receptacle_object_id": "SprayBottle|-02.62|+00.81|-03.77"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Toilet|-00.45|+00.00|-03.05", "receptacle_object_id": "Toilet|-00.45|+00.00|-03.05"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "SprayBottle|-02.62|+00.81|-03.77"})]
Error Message: object not found: SprayBottle|-02.62|+00.81|-03.77
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Toilet|-00.45|+00.00|-03.05"})]
Error Message: object not found: Toilet|-00.45|+00.00|-03.05
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "SprayBottle|-02.62|+00.81|-03.77"})]
Error Message: object not found: SprayBottle|-02.62|+00.81|-03.77
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Toilet|-00.45|+00.00|-03.05"})]
Error Message: object not found: Toilet|-00.45|+00.00|-03.05
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "SprayBottle|-02.62|+00.81|-03.77"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Toilet|-00.45|+00.00|-03.05"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')) True
	 State: False

Rollout 16/50
=============================================
Problem Number: 19
Problem ID: train/pick_and_place_simple-SprayBottle-None-Toilet-418/trial_T20190906_190917_905379
Motion plan result: task_success: False
Total Actions Taken: 29
Failed at operator: 2 / 2 operators in task plan.
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 6.1 / 6.1
PutObjectInReceptacle 1.0 2.1 / 2.1
WashObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.900497512437811 18.1 / 20.1
PlaceObject_0 0.607843137254902 3.1 / 5.1
SliceObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 19 / 245, train/pick_and_place_simple-SprayBottle-None-Toilet-418/trial_T20190906_190917_905379
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 19 / 245, train/pick_and_place_simple-SprayBottle-None-Toilet-418/trial_T20190906_190917_905379
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 19 / 245, train/pick_and_place_simple-SprayBottle-None-Toilet-418/trial_T20190906_190917_905379
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 20 / 245, train/pick_and_place_simple-AppleSliced-None-Microwave-14/trial_T20190908_171151_027975
Now attempting to plan for goal: 0 / 2
	Running planner with existing operators + 43 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	to place an apple in the microwave and cut it into three slices.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(and 
		)
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: 
		Failed to parse plan string: 
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 20 / 245, train/pick_and_place_simple-AppleSliced-None-Microwave-14/trial_T20190908_171151_027975
Now attempting to plan for goal: 1 / 2
	Running planner with existing operators + 42 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	to place an apple in the microwave and cut it into three slices.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_6_bar_10_bar_2_bar_30 loc_bar_1_bar__minus_3_bar_2_bar_60)
(takeobject_0 agent1 loc_bar_1_bar__minus_3_bar_2_bar_60 butterknife_1_dot_184_comma_1_dot_184_comma__minus_5_dot_184_comma__minus_5_dot_184_comma_3_dot_6_comma_3_dot_6)
(gotolocation agent1 loc_bar_1_bar__minus_3_bar_2_bar_60 loc_bar_4_bar__minus_3_bar_1_bar_45)
(gotolocation agent1 loc_bar_4_bar__minus_3_bar_1_bar_45 loc_bar_7_bar_9_bar_2_bar_60)
(takeobject_0 agent1 loc_bar_7_bar_9_bar_2_bar_60 apple_7_dot_20150612_comma_7_dot_20150612_comma_6_dot_5446186_comma_6_dot_5446186_comma_0_dot_510050176_comma_0_dot_510050176)
(gotolocation agent1 loc_bar_7_bar_9_bar_2_bar_60 loc_bar_4_bar__minus_3_bar_1_bar_45)
(putobjectinreceptacle agent1 loc_bar_4_bar__minus_3_bar_1_bar_45 appletype apple_7_dot_20150612_comma_7_dot_20150612_comma_6_dot_5446186_comma_6_dot_5446186_comma_0_dot_510050176_comma_0_dot_510050176 microwave_7_dot_008_comma_7_dot_008_comma__minus_3_dot_376_comma__minus_3_dot_376_comma_3_dot_600000144_comma_3_dot_600000144)
(cutobject_1 butterknife_1_dot_184_comma_1_dot_184_comma__minus_5_dot_184_comma__minus_5_dot_184_comma_3_dot_6_comma_3_dot_6 agent1 loc_bar_4_bar__minus_3_bar_1_bar_45 apple_7_dot_20150612_comma_7_dot_20150612_comma_6_dot_5446186_comma_6_dot_5446186_comma_0_dot_510050176_comma_0_dot_510050176)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 20 / 245
Motion planning for: train/pick_and_place_simple-AppleSliced-None-Microwave-14/trial_T20190908_171151_027975
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['butterknife'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['apple'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PutObjectInReceptacle', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['apple', 'microwave'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['apple'], 'is_neg': True}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['microwave', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['apple'], 'is_neg': False}]}

{'action': 'CutObject_1', 'postcondition_ground_predicates': [{'predicate_name': 'isSliced', 'arguments': ['apple'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['butterknife'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation sinkbasin)
(PickupObject apple)
(GotoLocation microwave)
(PutObject apple microwave)
(GotoLocation countertop)
(PickupObject knife)
(GotoLocation apple)
(SliceObject apple)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['apple', 'microwave'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['apple'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['apple'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['butterknife'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('ButterKnife|+00.30|+00.90|-01.30',)]

PERMISSIBLE OBJECT SET:
[('ButterKnife|+00.30|+00.90|-01.30',)]


Permissible Objects:
('ButterKnife|+00.30|+00.90|-01.30',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True

OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['apple'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Apple|+00.46|+00.97|-01.26',),
 ('Apple|+00.46|+00.97|-01.26',),
 ('Apple|+01.80|+00.13|+01.64',),
 ('Apple|+01.80|+00.13|+01.64',),
 ('Apple|+01.03|+00.82|-01.65',),
 ('Apple|+01.03|+00.82|-01.65',)]

PERMISSIBLE OBJECT SET:
[('Apple|+00.46|+00.97|-01.26',),
 ('Apple|+00.46|+00.97|-01.26', 'ButterKnife|+00.30|+00.90|-01.30'),
 ('Apple|+01.80|+00.13|+01.64',),
 ('Apple|+01.80|+00.13|+01.64', 'ButterKnife|+00.30|+00.90|-01.30'),
 ('Apple|+01.03|+00.82|-01.65',),
 ('Apple|+01.03|+00.82|-01.65', 'ButterKnife|+00.30|+00.90|-01.30')]


Permissible Objects:
('Apple|+00.46|+00.97|-01.26',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Apple|+00.46|+00.97|-01.26', 'ButterKnife|+00.30|+00.90|-01.30')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 5/50

Permissible Objects:
('Apple|+01.80|+00.13|+01.64',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Apple|+01.80|+00.13|+01.64', 'ButterKnife|+00.30|+00.90|-01.30')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 5/50

Permissible Objects:
('Apple|+01.03|+00.82|-01.65',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Apple|+01.03|+00.82|-01.65', 'ButterKnife|+00.30|+00.90|-01.30')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 5/50

Permissible Objects:
('Apple|+00.46|+00.97|-01.26',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Error Message: object not found: Apple|+00.46|+00.97|-01.26
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+00.46|+00.97|-01.26", "receptacle_object_id": "Apple|+00.46|+00.97|-01.26"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Error Message: object not found: Apple|+00.46|+00.97|-01.26
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Error Message: object not found: Apple|+00.46|+00.97|-01.26
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Error Message: object not found: Apple|+00.46|+00.97|-01.26|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+00.46|+00.97|-01.26", "receptacle_object_id": "Apple|+00.46|+00.97|-01.26"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Error Message: object not found: Apple|+00.46|+00.97|-01.26|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Error Message: object not found: Apple|+00.46|+00.97|-01.26|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Error Message: Apple_14_Sliced_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Apple|+00.46|+00.97|-01.26', 'ButterKnife|+00.30|+00.90|-01.30')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Error Message: object not found: Apple|+00.46|+00.97|-01.26
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30", "receptacle_object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30", "receptacle_object_id": "Apple|+00.46|+00.97|-01.26"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+00.46|+00.97|-01.26", "receptacle_object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+00.46|+00.97|-01.26", "receptacle_object_id": "Apple|+00.46|+00.97|-01.26"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Error Message: object not found: Apple|+00.46|+00.97|-01.26
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Error Message: object not found: Apple|+00.46|+00.97|-01.26
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Error Message: object not found: Apple|+00.46|+00.97|-01.26|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30", "receptacle_object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30", "receptacle_object_id": "Apple|+00.46|+00.97|-01.26"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+00.46|+00.97|-01.26", "receptacle_object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+00.46|+00.97|-01.26", "receptacle_object_id": "Apple|+00.46|+00.97|-01.26"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Error Message: object not found: Apple|+00.46|+00.97|-01.26|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Error Message: object not found: Apple|+00.46|+00.97|-01.26|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.46|+00.97|-01.26"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Error Message: Apple_14_Sliced_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.46|+00.97|-01.26',)) True
	 State: False

Rollout 32/50

Permissible Objects:
('Apple|+01.80|+00.13|+01.64',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Error Message: object not found: Apple|+01.80|+00.13|+01.64
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.80|+00.13|+01.64", "receptacle_object_id": "Apple|+01.80|+00.13|+01.64"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Error Message: object not found: Apple|+01.80|+00.13|+01.64
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Error Message: object not found: Apple|+01.80|+00.13|+01.64
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Error Message: object not found: Apple|+01.80|+00.13|+01.64|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.80|+00.13|+01.64", "receptacle_object_id": "Apple|+01.80|+00.13|+01.64"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Error Message: object not found: Apple|+01.80|+00.13|+01.64|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Error Message: object not found: Apple|+01.80|+00.13|+01.64|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Error Message: Apple_14_Sliced_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Apple|+01.80|+00.13|+01.64', 'ButterKnife|+00.30|+00.90|-01.30')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Error Message: object not found: Apple|+01.80|+00.13|+01.64
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.80|+00.13|+01.64", "receptacle_object_id": "Apple|+01.80|+00.13|+01.64"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.80|+00.13|+01.64", "receptacle_object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30", "receptacle_object_id": "Apple|+01.80|+00.13|+01.64"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30", "receptacle_object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Error Message: object not found: Apple|+01.80|+00.13|+01.64
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Error Message: object not found: Apple|+01.80|+00.13|+01.64
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Error Message: object not found: Apple|+01.80|+00.13|+01.64|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.80|+00.13|+01.64", "receptacle_object_id": "Apple|+01.80|+00.13|+01.64"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.80|+00.13|+01.64", "receptacle_object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30", "receptacle_object_id": "Apple|+01.80|+00.13|+01.64"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30", "receptacle_object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Error Message: object not found: Apple|+01.80|+00.13|+01.64|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Error Message: object not found: Apple|+01.80|+00.13|+01.64|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Error Message: Apple_14_Sliced_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.80|+00.13|+01.64"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.80|+00.13|+01.64',)) True
	 State: False

Rollout 32/50

Permissible Objects:
('Apple|+01.03|+00.82|-01.65',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Error Message: object not found: Apple|+01.03|+00.82|-01.65
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.03|+00.82|-01.65", "receptacle_object_id": "Apple|+01.03|+00.82|-01.65"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Error Message: object not found: Apple|+01.03|+00.82|-01.65
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Error Message: object not found: Apple|+01.03|+00.82|-01.65
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Error Message: object not found: Apple|+01.03|+00.82|-01.65|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.03|+00.82|-01.65", "receptacle_object_id": "Apple|+01.03|+00.82|-01.65"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Error Message: object not found: Apple|+01.03|+00.82|-01.65|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Error Message: object not found: Apple|+01.03|+00.82|-01.65|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Error Message: Apple_14_Sliced_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Apple|+01.03|+00.82|-01.65', 'ButterKnife|+00.30|+00.90|-01.30')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Error Message: object not found: Apple|+01.03|+00.82|-01.65
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30", "receptacle_object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30", "receptacle_object_id": "Apple|+01.03|+00.82|-01.65"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.03|+00.82|-01.65", "receptacle_object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.03|+00.82|-01.65", "receptacle_object_id": "Apple|+01.03|+00.82|-01.65"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Error Message: object not found: Apple|+01.03|+00.82|-01.65
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Error Message: object not found: Apple|+01.03|+00.82|-01.65
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Error Message: object not found: Apple|+01.03|+00.82|-01.65|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30", "receptacle_object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30", "receptacle_object_id": "Apple|+01.03|+00.82|-01.65"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.03|+00.82|-01.65", "receptacle_object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.03|+00.82|-01.65", "receptacle_object_id": "Apple|+01.03|+00.82|-01.65"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Error Message: object not found: Apple|+01.03|+00.82|-01.65|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Error Message: object not found: ButterKnife|+00.30|+00.90|-01.30
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Error Message: object not found: Apple|+01.03|+00.82|-01.65|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "ButterKnife|+00.30|+00.90|-01.30"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.03|+00.82|-01.65"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Error Message: Apple_14_Sliced_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.03|+00.82|-01.65',)) True
	 State: False

Rollout 32/50
=============================================
Problem Number: 20
Problem ID: train/pick_and_place_simple-AppleSliced-None-Microwave-14/trial_T20190908_171151_027975
Motion plan result: task_success: False
Total Actions Taken: 157
Failed at operator: 2 / 4 operators in task plan.
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 6.1 / 6.1
PutObjectInReceptacle 1.0 2.1 / 2.1
WashObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8642533936651584 19.1 / 22.1
PlaceObject_0 0.607843137254902 3.1 / 5.1
SliceObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 20 / 245, train/pick_and_place_simple-AppleSliced-None-Microwave-14/trial_T20190908_171151_027975
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 20 / 245, train/pick_and_place_simple-AppleSliced-None-Microwave-14/trial_T20190908_171151_027975
Sucessfully found 0 plans for goals.
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 7 / 21 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 21 / 245, train/pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan-23/trial_T20190909_034745_393039
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 43 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	throw away a slice of heated tomato in the trash bin.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	 Plan string: (gotolocation agent1 loc_bar__minus_17_bar__minus_13_bar_2_bar_30 loc_bar__minus_10_bar__minus_12_bar_0_bar_45)
(takeobject_0 agent1 loc_bar__minus_10_bar__minus_12_bar_0_bar_45 knife__minus_10_dot_2110424_comma__minus_10_dot_2110424_comma__minus_9_dot_38343812_comma__minus_9_dot_38343812_comma_3_dot_7862228_comma_3_dot_7862228)
(gotolocation agent1 loc_bar__minus_10_bar__minus_12_bar_0_bar_45 loc_bar__minus_10_bar__minus_15_bar_1_bar_60)
(gotolocation agent1 loc_bar__minus_10_bar__minus_15_bar_1_bar_60 loc_bar__minus_7_bar__minus_6_bar_3_bar_30)
(takeobject_0 agent1 loc_bar__minus_7_bar__minus_6_bar_3_bar_30 tomato__minus_10_dot_6672926_comma__minus_10_dot_6672926_comma__minus_5_dot_69593908_comma__minus_5_dot_69593908_comma_3_dot_9491456_comma_3_dot_9491456)
(cutobject_0 knife__minus_10_dot_2110424_comma__minus_10_dot_2110424_comma__minus_9_dot_38343812_comma__minus_9_dot_38343812_comma_3_dot_7862228_comma_3_dot_7862228 agent1 loc_bar__minus_7_bar__minus_6_bar_3_bar_30 tomato__minus_10_dot_6672926_comma__minus_10_dot_6672926_comma__minus_5_dot_69593908_comma__minus_5_dot_69593908_comma_3_dot_9491456_comma_3_dot_9491456)
(gotolocation agent1 loc_bar__minus_7_bar__minus_6_bar_3_bar_30 loc_bar__minus_10_bar__minus_15_bar_1_bar_60)
(placeobject_0 agent1 loc_bar__minus_10_bar__minus_15_bar_1_bar_60 garbagecan__minus_7_dot_77520848_comma__minus_7_dot_77520848_comma__minus_15_dot_05346204_comma__minus_15_dot_05346204_comma_0_dot_0_comma_0_dot_0 tomato__minus_10_dot_6672926_comma__minus_10_dot_6672926_comma__minus_5_dot_69593908_comma__minus_5_dot_69593908_comma_3_dot_9491456_comma_3_dot_9491456)
(gotolocation agent1 loc_bar__minus_10_bar__minus_15_bar_1_bar_60 loc_bar__minus_5_bar__minus_12_bar_2_bar_15)
(heatobject_1 microwave__minus_5_dot_284_comma__minus_5_dot_284_comma__minus_15_dot_412_comma__minus_15_dot_412_comma_6_dot_084_comma_6_dot_084 agent1 loc_bar__minus_5_bar__minus_12_bar_2_bar_15 tomato__minus_10_dot_6672926_comma__minus_10_dot_6672926_comma__minus_5_dot_69593908_comma__minus_5_dot_69593908_comma_3_dot_9491456_comma_3_dot_9491456)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 21 / 245
Motion planning for: train/pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan-23/trial_T20190909_034745_393039
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['knife'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['tomato'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'CutObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['knife'], 'is_neg': False}]}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['tomato', 'garbagecan'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['garbagecan', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['tomato'], 'is_neg': False}]}

{'action': 'HeatObject_1', 'postcondition_ground_predicates': [{'predicate_name': 'isHot', 'arguments': ['tomato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['microwave', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['tomato'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject butterknife)
(GotoLocation tomato)
(SliceObject tomato)
(GotoLocation countertop)
(PutObject butterknife countertop)
(GotoLocation sinkbasin)
(PickupObject tomato)
(GotoLocation microwave)
(HeatObject tomato)
(GotoLocation garbagecan)
(PutObject tomato garbagecan)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['tomato', 'garbagecan'], 'is_neg': False}

{'predicate_name': 'heatable', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'isHot', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['knife'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Knife|-02.32|+00.95|-01.88',),
 ('Knife|-02.55|+00.95|-01.19',),
 ('Knife|-02.55|+00.95|-02.35',)]

PERMISSIBLE OBJECT SET:
[('Knife|-02.32|+00.95|-01.88',),
 ('Knife|-02.55|+00.95|-01.19',),
 ('Knife|-02.55|+00.95|-02.35',)]


Permissible Objects:
('Knife|-02.32|+00.95|-01.88',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True

OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['tomato'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Tomato|-02.67|+00.99|-01.42',),
 ('Tomato|-02.67|+00.99|-01.42',),
 ('Tomato|-02.67|+00.99|-01.19',),
 ('Tomato|-02.67|+00.99|-01.19',),
 ('Tomato|-00.30|+00.86|-02.01',),
 ('Tomato|-00.30|+00.86|-02.01',)]

PERMISSIBLE OBJECT SET:
[('Tomato|-02.67|+00.99|-01.42',),
 ('Tomato|-02.67|+00.99|-01.42', 'Knife|-02.32|+00.95|-01.88'),
 ('Tomato|-02.67|+00.99|-01.19',),
 ('Tomato|-02.67|+00.99|-01.19', 'Knife|-02.32|+00.95|-01.88'),
 ('Tomato|-00.30|+00.86|-02.01',),
 ('Tomato|-00.30|+00.86|-02.01', 'Knife|-02.32|+00.95|-01.88')]


Permissible Objects:
('Tomato|-02.67|+00.99|-01.42',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Tomato|-02.67|+00.99|-01.42', 'Knife|-02.32|+00.95|-01.88')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 5/50

Permissible Objects:
('Tomato|-02.67|+00.99|-01.19',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Tomato|-02.67|+00.99|-01.19', 'Knife|-02.32|+00.95|-01.88')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 5/50

Permissible Objects:
('Tomato|-00.30|+00.86|-02.01',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Tomato|-00.30|+00.86|-02.01', 'Knife|-02.32|+00.95|-01.88')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-02.32|+00.95|-01.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 5/50

Permissible Objects:
('Tomato|-02.67|+00.99|-01.42',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Error Message: object not found: Tomato|-02.67|+00.99|-01.42
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.67|+00.99|-01.42", "receptacle_object_id": "Tomato|-02.67|+00.99|-01.42"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Error Message: object not found: Tomato|-02.67|+00.99|-01.42
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Error Message: object not found: Tomato|-02.67|+00.99|-01.42
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Error Message: object not found: Tomato|-02.67|+00.99|-01.42|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.67|+00.99|-01.42", "receptacle_object_id": "Tomato|-02.67|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Error Message: object not found: Tomato|-02.67|+00.99|-01.42|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Error Message: object not found: Tomato|-02.67|+00.99|-01.42|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Error Message: Tomato_23_Slice_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Tomato|-02.67|+00.99|-01.42', 'Knife|-02.32|+00.95|-01.88')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Error Message: object not found: Tomato|-02.67|+00.99|-01.42
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.67|+00.99|-01.42", "receptacle_object_id": "Tomato|-02.67|+00.99|-01.42"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.67|+00.99|-01.42", "receptacle_object_id": "Knife|-02.32|+00.95|-01.88"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-02.32|+00.95|-01.88", "receptacle_object_id": "Tomato|-02.67|+00.99|-01.42"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-02.32|+00.95|-01.88", "receptacle_object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Error Message: object not found: Tomato|-02.67|+00.99|-01.42
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Error Message: object not found: Tomato|-02.67|+00.99|-01.42
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Error Message: object not found: Tomato|-02.67|+00.99|-01.42|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.67|+00.99|-01.42", "receptacle_object_id": "Tomato|-02.67|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.67|+00.99|-01.42", "receptacle_object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-02.32|+00.95|-01.88", "receptacle_object_id": "Tomato|-02.67|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-02.32|+00.95|-01.88", "receptacle_object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Error Message: object not found: Tomato|-02.67|+00.99|-01.42|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Error Message: object not found: Tomato|-02.67|+00.99|-01.42|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Error Message: Tomato_23_Slice_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.42"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.42',)) True
	 State: False

Rollout 32/50

Permissible Objects:
('Tomato|-02.67|+00.99|-01.19',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Error Message: object not found: Tomato|-02.67|+00.99|-01.19
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.67|+00.99|-01.19", "receptacle_object_id": "Tomato|-02.67|+00.99|-01.19"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Error Message: object not found: Tomato|-02.67|+00.99|-01.19
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Error Message: object not found: Tomato|-02.67|+00.99|-01.19
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Error Message: object not found: Tomato|-02.67|+00.99|-01.19|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.67|+00.99|-01.19", "receptacle_object_id": "Tomato|-02.67|+00.99|-01.19"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Error Message: object not found: Tomato|-02.67|+00.99|-01.19|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Error Message: object not found: Tomato|-02.67|+00.99|-01.19|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Error Message: Tomato_23_Slice_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Tomato|-02.67|+00.99|-01.19', 'Knife|-02.32|+00.95|-01.88')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Error Message: object not found: Tomato|-02.67|+00.99|-01.19
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-02.32|+00.95|-01.88", "receptacle_object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-02.32|+00.95|-01.88", "receptacle_object_id": "Tomato|-02.67|+00.99|-01.19"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.67|+00.99|-01.19", "receptacle_object_id": "Knife|-02.32|+00.95|-01.88"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.67|+00.99|-01.19", "receptacle_object_id": "Tomato|-02.67|+00.99|-01.19"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Error Message: object not found: Tomato|-02.67|+00.99|-01.19
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Error Message: object not found: Tomato|-02.67|+00.99|-01.19
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Error Message: object not found: Tomato|-02.67|+00.99|-01.19|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-02.32|+00.95|-01.88", "receptacle_object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-02.32|+00.95|-01.88", "receptacle_object_id": "Tomato|-02.67|+00.99|-01.19"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.67|+00.99|-01.19", "receptacle_object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.67|+00.99|-01.19", "receptacle_object_id": "Tomato|-02.67|+00.99|-01.19"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Error Message: object not found: Tomato|-02.67|+00.99|-01.19|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Error Message: object not found: Tomato|-02.67|+00.99|-01.19|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.67|+00.99|-01.19"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Error Message: Tomato_23_Slice_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.67|+00.99|-01.19',)) True
	 State: False

Rollout 32/50

Permissible Objects:
('Tomato|-00.30|+00.86|-02.01',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Error Message: object not found: Tomato|-00.30|+00.86|-02.01
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.30|+00.86|-02.01", "receptacle_object_id": "Tomato|-00.30|+00.86|-02.01"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Error Message: object not found: Tomato|-00.30|+00.86|-02.01
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Error Message: object not found: Tomato|-00.30|+00.86|-02.01
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Error Message: object not found: Tomato|-00.30|+00.86|-02.01|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.30|+00.86|-02.01", "receptacle_object_id": "Tomato|-00.30|+00.86|-02.01"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Error Message: object not found: Tomato|-00.30|+00.86|-02.01|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Error Message: object not found: Tomato|-00.30|+00.86|-02.01|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Error Message: Tomato_23_Slice_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Tomato|-00.30|+00.86|-02.01', 'Knife|-02.32|+00.95|-01.88')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Error Message: object not found: Tomato|-00.30|+00.86|-02.01
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-02.32|+00.95|-01.88", "receptacle_object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-02.32|+00.95|-01.88", "receptacle_object_id": "Tomato|-00.30|+00.86|-02.01"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.30|+00.86|-02.01", "receptacle_object_id": "Knife|-02.32|+00.95|-01.88"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.30|+00.86|-02.01", "receptacle_object_id": "Tomato|-00.30|+00.86|-02.01"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Error Message: object not found: Tomato|-00.30|+00.86|-02.01
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Error Message: object not found: Tomato|-00.30|+00.86|-02.01
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Error Message: object not found: Tomato|-00.30|+00.86|-02.01|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-02.32|+00.95|-01.88", "receptacle_object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-02.32|+00.95|-01.88", "receptacle_object_id": "Tomato|-00.30|+00.86|-02.01"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.30|+00.86|-02.01", "receptacle_object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.30|+00.86|-02.01", "receptacle_object_id": "Tomato|-00.30|+00.86|-02.01"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Error Message: object not found: Tomato|-00.30|+00.86|-02.01|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Error Message: object not found: Knife|-02.32|+00.95|-01.88
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Error Message: object not found: Tomato|-00.30|+00.86|-02.01|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|-02.32|+00.95|-01.88"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.30|+00.86|-02.01"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Error Message: Tomato_23_Slice_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-00.30|+00.86|-02.01',)) True
	 State: False

Rollout 32/50
=============================================
Problem Number: 21
Problem ID: train/pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan-23/trial_T20190909_034745_393039
Motion plan result: task_success: False
Total Actions Taken: 157
Failed at operator: 2 / 5 operators in task plan.
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 6.1 / 6.1
PutObjectInReceptacle 1.0 2.1 / 2.1
WashObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ChillObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8340248962655602 20.1 / 24.1
PlaceObject_0 0.607843137254902 3.1 / 5.1
SliceObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 21 / 245, train/pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan-23/trial_T20190909_034745_393039
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 21 / 245, train/pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan-23/trial_T20190909_034745_393039
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 21 / 245, train/pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan-23/trial_T20190909_034745_393039
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 22 / 245, train/pick_clean_then_place_in_recep-SoapBar-None-GarbageCan-406/trial_T20190907_015904_010057
	...no goals, skipping.
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 22 / 245, train/pick_clean_then_place_in_recep-SoapBar-None-GarbageCan-406/trial_T20190907_015904_010057
	...no goals, skipping.
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 22 / 245, train/pick_clean_then_place_in_recep-SoapBar-None-GarbageCan-406/trial_T20190907_015904_010057
	...no goals, skipping.
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 22 / 245, train/pick_clean_then_place_in_recep-SoapBar-None-GarbageCan-406/trial_T20190907_015904_010057
	...no goals, skipping.
Sucessfully found 0 plans for goals.
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 7 / 23 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 23 / 245, train/pick_cool_then_place_in_recep-Bread-None-CounterTop-7/trial_T20190909_021904_818116
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 44 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'HeatObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	cool bread in fridge.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_12_bar_2_bar_3_bar_30 loc_bar_0_bar_5_bar_0_bar_60)
(gotolocation agent1 loc_bar_0_bar_5_bar_0_bar_60 loc_bar__minus_4_bar_0_bar_3_bar_45)
(takeobject_0 agent1 loc_bar__minus_4_bar_0_bar_3_bar_45 bread__minus_6_dot_95524168_comma__minus_6_dot_95524168_comma_0_dot_1512942316_comma_0_dot_1512942316_comma_3_dot_982030152_comma_3_dot_982030152)
(gotolocation agent1 loc_bar__minus_4_bar_0_bar_3_bar_45 loc_bar_0_bar_5_bar_0_bar_60)
(chillobject_1 fridge__minus_0_dot_14_comma__minus_0_dot_14_comma_8_dot_708_comma_8_dot_708_comma_0_dot_0_comma_0_dot_0 agent1 loc_bar_0_bar_5_bar_0_bar_60 bread__minus_6_dot_95524168_comma__minus_6_dot_95524168_comma_0_dot_1512942316_comma_0_dot_1512942316_comma_3_dot_982030152_comma_3_dot_982030152)
(putobjectinreceptacle agent1 loc_bar_0_bar_5_bar_0_bar_60 breadtype bread__minus_6_dot_95524168_comma__minus_6_dot_95524168_comma_0_dot_1512942316_comma_0_dot_1512942316_comma_3_dot_982030152_comma_3_dot_982030152 fridge__minus_0_dot_14_comma__minus_0_dot_14_comma_8_dot_708_comma_8_dot_708_comma_0_dot_0_comma_0_dot_0)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 23 / 245
Motion planning for: train/pick_cool_then_place_in_recep-Bread-None-CounterTop-7/trial_T20190909_021904_818116
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['bread'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'ChillObject_1', 'postcondition_ground_predicates': [{'predicate_name': 'isCool', 'arguments': ['bread'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['fridge', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['bread'], 'is_neg': False}]}

{'action': 'PutObjectInReceptacle', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['bread', 'fridge'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['bread'], 'is_neg': True}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['fridge', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['bread'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject bread)
(GotoLocation fridge)
(CoolObject bread)
(GotoLocation countertop)
(PutObject bread countertop)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['bread', 'countertop'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['bread'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['bread'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['bread'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Bread|-01.74|+01.00|+00.04',)]

PERMISSIBLE OBJECT SET:
[('Bread|-01.74|+01.00|+00.04',)]


Permissible Objects:
('Bread|-01.74|+01.00|+00.04',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bread|-01.74|+01.00|+00.04"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bread|-01.74|+01.00|+00.04"})]
Action feasible: True

OPERATOR:
{'action': 'ChillObject_1',
 'postcondition_ground_predicates': [{'arguments': ['bread'],
                                      'is_neg': False,
                                      'predicate_name': 'isCool'}],
 'precondition_ground_predicates': [{'arguments': ['fridge', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['bread'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Bread|-01.74|+01.00|+00.04',), ('Bread|-01.74|+01.00|+00.04',)]

PERMISSIBLE OBJECT SET:
[('Bread|-01.74|+01.00|+00.04',),
 ('Bread|-01.74|+01.00|+00.04', 'Fridge|-00.04|+00.00|+02.18')]


Permissible Objects:
('Bread|-01.74|+01.00|+00.04',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Bread|-01.74|+01.00|+00.04"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Bread|-01.74|+01.00|+00.04"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Bread|-01.74|+01.00|+00.04',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Bread|-01.74|+01.00|+00.04', 'Fridge|-00.04|+00.00|+02.18')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-00.04|+00.00|+02.18"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-00.04|+00.00|+02.18"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Bread|-01.74|+01.00|+00.04',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Bread|-01.74|+01.00|+00.04"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Bread|-01.74|+01.00|+00.04"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Bread|-01.74|+01.00|+00.04',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Bread|-01.74|+01.00|+00.04", "receptacle_object_id": "Fridge|-00.04|+00.00|+02.18"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-00.04|+00.00|+02.18"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Bread|-01.74|+01.00|+00.04", "receptacle_object_id": "Fridge|-00.04|+00.00|+02.18"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-00.04|+00.00|+02.18"})]
Error Message: Target openable Receptacle is CLOSED, can't place if target is not open!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Bread|-01.74|+01.00|+00.04',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-00.04|+00.00|+02.18"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Bread|-01.74|+01.00|+00.04", "receptacle_object_id": "Fridge|-00.04|+00.00|+02.18"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-00.04|+00.00|+02.18"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-00.04|+00.00|+02.18"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Bread|-01.74|+01.00|+00.04", "receptacle_object_id": "Fridge|-00.04|+00.00|+02.18"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-00.04|+00.00|+02.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Bread|-01.74|+01.00|+00.04',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Bread|-01.74|+01.00|+00.04',)) True
	 State: False

Action feasible: True

OPERATOR:
{'action': 'PutObjectInReceptacle',
 'postcondition_ground_predicates': [{'arguments': ['bread', 'fridge'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'},
                                     {'arguments': ['bread'],
                                      'is_neg': True,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': [{'arguments': ['fridge', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['bread'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Bread|-01.74|+01.00|+00.04', 'Fridge|-00.04|+00.00|+02.18')]

PERMISSIBLE OBJECT SET:
[('Bread|-01.74|+01.00|+00.04', 'Fridge|-00.04|+00.00|+02.18')]


Permissible Objects:
('Bread|-01.74|+01.00|+00.04', 'Fridge|-00.04|+00.00|+02.18')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Bread|-01.74|+01.00|+00.04", "receptacle_object_id": "Fridge|-00.04|+00.00|+02.18"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Bread|-01.74|+01.00|+00.04", "receptacle_object_id": "Fridge|-00.04|+00.00|+02.18"})]
Exception: list index out of range
Action feasible: False

	 Fluent(predicate='inReceptacle', objects=('Bread|-01.74|+01.00|+00.04', 'CounterTop|-01.87|+00.95|-00.61')) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Bread|-01.74|+01.00|+00.04', 'CounterTop|+01.65|+00.95|-01.53')) True
	 State: False

GOAL CHECK FUNCTION FAILED!
=============================================
Problem Number: 23
Problem ID: train/pick_cool_then_place_in_recep-Bread-None-CounterTop-7/trial_T20190909_021904_818116
Motion plan result: task_success: False
Total Actions Taken: 7
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 6.1 / 6.1
PutObjectInReceptacle 1.0 3.1 / 3.1
WashObject_1 1.0 1.1 / 1.1
ChillObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
CutObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
HeatObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8406374501992032 21.1 / 25.1
PlaceObject_0 0.607843137254902 3.1 / 5.1
SliceObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 23 / 245, train/pick_cool_then_place_in_recep-Bread-None-CounterTop-7/trial_T20190909_021904_818116
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 23 / 245, train/pick_cool_then_place_in_recep-Bread-None-CounterTop-7/trial_T20190909_021904_818116
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 23 / 245, train/pick_cool_then_place_in_recep-Bread-None-CounterTop-7/trial_T20190909_021904_818116
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 24 / 245, train/pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan-24/trial_T20190907_225734_462221
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 44 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	heat a slice of tomato and place it in the trash can.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_6_bar_9_bar_3_bar_30 loc_bar_2_bar_12_bar_1_bar_60)
(gotolocation agent1 loc_bar_2_bar_12_bar_1_bar_60 loc_bar__minus_3_bar_8_bar_2_bar_60)
(takeobject_0 agent1 loc_bar__minus_3_bar_8_bar_2_bar_60 tomato__minus_2_dot_6281164_comma__minus_2_dot_6281164_comma_6_dot_22263716_comma_6_dot_22263716_comma_3_dot_876776932_comma_3_dot_876776932)
(gotolocation agent1 loc_bar__minus_3_bar_8_bar_2_bar_60 loc_bar_2_bar_12_bar_1_bar_60)
(placeobject_0 agent1 loc_bar_2_bar_12_bar_1_bar_60 garbagecan_3_dot_7260784_comma_3_dot_7260784_comma_11_dot_67397116_comma_11_dot_67397116_comma_0_dot_0_comma_0_dot_0 tomato__minus_2_dot_6281164_comma__minus_2_dot_6281164_comma_6_dot_22263716_comma_6_dot_22263716_comma_3_dot_876776932_comma_3_dot_876776932)
(gotolocation agent1 loc_bar_2_bar_12_bar_1_bar_60 loc_bar__minus_4_bar_8_bar_2_bar_45)
(takeobject_0 agent1 loc_bar__minus_4_bar_8_bar_2_bar_45 knife__minus_3_dot_6850816_comma__minus_3_dot_6850816_comma_5_dot_398312_comma_5_dot_398312_comma_3_dot_694805384_comma_3_dot_694805384)
(gotolocation agent1 loc_bar__minus_4_bar_8_bar_2_bar_45 loc_bar__minus_3_bar_8_bar_2_bar_60)
(cutobject_0 knife__minus_3_dot_6850816_comma__minus_3_dot_6850816_comma_5_dot_398312_comma_5_dot_398312_comma_3_dot_694805384_comma_3_dot_694805384 agent1 loc_bar__minus_3_bar_8_bar_2_bar_60 tomato__minus_2_dot_6281164_comma__minus_2_dot_6281164_comma_6_dot_22263716_comma_6_dot_22263716_comma_3_dot_876776932_comma_3_dot_876776932)
(gotolocation agent1 loc_bar__minus_3_bar_8_bar_2_bar_60 loc_bar__minus_6_bar_13_bar_0_bar_30)
(heatobject_1 microwave__minus_6_dot_116_comma__minus_6_dot_116_comma_15_dot_5288_comma_15_dot_5288_comma_5_dot_00112532_comma_5_dot_00112532 agent1 loc_bar__minus_6_bar_13_bar_0_bar_30 tomato__minus_2_dot_6281164_comma__minus_2_dot_6281164_comma_6_dot_22263716_comma_6_dot_22263716_comma_3_dot_876776932_comma_3_dot_876776932)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 24 / 245
Motion planning for: train/pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan-24/trial_T20190907_225734_462221
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['tomato'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['tomato', 'garbagecan'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['garbagecan', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['tomato'], 'is_neg': False}]}

{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['knife'], 'is_neg': False}], 'precondition_ground_predicates': []}

CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
{'action': 'CutObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['knife'], 'is_neg': False}]}

{'action': 'HeatObject_1', 'postcondition_ground_predicates': [{'predicate_name': 'isHot', 'arguments': ['tomato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['microwave', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['tomato'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation diningtable)
(PickupObject butterknife)
(GotoLocation tomato)
(SliceObject tomato)
(GotoLocation microwave)
(PutObject butterknife microwave)
(GotoLocation diningtable)
(PickupObject tomato)
(GotoLocation microwave)
(HeatObject tomato)
(GotoLocation garbagecan)
(PutObject tomato garbagecan)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['tomato', 'garbagecan'], 'is_neg': False}

{'predicate_name': 'heatable', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'isHot', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['tomato'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Tomato|-00.66|+00.97|+01.56',)]

PERMISSIBLE OBJECT SET:
[('Tomato|-00.66|+00.97|+01.56',)]


Permissible Objects:
('Tomato|-00.66|+00.97|+01.56',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True

OPERATOR:
{'action': 'PlaceObject_0',
 'postcondition_ground_predicates': [{'arguments': ['tomato', 'garbagecan'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'}],
 'precondition_ground_predicates': [{'arguments': ['garbagecan', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['tomato'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Tomato|-00.66|+00.97|+01.56', 'GarbageCan|+00.93|+00.00|+02.92')]

PERMISSIBLE OBJECT SET:
[('Tomato|-00.66|+00.97|+01.56', 'GarbageCan|+00.93|+00.00|+02.92')]


Permissible Objects:
('Tomato|-00.66|+00.97|+01.56', 'GarbageCan|+00.93|+00.00|+02.92')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "GarbageCan|+00.93|+00.00|+02.92"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "GarbageCan|+00.93|+00.00|+02.92"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Tomato|-00.66|+00.97|+01.56', 'GarbageCan|+00.93|+00.00|+02.92')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "GarbageCan|+00.93|+00.00|+02.92"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "GarbageCan|+00.93|+00.00|+02.92"})]
Action feasible: True

OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['knife'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Knife|-00.92|+00.92|+01.35',),
 ('Knife|-00.92|+00.92|+01.35',),
 ('Knife|-00.92|+00.92|+01.35',),
 ('Knife|-01.34|+00.85|+03.55',),
 ('Knife|-01.34|+00.85|+03.55',),
 ('Knife|-01.34|+00.85|+03.55',)]

PERMISSIBLE OBJECT SET:
[('Knife|-00.92|+00.92|+01.35',),
 ('Knife|-00.92|+00.92|+01.35', 'GarbageCan|+00.93|+00.00|+02.92'),
 ('Knife|-00.92|+00.92|+01.35',
  'GarbageCan|+00.93|+00.00|+02.92',
  'Tomato|-00.66|+00.97|+01.56'),
 ('Knife|-01.34|+00.85|+03.55',),
 ('Knife|-01.34|+00.85|+03.55', 'GarbageCan|+00.93|+00.00|+02.92'),
 ('Knife|-01.34|+00.85|+03.55',
  'GarbageCan|+00.93|+00.00|+02.92',
  'Tomato|-00.66|+00.97|+01.56')]


Permissible Objects:
('Knife|-00.92|+00.92|+01.35',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Action feasible: True

OPERATOR:
{'action': 'CutObject_0',
 'postcondition_ground_predicates': [{'arguments': ['tomato'],
                                      'is_neg': False,
                                      'predicate_name': 'isSliced'}],
 'precondition_ground_predicates': [{'arguments': ['knife'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Tomato|-00.66|+00.97|+01.56',),
 ('Tomato|-00.66|+00.97|+01.56',),
 ('Tomato|-00.66|+00.97|+01.56',),
 ('Tomato|-00.66|+00.97|+01.56',),
 ('Tomato|-00.66|+00.97|+01.56',),
 ('Tomato|-00.66|+00.97|+01.56',)]

PERMISSIBLE OBJECT SET:
[('Tomato|-00.66|+00.97|+01.56',),
 ('Tomato|-00.66|+00.97|+01.56', 'Knife|-00.92|+00.92|+01.35'),
 ('Tomato|-00.66|+00.97|+01.56',
  'Knife|-00.92|+00.92|+01.35',
  'GarbageCan|+00.93|+00.00|+02.92'),
 ('Tomato|-00.66|+00.97|+01.56', 'Knife|-01.34|+00.85|+03.55'),
 ('Tomato|-00.66|+00.97|+01.56',
  'Knife|-01.34|+00.85|+03.55',
  'Knife|-00.92|+00.92|+01.35'),
 ('Tomato|-00.66|+00.97|+01.56',
  'Knife|-01.34|+00.85|+03.55',
  'Knife|-00.92|+00.92|+01.35',
  'GarbageCan|+00.93|+00.00|+02.92')]


Permissible Objects:
('Tomato|-00.66|+00.97|+01.56',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True

OPERATOR:
{'action': 'HeatObject_1',
 'postcondition_ground_predicates': [{'arguments': ['tomato'],
                                      'is_neg': False,
                                      'predicate_name': 'isHot'}],
 'precondition_ground_predicates': [{'arguments': ['microwave', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['tomato'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Tomato|-00.66|+00.97|+01.56',),
 ('Tomato|-00.66|+00.97|+01.56',),
 ('Tomato|-00.66|+00.97|+01.56',),
 ('Tomato|-00.66|+00.97|+01.56',)]

PERMISSIBLE OBJECT SET:
[('Tomato|-00.66|+00.97|+01.56',),
 ('Tomato|-00.66|+00.97|+01.56', 'Microwave|-01.53|+01.25|+03.88'),
 ('Tomato|-00.66|+00.97|+01.56',
  'Microwave|-01.53|+01.25|+03.88',
  'Knife|-00.92|+00.92|+01.35'),
 ('Tomato|-00.66|+00.97|+01.56',
  'Microwave|-01.53|+01.25|+03.88',
  'Knife|-00.92|+00.92|+01.35',
  'GarbageCan|+00.93|+00.00|+02.92')]


Permissible Objects:
('Tomato|-00.66|+00.97|+01.56',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 3/50

Permissible Objects:
('Tomato|-00.66|+00.97|+01.56', 'Microwave|-01.53|+01.25|+03.88')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 18/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 19/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 20/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 21/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 22/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 23/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 24/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 25/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-01.53|+01.25|+03.88", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-01.53|+01.25|+03.88", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 26/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 27/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 28/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 29/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 30/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 31/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 32/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 33/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 34/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 35/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 36/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 37/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 38/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 39/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 40/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 41/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 42/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 43/50

Permissible Objects:
('Tomato|-00.66|+00.97|+01.56', 'Microwave|-01.53|+01.25|+03.88', 'Knife|-00.92|+00.92|+01.35')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Error Message: object not found: Knife|-00.92|+00.92|+01.35
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-00.92|+00.92|+01.35"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-00.92|+00.92|+01.35"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-00.92|+00.92|+01.35"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-00.92|+00.92|+01.35"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-00.92|+00.92|+01.35"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-00.92|+00.92|+01.35"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Error Message: object not found: Knife|-00.92|+00.92|+01.35
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Knife|-00.92|+00.92|+01.35
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-00.92|+00.92|+01.35", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-00.92|+00.92|+01.35", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: Target openable Receptacle is CLOSED, can't place if target is not open!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 18/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-01.53|+01.25|+03.88", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-01.53|+01.25|+03.88", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 19/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-00.92|+00.92|+01.35", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-00.92|+00.92|+01.35", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 20/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-01.53|+01.25|+03.88", "receptacle_object_id": "Knife|-00.92|+00.92|+01.35"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-01.53|+01.25|+03.88", "receptacle_object_id": "Knife|-00.92|+00.92|+01.35"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 21/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Knife|-00.92|+00.92|+01.35"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Knife|-00.92|+00.92|+01.35"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 22/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 23/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Knife|-00.92|+00.92|+01.35
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 24/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 25/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 26/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 27/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 28/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Knife|-00.92|+00.92|+01.35"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 29/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-00.92|+00.92|+01.35", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-00.92|+00.92|+01.35", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 30/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 31/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 32/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 33/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 34/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 35/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 36/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 37/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 38/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 39/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-00.92|+00.92|+01.35", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-00.92|+00.92|+01.35", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 40/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 41/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 42/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 43/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 44/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Knife|-00.92|+00.92|+01.35
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 45/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 46/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Knife|-00.92|+00.92|+01.35
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 47/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-00.92|+00.92|+01.35", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-00.92|+00.92|+01.35", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 48/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 49/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False


Permissible Objects:
('Tomato|-00.66|+00.97|+01.56', 'Microwave|-01.53|+01.25|+03.88', 'Knife|-00.92|+00.92|+01.35', 'GarbageCan|+00.93|+00.00|+02.92')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Error Message: object not found: Knife|-00.92|+00.92|+01.35
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "GarbageCan|+00.93|+00.00|+02.92"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "GarbageCan|+00.93|+00.00|+02.92"})]
Error Message: object not found: GarbageCan|+00.93|+00.00|+02.92
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-00.92|+00.92|+01.35"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-00.92|+00.92|+01.35"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "GarbageCan|+00.93|+00.00|+02.92"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "GarbageCan|+00.93|+00.00|+02.92"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "GarbageCan|+00.93|+00.00|+02.92"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "GarbageCan|+00.93|+00.00|+02.92"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-00.92|+00.92|+01.35"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-00.92|+00.92|+01.35"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-00.92|+00.92|+01.35"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-00.92|+00.92|+01.35"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Error Message: object not found: Knife|-00.92|+00.92|+01.35
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "GarbageCan|+00.93|+00.00|+02.92"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "GarbageCan|+00.93|+00.00|+02.92"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "GarbageCan|+00.93|+00.00|+02.92"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "GarbageCan|+00.93|+00.00|+02.92"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "GarbageCan|+00.93|+00.00|+02.92"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "GarbageCan|+00.93|+00.00|+02.92"})]
Error Message: object not found: GarbageCan|+00.93|+00.00|+02.92
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 18/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Knife|-00.92|+00.92|+01.35
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 19/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "GarbageCan|+00.93|+00.00|+02.92"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "GarbageCan|+00.93|+00.00|+02.92"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: GarbageCan|+00.93|+00.00|+02.92
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 20/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 21/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-00.92|+00.92|+01.35", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-00.92|+00.92|+01.35", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: Target openable Receptacle is CLOSED, can't place if target is not open!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 22/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "GarbageCan|+00.93|+00.00|+02.92", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "GarbageCan|+00.93|+00.00|+02.92", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 23/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-01.53|+01.25|+03.88", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-01.53|+01.25|+03.88", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 24/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-00.92|+00.92|+01.35", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-00.92|+00.92|+01.35", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 25/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "GarbageCan|+00.93|+00.00|+02.92", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "GarbageCan|+00.93|+00.00|+02.92", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 26/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-01.53|+01.25|+03.88", "receptacle_object_id": "Knife|-00.92|+00.92|+01.35"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-01.53|+01.25|+03.88", "receptacle_object_id": "Knife|-00.92|+00.92|+01.35"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 27/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Knife|-00.92|+00.92|+01.35"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Knife|-00.92|+00.92|+01.35"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 28/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "GarbageCan|+00.93|+00.00|+02.92", "receptacle_object_id": "Knife|-00.92|+00.92|+01.35"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "GarbageCan|+00.93|+00.00|+02.92", "receptacle_object_id": "Knife|-00.92|+00.92|+01.35"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 29/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-01.53|+01.25|+03.88", "receptacle_object_id": "GarbageCan|+00.93|+00.00|+02.92"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-01.53|+01.25|+03.88", "receptacle_object_id": "GarbageCan|+00.93|+00.00|+02.92"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 30/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "GarbageCan|+00.93|+00.00|+02.92"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "GarbageCan|+00.93|+00.00|+02.92"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 31/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-00.92|+00.92|+01.35", "receptacle_object_id": "GarbageCan|+00.93|+00.00|+02.92"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-00.92|+00.92|+01.35", "receptacle_object_id": "GarbageCan|+00.93|+00.00|+02.92"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 32/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 33/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Knife|-00.92|+00.92|+01.35
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 34/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "GarbageCan|+00.93|+00.00|+02.92"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "GarbageCan|+00.93|+00.00|+02.92"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: GarbageCan|+00.93|+00.00|+02.92
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 35/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 36/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 37/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 38/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-00.92|+00.92|+01.35"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 39/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "GarbageCan|+00.93|+00.00|+02.92"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "GarbageCan|+00.93|+00.00|+02.92"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 40/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Knife|-00.92|+00.92|+01.35"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 41/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "GarbageCan|+00.93|+00.00|+02.92"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "GarbageCan|+00.93|+00.00|+02.92"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 42/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-00.92|+00.92|+01.35", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-00.92|+00.92|+01.35", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 43/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-00.92|+00.92|+01.35", "receptacle_object_id": "GarbageCan|+00.93|+00.00|+02.92"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-00.92|+00.92|+01.35", "receptacle_object_id": "GarbageCan|+00.93|+00.00|+02.92"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 44/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "GarbageCan|+00.93|+00.00|+02.92", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "GarbageCan|+00.93|+00.00|+02.92", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 45/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "GarbageCan|+00.93|+00.00|+02.92", "receptacle_object_id": "Knife|-00.92|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "GarbageCan|+00.93|+00.00|+02.92", "receptacle_object_id": "Knife|-00.92|+00.92|+01.35"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 46/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 47/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 48/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 49/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False


Permissible Objects:
('Tomato|-00.66|+00.97|+01.56',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: Tomato_24_Slice_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Tomato|-00.66|+00.97|+01.56', 'Microwave|-01.53|+01.25|+03.88')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-01.53|+01.25|+03.88", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-01.53|+01.25|+03.88", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Error Message: can't toggle object off if it's already off!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Error Message: Microwave_1301d5c7 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Error Message: Tomato_24_Slice_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-01.53|+01.25|+03.88", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-01.53|+01.25|+03.88", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: Target must be closed to Toggle On!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: can't toggle object off if it's already off!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: Microwave_1301d5c7 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: Tomato_24_Slice_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 32/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: Target must be OFF to open!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 33/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 34/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 35/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 36/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 37/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 38/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-01.53|+01.25|+03.88", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 39/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-01.53|+01.25|+03.88", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 40/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 41/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.66|+00.97|+01.56", "receptacle_object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 42/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: can't toggle object on if it's already on!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 43/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 44/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 45/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 46/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: Microwave_1301d5c7 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 47/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: Tomato_24_Slice_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 48/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Rollout 49/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-01.53|+01.25|+03.88"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.66|+00.97|+01.56"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Error Message: object not found: Tomato|-00.66|+00.97|+01.56|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isHot', objects=('Tomato|-00.66|+00.97|+01.56',)) True
	 State: False

Exceeded max number of trajs!
=============================================
Problem Number: 24
Problem ID: train/pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan-24/trial_T20190907_225734_462221
Motion plan result: task_success: False
Total Actions Taken: 208
Failed at operator: 5 / 5 operators in task plan.
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 6.1 / 6.1
PutObjectInReceptacle 1.0 3.1 / 3.1
WashObject_1 1.0 1.1 / 1.1
CutObject_0 1.0 1.1 / 1.1
ChillObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ChillObject_2 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8523985239852399 23.1 / 27.1
PlaceObject_0 0.6721311475409836 4.1 / 6.1
SliceObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 24 / 245, train/pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan-24/trial_T20190907_225734_462221
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 24 / 245, train/pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan-24/trial_T20190907_225734_462221
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 24 / 245, train/pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan-24/trial_T20190907_225734_462221
Sucessfully found 0 plans for goals.
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 7 / 25 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 25 / 245, train/pick_cool_then_place_in_recep-Mug-None-Cabinet-6/trial_T20190908_224333_300425
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 42 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	place a chilled mug in a cabinet.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_2_bar_5_bar_1_bar_30 loc_bar_2_bar__minus_4_bar_2_bar__minus_30)
(gotolocation agent1 loc_bar_2_bar__minus_4_bar_2_bar__minus_30 loc_bar_3_bar__minus_4_bar_1_bar_45)
(takeobject_0 agent1 loc_bar_3_bar__minus_4_bar_1_bar_45 mug_5_dot_38226652_comma_5_dot_38226652_comma__minus_4_dot_7092786_comma__minus_4_dot_7092786_comma_3_dot_6545204_comma_3_dot_6545204)
(gotolocation agent1 loc_bar_3_bar__minus_4_bar_1_bar_45 loc_bar_2_bar__minus_4_bar_2_bar__minus_30)
(putobjectinreceptacle agent1 loc_bar_2_bar__minus_4_bar_2_bar__minus_30 mugtype mug_5_dot_38226652_comma_5_dot_38226652_comma__minus_4_dot_7092786_comma__minus_4_dot_7092786_comma_3_dot_6545204_comma_3_dot_6545204 cabinet_0_dot_596_comma_0_dot_596_comma__minus_6_dot_4136_comma__minus_6_dot_4136_comma_8_dot_03599928_comma_8_dot_03599928)
(takeobject_0 agent1 loc_bar_2_bar__minus_4_bar_2_bar__minus_30 mug_5_dot_38226652_comma_5_dot_38226652_comma__minus_4_dot_7092786_comma__minus_4_dot_7092786_comma_3_dot_6545204_comma_3_dot_6545204)
(chillobject_2 agent1 loc_bar_2_bar__minus_4_bar_2_bar__minus_30 mug_5_dot_38226652_comma_5_dot_38226652_comma__minus_4_dot_7092786_comma__minus_4_dot_7092786_comma_3_dot_6545204_comma_3_dot_6545204 mug_5_dot_38226652_comma_5_dot_38226652_comma__minus_4_dot_7092786_comma__minus_4_dot_7092786_comma_3_dot_6545204_comma_3_dot_6545204)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 25 / 245
Motion planning for: train/pick_cool_then_place_in_recep-Mug-None-Cabinet-6/trial_T20190908_224333_300425
Proposed goal is: 
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o MugType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['mug'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PutObjectInReceptacle', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['mug', 'cabinet'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['mug'], 'is_neg': True}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['cabinet', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['mug'], 'is_neg': False}]}

{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['mug'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'ChillObject_2', 'postcondition_ground_predicates': [{'predicate_name': 'isCool', 'arguments': ['mug'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'coolable', 'arguments': ['mug'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['mug'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject mug)
(GotoLocation fridge)
(CoolObject mug)
(GotoLocation cabinet)
(PutObject mug cabinet)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['mug', 'cabinet'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['mug'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['mug'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['mug'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Mug|-00.47|+00.91|+00.65',), ('Mug|+01.35|+00.91|-01.18',)]

PERMISSIBLE OBJECT SET:
[('Mug|-00.47|+00.91|+00.65',), ('Mug|+01.35|+00.91|-01.18',)]


Permissible Objects:
('Mug|-00.47|+00.91|+00.65',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True

OPERATOR:
{'action': 'PutObjectInReceptacle',
 'postcondition_ground_predicates': [{'arguments': ['mug', 'cabinet'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'},
                                     {'arguments': ['mug'],
                                      'is_neg': True,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': [{'arguments': ['cabinet', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['mug'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.45|+01.95|+02.93'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.15|+00.40|+01.58'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|+00.15|+02.01|-01.60'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.45|+01.95|+01.69'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.45|+01.95|+01.64'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.15|+00.40|-00.24'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|+01.57|+02.01|+00.47'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|+01.57|+02.01|-00.78'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.45|+02.15|-01.28'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.45|+02.15|-00.29'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.45|+01.95|+00.36'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.45|+01.95|+00.41'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.15|+00.40|+00.64'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.15|+00.40|+00.70'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.29|+01.97|-01.33'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+01.95|+02.93'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+01.95|+02.93'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.15|+00.40|+01.58'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.15|+00.40|+01.58'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|+00.15|+02.01|-01.60'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|+00.15|+02.01|-01.60'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+01.95|+01.69'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+01.95|+01.69'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+01.95|+01.64'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+01.95|+01.64'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.15|+00.40|-00.24'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.15|+00.40|-00.24'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|+01.57|+02.01|+00.47'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|+01.57|+02.01|+00.47'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|+01.57|+02.01|-00.78'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|+01.57|+02.01|-00.78'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+02.15|-01.28'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+02.15|-01.28'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+02.15|-00.29'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+02.15|-00.29'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+01.95|+00.36'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+01.95|+00.36'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+01.95|+00.41'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+01.95|+00.41'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.15|+00.40|+00.64'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.15|+00.40|+00.64'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.15|+00.40|+00.70'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.15|+00.40|+00.70'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.29|+01.97|-01.33'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.29|+01.97|-01.33')]

PERMISSIBLE OBJECT SET:
[('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.45|+01.95|+02.93'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.15|+00.40|+01.58'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|+00.15|+02.01|-01.60'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.45|+01.95|+01.69'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.45|+01.95|+01.64'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.15|+00.40|-00.24'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|+01.57|+02.01|+00.47'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|+01.57|+02.01|-00.78'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.45|+02.15|-01.28'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.45|+02.15|-00.29'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.45|+01.95|+00.36'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.45|+01.95|+00.41'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.15|+00.40|+00.64'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.15|+00.40|+00.70'),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.29|+01.97|-01.33'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+01.95|+02.93'),
 ('Mug|+01.35|+00.91|-01.18',
  'Cabinet|-02.45|+01.95|+02.93',
  'Mug|-00.47|+00.91|+00.65'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.15|+00.40|+01.58'),
 ('Mug|+01.35|+00.91|-01.18',
  'Cabinet|-02.15|+00.40|+01.58',
  'Mug|-00.47|+00.91|+00.65'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|+00.15|+02.01|-01.60'),
 ('Mug|+01.35|+00.91|-01.18',
  'Cabinet|+00.15|+02.01|-01.60',
  'Mug|-00.47|+00.91|+00.65'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+01.95|+01.69'),
 ('Mug|+01.35|+00.91|-01.18',
  'Cabinet|-02.45|+01.95|+01.69',
  'Mug|-00.47|+00.91|+00.65'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+01.95|+01.64'),
 ('Mug|+01.35|+00.91|-01.18',
  'Cabinet|-02.45|+01.95|+01.64',
  'Mug|-00.47|+00.91|+00.65'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.15|+00.40|-00.24'),
 ('Mug|+01.35|+00.91|-01.18',
  'Cabinet|-02.15|+00.40|-00.24',
  'Mug|-00.47|+00.91|+00.65'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|+01.57|+02.01|+00.47'),
 ('Mug|+01.35|+00.91|-01.18',
  'Cabinet|+01.57|+02.01|+00.47',
  'Mug|-00.47|+00.91|+00.65'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|+01.57|+02.01|-00.78'),
 ('Mug|+01.35|+00.91|-01.18',
  'Cabinet|+01.57|+02.01|-00.78',
  'Mug|-00.47|+00.91|+00.65'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+02.15|-01.28'),
 ('Mug|+01.35|+00.91|-01.18',
  'Cabinet|-02.45|+02.15|-01.28',
  'Mug|-00.47|+00.91|+00.65'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+02.15|-00.29'),
 ('Mug|+01.35|+00.91|-01.18',
  'Cabinet|-02.45|+02.15|-00.29',
  'Mug|-00.47|+00.91|+00.65'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+01.95|+00.36'),
 ('Mug|+01.35|+00.91|-01.18',
  'Cabinet|-02.45|+01.95|+00.36',
  'Mug|-00.47|+00.91|+00.65'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+01.95|+00.41'),
 ('Mug|+01.35|+00.91|-01.18',
  'Cabinet|-02.45|+01.95|+00.41',
  'Mug|-00.47|+00.91|+00.65'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.15|+00.40|+00.64'),
 ('Mug|+01.35|+00.91|-01.18',
  'Cabinet|-02.15|+00.40|+00.64',
  'Mug|-00.47|+00.91|+00.65'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.15|+00.40|+00.70'),
 ('Mug|+01.35|+00.91|-01.18',
  'Cabinet|-02.15|+00.40|+00.70',
  'Mug|-00.47|+00.91|+00.65'),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.29|+01.97|-01.33'),
 ('Mug|+01.35|+00.91|-01.18',
  'Cabinet|-02.29|+01.97|-01.33',
  'Mug|-00.47|+00.91|+00.65')]


Permissible Objects:
('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.45|+01.95|+02.93')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Error Message: Target openable Receptacle is CLOSED, can't place if target is not open!
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.45|+01.95|+02.93')) True
	 State: False
	 Fluent(predicate='holds', objects=('Mug|-00.47|+00.91|+00.65',)) False
	 State: True

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.45|+01.95|+02.93')) True
	 State: False
	 Fluent(predicate='holds', objects=('Mug|-00.47|+00.91|+00.65',)) False
	 State: True

Action feasible: True

OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['mug'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Mug|-00.47|+00.91|+00.65',),
 ('Mug|-00.47|+00.91|+00.65',),
 ('Mug|+01.35|+00.91|-01.18',),
 ('Mug|+01.35|+00.91|-01.18',),
 ('Mug|+01.35|+00.91|-01.18',)]

PERMISSIBLE OBJECT SET:
[('Mug|-00.47|+00.91|+00.65',),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.45|+01.95|+02.93'),
 ('Mug|+01.35|+00.91|-01.18',),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+01.95|+02.93'),
 ('Mug|+01.35|+00.91|-01.18',
  'Cabinet|-02.45|+01.95|+02.93',
  'Mug|-00.47|+00.91|+00.65')]


Permissible Objects:
('Mug|-00.47|+00.91|+00.65',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True

OPERATOR:
{'action': 'ChillObject_2',
 'postcondition_ground_predicates': [{'arguments': ['mug'],
                                      'is_neg': False,
                                      'predicate_name': 'isCool'}],
 'precondition_ground_predicates': [{'arguments': ['mug'],
                                     'is_neg': False,
                                     'predicate_name': 'coolable'},
                                    {'arguments': ['mug'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Mug|-00.47|+00.91|+00.65',),
 ('Mug|-00.47|+00.91|+00.65',),
 ('Mug|+01.35|+00.91|-01.18',),
 ('Mug|+01.35|+00.91|-01.18',),
 ('Mug|+01.35|+00.91|-01.18',)]

PERMISSIBLE OBJECT SET:
[('Mug|-00.47|+00.91|+00.65',),
 ('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.45|+01.95|+02.93'),
 ('Mug|+01.35|+00.91|-01.18',),
 ('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+01.95|+02.93'),
 ('Mug|+01.35|+00.91|-01.18',
  'Cabinet|-02.45|+01.95|+02.93',
  'Mug|-00.47|+00.91|+00.65')]


Permissible Objects:
('Mug|-00.47|+00.91|+00.65',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.45|+01.95|+02.93')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 18/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 19/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: object not found: Mug|-00.47|+00.91|+00.65
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 20/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 21/50

Permissible Objects:
('Mug|+01.35|+00.91|-01.18',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+01.95|+02.93')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.35|+00.91|-01.18"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.35|+00.91|-01.18"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.35|+00.91|-01.18"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.35|+00.91|-01.18"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Error Message: object not found: Mug|+01.35|+00.91|-01.18
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 12/50

Permissible Objects:
('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+01.95|+02.93', 'Mug|-00.47|+00.91|+00.65')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: object not found: Mug|-00.47|+00.91|+00.65
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.35|+00.91|-01.18"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.35|+00.91|-01.18"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.35|+00.91|-01.18"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.35|+00.91|-01.18"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Error Message: object not found: Mug|+01.35|+00.91|-01.18
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 18/50

Permissible Objects:
('Mug|-00.47|+00.91|+00.65',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: object not found: Mug|-00.47|+00.91|+00.65
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: object not found: Mug|-00.47|+00.91|+00.65
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: object not found: Mug|-00.47|+00.91|+00.65
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Mug|-00.47|+00.91|+00.65', 'Cabinet|-02.45|+01.95|+02.93')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: object not found: Mug|-00.47|+00.91|+00.65
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Error Message: object not found: Cabinet|-02.45|+01.95|+02.93
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: object not found: Mug|-00.47|+00.91|+00.65
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Error Message: object not found: Cabinet|-02.45|+01.95|+02.93
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: object not found: Mug|-00.47|+00.91|+00.65
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Error Message: object not found: Mug|-00.47|+00.91|+00.65
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Error Message: Target openable Receptacle is CLOSED, can't place if target is not open!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Error Message: object not found: Cabinet|-02.45|+01.95|+02.93
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Error Message: object not found: Mug|-00.47|+00.91|+00.65
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Error Message: object not found: Cabinet|-02.45|+01.95|+02.93
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Error Message: object not found: Mug|-00.47|+00.91|+00.65
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 32/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 33/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Error Message: object not found: Mug|-00.47|+00.91|+00.65
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 34/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 35/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 36/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Error Message: Cabinet|-02.45|+01.95|+02.93 is not visible.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 37/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 38/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 39/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 40/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 41/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 42/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Error Message: object not found: Cabinet|-02.45|+01.95|+02.93
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 43/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Error Message: object not found: Mug|-00.47|+00.91|+00.65
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 44/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Error Message: object not found: Cabinet|-02.45|+01.95|+02.93
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 45/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Error Message: object not found: Mug|-00.47|+00.91|+00.65
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 46/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 47/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 48/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Rollout 49/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False

Error Message: object not found: Mug|-00.47|+00.91|+00.65
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|-00.47|+00.91|+00.65',)) True
	 State: False


Permissible Objects:
('Mug|+01.35|+00.91|-01.18',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Error Message: object not found: Mug|+01.35|+00.91|-01.18
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Error Message: object not found: Mug|+01.35|+00.91|-01.18
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Error Message: object not found: Mug|+01.35|+00.91|-01.18
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+01.95|+02.93')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Error Message: object not found: Mug|+01.35|+00.91|-01.18
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Error Message: object not found: Cabinet|-02.45|+01.95|+02.93
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Error Message: object not found: Mug|+01.35|+00.91|-01.18
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Error Message: object not found: Cabinet|-02.45|+01.95|+02.93
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Error Message: object not found: Mug|+01.35|+00.91|-01.18
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: object not found: Mug|+01.35|+00.91|-01.18
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: object not found: Cabinet|-02.45|+01.95|+02.93
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: object not found: Mug|+01.35|+00.91|-01.18
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: object not found: Cabinet|-02.45|+01.95|+02.93
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: object not found: Mug|+01.35|+00.91|-01.18
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 32/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 33/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: object not found: Mug|+01.35|+00.91|-01.18
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 34/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 35/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 36/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 37/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 38/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 39/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 40/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 41/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 42/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: object not found: Cabinet|-02.45|+01.95|+02.93
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 43/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: object not found: Mug|+01.35|+00.91|-01.18
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 44/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: object not found: Cabinet|-02.45|+01.95|+02.93
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 45/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: object not found: Mug|+01.35|+00.91|-01.18
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 46/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 47/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 48/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 49/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: object not found: Mug|+01.35|+00.91|-01.18
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False


Permissible Objects:
('Mug|+01.35|+00.91|-01.18', 'Cabinet|-02.45|+01.95|+02.93', 'Mug|-00.47|+00.91|+00.65')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: object not found: Mug|-00.47|+00.91|+00.65
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Error Message: object not found: Mug|+01.35|+00.91|-01.18
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Error Message: object not found: Cabinet|-02.45|+01.95|+02.93
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: object not found: Mug|-00.47|+00.91|+00.65
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Error Message: object not found: Mug|+01.35|+00.91|-01.18
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Error Message: object not found: Cabinet|-02.45|+01.95|+02.93
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Error Message: object not found: Mug|-00.47|+00.91|+00.65
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Error Message: object not found: Mug|+01.35|+00.91|-01.18
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: object not found: Mug|-00.47|+00.91|+00.65
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: object not found: Mug|+01.35|+00.91|-01.18
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 32/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 33/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 34/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 35/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 36/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 37/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 38/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 39/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: Target openable Receptacle is CLOSED, can't place if target is not open!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 40/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 41/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|-00.47|+00.91|+00.65", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 42/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 43/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 44/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Mug|+01.35|+00.91|-01.18", "receptacle_object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 45/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: object not found: Cabinet|-02.45|+01.95|+02.93
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 46/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: object not found: Mug|-00.47|+00.91|+00.65
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 47/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Mug|+01.35|+00.91|-01.18"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: object not found: Mug|+01.35|+00.91|-01.18
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 48/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cabinet|-02.45|+01.95|+02.93"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: object not found: Cabinet|-02.45|+01.95|+02.93
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Rollout 49/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.45|+01.95|+02.93"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Mug|-00.47|+00.91|+00.65"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Error Message: object not found: Mug|-00.47|+00.91|+00.65
Action feasible: False
	 Fluent(predicate='isCool', objects=('Mug|+01.35|+00.91|-01.18',)) True
	 State: False

Exceeded max number of trajs!
=============================================
Problem Number: 25
Problem ID: train/pick_cool_then_place_in_recep-Mug-None-Cabinet-6/trial_T20190908_224333_300425
Motion plan result: task_success: False
Total Actions Taken: 221
Failed at operator: 4 / 4 operators in task plan.
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 6.1 / 6.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 1.1 / 1.1
CutObject_0 1.0 1.1 / 1.1
ChillObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8625429553264605 25.1 / 29.1
PlaceObject_0 0.6721311475409836 4.1 / 6.1
SliceObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
ChillObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 25 / 245, train/pick_cool_then_place_in_recep-Mug-None-Cabinet-6/trial_T20190908_224333_300425
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 25 / 245, train/pick_cool_then_place_in_recep-Mug-None-Cabinet-6/trial_T20190908_224333_300425
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 25 / 245, train/pick_cool_then_place_in_recep-Mug-None-Cabinet-6/trial_T20190908_224333_300425
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 26 / 245, train/pick_cool_then_place_in_recep-BreadSliced-None-CounterTop-13/trial_T20190907_202750_253897
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 43 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	move a slice of chilled bread to the counter by the wine.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_11_bar_19_bar_0_bar_30 loc_bar__minus_14_bar_10_bar_2_bar_45)
(gotolocation agent1 loc_bar__minus_14_bar_10_bar_2_bar_45 loc_bar__minus_4_bar_24_bar_1_bar_60)
(sliceobject_2 agent1 loc_bar__minus_4_bar_24_bar_1_bar_60 bread__minus_2_dot_260024_comma__minus_2_dot_260024_comma_23_dot_729336_comma_23_dot_729336_comma_4_dot_0186186_comma_4_dot_0186186)
(takeobject_0 agent1 loc_bar__minus_4_bar_24_bar_1_bar_60 bread__minus_2_dot_260024_comma__minus_2_dot_260024_comma_23_dot_729336_comma_23_dot_729336_comma_4_dot_0186186_comma_4_dot_0186186)
(coolobject_0 agent1 loc_bar__minus_4_bar_24_bar_1_bar_60 bread__minus_2_dot_260024_comma__minus_2_dot_260024_comma_23_dot_729336_comma_23_dot_729336_comma_4_dot_0186186_comma_4_dot_0186186 bread__minus_2_dot_260024_comma__minus_2_dot_260024_comma_23_dot_729336_comma_23_dot_729336_comma_4_dot_0186186_comma_4_dot_0186186)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 26 / 245
Motion planning for: train/pick_cool_then_place_in_recep-BreadSliced-None-CounterTop-13/trial_T20190907_202750_253897
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BreadType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Attempting to execute the following motion plan:
{'action': 'SliceObject_2', 'postcondition_ground_predicates': [{'predicate_name': 'isSliced', 'arguments': ['bread'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'sliceable', 'arguments': ['bread'], 'is_neg': False}]}

{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['bread'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'CoolObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'isCool', 'arguments': ['bread'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'coolable', 'arguments': ['bread'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['bread'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject knife)
(GotoLocation bread)
(SliceObject bread)
(GotoLocation cabinet)
(PutObject knife cabinet)
(GotoLocation countertop)
(PickupObject bread)
(GotoLocation fridge)
(CoolObject bread)
(GotoLocation countertop)
(PutObject bread countertop)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['bread', 'countertop'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['bread'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['bread'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['bread'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['bread'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'SliceObject_2',
 'postcondition_ground_predicates': [{'arguments': ['bread'],
                                      'is_neg': False,
                                      'predicate_name': 'isSliced'}],
 'precondition_ground_predicates': [{'arguments': ['bread'],
                                     'is_neg': False,
                                     'predicate_name': 'sliceable'}]}

GOAL OBJECT SET:
[('Bread|-00.57|+01.00|+05.93',)]

PERMISSIBLE OBJECT SET:
[('Bread|-00.57|+01.00|+05.93',)]


Permissible Objects:
('Bread|-00.57|+01.00|+05.93',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Bread|-00.57|+01.00|+05.93"})]
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Bread|-00.57|+01.00|+05.93"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Bread|-00.57|+01.00|+05.93',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Bread|-00.57|+01.00|+05.93',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Bread|-00.57|+01.00|+05.93"})]
Error Message: object not found: Bread|-00.57|+01.00|+05.93
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Bread|-00.57|+01.00|+05.93',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Bread|-00.57|+01.00|+05.93"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Bread|-00.57|+01.00|+05.93',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bread|-00.57|+01.00|+05.93"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Bread|-00.57|+01.00|+05.93',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Bread|-00.57|+01.00|+05.93", "receptacle_object_id": "Bread|-00.57|+01.00|+05.93"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Bread|-00.57|+01.00|+05.93',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Bread|-00.57|+01.00|+05.93"})]
Error Message: object not found: Bread|-00.57|+01.00|+05.93
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Bread|-00.57|+01.00|+05.93',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Bread|-00.57|+01.00|+05.93"})]
Error Message: object not found: Bread|-00.57|+01.00|+05.93
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Bread|-00.57|+01.00|+05.93',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Bread|-00.57|+01.00|+05.93"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Bread|-00.57|+01.00|+05.93',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bread|-00.57|+01.00|+05.93"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Bread|-00.57|+01.00|+05.93"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Bread|-00.57|+01.00|+05.93',)) True
	 State: False

Error Message: object not found: Bread|-00.57|+01.00|+05.93
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Bread|-00.57|+01.00|+05.93',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bread|-00.57|+01.00|+05.93"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Bread|-00.57|+01.00|+05.93"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Bread|-00.57|+01.00|+05.93',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Bread|-00.57|+01.00|+05.93',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bread|-00.57|+01.00|+05.93"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bread|-00.57|+01.00|+05.93"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Bread|-00.57|+01.00|+05.93',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Bread|-00.57|+01.00|+05.93',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bread|-00.57|+01.00|+05.93"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Bread|-00.57|+01.00|+05.93", "receptacle_object_id": "Bread|-00.57|+01.00|+05.93"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Bread|-00.57|+01.00|+05.93',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Bread|-00.57|+01.00|+05.93',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bread|-00.57|+01.00|+05.93"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Bread|-00.57|+01.00|+05.93"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Bread|-00.57|+01.00|+05.93',)) True
	 State: False

Error Message: object not found: Bread|-00.57|+01.00|+05.93
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Bread|-00.57|+01.00|+05.93',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bread|-00.57|+01.00|+05.93"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Bread|-00.57|+01.00|+05.93"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Bread|-00.57|+01.00|+05.93',)) True
	 State: False

Error Message: object not found: Bread|-00.57|+01.00|+05.93
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Bread|-00.57|+01.00|+05.93',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bread|-00.57|+01.00|+05.93"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Bread|-00.57|+01.00|+05.93"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Bread|-00.57|+01.00|+05.93',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Bread|-00.57|+01.00|+05.93',)) True
	 State: False

Rollout 14/50
=============================================
Problem Number: 26
Problem ID: train/pick_cool_then_place_in_recep-BreadSliced-None-CounterTop-13/trial_T20190907_202750_253897
Motion plan result: task_success: False
Total Actions Taken: 15
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 6.1 / 6.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 1.1 / 1.1
CutObject_0 1.0 1.1 / 1.1
ChillObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_1 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8625429553264605 25.1 / 29.1
PlaceObject_0 0.6721311475409836 4.1 / 6.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
ChillObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
SliceObject_2 0.047619047619047616 0.1 / 2.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 26 / 245, train/pick_cool_then_place_in_recep-BreadSliced-None-CounterTop-13/trial_T20190907_202750_253897
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 26 / 245, train/pick_cool_then_place_in_recep-BreadSliced-None-CounterTop-13/trial_T20190907_202750_253897
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 26 / 245, train/pick_cool_then_place_in_recep-BreadSliced-None-CounterTop-13/trial_T20190907_202750_253897
Sucessfully found 0 plans for goals.
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 7 / 27 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 27 / 245, train/pick_cool_then_place_in_recep-AppleSliced-None-Microwave-6/trial_T20190909_151225_754039
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 41 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	to cool a piece of apple plus place it in the microwave.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
	 Proposed goal:CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'

	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_5_bar__minus_3_bar_1_bar_30 loc_bar_2_bar_5_bar_3_bar_45)
(takeobject_1 agent1 loc_bar_2_bar_5_bar_3_bar_45 apple__minus_0_dot_32612504_comma__minus_0_dot_32612504_comma_5_dot_26935528_comma_5_dot_26935528_comma_3_dot_8900452_comma_3_dot_8900452)
(gotolocation agent1 loc_bar_2_bar_5_bar_3_bar_45 loc_bar__minus_7_bar_10_bar_3_bar_45)
(placeobject_0 agent1 loc_bar__minus_7_bar_10_bar_3_bar_45 microwave__minus_10_dot_3232_comma__minus_10_dot_3232_comma_9_dot_764_comma_9_dot_764_comma_3_dot_6_comma_3_dot_6 apple__minus_0_dot_32612504_comma__minus_0_dot_32612504_comma_5_dot_26935528_comma_5_dot_26935528_comma_3_dot_8900452_comma_3_dot_8900452)
(gotolocation agent1 loc_bar__minus_7_bar_10_bar_3_bar_45 loc_bar_2_bar_5_bar_3_bar_45)
(chillobject_2 agent1 loc_bar_2_bar_5_bar_3_bar_45 apple__minus_0_dot_32612504_comma__minus_0_dot_32612504_comma_5_dot_26935528_comma_5_dot_26935528_comma_3_dot_8900452_comma_3_dot_8900452 apple__minus_0_dot_32612504_comma__minus_0_dot_32612504_comma_5_dot_26935528_comma_5_dot_26935528_comma_3_dot_8900452_comma_3_dot_8900452)
(gotolocation agent1 loc_bar_2_bar_5_bar_3_bar_45 loc_bar__minus_7_bar_2_bar_3_bar_45)
(takeobject_1 agent1 loc_bar__minus_7_bar_2_bar_3_bar_45 knife__minus_10_dot_154736_comma__minus_10_dot_154736_comma_1_dot_325801848_comma_1_dot_325801848_comma_3_dot_7449984_comma_3_dot_7449984)
(gotolocation agent1 loc_bar__minus_7_bar_2_bar_3_bar_45 loc_bar_2_bar_5_bar_3_bar_45)
(cutobject_0 knife__minus_10_dot_154736_comma__minus_10_dot_154736_comma_1_dot_325801848_comma_1_dot_325801848_comma_3_dot_7449984_comma_3_dot_7449984 agent1 loc_bar_2_bar_5_bar_3_bar_45 apple__minus_0_dot_32612504_comma__minus_0_dot_32612504_comma_5_dot_26935528_comma_5_dot_26935528_comma_3_dot_8900452_comma_3_dot_8900452)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 27 / 245
Motion planning for: train/pick_cool_then_place_in_recep-AppleSliced-None-Microwave-6/trial_T20190909_151225_754039
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_1', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['apple'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['apple', 'microwave'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['microwave', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['apple'], 'is_neg': False}]}

{'action': 'ChillObject_2', 'postcondition_ground_predicates': [{'predicate_name': 'isCool', 'arguments': ['apple'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'coolable', 'arguments': ['apple'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['apple'], 'is_neg': False}]}

{'action': 'TakeObject_1', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['knife'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'CutObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'isSliced', 'arguments': ['apple'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['knife'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject knife)
(GotoLocation apple)
(SliceObject apple)
(GotoLocation fridge)
(PutObject knife fridge)
(GotoLocation countertop)
(PickupObject apple)
(GotoLocation fridge)
(CoolObject apple)
(GotoLocation microwave)
(PutObject apple microwave)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['apple', 'microwave'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['apple'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['apple'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['apple'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['apple'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_1',
 'postcondition_ground_predicates': [{'arguments': ['apple'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Apple|+01.34|+00.97|+00.44',),
 ('Apple|-02.21|+00.97|+00.63',),
 ('Apple|-00.08|+00.97|+01.32',)]

PERMISSIBLE OBJECT SET:
[('Apple|+01.34|+00.97|+00.44',),
 ('Apple|-02.21|+00.97|+00.63',),
 ('Apple|-00.08|+00.97|+01.32',)]


Permissible Objects:
('Apple|+01.34|+00.97|+00.44',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True

OPERATOR:
{'action': 'PlaceObject_0',
 'postcondition_ground_predicates': [{'arguments': ['apple', 'microwave'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'}],
 'precondition_ground_predicates': [{'arguments': ['microwave', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['apple'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Apple|+01.34|+00.97|+00.44', 'Microwave|-02.58|+00.90|+02.44'),
 ('Apple|-02.21|+00.97|+00.63', 'Microwave|-02.58|+00.90|+02.44'),
 ('Apple|-02.21|+00.97|+00.63', 'Microwave|-02.58|+00.90|+02.44'),
 ('Apple|-00.08|+00.97|+01.32', 'Microwave|-02.58|+00.90|+02.44'),
 ('Apple|-00.08|+00.97|+01.32', 'Microwave|-02.58|+00.90|+02.44')]

PERMISSIBLE OBJECT SET:
[('Apple|+01.34|+00.97|+00.44', 'Microwave|-02.58|+00.90|+02.44'),
 ('Apple|-02.21|+00.97|+00.63', 'Microwave|-02.58|+00.90|+02.44'),
 ('Apple|-02.21|+00.97|+00.63',
  'Microwave|-02.58|+00.90|+02.44',
  'Apple|+01.34|+00.97|+00.44'),
 ('Apple|-00.08|+00.97|+01.32', 'Microwave|-02.58|+00.90|+02.44'),
 ('Apple|-00.08|+00.97|+01.32',
  'Microwave|-02.58|+00.90|+02.44',
  'Apple|+01.34|+00.97|+00.44')]


Permissible Objects:
('Apple|+01.34|+00.97|+00.44', 'Microwave|-02.58|+00.90|+02.44')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Apple|+01.34|+00.97|+00.44', 'Microwave|-02.58|+00.90|+02.44')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Error Message: Target openable Receptacle is CLOSED, can't place if target is not open!
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Apple|+01.34|+00.97|+00.44', 'Microwave|-02.58|+00.90|+02.44')) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Error Message: object not found: Apple|+01.34|+00.97|+00.44
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Apple|+01.34|+00.97|+00.44', 'Microwave|-02.58|+00.90|+02.44')) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Apple|+01.34|+00.97|+00.44', 'Microwave|-02.58|+00.90|+02.44')) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Apple|+01.34|+00.97|+00.44', 'Microwave|-02.58|+00.90|+02.44')) True
	 State: False

Action feasible: True

OPERATOR:
{'action': 'ChillObject_2',
 'postcondition_ground_predicates': [{'arguments': ['apple'],
                                      'is_neg': False,
                                      'predicate_name': 'isCool'}],
 'precondition_ground_predicates': [{'arguments': ['apple'],
                                     'is_neg': False,
                                     'predicate_name': 'coolable'},
                                    {'arguments': ['apple'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Apple|+01.34|+00.97|+00.44',),
 ('Apple|+01.34|+00.97|+00.44',),
 ('Apple|-02.21|+00.97|+00.63',),
 ('Apple|-02.21|+00.97|+00.63',),
 ('Apple|-02.21|+00.97|+00.63',),
 ('Apple|-00.08|+00.97|+01.32',),
 ('Apple|-00.08|+00.97|+01.32',),
 ('Apple|-00.08|+00.97|+01.32',)]

PERMISSIBLE OBJECT SET:
[('Apple|+01.34|+00.97|+00.44',),
 ('Apple|+01.34|+00.97|+00.44', 'Microwave|-02.58|+00.90|+02.44'),
 ('Apple|-02.21|+00.97|+00.63',),
 ('Apple|-02.21|+00.97|+00.63', 'Microwave|-02.58|+00.90|+02.44'),
 ('Apple|-02.21|+00.97|+00.63',
  'Microwave|-02.58|+00.90|+02.44',
  'Apple|+01.34|+00.97|+00.44'),
 ('Apple|-00.08|+00.97|+01.32',),
 ('Apple|-00.08|+00.97|+01.32', 'Microwave|-02.58|+00.90|+02.44'),
 ('Apple|-00.08|+00.97|+01.32',
  'Microwave|-02.58|+00.90|+02.44',
  'Apple|+01.34|+00.97|+00.44')]


Permissible Objects:
('Apple|+01.34|+00.97|+00.44',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Apple|+01.34|+00.97|+00.44', 'Microwave|-02.58|+00.90|+02.44')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

--------
ADDING TO ABSTRACT TREE:
Goal: (Literal(neg=True, fluent=Fluent(predicate='holds', objects=('0',))), Literal(neg=True, fluent=Fluent(predicate='inReceptacle', objects=('1', '2'))), Literal(neg=True, fluent=Fluent(predicate='opened', objects=('1',))))
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "0", "receptacle_object_id": "1"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "1"})]
Goal to Traj Map: {'0': '0', '1': '1', '2': None}
--------
Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

--------
ADDING TO ABSTRACT TREE:
Goal: (Literal(neg=True, fluent=Fluent(predicate='inReceptacle', objects=('0', '1'))), Literal(neg=True, fluent=Fluent(predicate='inReceptacle', objects=('1', '2'))), Literal(neg=True, fluent=Fluent(predicate='opened', objects=('1',))))
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "0"})]
Goal to Traj Map: {'0': None, '1': '0', '2': None}
--------
Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Error Message: object not found: Apple|+01.34|+00.97|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 15/50

Permissible Objects:
('Apple|-02.21|+00.97|+00.63',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Apple|-02.21|+00.97|+00.63', 'Microwave|-02.58|+00.90|+02.44')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

--------
ADDING TO ABSTRACT TREE:
Goal: (Literal(neg=False, fluent=Fluent(predicate='holds', objects=('0',))), Literal(neg=False, fluent=Fluent(predicate='inReceptacle', objects=('2', '1'))), Literal(neg=False, fluent=Fluent(predicate='opened', objects=('2',))), Literal(neg=True, fluent=Fluent(predicate='inReceptacle', objects=('0', '1'))))
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "0"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "1"})]
Goal to Traj Map: {'0': '1', '1': None, '2': '0'}
--------
Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

--------
ADDING TO ABSTRACT TREE:
Goal: (Literal(neg=False, fluent=Fluent(predicate='holds', objects=('0',))), Literal(neg=True, fluent=Fluent(predicate='inReceptacle', objects=('0', '1'))), Literal(neg=True, fluent=Fluent(predicate='inReceptacle', objects=('2', '1'))), Literal(neg=True, fluent=Fluent(predicate='opened', objects=('2',))))
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "0"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "0"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "1"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "0"})]
Goal to Traj Map: {'0': '1', '1': None, '2': '0'}
--------
Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Error Message: object not found: Apple|-02.21|+00.97|+00.63
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Apple|-02.21|+00.97|+00.63', 'Microwave|-02.58|+00.90|+02.44', 'Apple|+01.34|+00.97|+00.44')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Error Message: object not found: Apple|+01.34|+00.97|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Error Message: object not found: Apple|-02.21|+00.97|+00.63
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 18/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 19/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 20/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 21/50

Permissible Objects:
('Apple|-00.08|+00.97|+01.32',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.08|+00.97|+01.32"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.08|+00.97|+01.32"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Apple|-00.08|+00.97|+01.32', 'Microwave|-02.58|+00.90|+02.44')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.08|+00.97|+01.32"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.08|+00.97|+01.32"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.08|+00.97|+01.32"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.08|+00.97|+01.32"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

--------
ADDING TO ABSTRACT TREE:
Goal: (Literal(neg=False, fluent=Fluent(predicate='holds', objects=('0',))), Literal(neg=False, fluent=Fluent(predicate='inReceptacle', objects=('2', '3'))), Literal(neg=False, fluent=Fluent(predicate='opened', objects=('2',))), Literal(neg=True, fluent=Fluent(predicate='inReceptacle', objects=('0', '1'))))
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "0"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "1"})]
Goal to Traj Map: {'0': '1', '1': None, '2': '0', '3': None}
--------
Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

--------
ADDING TO ABSTRACT TREE:
Goal: (Literal(neg=False, fluent=Fluent(predicate='holds', objects=('0',))), Literal(neg=True, fluent=Fluent(predicate='inReceptacle', objects=('0', '1'))), Literal(neg=True, fluent=Fluent(predicate='inReceptacle', objects=('2', '3'))), Literal(neg=True, fluent=Fluent(predicate='opened', objects=('2',))))
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "0"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "0"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "1"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "0"})]
Goal to Traj Map: {'0': '1', '1': None, '2': '0', '3': None}
--------
Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.08|+00.97|+01.32"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.08|+00.97|+01.32"})]
Error Message: object not found: Apple|-00.08|+00.97|+01.32
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.08|+00.97|+01.32"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.08|+00.97|+01.32"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Apple|-00.08|+00.97|+01.32', 'Microwave|-02.58|+00.90|+02.44', 'Apple|+01.34|+00.97|+00.44')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.08|+00.97|+01.32"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.08|+00.97|+01.32"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Error Message: object not found: Apple|+01.34|+00.97|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.08|+00.97|+01.32"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.08|+00.97|+01.32"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.08|+00.97|+01.32", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.08|+00.97|+01.32"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.08|+00.97|+01.32"})]
Error Message: object not found: Apple|-00.08|+00.97|+01.32
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.08|+00.97|+01.32"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.08|+00.97|+01.32"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 18/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.08|+00.97|+01.32"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Apple|-00.08|+00.97|+01.32"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.08|+00.97|+01.32"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 19/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 20/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-00.08|+00.97|+01.32',)) True
	 State: False

Rollout 21/50

Permissible Objects:
('Apple|+01.34|+00.97|+00.44',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Error Message: object not found: Apple|+01.34|+00.97|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Error Message: object not found: Apple|+01.34|+00.97|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Error Message: object not found: Apple|+01.34|+00.97|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: object not found: Apple|+01.34|+00.97|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: object not found: Apple|+01.34|+00.97|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: object not found: Apple|+01.34|+00.97|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Apple|+01.34|+00.97|+00.44', 'Microwave|-02.58|+00.90|+02.44')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Error Message: object not found: Apple|+01.34|+00.97|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Error Message: Microwave|-02.58|+00.90|+02.44 must have the property CanPickup to be picked up.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Error Message: Target must be closed to Toggle On!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Error Message: object not found: Apple|+01.34|+00.97|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Error Message: can't toggle object off if it's already off!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Error Message: object not found: Apple|+01.34|+00.97|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: Microwave|-02.58|+00.90|+02.44 must have the property CanPickup to be picked up.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: Apple|+01.34|+00.97|+00.44 is not visible.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

--------
ADDING TO ABSTRACT TREE:
Goal: (Literal(neg=False, fluent=Fluent(predicate='isHot', objects=('0',))), Literal(neg=False, fluent=Fluent(predicate='isHot', objects=('1',))), Literal(neg=False, fluent=Fluent(predicate='isOn', objects=('2',))), Literal(neg=False, fluent=Fluent(predicate='isToggled', objects=('2',))), Literal(neg=True, fluent=Fluent(predicate='inReceptacle', objects=('2', '3'))), Literal(neg=True, fluent=Fluent(predicate='opened', objects=('2',))))
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "0"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "0"})]
Goal to Traj Map: {'0': None, '1': None, '2': '0', '3': None}
--------
Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: object not found: Apple|+01.34|+00.97|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: can't toggle object off if it's already off!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: object not found: Apple|+01.34|+00.97|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 32/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 33/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: object not found: Apple|+01.34|+00.97|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 34/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 35/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 36/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 37/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 38/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 39/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 40/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 41/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.34|+00.97|+00.44", "receptacle_object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 42/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: Target must be closed to Toggle On!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 43/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: object not found: Apple|+01.34|+00.97|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 44/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: can't toggle object off if it's already off!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 45/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: object not found: Apple|+01.34|+00.97|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 46/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 47/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.34|+00.97|+00.44"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 48/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Rollout 49/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.34|+00.97|+00.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False

Error Message: object not found: Apple|+01.34|+00.97|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|+01.34|+00.97|+00.44',)) True
	 State: False


Permissible Objects:
('Apple|-02.21|+00.97|+00.63',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Error Message: object not found: Apple|-02.21|+00.97|+00.63
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Apple|-02.21|+00.97|+00.63"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Error Message: object not found: Apple|-02.21|+00.97|+00.63
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Error Message: object not found: Apple|-02.21|+00.97|+00.63
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: object not found: Apple|-02.21|+00.97|+00.63
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: object not found: Apple|-02.21|+00.97|+00.63
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: object not found: Apple|-02.21|+00.97|+00.63
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Apple|-02.21|+00.97|+00.63', 'Microwave|-02.58|+00.90|+02.44')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Error Message: object not found: Apple|-02.21|+00.97|+00.63
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Error Message: Microwave|-02.58|+00.90|+02.44 must have the property CanPickup to be picked up.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Apple|-02.21|+00.97|+00.63"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|-02.21|+00.97|+00.63"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Error Message: object not found: Apple|-02.21|+00.97|+00.63
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Error Message: Target must be closed to Toggle On!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Error Message: object not found: Apple|-02.21|+00.97|+00.63
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Error Message: can't toggle object off if it's already off!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: object not found: Apple|-02.21|+00.97|+00.63
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: Microwave|-02.58|+00.90|+02.44 must have the property CanPickup to be picked up.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: object not found: Apple|-02.21|+00.97|+00.63
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: object not found: Apple|-02.21|+00.97|+00.63
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: can't toggle object off if it's already off!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 32/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: object not found: Apple|-02.21|+00.97|+00.63
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 33/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 34/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 35/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

--------
ADDING TO ABSTRACT TREE:
Goal: (Literal(neg=True, fluent=Fluent(predicate='inReceptacle', objects=('0', '1'))), Literal(neg=True, fluent=Fluent(predicate='inReceptacle', objects=('2', '1'))), Literal(neg=True, fluent=Fluent(predicate='opened', objects=('2',))))
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "0"})]
Goal to Traj Map: {'0': None, '1': None, '2': '0'}
--------
Rollout 36/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 37/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 38/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 39/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-02.21|+00.97|+00.63", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 40/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 41/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|-02.58|+00.90|+02.44", "receptacle_object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 42/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: object not found: Apple|-02.21|+00.97|+00.63
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 43/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: Target must be closed to Toggle On!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 44/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: object not found: Apple|-02.21|+00.97|+00.63
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 45/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: can't toggle object off if it's already off!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 46/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 47/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-02.21|+00.97|+00.63"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 48/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-02.21|+00.97|+00.63"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: object not found: Apple|-02.21|+00.97|+00.63
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Rollout 49/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|-02.58|+00.90|+02.44"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Apple|-02.21|+00.97|+00.63',)) True
	 State: False

Exceeded max number of trajs!
=============================================
Problem Number: 27
Problem ID: train/pick_cool_then_place_in_recep-AppleSliced-None-Microwave-6/trial_T20190909_151225_754039
Motion plan result: task_success: False
Total Actions Taken: 222
Failed at operator: 3 / 5 operators in task plan.
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 6.1 / 6.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 1.1 / 1.1
CutObject_0 1.0 1.1 / 1.1
ChillObject_1 1.0 1.1 / 1.1
TakeObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8625429553264605 25.1 / 29.1
PlaceObject_0 0.7183098591549295 5.1 / 7.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
SliceObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 27 / 245, train/pick_cool_then_place_in_recep-AppleSliced-None-Microwave-6/trial_T20190909_151225_754039
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 27 / 245, train/pick_cool_then_place_in_recep-AppleSliced-None-Microwave-6/trial_T20190909_151225_754039
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 27 / 245, train/pick_cool_then_place_in_recep-AppleSliced-None-Microwave-6/trial_T20190909_151225_754039
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 28 / 245, train/pick_and_place_simple-TomatoSliced-None-SinkBasin-5/trial_T20190907_233445_502551
Now attempting to plan for goal: 0 / 3
	Running planner with existing operators + 42 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	get a knife to cut a tomato.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?o - object)
(and 
		(objectType ?o KnifeType)))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: 
		Failed to parse plan string: 
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 28 / 245, train/pick_and_place_simple-TomatoSliced-None-SinkBasin-5/trial_T20190907_233445_502551
Now attempting to plan for goal: 1 / 3
	Running planner with existing operators + 41 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	get a knife to cut a tomato.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - agent)
(exists (?l - location)
(and 
		(atLocation ?o ?l)
		(receptacleType ?r CounterTopType)))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: 
		Failed to parse plan string: 
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 28 / 245, train/pick_and_place_simple-TomatoSliced-None-SinkBasin-5/trial_T20190907_233445_502551
Now attempting to plan for goal: 2 / 3
	Running planner with existing operators + 43 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	get a knife to cut a tomato.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o KnifeType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: 
		Failed to parse plan string: 
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 28 / 245, train/pick_and_place_simple-TomatoSliced-None-SinkBasin-5/trial_T20190907_233445_502551
Sucessfully found 0 plans for goals.
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 7 / 29 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 29 / 245, train/pick_cool_then_place_in_recep-Bowl-None-Shelf-5/trial_T20190908_083645_361274
Now attempting to plan for goal: 0 / 3
	Running planner with existing operators + 43 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	move a bowl from the microwave to a shelf.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_4_bar__minus_3_bar_2_bar_30 loc_bar_8_bar_3_bar_1_bar_45)
(gotolocation agent1 loc_bar_8_bar_3_bar_1_bar_45 loc_bar__minus_5_bar_4_bar_2_bar_0)
(takeobject_0 agent1 loc_bar__minus_5_bar_4_bar_2_bar_0 bowl__minus_5_dot_39993524_comma__minus_5_dot_39993524_comma_0_dot_1026002168_comma_0_dot_1026002168_comma_6_dot_63866092_comma_6_dot_63866092)
(gotolocation agent1 loc_bar__minus_5_bar_4_bar_2_bar_0 loc_bar_10_bar_5_bar_2_bar_45)
(placeobject_0 agent1 loc_bar_10_bar_5_bar_2_bar_45 shelf_11_dot_2535982_comma_11_dot_2535982_comma_0_dot_568399012_comma_0_dot_568399012_comma_2_dot_1641448_comma_2_dot_1641448 bowl__minus_5_dot_39993524_comma__minus_5_dot_39993524_comma_0_dot_1026002168_comma_0_dot_1026002168_comma_6_dot_63866092_comma_6_dot_63866092)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 29 / 245
Motion planning for: train/pick_cool_then_place_in_recep-Bowl-None-Shelf-5/trial_T20190908_083645_361274
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['bowl'], 'is_neg': False}], 'precondition_ground_predicates': []}

CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['bowl', 'shelf'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['shelf', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['bowl'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation microwave)
(PickupObject bowl)
(GotoLocation fridge)
(CoolObject bowl)
(GotoLocation shelf)
(PutObject bowl shelf)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['bowl', 'shelf'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['bowl'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['bowl'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['bowl'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Bowl|-00.12|+00.76|-02.06',),
 ('Bowl|+01.85|+01.01|-01.25',),
 ('Bowl|-01.35|+01.66|+00.03',)]

PERMISSIBLE OBJECT SET:
[('Bowl|-00.12|+00.76|-02.06',),
 ('Bowl|+01.85|+01.01|-01.25',),
 ('Bowl|-01.35|+01.66|+00.03',)]


Permissible Objects:
('Bowl|-00.12|+00.76|-02.06',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bowl|-00.12|+00.76|-02.06"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bowl|-00.12|+00.76|-02.06"})]
Action feasible: True

OPERATOR:
{'action': 'PlaceObject_0',
 'postcondition_ground_predicates': [{'arguments': ['bowl', 'shelf'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'}],
 'precondition_ground_predicates': [{'arguments': ['shelf', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['bowl'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Bowl|-00.12|+00.76|-02.06', 'Shelf|+02.81|+00.87|+00.14'),
 ('Bowl|-00.12|+00.76|-02.06', 'Shelf|+02.81|+00.54|+00.14'),
 ('Bowl|-00.12|+00.76|-02.06', 'Shelf|+02.81|+00.16|+00.14'),
 ('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.87|+00.14'),
 ('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.87|+00.14'),
 ('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.54|+00.14'),
 ('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.54|+00.14'),
 ('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.16|+00.14'),
 ('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.16|+00.14'),
 ('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.87|+00.14'),
 ('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.87|+00.14'),
 ('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.54|+00.14'),
 ('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.54|+00.14'),
 ('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.16|+00.14'),
 ('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.16|+00.14')]

PERMISSIBLE OBJECT SET:
[('Bowl|-00.12|+00.76|-02.06', 'Shelf|+02.81|+00.87|+00.14'),
 ('Bowl|-00.12|+00.76|-02.06', 'Shelf|+02.81|+00.54|+00.14'),
 ('Bowl|-00.12|+00.76|-02.06', 'Shelf|+02.81|+00.16|+00.14'),
 ('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.87|+00.14'),
 ('Bowl|+01.85|+01.01|-01.25',
  'Shelf|+02.81|+00.87|+00.14',
  'Bowl|-00.12|+00.76|-02.06'),
 ('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.54|+00.14'),
 ('Bowl|+01.85|+01.01|-01.25',
  'Shelf|+02.81|+00.54|+00.14',
  'Bowl|-00.12|+00.76|-02.06'),
 ('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.16|+00.14'),
 ('Bowl|+01.85|+01.01|-01.25',
  'Shelf|+02.81|+00.16|+00.14',
  'Bowl|-00.12|+00.76|-02.06'),
 ('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.87|+00.14'),
 ('Bowl|-01.35|+01.66|+00.03',
  'Shelf|+02.81|+00.87|+00.14',
  'Bowl|-00.12|+00.76|-02.06'),
 ('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.54|+00.14'),
 ('Bowl|-01.35|+01.66|+00.03',
  'Shelf|+02.81|+00.54|+00.14',
  'Bowl|-00.12|+00.76|-02.06'),
 ('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.16|+00.14'),
 ('Bowl|-01.35|+01.66|+00.03',
  'Shelf|+02.81|+00.16|+00.14',
  'Bowl|-00.12|+00.76|-02.06')]


Permissible Objects:
('Bowl|-00.12|+00.76|-02.06', 'Shelf|+02.81|+00.87|+00.14')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+02.81|+00.87|+00.14"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+02.81|+00.87|+00.14"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Bowl|-00.12|+00.76|-02.06', 'Shelf|+02.81|+00.87|+00.14')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Bowl|-00.12|+00.76|-02.06", "receptacle_object_id": "Shelf|+02.81|+00.87|+00.14"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Bowl|-00.12|+00.76|-02.06", "receptacle_object_id": "Shelf|+02.81|+00.87|+00.14"})]
Action feasible: True

	 Fluent(predicate='isCool', objects=('Bowl|-00.12|+00.76|-02.06',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Bowl|-00.12|+00.76|-02.06', 'Shelf|+02.81|+00.54|+00.14')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Bowl|-00.12|+00.76|-02.06',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Bowl|-00.12|+00.76|-02.06', 'Shelf|+02.81|+00.16|+00.14')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Bowl|-00.12|+00.76|-02.06',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.87|+00.14')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Bowl|+01.85|+01.01|-01.25',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.54|+00.14')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Bowl|+01.85|+01.01|-01.25',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.16|+00.14')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Bowl|+01.85|+01.01|-01.25',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.87|+00.14')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Bowl|-01.35|+01.66|+00.03',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.54|+00.14')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Bowl|-01.35|+01.66|+00.03',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.16|+00.14')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Bowl|-01.35|+01.66|+00.03',)) True
	 State: False

GOAL CHECK FUNCTION FAILED!
=============================================
Problem Number: 29
Problem ID: train/pick_cool_then_place_in_recep-Bowl-None-Shelf-5/trial_T20190908_083645_361274
Motion plan result: task_success: False
Total Actions Taken: 3
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 6.1 / 6.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 1.1 / 1.1
CutObject_0 1.0 1.1 / 1.1
ChillObject_1 1.0 1.1 / 1.1
TakeObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.867109634551495 26.1 / 30.1
PlaceObject_0 0.7530864197530864 6.1 / 8.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
SliceObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 29 / 245, train/pick_cool_then_place_in_recep-Bowl-None-Shelf-5/trial_T20190908_083645_361274
Now attempting to plan for goal: 1 / 3
	Running planner with existing operators + 41 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	move a bowl from the microwave to a shelf.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r1 MicrowaveType)
		(receptacleType ?r2 ShelfType)
		(inReceptacle ?o ?r1)
		(inReceptacle ?o ?r2)))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_4_bar__minus_3_bar_2_bar_30 loc_bar_4_bar__minus_5_bar_1_bar_30)
(takeobject_0 agent1 loc_bar_4_bar__minus_5_bar_1_bar_30 bowl_7_dot_38440704_comma_7_dot_38440704_comma__minus_4_dot_9810548_comma__minus_4_dot_9810548_comma_4_dot_050272_comma_4_dot_050272)
(gotolocation agent1 loc_bar_4_bar__minus_5_bar_1_bar_30 loc_bar_10_bar_5_bar_2_bar_45)
(placeobject_0 agent1 loc_bar_10_bar_5_bar_2_bar_45 shelf_11_dot_2535982_comma_11_dot_2535982_comma_0_dot_568399012_comma_0_dot_568399012_comma_2_dot_1641448_comma_2_dot_1641448 bowl_7_dot_38440704_comma_7_dot_38440704_comma__minus_4_dot_9810548_comma__minus_4_dot_9810548_comma_4_dot_050272_comma_4_dot_050272)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 29 / 245
Motion planning for: train/pick_cool_then_place_in_recep-Bowl-None-Shelf-5/trial_T20190908_083645_361274
Proposed goal is: 
(:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r1 MicrowaveType)
		(receptacleType ?r2 ShelfType)
		(inReceptacle ?o ?r1)
		(inReceptacle ?o ?r2)))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['bowl'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['bowl', 'shelf'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['shelf', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['bowl'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation microwave)
(PickupObject bowl)
(GotoLocation fridge)
(CoolObject bowl)
(GotoLocation shelf)
(PutObject bowl shelf)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['bowl', 'shelf'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['bowl'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['bowl'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['bowl'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Bowl|-00.12|+00.76|-02.06',),
 ('Bowl|+01.85|+01.01|-01.25',),
 ('Bowl|-01.35|+01.66|+00.03',)]

PERMISSIBLE OBJECT SET:
[('Bowl|-00.12|+00.76|-02.06',),
 ('Bowl|+01.85|+01.01|-01.25',),
 ('Bowl|-01.35|+01.66|+00.03',)]


Permissible Objects:
('Bowl|-00.12|+00.76|-02.06',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bowl|-00.12|+00.76|-02.06"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bowl|-00.12|+00.76|-02.06"})]
Action feasible: True

OPERATOR:
{'action': 'PlaceObject_0',
 'postcondition_ground_predicates': [{'arguments': ['bowl', 'shelf'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'}],
 'precondition_ground_predicates': [{'arguments': ['shelf', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['bowl'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Bowl|-00.12|+00.76|-02.06', 'Shelf|+02.81|+00.87|+00.14'),
 ('Bowl|-00.12|+00.76|-02.06', 'Shelf|+02.81|+00.54|+00.14'),
 ('Bowl|-00.12|+00.76|-02.06', 'Shelf|+02.81|+00.16|+00.14'),
 ('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.87|+00.14'),
 ('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.87|+00.14'),
 ('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.54|+00.14'),
 ('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.54|+00.14'),
 ('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.16|+00.14'),
 ('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.16|+00.14'),
 ('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.87|+00.14'),
 ('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.87|+00.14'),
 ('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.54|+00.14'),
 ('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.54|+00.14'),
 ('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.16|+00.14'),
 ('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.16|+00.14')]

PERMISSIBLE OBJECT SET:
[('Bowl|-00.12|+00.76|-02.06', 'Shelf|+02.81|+00.87|+00.14'),
 ('Bowl|-00.12|+00.76|-02.06', 'Shelf|+02.81|+00.54|+00.14'),
 ('Bowl|-00.12|+00.76|-02.06', 'Shelf|+02.81|+00.16|+00.14'),
 ('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.87|+00.14'),
 ('Bowl|+01.85|+01.01|-01.25',
  'Shelf|+02.81|+00.87|+00.14',
  'Bowl|-00.12|+00.76|-02.06'),
 ('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.54|+00.14'),
 ('Bowl|+01.85|+01.01|-01.25',
  'Shelf|+02.81|+00.54|+00.14',
  'Bowl|-00.12|+00.76|-02.06'),
 ('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.16|+00.14'),
 ('Bowl|+01.85|+01.01|-01.25',
  'Shelf|+02.81|+00.16|+00.14',
  'Bowl|-00.12|+00.76|-02.06'),
 ('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.87|+00.14'),
 ('Bowl|-01.35|+01.66|+00.03',
  'Shelf|+02.81|+00.87|+00.14',
  'Bowl|-00.12|+00.76|-02.06'),
 ('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.54|+00.14'),
 ('Bowl|-01.35|+01.66|+00.03',
  'Shelf|+02.81|+00.54|+00.14',
  'Bowl|-00.12|+00.76|-02.06'),
 ('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.16|+00.14'),
 ('Bowl|-01.35|+01.66|+00.03',
  'Shelf|+02.81|+00.16|+00.14',
  'Bowl|-00.12|+00.76|-02.06')]


Permissible Objects:
('Bowl|-00.12|+00.76|-02.06', 'Shelf|+02.81|+00.87|+00.14')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+02.81|+00.87|+00.14"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+02.81|+00.87|+00.14"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Bowl|-00.12|+00.76|-02.06', 'Shelf|+02.81|+00.87|+00.14')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Bowl|-00.12|+00.76|-02.06", "receptacle_object_id": "Shelf|+02.81|+00.87|+00.14"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Bowl|-00.12|+00.76|-02.06", "receptacle_object_id": "Shelf|+02.81|+00.87|+00.14"})]
Action feasible: True

	 Fluent(predicate='isCool', objects=('Bowl|-00.12|+00.76|-02.06',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Bowl|-00.12|+00.76|-02.06', 'Shelf|+02.81|+00.54|+00.14')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Bowl|-00.12|+00.76|-02.06',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Bowl|-00.12|+00.76|-02.06', 'Shelf|+02.81|+00.16|+00.14')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Bowl|-00.12|+00.76|-02.06',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.87|+00.14')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Bowl|+01.85|+01.01|-01.25',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.54|+00.14')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Bowl|+01.85|+01.01|-01.25',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Bowl|+01.85|+01.01|-01.25', 'Shelf|+02.81|+00.16|+00.14')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Bowl|+01.85|+01.01|-01.25',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.87|+00.14')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Bowl|-01.35|+01.66|+00.03',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.54|+00.14')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Bowl|-01.35|+01.66|+00.03',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Bowl|-01.35|+01.66|+00.03', 'Shelf|+02.81|+00.16|+00.14')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Bowl|-01.35|+01.66|+00.03',)) True
	 State: False

GOAL CHECK FUNCTION FAILED!
=============================================
Problem Number: 29
Problem ID: train/pick_cool_then_place_in_recep-Bowl-None-Shelf-5/trial_T20190908_083645_361274
Motion plan result: task_success: False
Total Actions Taken: 3
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 6.1 / 6.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 1.1 / 1.1
CutObject_0 1.0 1.1 / 1.1
ChillObject_1 1.0 1.1 / 1.1
TakeObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8713826366559485 27.1 / 31.1
PlaceObject_0 0.7802197802197802 7.1 / 9.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
SliceObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 29 / 245, train/pick_cool_then_place_in_recep-Bowl-None-Shelf-5/trial_T20190908_083645_361274
Now attempting to plan for goal: 2 / 3
	Running planner with existing operators + 43 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'ChillObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	move a bowl from the microwave to a shelf.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r1 MicrowaveType)
		(receptacleType ?r2 ShelfType)
		(inReceptacle ?o ?r1)))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: 
		Failed to parse plan string: 
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 29 / 245, train/pick_cool_then_place_in_recep-Bowl-None-Shelf-5/trial_T20190908_083645_361274
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 30 / 245, train/pick_and_place_simple-TomatoSliced-None-SideTable-3/trial_T20190908_091633_587949
Now attempting to plan for goal: 0 / 3
	Running planner with existing operators + 40 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	remove the tomato from the fridge and cut it up on the table.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: False
	 Plan string: Plan not found with FD! Error: INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp4cyu_uke /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpdca0vlcu --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpospeh2e7
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.005s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 327 rules.
Computing model... [0.070s CPU, 0.061s wall-clock]
4959 relevant atoms
7163 auxiliary atoms
12122 final queue length
17862 total queue pushes
Completing instantiation... [0.040s CPU, 0.042s wall-clock]
Instantiating: [0.120s CPU, 0.116s wall-clock]
No relaxed solution! Generating unsolvable task...
Translator variables: 1
Translator derived variables: 0
Translator facts: 2
Translator goal facts: 1
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 0
Translator axioms: 0
Translator task size: 4
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.120s CPU, 0.121s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpospeh2e7
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpospeh2e7
[t=9.7498e-05s, 408500464 KB] reading input...
[t=0.000153463s, 408500464 KB] done reading input!
[t=0.00392948s, 408509680 KB] Initializing landmark sum heuristic...
[t=0.00393559s, 408509680 KB] Generating landmark graph...
[t=0.00394063s, 408509680 KB] Building a landmark graph with reasonable orders.
[t=0.00394346s, 408509680 KB] Initializing Exploration...
[t=0.00394703s, 408509680 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.00396191s, 408509680 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00396732s, 408509680 KB] Landmarks generation time: 2.5666e-05s
[t=0.0039695s, 408509680 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00397183s, 408509680 KB] 1 edges
[t=0.00397405s, 408509680 KB] approx. reasonable orders
[t=0.00397622s, 408509680 KB] approx. obedient reasonable orders
[t=0.00397819s, 408509680 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00397999s, 408509680 KB] Landmarks generation time: 4.3132e-05s
[t=0.00398499s, 408509680 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00398791s, 408509680 KB] 1 edges
[t=0.00399082s, 408509680 KB] Landmark graph generation time: 5.6662e-05s
[t=0.00399381s, 408509680 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00399803s, 408509680 KB] Landmark graph contains 1 orderings.
[t=0.00400689s, 408509680 KB] Simplifying 0 unary operators... done! [0 unary operators]
[t=0.00400972s, 408509680 KB] time to simplify: 4.223e-06s
[t=0.00401173s, 408509680 KB] Initializing additive heuristic...
[t=0.00401329s, 408509680 KB] Initializing FF heuristic...
[t=0.00403559s, 408509680 KB] Building successor generator...done!
[t=0.00404313s, 408509680 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00404522s, 408509680 KB] time for successor generation creation: 1.845e-06s
[t=0.00404756s, 408509680 KB] Variables: 1
[t=0.00404937s, 408509680 KB] FactPairs: 2
[t=0.00405121s, 408509680 KB] Bytes per state: 4
[t=0.00407224s, 408509680 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00407655s, 408509680 KB] 1 initial landmarks, 1 goal landmarks
[t=0.00408438s, 408509680 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity
[t=0.00408872s, 408509680 KB] Completely explored state space -- no solution!
[t=0.00409069s, 408509680 KB] Actual search time: 1.3079e-05s
[t=0.00409258s, 408509680 KB] Expanded 0 state(s).
[t=0.00409258s, 408509680 KB] Reopened 0 state(s).
[t=0.00409258s, 408509680 KB] Evaluated 1 state(s).
[t=0.00409258s, 408509680 KB] Evaluations: 1
[t=0.00409258s, 408509680 KB] Generated 0 state(s).
[t=0.00409258s, 408509680 KB] Dead ends: 1 state(s).
[t=0.00409258s, 408509680 KB] Number of registered states: 1
[t=0.00409258s, 408509680 KB] Int hash set load factor: 1/1 = 1
[t=0.00409258s, 408509680 KB] Int hash set resizes: 0
[t=0.00409258s, 408509680 KB] Search time: 2.0664e-05s
[t=0.00409258s, 408509680 KB] Total time: 0.00409258s
Search stopped without finding a solution.
Peak memory: 408509680 KB
search exit code: 12

Driver aborting after search
INFO     Planner time: 0.17s
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 30 / 245, train/pick_and_place_simple-TomatoSliced-None-SideTable-3/trial_T20190908_091633_587949
Now attempting to plan for goal: 1 / 3
	Running planner with existing operators + 43 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	remove the tomato from the fridge and cut it up on the table.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: False
	 Plan string: Plan not found with FD! Error: INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpby736_4l /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpqwejsdxk --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmplui0jo38
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.005s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 344 rules.
Computing model... [0.070s CPU, 0.065s wall-clock]
5160 relevant atoms
7701 auxiliary atoms
12861 final queue length
18811 total queue pushes
Completing instantiation... [0.050s CPU, 0.051s wall-clock]
Instantiating: [0.130s CPU, 0.129s wall-clock]
No relaxed solution! Generating unsolvable task...
Translator variables: 1
Translator derived variables: 0
Translator facts: 2
Translator goal facts: 1
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 0
Translator axioms: 0
Translator task size: 4
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.140s CPU, 0.135s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmplui0jo38
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmplui0jo38
[t=0.00010496s, 408500464 KB] reading input...
[t=0.000173799s, 408500464 KB] done reading input!
[t=0.00429049s, 408530160 KB] Initializing landmark sum heuristic...
[t=0.00430385s, 408530160 KB] Generating landmark graph...
[t=0.00430857s, 408530160 KB] Building a landmark graph with reasonable orders.
[t=0.00431377s, 408530160 KB] Initializing Exploration...
[t=0.0043182s, 408530160 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.00433255s, 408530160 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00433747s, 408530160 KB] Landmarks generation time: 2.5584e-05s
[t=0.00434001s, 408530160 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00434313s, 408530160 KB] 1 edges
[t=0.00434571s, 408530160 KB] approx. reasonable orders
[t=0.00434883s, 408530160 KB] approx. obedient reasonable orders
[t=0.00435293s, 408530160 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00435522s, 408530160 KB] Landmarks generation time: 5.0881e-05s
[t=0.00435818s, 408530160 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00436047s, 408530160 KB] 1 edges
[t=0.0043624s, 408530160 KB] Landmark graph generation time: 5.986e-05s
[t=0.0043647s, 408530160 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00436744s, 408530160 KB] Landmark graph contains 1 orderings.
[t=0.00437679s, 408530160 KB] Simplifying 0 unary operators... done! [0 unary operators]
[t=0.00438077s, 408530160 KB] time to simplify: 5.33e-06s
[t=0.00438372s, 408530160 KB] Initializing additive heuristic...
[t=0.00438602s, 408530160 KB] Initializing FF heuristic...
[t=0.00441201s, 408530160 KB] Building successor generator...done!
[t=0.00441935s, 408530160 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00442197s, 408530160 KB] time for successor generation creation: 1.681e-06s
[t=0.0044246s, 408530160 KB] Variables: 1
[t=0.00442652s, 408530160 KB] FactPairs: 2
[t=0.00442907s, 408530160 KB] Bytes per state: 4
[t=0.00444993s, 408530160 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00445592s, 408530160 KB] 1 initial landmarks, 1 goal landmarks
[t=0.00446412s, 408530160 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity
[t=0.00446748s, 408530160 KB] Completely explored state space -- no solution!
[t=0.00447002s, 408530160 KB] Actual search time: 1.2259e-05s
[t=0.00447294s, 408530160 KB] Expanded 0 state(s).
[t=0.00447294s, 408530160 KB] Reopened 0 state(s).
[t=0.00447294s, 408530160 KB] Evaluated 1 state(s).
[t=0.00447294s, 408530160 KB] Evaluations: 1
[t=0.00447294s, 408530160 KB] Generated 0 state(s).
[t=0.00447294s, 408530160 KB] Dead ends: 1 state(s).
[t=0.00447294s, 408530160 KB] Number of registered states: 1
[t=0.00447294s, 408530160 KB] Int hash set load factor: 1/1 = 1
[t=0.00447294s, 408530160 KB] Int hash set resizes: 0
[t=0.00447294s, 408530160 KB] Search time: 2.3165e-05s
[t=0.00447294s, 408530160 KB] Total time: 0.00447294s
Search stopped without finding a solution.
Peak memory: 408530160 KB
search exit code: 12

Driver aborting after search
INFO     Planner time: 0.18s
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 30 / 245, train/pick_and_place_simple-TomatoSliced-None-SideTable-3/trial_T20190908_091633_587949
Now attempting to plan for goal: 2 / 3
	Running planner with existing operators + 42 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	remove the tomato from the fridge and cut it up on the table.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?x - location)
(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o)
		(receptacleAtLocation ?r ?x)))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: False
	 Plan string: Plan not found with FD! Error: INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmptsmb1ttb /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpjypqrpuj --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmppd07ju93
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.006s wall-clock]
Preparing model... [0.010s CPU, 0.004s wall-clock]
Generated 342 rules.
Computing model... [0.070s CPU, 0.077s wall-clock]
5050 relevant atoms
7489 auxiliary atoms
12539 final queue length
18374 total queue pushes
Completing instantiation... [0.040s CPU, 0.042s wall-clock]
Instantiating: [0.120s CPU, 0.132s wall-clock]
No relaxed solution! Generating unsolvable task...
Translator variables: 1
Translator derived variables: 0
Translator facts: 2
Translator goal facts: 1
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 0
Translator axioms: 0
Translator task size: 4
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.130s CPU, 0.137s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmppd07ju93
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmppd07ju93
[t=0.000107133s, 408500464 KB] reading input...
[t=0.000169289s, 408500464 KB] done reading input!
[t=0.0037399s, 408500464 KB] Initializing landmark sum heuristic...
[t=0.00374572s, 408500464 KB] Generating landmark graph...
[t=0.00374966s, 408500464 KB] Building a landmark graph with reasonable orders.
[t=0.00375257s, 408500464 KB] Initializing Exploration...
[t=0.00375556s, 408500464 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0037679s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00377298s, 408500464 KB] Landmarks generation time: 2.2263e-05s
[t=0.00377548s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00377897s, 408500464 KB] 1 edges
[t=0.00378213s, 408500464 KB] approx. reasonable orders
[t=0.00378647s, 408500464 KB] approx. obedient reasonable orders
[t=0.00378848s, 408500464 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00379029s, 408500464 KB] Landmarks generation time: 4.3911e-05s
[t=0.00379787s, 408500464 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00380103s, 408500464 KB] 1 edges
[t=0.00380509s, 408500464 KB] Landmark graph generation time: 6.0516e-05s
[t=0.00380701s, 408500464 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00380915s, 408500464 KB] Landmark graph contains 1 orderings.
[t=0.00381833s, 408500464 KB] Simplifying 0 unary operators... done! [0 unary operators]
[t=0.00382132s, 408500464 KB] time to simplify: 4.428e-06s
[t=0.00382345s, 408500464 KB] Initializing additive heuristic...
[t=0.00382522s, 408500464 KB] Initializing FF heuristic...
[t=0.00384748s, 408500464 KB] Building successor generator...done!
[t=0.00385482s, 408500464 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00385683s, 408500464 KB] time for successor generation creation: 1.558e-06s
[t=0.00385917s, 408500464 KB] Variables: 1
[t=0.00386187s, 408500464 KB] FactPairs: 2
[t=0.00386359s, 408500464 KB] Bytes per state: 4
[t=0.00388442s, 408500464 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00389566s, 408500464 KB] 1 initial landmarks, 1 goal landmarks
[t=0.00390271s, 408500464 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity
[t=0.00390705s, 408500464 KB] Completely explored state space -- no solution!
[t=0.00390894s, 408500464 KB] Actual search time: 1.2177e-05s
[t=0.00391091s, 408500464 KB] Expanded 0 state(s).
[t=0.00391091s, 408500464 KB] Reopened 0 state(s).
[t=0.00391091s, 408500464 KB] Evaluated 1 state(s).
[t=0.00391091s, 408500464 KB] Evaluations: 1
[t=0.00391091s, 408500464 KB] Generated 0 state(s).
[t=0.00391091s, 408500464 KB] Dead ends: 1 state(s).
[t=0.00391091s, 408500464 KB] Number of registered states: 1
[t=0.00391091s, 408500464 KB] Int hash set load factor: 1/1 = 1
[t=0.00391091s, 408500464 KB] Int hash set resizes: 0
[t=0.00391091s, 408500464 KB] Search time: 2.6773e-05s
[t=0.00391091s, 408500464 KB] Total time: 0.00391091s
Search stopped without finding a solution.
Peak memory: 408500464 KB
search exit code: 12

Driver aborting after search
INFO     Planner time: 0.17s
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 30 / 245, train/pick_and_place_simple-TomatoSliced-None-SideTable-3/trial_T20190908_091633_587949
Sucessfully found 0 plans for goals.
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 7 / 31 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 31 / 245, train/pick_cool_then_place_in_recep-Egg-None-CounterTop-27/trial_T20190909_002105_967038
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 44 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'HeatObject_2', 'TakeObject_0', 'HeatObject_1', 'TurnOffObject_0', 'ChillObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	put a chilled egg on the counter.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
	 Proposed goal:
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_5_bar_6_bar_1_bar_30 loc_bar_6_bar_8_bar_1_bar_60)
(chillobject_0 agent1 loc_bar_6_bar_8_bar_1_bar_60 egg_7_dot_37676524_comma_7_dot_37676524_comma_8_dot_25450228_comma_8_dot_25450228_comma_3_dot_920002224_comma_3_dot_920002224)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 31 / 245
Motion planning for: train/pick_cool_then_place_in_recep-Egg-None-CounterTop-27/trial_T20190909_002105_967038
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'ChillObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'isCool', 'arguments': ['egg'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'coolable', 'arguments': ['egg'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject egg)
(GotoLocation fridge)
(CoolObject egg)
(GotoLocation countertop)
(PutObject egg countertop)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['egg', 'countertop'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['egg'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['egg'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'ChillObject_0',
 'postcondition_ground_predicates': [{'arguments': ['egg'],
                                      'is_neg': False,
                                      'predicate_name': 'isCool'}],
 'precondition_ground_predicates': [{'arguments': ['egg'],
                                     'is_neg': False,
                                     'predicate_name': 'coolable'}]}

GOAL OBJECT SET:
[('Egg|+01.84|+00.98|+02.06',)]

PERMISSIBLE OBJECT SET:
[('Egg|+01.84|+00.98|+02.06',)]


Permissible Objects:
('Egg|+01.84|+00.98|+02.06',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Egg|+01.84|+00.98|+02.06"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Egg|+01.84|+00.98|+02.06"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Egg|+01.84|+00.98|+02.06',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Egg|+01.84|+00.98|+02.06',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Egg|+01.84|+00.98|+02.06"})]
Error Message: object not found: Egg|+01.84|+00.98|+02.06
Action feasible: False
	 Fluent(predicate='isCool', objects=('Egg|+01.84|+00.98|+02.06',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Egg|+01.84|+00.98|+02.06"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Egg|+01.84|+00.98|+02.06',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Egg|+01.84|+00.98|+02.06"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Egg|+01.84|+00.98|+02.06',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Egg|+01.84|+00.98|+02.06", "receptacle_object_id": "Egg|+01.84|+00.98|+02.06"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Egg|+01.84|+00.98|+02.06',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Egg|+01.84|+00.98|+02.06"})]
Error Message: object not found: Egg|+01.84|+00.98|+02.06
Action feasible: False
	 Fluent(predicate='isCool', objects=('Egg|+01.84|+00.98|+02.06',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Egg|+01.84|+00.98|+02.06"})]
Error Message: object not found: Egg|+01.84|+00.98|+02.06
Action feasible: False
	 Fluent(predicate='isCool', objects=('Egg|+01.84|+00.98|+02.06',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Egg|+01.84|+00.98|+02.06"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Egg|+01.84|+00.98|+02.06',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Egg|+01.84|+00.98|+02.06"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Egg|+01.84|+00.98|+02.06"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Egg|+01.84|+00.98|+02.06',)) True
	 State: False

Error Message: object not found: Egg|+01.84|+00.98|+02.06
Action feasible: False
	 Fluent(predicate='isCool', objects=('Egg|+01.84|+00.98|+02.06',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Egg|+01.84|+00.98|+02.06"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Egg|+01.84|+00.98|+02.06"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Egg|+01.84|+00.98|+02.06',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Egg|+01.84|+00.98|+02.06',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Egg|+01.84|+00.98|+02.06"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Egg|+01.84|+00.98|+02.06"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Egg|+01.84|+00.98|+02.06',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Egg|+01.84|+00.98|+02.06',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Egg|+01.84|+00.98|+02.06"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Egg|+01.84|+00.98|+02.06", "receptacle_object_id": "Egg|+01.84|+00.98|+02.06"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Egg|+01.84|+00.98|+02.06',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Egg|+01.84|+00.98|+02.06',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Egg|+01.84|+00.98|+02.06"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Egg|+01.84|+00.98|+02.06"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Egg|+01.84|+00.98|+02.06',)) True
	 State: False

Error Message: object not found: Egg|+01.84|+00.98|+02.06
Action feasible: False
	 Fluent(predicate='isCool', objects=('Egg|+01.84|+00.98|+02.06',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Egg|+01.84|+00.98|+02.06"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Egg|+01.84|+00.98|+02.06"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Egg|+01.84|+00.98|+02.06',)) True
	 State: False

Error Message: object not found: Egg|+01.84|+00.98|+02.06
Action feasible: False
	 Fluent(predicate='isCool', objects=('Egg|+01.84|+00.98|+02.06',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Egg|+01.84|+00.98|+02.06"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Egg|+01.84|+00.98|+02.06"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Egg|+01.84|+00.98|+02.06',)) True
	 State: CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Egg|+01.84|+00.98|+02.06',)) True
	 State: False

Rollout 14/50
=============================================
Problem Number: 31
Problem ID: train/pick_cool_then_place_in_recep-Egg-None-CounterTop-27/trial_T20190909_002105_967038
Motion plan result: task_success: False
Total Actions Taken: 15
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 6.1 / 6.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 1.1 / 1.1
CutObject_0 1.0 1.1 / 1.1
ChillObject_1 1.0 1.1 / 1.1
TakeObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8713826366559485 27.1 / 31.1
PlaceObject_0 0.7802197802197802 7.1 / 9.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
SliceObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 31 / 245, train/pick_cool_then_place_in_recep-Egg-None-CounterTop-27/trial_T20190909_002105_967038
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 31 / 245, train/pick_cool_then_place_in_recep-Egg-None-CounterTop-27/trial_T20190909_002105_967038
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 31 / 245, train/pick_cool_then_place_in_recep-Egg-None-CounterTop-27/trial_T20190909_002105_967038
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 32 / 245, train/pick_and_place_simple-TomatoSliced-None-CounterTop-25/trial_T20190908_233907_188674
Now attempting to plan for goal: 0 / 4
	Running planner with existing operators + 40 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	slice off the top of a tomato while holding a butter knife.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(sliceable ?o)
		(isSliced ?o)))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_8_bar_7_bar_3_bar_30 loc_bar__minus_8_bar_4_bar_3_bar_45)
(sliceobject_2 agent1 loc_bar__minus_8_bar_4_bar_3_bar_45 tomato__minus_10_dot_63472652_comma__minus_10_dot_63472652_comma_2_dot_176296948_comma_2_dot_176296948_comma_3_dot_492494584_comma_3_dot_492494584)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 32 / 245
Motion planning for: train/pick_and_place_simple-TomatoSliced-None-CounterTop-25/trial_T20190908_233907_188674
Proposed goal is: 
(:goal
	(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(sliceable ?o)
		(isSliced ?o)))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'SliceObject_2', 'postcondition_ground_predicates': [{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'sliceable', 'arguments': ['tomato'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject butterknife)
(SliceObject tomato)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['tomato', 'countertop'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'SliceObject_2',
 'postcondition_ground_predicates': [{'arguments': ['tomato'],
                                      'is_neg': False,
                                      'predicate_name': 'isSliced'}],
 'precondition_ground_predicates': [{'arguments': ['tomato'],
                                     'is_neg': False,
                                     'predicate_name': 'sliceable'}]}

GOAL OBJECT SET:
[('Tomato|-02.66|+00.87|+00.54',)]

PERMISSIBLE OBJECT SET:
[('Tomato|-02.66|+00.87|+00.54',)]


Permissible Objects:
('Tomato|-02.66|+00.87|+00.54',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.66|+00.87|+00.54"})]
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.66|+00.87|+00.54"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.66|+00.87|+00.54',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Tomato|-02.66|+00.87|+00.54',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-02.66|+00.87|+00.54"})]
Error Message: object not found: Tomato|-02.66|+00.87|+00.54
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.66|+00.87|+00.54',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-02.66|+00.87|+00.54"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.66|+00.87|+00.54',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.66|+00.87|+00.54"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Tomato|-02.66|+00.87|+00.54',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.66|+00.87|+00.54", "receptacle_object_id": "Tomato|-02.66|+00.87|+00.54"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.66|+00.87|+00.54',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.66|+00.87|+00.54"})]
Error Message: object not found: Tomato|-02.66|+00.87|+00.54
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.66|+00.87|+00.54',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-02.66|+00.87|+00.54"})]
Error Message: object not found: Tomato|-02.66|+00.87|+00.54
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.66|+00.87|+00.54',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.66|+00.87|+00.54"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.66|+00.87|+00.54',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.66|+00.87|+00.54"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-02.66|+00.87|+00.54"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Tomato|-02.66|+00.87|+00.54',)) True
	 State: False

Error Message: object not found: Tomato|-02.66|+00.87|+00.54
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.66|+00.87|+00.54',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.66|+00.87|+00.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-02.66|+00.87|+00.54"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Tomato|-02.66|+00.87|+00.54',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.66|+00.87|+00.54',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.66|+00.87|+00.54"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.66|+00.87|+00.54"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Tomato|-02.66|+00.87|+00.54',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.66|+00.87|+00.54',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.66|+00.87|+00.54"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.66|+00.87|+00.54", "receptacle_object_id": "Tomato|-02.66|+00.87|+00.54"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Tomato|-02.66|+00.87|+00.54',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.66|+00.87|+00.54',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.66|+00.87|+00.54"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.66|+00.87|+00.54"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Tomato|-02.66|+00.87|+00.54',)) True
	 State: False

Error Message: object not found: Tomato|-02.66|+00.87|+00.54
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.66|+00.87|+00.54',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.66|+00.87|+00.54"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-02.66|+00.87|+00.54"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Tomato|-02.66|+00.87|+00.54',)) True
	 State: False

Error Message: object not found: Tomato|-02.66|+00.87|+00.54
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.66|+00.87|+00.54',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.66|+00.87|+00.54"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.66|+00.87|+00.54"})]
Action feasible: True
	 Fluent(predicate='isSliced', objects=('Tomato|-02.66|+00.87|+00.54',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.66|+00.87|+00.54',)) True
	 State: False

--------
ADDING TO ABSTRACT TREE:
Goal: (Literal(neg=False, fluent=Fluent(predicate='holds', objects=('0',))), Literal(neg=True, fluent=Fluent(predicate='inReceptacle', objects=('0', '2'))), Literal(neg=True, fluent=Fluent(predicate='inReceptacle', objects=('1', '2'))))
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "0"})]
Goal to Traj Map: {'0': '0', '1': None, '2': None}
--------
Rollout 14/50
=============================================
Problem Number: 32
Problem ID: train/pick_and_place_simple-TomatoSliced-None-CounterTop-25/trial_T20190908_233907_188674
Motion plan result: task_success: False
Total Actions Taken: 15
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 6.1 / 6.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 1.1 / 1.1
CutObject_0 1.0 1.1 / 1.1
ChillObject_1 1.0 1.1 / 1.1
TakeObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
CutObject_1 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8713826366559485 27.1 / 31.1
PlaceObject_0 0.7802197802197802 7.1 / 9.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 32 / 245, train/pick_and_place_simple-TomatoSliced-None-CounterTop-25/trial_T20190908_233907_188674
Now attempting to plan for goal: 1 / 4
	Running planner with existing operators + 40 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	slice off the top of a tomato while holding a butter knife.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?o - object)
(exists (?a - agent)
(and 
		(objectType ?o TomatoType)
		(sliceable ?o)
		(isSliced ?o)
		(holds ?a ButterKnife))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: False
	 Plan string: Plan not found with FD! Error: INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpnlr40hen /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp_hke0z_l --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp83wv9zte
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.006s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 326 rules.
Computing model... [0.090s CPU, 0.087s wall-clock]
8647 relevant atoms
11452 auxiliary atoms
20099 final queue length
31189 total queue pushes
Completing instantiation... [0.100s CPU, 0.099s wall-clock]
Instantiating: [0.200s CPU, 0.200s wall-clock]
No relaxed solution! Generating unsolvable task...
Translator variables: 1
Translator derived variables: 0
Translator facts: 2
Translator goal facts: 1
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 0
Translator axioms: 0
Translator task size: 4
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.200s CPU, 0.206s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp83wv9zte
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp83wv9zte
[t=0.00185172s, 408503536 KB] reading input...
[t=0.00206632s, 408503536 KB] done reading input!
[t=0.00607821s, 408529136 KB] Initializing landmark sum heuristic...
[t=0.00608784s, 408529136 KB] Generating landmark graph...
[t=0.00610293s, 408529136 KB] Building a landmark graph with reasonable orders.
[t=0.00610629s, 408529136 KB] Initializing Exploration...
[t=0.00612068s, 408529136 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.00615242s, 408529136 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00616697s, 408529136 KB] Landmarks generation time: 6.2566e-05s
[t=0.00616988s, 408529136 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.006173s, 408529136 KB] 1 edges
[t=0.0061753s, 408529136 KB] approx. reasonable orders
[t=0.00617813s, 408529136 KB] approx. obedient reasonable orders
[t=0.00618083s, 408529136 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00618325s, 408529136 KB] Landmarks generation time: 9.4095e-05s
[t=0.00618538s, 408529136 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00618797s, 408529136 KB] 1 edges
[t=0.00618985s, 408529136 KB] Landmark graph generation time: 0.000103279s
[t=0.00619203s, 408529136 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00619485s, 408529136 KB] Landmark graph contains 1 orderings.
[t=0.00620301s, 408529136 KB] Simplifying 0 unary operators... done! [0 unary operators]
[t=0.00620662s, 408529136 KB] time to simplify: 4.838e-06s
[t=0.0062092s, 408529136 KB] Initializing additive heuristic...
[t=0.00621109s, 408529136 KB] Initializing FF heuristic...
[t=0.00625176s, 408529136 KB] Building successor generator...done!
[t=0.00625779s, 408529136 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00626045s, 408529136 KB] time for successor generation creation: 8.2e-07s
[t=0.00626341s, 408529136 KB] Variables: 1
[t=0.00626574s, 408529136 KB] FactPairs: 2
[t=0.00626767s, 408529136 KB] Bytes per state: 4
[t=0.00629284s, 408529136 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00629678s, 408529136 KB] 1 initial landmarks, 1 goal landmarks
[t=0.006314s, 408529136 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity
[t=0.00631695s, 408529136 KB] Completely explored state space -- no solution!
[t=0.00631888s, 408529136 KB] Actual search time: 2.0623e-05s
[t=0.00632142s, 408529136 KB] Expanded 0 state(s).
[t=0.00632142s, 408529136 KB] Reopened 0 state(s).
[t=0.00632142s, 408529136 KB] Evaluated 1 state(s).
[t=0.00632142s, 408529136 KB] Evaluations: 1
[t=0.00632142s, 408529136 KB] Generated 0 state(s).
[t=0.00632142s, 408529136 KB] Dead ends: 1 state(s).
[t=0.00632142s, 408529136 KB] Number of registered states: 1
[t=0.00632142s, 408529136 KB] Int hash set load factor: 1/1 = 1
[t=0.00632142s, 408529136 KB] Int hash set resizes: 0
[t=0.00632142s, 408529136 KB] Search time: 2.8823e-05s
[t=0.00632142s, 408529136 KB] Total time: 0.00632142s
Search stopped without finding a solution.
Peak memory: 408529136 KB
search exit code: 12

Driver aborting after search
INFO     Planner time: 0.26s
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 32 / 245, train/pick_and_place_simple-TomatoSliced-None-CounterTop-25/trial_T20190908_233907_188674
Now attempting to plan for goal: 2 / 4
	Running planner with existing operators + 42 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	slice off the top of a tomato while holding a butter knife.
	 Ground truth goal: 
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?o2 - object)
(exists (?o1 - object)
(exists (?a - agent)
(and 
		(objectType ?o1 TomatoType)
		(objectType ?o2 ButterKnifeType)
		(holds ?a ?o2)
		(sliceable ?o1)
		(isSliced ?o1)))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_8_bar_7_bar_3_bar_30 loc_bar__minus_6_bar_4_bar_2_bar_60)
(gotolocation agent1 loc_bar__minus_6_bar_4_bar_2_bar_60 loc_bar__minus_8_bar_4_bar_3_bar_45)
(takeobject_0 agent1 loc_bar__minus_8_bar_4_bar_3_bar_45 butterknife__minus_10_dot_63472652_comma__minus_10_dot_63472652_comma_3_dot_485373736_comma_3_dot_485373736_comma_3_dot_294568_comma_3_dot_294568)
(cutobject_1 butterknife__minus_10_dot_63472652_comma__minus_10_dot_63472652_comma_3_dot_485373736_comma_3_dot_485373736_comma_3_dot_294568_comma_3_dot_294568 agent1 loc_bar__minus_8_bar_4_bar_3_bar_45 tomato__minus_10_dot_63472652_comma__minus_10_dot_63472652_comma_2_dot_176296948_comma_2_dot_176296948_comma_3_dot_492494584_comma_3_dot_492494584)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 32 / 245
Motion planning for: train/pick_and_place_simple-TomatoSliced-None-CounterTop-25/trial_T20190908_233907_188674
Proposed goal is: 
(:goal
	(exists (?o2 - object)
(exists (?o1 - object)
(exists (?a - agent)
(and 
		(objectType ?o1 TomatoType)
		(objectType ?o2 ButterKnifeType)
		(holds ?a ?o2)
		(sliceable ?o1)
		(isSliced ?o1)))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['butterknife'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'CutObject_1', 'postcondition_ground_predicates': [{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['butterknife'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject butterknife)
(SliceObject tomato)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['tomato', 'countertop'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['butterknife'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('ButterKnife|-01.88|+00.82|+00.52',), ('ButterKnife|-02.66|+00.82|+00.87',)]

PERMISSIBLE OBJECT SET:
[('ButterKnife|-01.88|+00.82|+00.52',), ('ButterKnife|-02.66|+00.82|+00.87',)]


Permissible Objects:
('ButterKnife|-01.88|+00.82|+00.52',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "ButterKnife|-01.88|+00.82|+00.52"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "ButterKnife|-01.88|+00.82|+00.52"})]
Action feasible: True

OPERATOR:
{'action': 'CutObject_1',
 'postcondition_ground_predicates': [{'arguments': ['tomato'],
                                      'is_neg': False,
                                      'predicate_name': 'isSliced'}],
 'precondition_ground_predicates': [{'arguments': ['butterknife'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Tomato|-02.66|+00.87|+00.54',),
 ('Tomato|-02.66|+00.87|+00.54',),
 ('Tomato|-02.66|+00.87|+00.54',),
 ('Tomato|-02.66|+00.87|+00.54',)]

PERMISSIBLE OBJECT SET:
[('Tomato|-02.66|+00.87|+00.54',),
 ('Tomato|-02.66|+00.87|+00.54', 'ButterKnife|-01.88|+00.82|+00.52'),
 ('Tomato|-02.66|+00.87|+00.54', 'ButterKnife|-02.66|+00.82|+00.87'),
 ('Tomato|-02.66|+00.87|+00.54',
  'ButterKnife|-02.66|+00.82|+00.87',
  'ButterKnife|-01.88|+00.82|+00.52')]


Permissible Objects:
('Tomato|-02.66|+00.87|+00.54',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.66|+00.87|+00.54"})]
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.66|+00.87|+00.54"})]
Action feasible: True


Motion plan operator success!: {'action': 'CutObject_1', 'postcondition_ground_predicates': [{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['butterknife'], 'is_neg': False}]}
=============================================
Problem Number: 32
Problem ID: train/pick_and_place_simple-TomatoSliced-None-CounterTop-25/trial_T20190908_233907_188674
Motion plan result: task_success: True
Total Actions Taken: 2
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 6.1 / 6.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 1.1 / 1.1
CutObject_0 1.0 1.1 / 1.1
CutObject_1 1.0 1.1 / 1.1
ChillObject_1 1.0 1.1 / 1.1
TakeObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8753894080996885 28.1 / 32.1
PlaceObject_0 0.7802197802197802 7.1 / 9.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 8 / 33 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
task_planner.attempt_task_plan_for_problem: attempt 0 : 33 / 245, train/pick_heat_then_place_in_recep-Apple-None-GarbageCan-12/trial_T20190908_172302_166350
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 41 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	put a warmed apple in the trash can.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_1_bar_2_bar_1_bar_30 loc_bar_4_bar_11_bar_1_bar_60)
(takeobject_0 agent1 loc_bar_4_bar_11_bar_1_bar_60 apple_6_dot_092044_comma_6_dot_092044_comma_11_dot_38923264_comma_11_dot_38923264_comma_0_dot_477743984_comma_0_dot_477743984)
(gotolocation agent1 loc_bar_4_bar_11_bar_1_bar_60 loc_bar_4_bar_6_bar_1_bar_15)
(warmobject_0 microwave_6_dot_528_comma_6_dot_528_comma_6_dot_584_comma_6_dot_584_comma_5_dot_92407848_comma_5_dot_92407848 agent1 loc_bar_4_bar_6_bar_1_bar_15 apple_6_dot_092044_comma_6_dot_092044_comma_11_dot_38923264_comma_11_dot_38923264_comma_0_dot_477743984_comma_0_dot_477743984)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 33 / 245
Motion planning for: train/pick_heat_then_place_in_recep-Apple-None-GarbageCan-12/trial_T20190908_172302_166350
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r GarbageCanType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['apple'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'WarmObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'isHot', 'arguments': ['apple'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['microwave', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['apple'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation garbagecan)
(PickupObject apple)
(GotoLocation microwave)
(HeatObject apple)
(GotoLocation garbagecan)
(PutObject apple garbagecan)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['apple', 'garbagecan'], 'is_neg': False}

{'predicate_name': 'heatable', 'arguments': ['apple'], 'is_neg': False}

{'predicate_name': 'isHot', 'arguments': ['apple'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['apple'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Apple|-01.02|+01.37|+00.04',),
 ('Apple|+01.52|+00.12|+02.85',),
 ('Apple|-00.88|+01.55|+00.12',)]

PERMISSIBLE OBJECT SET:
[('Apple|-01.02|+01.37|+00.04',),
 ('Apple|+01.52|+00.12|+02.85',),
 ('Apple|-00.88|+01.55|+00.12',)]


Permissible Objects:
('Apple|-01.02|+01.37|+00.04',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.02|+01.37|+00.04"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.02|+01.37|+00.04"})]
Error Message: Apple|-01.02|+01.37|+00.04 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.02|+01.37|+00.04',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Apple|+01.52|+00.12|+02.85',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.52|+00.12|+02.85"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.52|+00.12|+02.85"})]
Error Message: Apple|+01.52|+00.12|+02.85 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.52|+00.12|+02.85',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Apple|-00.88|+01.55|+00.12',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.88|+01.55|+00.12"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.88|+01.55|+00.12"})]
Error Message: Apple|-00.88|+01.55|+00.12 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.88|+01.55|+00.12',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Apple|-01.02|+01.37|+00.04',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-01.02|+01.37|+00.04"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.02|+01.37|+00.04',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-01.02|+01.37|+00.04"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.02|+01.37|+00.04',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.02|+01.37|+00.04"})]
Error Message: Apple|-01.02|+01.37|+00.04 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.02|+01.37|+00.04',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-01.02|+01.37|+00.04", "receptacle_object_id": "Apple|-01.02|+01.37|+00.04"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.02|+01.37|+00.04',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-01.02|+01.37|+00.04"})]
Error Message: object not found: Apple|-01.02|+01.37|+00.04
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.02|+01.37|+00.04',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-01.02|+01.37|+00.04"})]
Error Message: object not found: Apple|-01.02|+01.37|+00.04
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.02|+01.37|+00.04',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-01.02|+01.37|+00.04"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.02|+01.37|+00.04',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Apple|+01.52|+00.12|+02.85',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+01.52|+00.12|+02.85"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.52|+00.12|+02.85',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+01.52|+00.12|+02.85"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.52|+00.12|+02.85',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+01.52|+00.12|+02.85"})]
Error Message: Apple|+01.52|+00.12|+02.85 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.52|+00.12|+02.85',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+01.52|+00.12|+02.85", "receptacle_object_id": "Apple|+01.52|+00.12|+02.85"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.52|+00.12|+02.85',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+01.52|+00.12|+02.85"})]
Error Message: object not found: Apple|+01.52|+00.12|+02.85
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.52|+00.12|+02.85',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+01.52|+00.12|+02.85"})]
Error Message: object not found: Apple|+01.52|+00.12|+02.85
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.52|+00.12|+02.85',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+01.52|+00.12|+02.85"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+01.52|+00.12|+02.85',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Apple|-00.88|+01.55|+00.12',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.88|+01.55|+00.12"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.88|+01.55|+00.12',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.88|+01.55|+00.12"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.88|+01.55|+00.12',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.88|+01.55|+00.12"})]
Error Message: Apple|-00.88|+01.55|+00.12 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.88|+01.55|+00.12',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.88|+01.55|+00.12", "receptacle_object_id": "Apple|-00.88|+01.55|+00.12"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.88|+01.55|+00.12',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-00.88|+01.55|+00.12"})]
Error Message: object not found: Apple|-00.88|+01.55|+00.12
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.88|+01.55|+00.12',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-00.88|+01.55|+00.12"})]
Error Message: object not found: Apple|-00.88|+01.55|+00.12
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.88|+01.55|+00.12',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.88|+01.55|+00.12"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.88|+01.55|+00.12',)) True
	 State: False

Rollout 7/50
=============================================
Problem Number: 33
Problem ID: train/pick_heat_then_place_in_recep-Apple-None-GarbageCan-12/trial_T20190908_172302_166350
Motion plan result: task_success: False
Total Actions Taken: 24
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 6.1 / 6.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 1.1 / 1.1
CutObject_0 1.0 1.1 / 1.1
CutObject_1 1.0 1.1 / 1.1
ChillObject_1 1.0 1.1 / 1.1
TakeObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8489425981873112 28.1 / 33.1
PlaceObject_0 0.7802197802197802 7.1 / 9.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 33 / 245, train/pick_heat_then_place_in_recep-Apple-None-GarbageCan-12/trial_T20190908_172302_166350
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 33 / 245, train/pick_heat_then_place_in_recep-Apple-None-GarbageCan-12/trial_T20190908_172302_166350
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 33 / 245, train/pick_heat_then_place_in_recep-Apple-None-GarbageCan-12/trial_T20190908_172302_166350
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 34 / 245, train/look_at_obj_in_light-Statue-None-FloorLamp-223/trial_T20190908_211145_259174
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 41 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	examine a statue in the light of a tall lamp.
	 Ground truth goal: 
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o StatueType)
                (holds ?a ?o)
            )
    ))))))
	 Proposed goal:
	(:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o StatueType)
		(holds ?a ?o))))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_13_bar_1_bar_2_bar_30 loc_bar_8_bar__minus_5_bar_0_bar_45)
(takeobject_0 agent1 loc_bar_8_bar__minus_5_bar_0_bar_45 statue_8_dot_42245484_comma_8_dot_42245484_comma__minus_1_dot_660937428_comma__minus_1_dot_660937428_comma_3_dot_177456_comma_3_dot_177456)
(gotolocation agent1 loc_bar_8_bar__minus_5_bar_0_bar_45 loc_bar__minus_5_bar_9_bar_1_bar_0)
(turnonlamp_1 agent1 loc_bar__minus_5_bar_9_bar_1_bar_0 floorlamp__minus_1_dot_32447_comma__minus_1_dot_32447_comma_10_dot_91228484_comma_10_dot_91228484_comma_0_dot_0_comma_0_dot_0 floorlamp__minus_1_dot_32447_comma__minus_1_dot_32447_comma_10_dot_91228484_comma_10_dot_91228484_comma_0_dot_0_comma_0_dot_0)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 34 / 245
Motion planning for: train/look_at_obj_in_light-Statue-None-FloorLamp-223/trial_T20190908_211145_259174
Proposed goal is: 
(:goal
	(exists (?ot - object)
(exists (?o - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?ot FloorLampType)
		(toggleable ?ot)
		(isToggled ?ot)
		(objectAtLocation ?ot ?l)
		(atLocation ?a ?l)
		(objectType ?o StatueType)
		(holds ?a ?o))))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o StatueType)
                (holds ?a ?o)
            )
    ))))))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['statue'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'TurnOnLamp_1', 'postcondition_ground_predicates': [{'predicate_name': 'isOn', 'arguments': ['floorlamp'], 'is_neg': False}, {'predicate_name': 'isToggled', 'arguments': ['floorlamp'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'toggleable', 'arguments': ['floorlamp'], 'is_neg': False}, {'predicate_name': 'toggleable', 'arguments': ['floorlamp'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation statue)
(PickupObject statue)
(GotoLocation floorlamp)
(ToggleObject floorlamp)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'toggleable', 'arguments': ['floorlamp'], 'is_neg': False}

{'predicate_name': 'isToggled', 'arguments': ['floorlamp'], 'is_neg': False}

{'predicate_name': 'holds', 'arguments': ['?a', 'statue'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['statue'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Statue|-03.59|+00.71|+01.43',), ('Statue|+02.11|+00.79|-00.42',)]

PERMISSIBLE OBJECT SET:
[('Statue|-03.59|+00.71|+01.43',), ('Statue|+02.11|+00.79|-00.42',)]


Permissible Objects:
('Statue|-03.59|+00.71|+01.43',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Statue|-03.59|+00.71|+01.43"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Statue|-03.59|+00.71|+01.43"})]
Action feasible: True

OPERATOR:
{'action': 'TurnOnLamp_1',
 'postcondition_ground_predicates': [{'arguments': ['floorlamp'],
                                      'is_neg': False,
                                      'predicate_name': 'isOn'},
                                     {'arguments': ['floorlamp'],
                                      'is_neg': False,
                                      'predicate_name': 'isToggled'}],
 'precondition_ground_predicates': [{'arguments': ['floorlamp'],
                                     'is_neg': False,
                                     'predicate_name': 'toggleable'},
                                    {'arguments': ['floorlamp'],
                                     'is_neg': False,
                                     'predicate_name': 'toggleable'}]}

GOAL OBJECT SET:
[('FloorLamp|-00.33|+00.00|+02.73',), ('FloorLamp|-00.33|+00.00|+02.73',)]

PERMISSIBLE OBJECT SET:
[('FloorLamp|-00.33|+00.00|+02.73',),
 ('FloorLamp|-00.33|+00.00|+02.73', 'Statue|-03.59|+00.71|+01.43')]


Permissible Objects:
('FloorLamp|-00.33|+00.00|+02.73',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "FloorLamp|-00.33|+00.00|+02.73"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "FloorLamp|-00.33|+00.00|+02.73"})]
Action feasible: True


Motion plan operator success!: {'action': 'TurnOnLamp_1', 'postcondition_ground_predicates': [{'predicate_name': 'isOn', 'arguments': ['floorlamp'], 'is_neg': False}, {'predicate_name': 'isToggled', 'arguments': ['floorlamp'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'toggleable', 'arguments': ['floorlamp'], 'is_neg': False}, {'predicate_name': 'toggleable', 'arguments': ['floorlamp'], 'is_neg': False}]}
=============================================
Problem Number: 34
Problem ID: train/look_at_obj_in_light-Statue-None-FloorLamp-223/trial_T20190908_211145_259174
Motion plan result: task_success: True
Total Actions Taken: 2
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 1.1 / 1.1
CutObject_0 1.0 1.1 / 1.1
CutObject_1 1.0 1.1 / 1.1
ChillObject_1 1.0 1.1 / 1.1
TakeObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8533724340175953 29.1 / 34.1
PlaceObject_0 0.7802197802197802 7.1 / 9.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 9 / 35 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 35 / 245, train/pick_and_place_simple-Box-None-DiningTable-223/trial_T20190907_201444_740434
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 43 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	put a box on a table.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BoxType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_14_bar__minus_5_bar_2_bar_30 loc_bar__minus_11_bar__minus_2_bar_3_bar_60)
(takeobject_0 agent1 loc_bar__minus_11_bar__minus_2_bar_3_bar_60 box__minus_13_dot_019784_comma__minus_13_dot_019784_comma__minus_2_dot_209903_comma__minus_2_dot_209903_comma_2_dot_946186_comma_2_dot_946186)
(gotolocation agent1 loc_bar__minus_11_bar__minus_2_bar_3_bar_60 loc_bar_8_bar__minus_5_bar_0_bar_60)
(placeobject_0 agent1 loc_bar_8_bar__minus_5_bar_0_bar_60 diningtable_7_dot_536_comma_7_dot_536_comma__minus_1_dot_168_comma__minus_1_dot_168_comma__minus_0_dot_0148_comma__minus_0_dot_0148 box__minus_13_dot_019784_comma__minus_13_dot_019784_comma__minus_2_dot_209903_comma__minus_2_dot_209903_comma_2_dot_946186_comma_2_dot_946186)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 35 / 245
Motion planning for: train/pick_and_place_simple-Box-None-DiningTable-223/trial_T20190907_201444_740434
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BoxType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BoxType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['box'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['box', 'diningtable'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['diningtable', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['box'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation box)
(PickupObject box)
(GotoLocation diningtable)
(PutObject box diningtable)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['box', 'diningtable'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['box'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Box|+01.27|+00.16|-00.29',), ('Box|-03.25|+00.74|-00.55',)]

PERMISSIBLE OBJECT SET:
[('Box|+01.27|+00.16|-00.29',), ('Box|-03.25|+00.74|-00.55',)]


Permissible Objects:
('Box|+01.27|+00.16|-00.29',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Box|+01.27|+00.16|-00.29"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Box|+01.27|+00.16|-00.29"})]
Action feasible: True

OPERATOR:
{'action': 'PlaceObject_0',
 'postcondition_ground_predicates': [{'arguments': ['box', 'diningtable'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'}],
 'precondition_ground_predicates': [{'arguments': ['diningtable', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['box'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Box|+01.27|+00.16|-00.29', 'DiningTable|+01.88|00.00|-00.29'),
 ('Box|+01.27|+00.16|-00.29', 'DiningTable|-01.88|+00.27|+02.79'),
 ('Box|-03.25|+00.74|-00.55', 'DiningTable|+01.88|00.00|-00.29'),
 ('Box|-03.25|+00.74|-00.55', 'DiningTable|+01.88|00.00|-00.29'),
 ('Box|-03.25|+00.74|-00.55', 'DiningTable|-01.88|+00.27|+02.79'),
 ('Box|-03.25|+00.74|-00.55', 'DiningTable|-01.88|+00.27|+02.79')]

PERMISSIBLE OBJECT SET:
[('Box|+01.27|+00.16|-00.29', 'DiningTable|+01.88|00.00|-00.29'),
 ('Box|+01.27|+00.16|-00.29', 'DiningTable|-01.88|+00.27|+02.79'),
 ('Box|-03.25|+00.74|-00.55', 'DiningTable|+01.88|00.00|-00.29'),
 ('Box|-03.25|+00.74|-00.55',
  'DiningTable|+01.88|00.00|-00.29',
  'Box|+01.27|+00.16|-00.29'),
 ('Box|-03.25|+00.74|-00.55', 'DiningTable|-01.88|+00.27|+02.79'),
 ('Box|-03.25|+00.74|-00.55',
  'DiningTable|-01.88|+00.27|+02.79',
  'Box|+01.27|+00.16|-00.29')]


Permissible Objects:
('Box|+01.27|+00.16|-00.29', 'DiningTable|+01.88|00.00|-00.29')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "DiningTable|+01.88|00.00|-00.29"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "DiningTable|+01.88|00.00|-00.29"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Box|+01.27|+00.16|-00.29', 'DiningTable|+01.88|00.00|-00.29')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Box|+01.27|+00.16|-00.29", "receptacle_object_id": "DiningTable|+01.88|00.00|-00.29"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Box|+01.27|+00.16|-00.29", "receptacle_object_id": "DiningTable|+01.88|00.00|-00.29"})]
Action feasible: True


CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
Motion plan operator success!: {'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['box', 'diningtable'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['diningtable', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['box'], 'is_neg': False}]}
=============================================
Problem Number: 35
Problem ID: train/pick_and_place_simple-Box-None-DiningTable-223/trial_T20190907_201444_740434
Motion plan result: task_success: True
Total Actions Taken: 3
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 1.1 / 1.1
CutObject_0 1.0 1.1 / 1.1
CutObject_1 1.0 1.1 / 1.1
ChillObject_1 1.0 1.1 / 1.1
TakeObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_0 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8575498575498576 30.1 / 35.1
PlaceObject_0 0.801980198019802 8.1 / 10.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 36 / 245, train/pick_cool_then_place_in_recep-Cup-None-Microwave-6/trial_T20190909_012449_018469
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 40 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	place a cooled cup inside the microwave.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CupType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_2_bar__minus_2_bar_2_bar_30 loc_bar_4_bar_2_bar_1_bar_60)
(gotolocation agent1 loc_bar_4_bar_2_bar_1_bar_60 loc_bar__minus_7_bar_10_bar_3_bar_30)
(takeobject_1 agent1 loc_bar__minus_7_bar_10_bar_3_bar_30 cup__minus_10_dot_4132_comma__minus_10_dot_4132_comma_9_dot_9274502_comma_9_dot_9274502_comma_4_dot_05306196_comma_4_dot_05306196)
(coolobject_0 agent1 loc_bar__minus_7_bar_10_bar_3_bar_30 cup__minus_10_dot_4132_comma__minus_10_dot_4132_comma_9_dot_9274502_comma_9_dot_9274502_comma_4_dot_05306196_comma_4_dot_05306196 cup__minus_10_dot_4132_comma__minus_10_dot_4132_comma_9_dot_9274502_comma_9_dot_9274502_comma_4_dot_05306196_comma_4_dot_05306196)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 36 / 245
Motion planning for: train/pick_cool_then_place_in_recep-Cup-None-Microwave-6/trial_T20190909_012449_018469
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CupType)
		(receptacleType ?r MicrowaveType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_1', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['cup'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'CoolObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'isCool', 'arguments': ['cup'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'coolable', 'arguments': ['cup'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['cup'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation cabinet)
(PickupObject cup)
(GotoLocation fridge)
(CoolObject cup)
(GotoLocation microwave)
(PutObject cup microwave)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['cup', 'microwave'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['cup'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['cup'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_1',
 'postcondition_ground_predicates': [{'arguments': ['cup'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Cup|-02.38|+00.11|+00.03',),
 ('Cup|-00.47|+00.91|+01.54',),
 ('Cup|-02.60|+01.01|+02.48',),
 ('Cup|+01.34|+00.91|+00.44',)]

PERMISSIBLE OBJECT SET:
[('Cup|-02.38|+00.11|+00.03',),
 ('Cup|-00.47|+00.91|+01.54',),
 ('Cup|-02.60|+01.01|+02.48',),
 ('Cup|+01.34|+00.91|+00.44',)]


Permissible Objects:
('Cup|-02.38|+00.11|+00.03',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-02.38|+00.11|+00.03"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-02.38|+00.11|+00.03"})]
Error Message: Cup|-02.38|+00.11|+00.03 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Cup|-00.47|+00.91|+01.54',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Action feasible: True

OPERATOR:
{'action': 'CoolObject_0',
 'postcondition_ground_predicates': [{'arguments': ['cup'],
                                      'is_neg': False,
                                      'predicate_name': 'isCool'}],
 'precondition_ground_predicates': [{'arguments': ['cup'],
                                     'is_neg': False,
                                     'predicate_name': 'coolable'},
                                    {'arguments': ['cup'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Cup|-02.38|+00.11|+00.03',),
 ('Cup|-02.38|+00.11|+00.03',),
 ('Cup|-00.47|+00.91|+01.54',),
 ('Cup|-02.60|+01.01|+02.48',),
 ('Cup|-02.60|+01.01|+02.48',),
 ('Cup|+01.34|+00.91|+00.44',),
 ('Cup|+01.34|+00.91|+00.44',)]

PERMISSIBLE OBJECT SET:
[('Cup|-02.38|+00.11|+00.03',),
 ('Cup|-02.38|+00.11|+00.03', 'Cup|-00.47|+00.91|+01.54'),
 ('Cup|-00.47|+00.91|+01.54',),
 ('Cup|-02.60|+01.01|+02.48',),
 ('Cup|-02.60|+01.01|+02.48', 'Cup|-00.47|+00.91|+01.54'),
 ('Cup|+01.34|+00.91|+00.44',),
 ('Cup|+01.34|+00.91|+00.44', 'Cup|-00.47|+00.91|+01.54')]


Permissible Objects:
('Cup|-02.38|+00.11|+00.03',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-02.38|+00.11|+00.03"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-02.38|+00.11|+00.03"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Cup|-02.38|+00.11|+00.03', 'Cup|-00.47|+00.91|+01.54')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-02.38|+00.11|+00.03"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-02.38|+00.11|+00.03"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-02.38|+00.11|+00.03", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-02.38|+00.11|+00.03", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-02.38|+00.11|+00.03", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-02.38|+00.11|+00.03", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: object not found: Cup|-00.47|+00.91|+01.54
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-02.38|+00.11|+00.03"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-02.38|+00.11|+00.03", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-02.38|+00.11|+00.03"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-02.38|+00.11|+00.03", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-02.38|+00.11|+00.03"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-00.47|+00.91|+01.54", "receptacle_object_id": "Cup|-02.38|+00.11|+00.03"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-02.38|+00.11|+00.03"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-02.38|+00.11|+00.03"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-00.47|+00.91|+01.54", "receptacle_object_id": "Cup|-02.38|+00.11|+00.03"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-02.38|+00.11|+00.03"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-00.47|+00.91|+01.54", "receptacle_object_id": "Cup|-02.38|+00.11|+00.03"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-02.38|+00.11|+00.03"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-00.47|+00.91|+01.54", "receptacle_object_id": "Cup|-02.38|+00.11|+00.03"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-02.38|+00.11|+00.03"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Cup|-00.47|+00.91|+01.54',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-00.47|+00.91|+01.54',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Cup|-02.60|+01.01|+02.48',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-02.60|+01.01|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-02.60|+01.01|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Cup|-02.60|+01.01|+02.48', 'Cup|-00.47|+00.91|+01.54')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-02.60|+01.01|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-02.60|+01.01|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-02.60|+01.01|+02.48", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-02.60|+01.01|+02.48", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-02.60|+01.01|+02.48", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-02.60|+01.01|+02.48", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: object not found: Cup|-00.47|+00.91|+01.54
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-02.60|+01.01|+02.48"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-02.60|+01.01|+02.48", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-02.60|+01.01|+02.48"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-02.60|+01.01|+02.48", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-02.60|+01.01|+02.48"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-00.47|+00.91|+01.54", "receptacle_object_id": "Cup|-02.60|+01.01|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-02.60|+01.01|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-02.60|+01.01|+02.48"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-00.47|+00.91|+01.54", "receptacle_object_id": "Cup|-02.60|+01.01|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-02.60|+01.01|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-00.47|+00.91|+01.54", "receptacle_object_id": "Cup|-02.60|+01.01|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-02.60|+01.01|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-00.47|+00.91|+01.54", "receptacle_object_id": "Cup|-02.60|+01.01|+02.48"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-02.60|+01.01|+02.48"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Cup|+01.34|+00.91|+00.44',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|+01.34|+00.91|+00.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|+01.34|+00.91|+00.44"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Cup|+01.34|+00.91|+00.44', 'Cup|-00.47|+00.91|+01.54')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|+01.34|+00.91|+00.44"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|+01.34|+00.91|+00.44"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|+01.34|+00.91|+00.44", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|+01.34|+00.91|+00.44", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|+01.34|+00.91|+00.44", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|+01.34|+00.91|+00.44", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: object not found: Cup|-00.47|+00.91|+01.54
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|+01.34|+00.91|+00.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|+01.34|+00.91|+00.44", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|+01.34|+00.91|+00.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|+01.34|+00.91|+00.44", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|+01.34|+00.91|+00.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-00.47|+00.91|+01.54", "receptacle_object_id": "Cup|+01.34|+00.91|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|+01.34|+00.91|+00.44"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|+01.34|+00.91|+00.44"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-00.47|+00.91|+01.54", "receptacle_object_id": "Cup|+01.34|+00.91|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|+01.34|+00.91|+00.44"})]
Error Message: object not found: Cup|+01.34|+00.91|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-00.47|+00.91|+01.54", "receptacle_object_id": "Cup|+01.34|+00.91|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|+01.34|+00.91|+00.44"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-00.47|+00.91|+01.54", "receptacle_object_id": "Cup|+01.34|+00.91|+00.44"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|+01.34|+00.91|+00.44"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Cup|-02.38|+00.11|+00.03',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-02.38|+00.11|+00.03"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-02.38|+00.11|+00.03"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-02.38|+00.11|+00.03"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-02.38|+00.11|+00.03", "receptacle_object_id": "Cup|-02.38|+00.11|+00.03"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-02.38|+00.11|+00.03"})]
Error Message: object not found: Cup|-02.38|+00.11|+00.03
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|-02.38|+00.11|+00.03"})]
Error Message: object not found: Cup|-02.38|+00.11|+00.03
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Cup|-02.38|+00.11|+00.03"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Cup|-02.38|+00.11|+00.03', 'Cup|-00.47|+00.91|+01.54')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: object not found: Cup|-00.47|+00.91|+01.54
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-02.38|+00.11|+00.03"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-02.38|+00.11|+00.03"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-02.38|+00.11|+00.03"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-00.47|+00.91|+01.54", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-00.47|+00.91|+01.54", "receptacle_object_id": "Cup|-02.38|+00.11|+00.03"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-02.38|+00.11|+00.03", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-02.38|+00.11|+00.03", "receptacle_object_id": "Cup|-02.38|+00.11|+00.03"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: object not found: Cup|-00.47|+00.91|+01.54
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-02.38|+00.11|+00.03"})]
Error Message: object not found: Cup|-02.38|+00.11|+00.03
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: object not found: Cup|-00.47|+00.91|+01.54
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|-02.38|+00.11|+00.03"})]
Error Message: object not found: Cup|-02.38|+00.11|+00.03
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Cup|-02.38|+00.11|+00.03"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.38|+00.11|+00.03',)) True
	 State: False

Rollout 16/50

Permissible Objects:
('Cup|-00.47|+00.91|+01.54',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: object not found: Cup|-00.47|+00.91|+01.54
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-00.47|+00.91|+01.54',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-00.47|+00.91|+01.54',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-00.47|+00.91|+01.54',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-00.47|+00.91|+01.54", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-00.47|+00.91|+01.54',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: object not found: Cup|-00.47|+00.91|+01.54
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-00.47|+00.91|+01.54',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: object not found: Cup|-00.47|+00.91|+01.54
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-00.47|+00.91|+01.54',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-00.47|+00.91|+01.54',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Cup|-02.60|+01.01|+02.48',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-02.60|+01.01|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-02.60|+01.01|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-02.60|+01.01|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-02.60|+01.01|+02.48", "receptacle_object_id": "Cup|-02.60|+01.01|+02.48"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-02.60|+01.01|+02.48"})]
Error Message: object not found: Cup|-02.60|+01.01|+02.48
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|-02.60|+01.01|+02.48"})]
Error Message: object not found: Cup|-02.60|+01.01|+02.48
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Cup|-02.60|+01.01|+02.48"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Cup|-02.60|+01.01|+02.48', 'Cup|-00.47|+00.91|+01.54')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-02.60|+01.01|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: object not found: Cup|-00.47|+00.91|+01.54
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-02.60|+01.01|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-02.60|+01.01|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-02.60|+01.01|+02.48", "receptacle_object_id": "Cup|-02.60|+01.01|+02.48"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-02.60|+01.01|+02.48", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-00.47|+00.91|+01.54", "receptacle_object_id": "Cup|-02.60|+01.01|+02.48"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-00.47|+00.91|+01.54", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-02.60|+01.01|+02.48"})]
Error Message: object not found: Cup|-02.60|+01.01|+02.48
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: object not found: Cup|-00.47|+00.91|+01.54
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|-02.60|+01.01|+02.48"})]
Error Message: object not found: Cup|-02.60|+01.01|+02.48
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: object not found: Cup|-00.47|+00.91|+01.54
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Cup|-02.60|+01.01|+02.48"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|-02.60|+01.01|+02.48',)) True
	 State: False

Rollout 16/50

Permissible Objects:
('Cup|+01.34|+00.91|+00.44',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|+01.34|+00.91|+00.44"})]
Error Message: object not found: Cup|+01.34|+00.91|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|+01.34|+00.91|+00.44"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|+01.34|+00.91|+00.44"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|+01.34|+00.91|+00.44", "receptacle_object_id": "Cup|+01.34|+00.91|+00.44"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|+01.34|+00.91|+00.44"})]
Error Message: object not found: Cup|+01.34|+00.91|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|+01.34|+00.91|+00.44"})]
Error Message: object not found: Cup|+01.34|+00.91|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Cup|+01.34|+00.91|+00.44"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Cup|+01.34|+00.91|+00.44', 'Cup|-00.47|+00.91|+01.54')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: object not found: Cup|-00.47|+00.91|+01.54
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|+01.34|+00.91|+00.44"})]
Error Message: object not found: Cup|+01.34|+00.91|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|+01.34|+00.91|+00.44"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|+01.34|+00.91|+00.44"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-00.47|+00.91|+01.54", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-00.47|+00.91|+01.54", "receptacle_object_id": "Cup|+01.34|+00.91|+00.44"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|+01.34|+00.91|+00.44", "receptacle_object_id": "Cup|-00.47|+00.91|+01.54"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|+01.34|+00.91|+00.44", "receptacle_object_id": "Cup|+01.34|+00.91|+00.44"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: object not found: Cup|-00.47|+00.91|+01.54
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|+01.34|+00.91|+00.44"})]
Error Message: object not found: Cup|+01.34|+00.91|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Error Message: object not found: Cup|-00.47|+00.91|+01.54
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|+01.34|+00.91|+00.44"})]
Error Message: object not found: Cup|+01.34|+00.91|+00.44
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Cup|-00.47|+00.91|+01.54"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Cup|+01.34|+00.91|+00.44"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Cup|+01.34|+00.91|+00.44',)) True
	 State: False

Rollout 16/50
=============================================
Problem Number: 36
Problem ID: train/pick_cool_then_place_in_recep-Cup-None-Microwave-6/trial_T20190909_012449_018469
Motion plan result: task_success: False
Total Actions Taken: 103
Failed at operator: 2 / 2 operators in task plan.
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
TakeObject_1 1.0 2.1 / 2.1
WashObject_1 1.0 1.1 / 1.1
CutObject_0 1.0 1.1 / 1.1
CutObject_1 1.0 1.1 / 1.1
ChillObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8575498575498576 30.1 / 35.1
PlaceObject_0 0.801980198019802 8.1 / 10.1
CoolObject_0 0.09090909090909091 0.1 / 1.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 36 / 245, train/pick_cool_then_place_in_recep-Cup-None-Microwave-6/trial_T20190909_012449_018469
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 36 / 245, train/pick_cool_then_place_in_recep-Cup-None-Microwave-6/trial_T20190909_012449_018469
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 36 / 245, train/pick_cool_then_place_in_recep-Cup-None-Microwave-6/trial_T20190909_012449_018469
Sucessfully found 0 plans for goals.
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 10 / 37 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 37 / 245, train/pick_cool_then_place_in_recep-Egg-None-CounterTop-12/trial_T20190907_151629_832433
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 41 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	cool an egg in the fridge.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_1_bar_9_bar_1_bar_30 loc_bar__minus_1_bar_0_bar_3_bar_60)
(gotolocation agent1 loc_bar__minus_1_bar_0_bar_3_bar_60 loc_bar__minus_1_bar_5_bar_3_bar_45)
(takeobject_0 agent1 loc_bar__minus_1_bar_5_bar_3_bar_45 egg__minus_3_dot_50762_comma__minus_3_dot_50762_comma_4_dot_61625768_comma_4_dot_61625768_comma_3_dot_8922532_comma_3_dot_8922532)
(gotolocation agent1 loc_bar__minus_1_bar_5_bar_3_bar_45 loc_bar__minus_1_bar_0_bar_3_bar_60)
(chillobject_1 fridge__minus_4_dot_004_comma__minus_4_dot_004_comma_0_dot_476_comma_0_dot_476_comma_0_dot_0_comma_0_dot_0 agent1 loc_bar__minus_1_bar_0_bar_3_bar_60 egg__minus_3_dot_50762_comma__minus_3_dot_50762_comma_4_dot_61625768_comma_4_dot_61625768_comma_3_dot_8922532_comma_3_dot_8922532)
(placeobject_0 agent1 loc_bar__minus_1_bar_0_bar_3_bar_60 fridge__minus_4_dot_004_comma__minus_4_dot_004_comma_0_dot_476_comma_0_dot_476_comma_0_dot_0_comma_0_dot_0 egg__minus_3_dot_50762_comma__minus_3_dot_50762_comma_4_dot_61625768_comma_4_dot_61625768_comma_3_dot_8922532_comma_3_dot_8922532)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 37 / 245
Motion planning for: train/pick_cool_then_place_in_recep-Egg-None-CounterTop-12/trial_T20190907_151629_832433
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['egg'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'ChillObject_1', 'postcondition_ground_predicates': [{'predicate_name': 'isCool', 'arguments': ['egg'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['fridge', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['egg'], 'is_neg': False}]}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['egg', 'fridge'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['fridge', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['egg'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject egg)
(GotoLocation fridge)
(CoolObject egg)
(GotoLocation countertop)
(PutObject egg countertop)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['egg', 'countertop'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['egg'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['egg'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['egg'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Egg|+01.42|+00.88|+01.34',),
 ('Egg|-00.88|+00.97|+01.15',),
 ('Egg|+01.60|+00.98|+01.71',),
 ('Egg|+01.67|+00.97|+02.12',)]

PERMISSIBLE OBJECT SET:
[('Egg|+01.42|+00.88|+01.34',),
 ('Egg|-00.88|+00.97|+01.15',),
 ('Egg|+01.60|+00.98|+01.71',),
 ('Egg|+01.67|+00.97|+02.12',)]


Permissible Objects:
('Egg|+01.42|+00.88|+01.34',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Egg|+01.42|+00.88|+01.34"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Egg|+01.42|+00.88|+01.34"})]
Action feasible: True

OPERATOR:
{'action': 'ChillObject_1',
 'postcondition_ground_predicates': [{'arguments': ['egg'],
                                      'is_neg': False,
                                      'predicate_name': 'isCool'}],
 'precondition_ground_predicates': [{'arguments': ['fridge', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['egg'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Egg|+01.42|+00.88|+01.34',),
 ('Egg|+01.42|+00.88|+01.34',),
 ('Egg|-00.88|+00.97|+01.15',),
 ('Egg|-00.88|+00.97|+01.15',),
 ('Egg|-00.88|+00.97|+01.15',),
 ('Egg|+01.60|+00.98|+01.71',),
 ('Egg|+01.60|+00.98|+01.71',),
 ('Egg|+01.60|+00.98|+01.71',),
 ('Egg|+01.67|+00.97|+02.12',),
 ('Egg|+01.67|+00.97|+02.12',),
 ('Egg|+01.67|+00.97|+02.12',)]

PERMISSIBLE OBJECT SET:
[('Egg|+01.42|+00.88|+01.34',),
 ('Egg|+01.42|+00.88|+01.34', 'Fridge|-01.00|+00.00|+00.12'),
 ('Egg|-00.88|+00.97|+01.15',),
 ('Egg|-00.88|+00.97|+01.15', 'Fridge|-01.00|+00.00|+00.12'),
 ('Egg|-00.88|+00.97|+01.15',
  'Fridge|-01.00|+00.00|+00.12',
  'Egg|+01.42|+00.88|+01.34'),
 ('Egg|+01.60|+00.98|+01.71',),
 ('Egg|+01.60|+00.98|+01.71', 'Fridge|-01.00|+00.00|+00.12'),
 ('Egg|+01.60|+00.98|+01.71',
  'Fridge|-01.00|+00.00|+00.12',
  'Egg|+01.42|+00.88|+01.34'),
 ('Egg|+01.67|+00.97|+02.12',),
 ('Egg|+01.67|+00.97|+02.12', 'Fridge|-01.00|+00.00|+00.12'),
 ('Egg|+01.67|+00.97|+02.12',
  'Fridge|-01.00|+00.00|+00.12',
  'Egg|+01.42|+00.88|+01.34')]


Permissible Objects:
('Egg|+01.42|+00.88|+01.34',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Egg|+01.42|+00.88|+01.34"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Egg|+01.42|+00.88|+01.34"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Egg|+01.42|+00.88|+01.34',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Egg|+01.42|+00.88|+01.34', 'Fridge|-01.00|+00.00|+00.12')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.00|+00.00|+00.12"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.00|+00.00|+00.12"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Egg|+01.42|+00.88|+01.34',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Egg|+01.42|+00.88|+01.34"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Egg|+01.42|+00.88|+01.34"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Egg|+01.42|+00.88|+01.34',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Egg|+01.42|+00.88|+01.34", "receptacle_object_id": "Fridge|-01.00|+00.00|+00.12"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.00|+00.00|+00.12"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Egg|+01.42|+00.88|+01.34", "receptacle_object_id": "Fridge|-01.00|+00.00|+00.12"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.00|+00.00|+00.12"})]
Error Message: Target openable Receptacle is CLOSED, can't place if target is not open!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Egg|+01.42|+00.88|+01.34',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.00|+00.00|+00.12"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Egg|+01.42|+00.88|+01.34", "receptacle_object_id": "Fridge|-01.00|+00.00|+00.12"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.00|+00.00|+00.12"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-01.00|+00.00|+00.12"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Egg|+01.42|+00.88|+01.34", "receptacle_object_id": "Fridge|-01.00|+00.00|+00.12"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.00|+00.00|+00.12"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Egg|+01.42|+00.88|+01.34',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Egg|+01.42|+00.88|+01.34',)) True
	 State: False

Action feasible: True

--------
ADDING TO ABSTRACT TREE:
Goal: (Literal(neg=False, fluent=Fluent(predicate='inReceptacle', objects=('0', '1'))), Literal(neg=False, fluent=Fluent(predicate='isCool', objects=('0',))), Literal(neg=True, fluent=Fluent(predicate='holds', objects=('0',))), Literal(neg=True, fluent=Fluent(predicate='inReceptacle', objects=('1', '2'))), Literal(neg=True, fluent=Fluent(predicate='opened', objects=('1',))))
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "0", "receptacle_object_id": "1"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "1"})]
Goal to Traj Map: {'0': '0', '1': '1', '2': None}
--------
OPERATOR:
{'action': 'PlaceObject_0',
 'postcondition_ground_predicates': [{'arguments': ['egg', 'fridge'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'}],
 'precondition_ground_predicates': [{'arguments': ['fridge', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['egg'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Egg|+01.42|+00.88|+01.34', 'Fridge|-01.00|+00.00|+00.12'),
 ('Egg|-00.88|+00.97|+01.15', 'Fridge|-01.00|+00.00|+00.12'),
 ('Egg|-00.88|+00.97|+01.15', 'Fridge|-01.00|+00.00|+00.12'),
 ('Egg|+01.60|+00.98|+01.71', 'Fridge|-01.00|+00.00|+00.12'),
 ('Egg|+01.60|+00.98|+01.71', 'Fridge|-01.00|+00.00|+00.12'),
 ('Egg|+01.67|+00.97|+02.12', 'Fridge|-01.00|+00.00|+00.12'),
 ('Egg|+01.67|+00.97|+02.12', 'Fridge|-01.00|+00.00|+00.12')]

PERMISSIBLE OBJECT SET:
[('Egg|+01.42|+00.88|+01.34', 'Fridge|-01.00|+00.00|+00.12'),
 ('Egg|-00.88|+00.97|+01.15', 'Fridge|-01.00|+00.00|+00.12'),
 ('Egg|-00.88|+00.97|+01.15',
  'Fridge|-01.00|+00.00|+00.12',
  'Egg|+01.42|+00.88|+01.34'),
 ('Egg|+01.60|+00.98|+01.71', 'Fridge|-01.00|+00.00|+00.12'),
 ('Egg|+01.60|+00.98|+01.71',
  'Fridge|-01.00|+00.00|+00.12',
  'Egg|+01.42|+00.88|+01.34'),
 ('Egg|+01.67|+00.97|+02.12', 'Fridge|-01.00|+00.00|+00.12'),
 ('Egg|+01.67|+00.97|+02.12',
  'Fridge|-01.00|+00.00|+00.12',
  'Egg|+01.42|+00.88|+01.34')]


Permissible Objects:
('Egg|+01.42|+00.88|+01.34', 'Fridge|-01.00|+00.00|+00.12')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.00|+00.00|+00.12"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-01.00|+00.00|+00.12"})]
Error Message: 
Action feasible: False

	 Fluent(predicate='inReceptacle', objects=('Egg|+01.42|+00.88|+01.34', 'CounterTop|-00.97|+00.97|+02.39')) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Egg|+01.42|+00.88|+01.34', 'CounterTop|+01.51|+00.97|+02.31')) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Egg|+01.42|+00.88|+01.34', 'CounterTop|-00.97|+00.97|+00.92')) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Egg|-00.88|+00.97|+01.15', 'CounterTop|-00.97|+00.97|+02.39')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Egg|-00.88|+00.97|+01.15',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Egg|-00.88|+00.97|+01.15', 'CounterTop|+01.51|+00.97|+02.31')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Egg|-00.88|+00.97|+01.15',)) True
	 State: False

	 Fluent(predicate='isCool', objects=('Egg|-00.88|+00.97|+01.15',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Egg|+01.60|+00.98|+01.71', 'CounterTop|-00.97|+00.97|+02.39')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Egg|+01.60|+00.98|+01.71',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Egg|+01.60|+00.98|+01.71', 'CounterTop|+01.51|+00.97|+02.31')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Egg|+01.60|+00.98|+01.71',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Egg|+01.60|+00.98|+01.71', 'CounterTop|-00.97|+00.97|+00.92')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Egg|+01.60|+00.98|+01.71',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Egg|+01.67|+00.97|+02.12', 'CounterTop|-00.97|+00.97|+02.39')) True
	 State: False
	 CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
Fluent(predicate='isCool', objects=('Egg|+01.67|+00.97|+02.12',)) True
	 State: False

	 Fluent(predicate='isCool', objects=('Egg|+01.67|+00.97|+02.12',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Egg|+01.67|+00.97|+02.12', 'CounterTop|-00.97|+00.97|+00.92')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Egg|+01.67|+00.97|+02.12',)) True
	 State: False

GOAL CHECK FUNCTION FAILED!
=============================================
Problem Number: 37
Problem ID: train/pick_cool_then_place_in_recep-Egg-None-CounterTop-12/trial_T20190907_151629_832433
Motion plan result: task_success: False
Total Actions Taken: 7
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
ChillObject_1 1.0 2.1 / 2.1
TakeObject_1 1.0 2.1 / 2.1
WashObject_1 1.0 1.1 / 1.1
CutObject_0 1.0 1.1 / 1.1
CutObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8614958448753463 31.1 / 36.1
PlaceObject_0 0.8198198198198198 9.1 / 11.1
CoolObject_0 0.09090909090909091 0.1 / 1.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 37 / 245, train/pick_cool_then_place_in_recep-Egg-None-CounterTop-12/trial_T20190907_151629_832433
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 37 / 245, train/pick_cool_then_place_in_recep-Egg-None-CounterTop-12/trial_T20190907_151629_832433
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 37 / 245, train/pick_cool_then_place_in_recep-Egg-None-CounterTop-12/trial_T20190907_151629_832433
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 38 / 245, train/pick_heat_then_place_in_recep-Egg-None-Fridge-20/trial_T20190907_224507_776787
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 41 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'SliceObject_2', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	warm up an egg to put in the fridge.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_4_bar_7_bar_1_bar_30 loc_bar__minus_1_bar__minus_5_bar_3_bar_30)
(gotolocation agent1 loc_bar__minus_1_bar__minus_5_bar_3_bar_30 loc_bar__minus_5_bar_0_bar_3_bar_15)
(takeobject_0 agent1 loc_bar__minus_5_bar_0_bar_3_bar_15 egg__minus_6_dot_5952592_comma__minus_6_dot_5952592_comma__minus_1_dot_569957136_comma__minus_1_dot_569957136_comma_6_dot_232952_comma_6_dot_232952)
(gotolocation agent1 loc_bar__minus_5_bar_0_bar_3_bar_15 loc_bar__minus_1_bar__minus_5_bar_3_bar_30)
(warmobject_0 microwave__minus_4_dot_936_comma__minus_4_dot_936_comma__minus_6_dot_724_comma__minus_6_dot_724_comma_3_dot_6_comma_3_dot_6 agent1 loc_bar__minus_1_bar__minus_5_bar_3_bar_30 egg__minus_6_dot_5952592_comma__minus_6_dot_5952592_comma__minus_1_dot_569957136_comma__minus_1_dot_569957136_comma_6_dot_232952_comma_6_dot_232952)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 38 / 245
Motion planning for: train/pick_heat_then_place_in_recep-Egg-None-Fridge-20/trial_T20190907_224507_776787
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o EggType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['egg'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'WarmObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'isHot', 'arguments': ['egg'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['microwave', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['egg'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject egg)
(GotoLocation microwave)
(HeatObject egg)
(GotoLocation fridge)
(PutObject egg fridge)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['egg', 'fridge'], 'is_neg': False}

{'predicate_name': 'heatable', 'arguments': ['egg'], 'is_neg': False}

{'predicate_name': 'isHot', 'arguments': ['egg'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['egg'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Egg|-01.50|+01.24|-00.39',),
 ('Egg|-01.65|+01.56|-00.39',),
 ('Egg|-01.07|+00.97|-02.12',)]

PERMISSIBLE OBJECT SET:
[('Egg|-01.50|+01.24|-00.39',),
 ('Egg|-01.65|+01.56|-00.39',),
 ('Egg|-01.07|+00.97|-02.12',)]


Permissible Objects:
('Egg|-01.50|+01.24|-00.39',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Egg|-01.50|+01.24|-00.39"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Egg|-01.50|+01.24|-00.39"})]
Error Message: Egg|-01.50|+01.24|-00.39 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.50|+01.24|-00.39',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Egg|-01.65|+01.56|-00.39',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Egg|-01.65|+01.56|-00.39"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Egg|-01.65|+01.56|-00.39"})]
Error Message: Egg|-01.65|+01.56|-00.39 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.65|+01.56|-00.39',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Egg|-01.07|+00.97|-02.12',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Egg|-01.07|+00.97|-02.12"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Egg|-01.07|+00.97|-02.12"})]
Error Message: Egg|-01.07|+00.97|-02.12 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.07|+00.97|-02.12',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Egg|-01.50|+01.24|-00.39',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Egg|-01.50|+01.24|-00.39"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.50|+01.24|-00.39',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Egg|-01.50|+01.24|-00.39"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.50|+01.24|-00.39',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Egg|-01.50|+01.24|-00.39"})]
Error Message: Egg|-01.50|+01.24|-00.39 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.50|+01.24|-00.39',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Egg|-01.50|+01.24|-00.39", "receptacle_object_id": "Egg|-01.50|+01.24|-00.39"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.50|+01.24|-00.39',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Egg|-01.50|+01.24|-00.39"})]
Error Message: object not found: Egg|-01.50|+01.24|-00.39
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.50|+01.24|-00.39',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Egg|-01.50|+01.24|-00.39"})]
Error Message: object not found: Egg|-01.50|+01.24|-00.39
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.50|+01.24|-00.39',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Egg|-01.50|+01.24|-00.39"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.50|+01.24|-00.39',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Egg|-01.65|+01.56|-00.39',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Egg|-01.65|+01.56|-00.39"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.65|+01.56|-00.39',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Egg|-01.65|+01.56|-00.39"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.65|+01.56|-00.39',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Egg|-01.65|+01.56|-00.39"})]
Error Message: Egg|-01.65|+01.56|-00.39 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.65|+01.56|-00.39',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Egg|-01.65|+01.56|-00.39", "receptacle_object_id": "Egg|-01.65|+01.56|-00.39"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.65|+01.56|-00.39',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Egg|-01.65|+01.56|-00.39"})]
Error Message: object not found: Egg|-01.65|+01.56|-00.39
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.65|+01.56|-00.39',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Egg|-01.65|+01.56|-00.39"})]
Error Message: object not found: Egg|-01.65|+01.56|-00.39
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.65|+01.56|-00.39',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Egg|-01.65|+01.56|-00.39"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.65|+01.56|-00.39',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Egg|-01.07|+00.97|-02.12',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Egg|-01.07|+00.97|-02.12"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.07|+00.97|-02.12',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Egg|-01.07|+00.97|-02.12"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.07|+00.97|-02.12',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Egg|-01.07|+00.97|-02.12"})]
Error Message: Egg|-01.07|+00.97|-02.12 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.07|+00.97|-02.12',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Egg|-01.07|+00.97|-02.12", "receptacle_object_id": "Egg|-01.07|+00.97|-02.12"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.07|+00.97|-02.12',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Egg|-01.07|+00.97|-02.12"})]
Error Message: object not found: Egg|-01.07|+00.97|-02.12
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.07|+00.97|-02.12',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Egg|-01.07|+00.97|-02.12"})]
Error Message: object not found: Egg|-01.07|+00.97|-02.12
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.07|+00.97|-02.12',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Egg|-01.07|+00.97|-02.12"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='holds', objects=('Egg|-01.07|+00.97|-02.12',)) True
	 State: False

Rollout 7/50
=============================================
Problem Number: 38
Problem ID: train/pick_heat_then_place_in_recep-Egg-None-Fridge-20/trial_T20190907_224507_776787
Motion plan result: task_success: False
Total Actions Taken: 24
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
ChillObject_1 1.0 2.1 / 2.1
TakeObject_1 1.0 2.1 / 2.1
WashObject_1 1.0 1.1 / 1.1
CutObject_0 1.0 1.1 / 1.1
CutObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8382749326145552 31.1 / 37.1
PlaceObject_0 0.8198198198198198 9.1 / 11.1
CoolObject_0 0.09090909090909091 0.1 / 1.1
CoolObject_2 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 38 / 245, train/pick_heat_then_place_in_recep-Egg-None-Fridge-20/trial_T20190907_224507_776787
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 38 / 245, train/pick_heat_then_place_in_recep-Egg-None-Fridge-20/trial_T20190907_224507_776787
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 38 / 245, train/pick_heat_then_place_in_recep-Egg-None-Fridge-20/trial_T20190907_224507_776787
Sucessfully found 0 plans for goals.
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 10 / 39 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 39 / 245, train/pick_cool_then_place_in_recep-Pan-None-SinkBasin-20/trial_T20190909_001251_773684
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 42 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'CoolObject_2', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	put a cold pan in the sink.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_2_bar__minus_4_bar_0_bar_30 loc_bar_4_bar__minus_1_bar_1_bar_45)
(coolobject_2 agent1 loc_bar_4_bar__minus_1_bar_1_bar_45 pan_7_dot_3804_comma_7_dot_3804_comma__minus_1_dot_4216_comma__minus_1_dot_4216_comma_3_dot_795199872_comma_3_dot_795199872)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 39 / 245
Motion planning for: train/pick_cool_then_place_in_recep-Pan-None-SinkBasin-20/trial_T20190909_001251_773684
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PanType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PanType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'CoolObject_2', 'postcondition_ground_predicates': [{'predicate_name': 'isCool', 'arguments': ['pan'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'coolable', 'arguments': ['pan'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject pan)
(GotoLocation fridge)
(CoolObject pan)
(GotoLocation sinkbasin)
(PutObject pan sinkbasin)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['pan', 'sinkbasin'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['pan'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['pan'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'CoolObject_2',
 'postcondition_ground_predicates': [{'arguments': ['pan'],
                                      'is_neg': False,
                                      'predicate_name': 'isCool'}],
 'precondition_ground_predicates': [{'arguments': ['pan'],
                                     'is_neg': False,
                                     'predicate_name': 'coolable'}]}

GOAL OBJECT SET:
[('Pan|+01.57|+00.95|-00.76',), ('Pan|+01.85|+00.95|-00.36',)]

PERMISSIBLE OBJECT SET:
[('Pan|+01.57|+00.95|-00.76',), ('Pan|+01.85|+00.95|-00.36',)]


Permissible Objects:
('Pan|+01.57|+00.95|-00.76',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Pan|+01.57|+00.95|-00.76"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Pan|+01.57|+00.95|-00.76"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.57|+00.95|-00.76',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Pan|+01.85|+00.95|-00.36',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Pan|+01.85|+00.95|-00.36"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Pan|+01.85|+00.95|-00.36"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.85|+00.95|-00.36',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Pan|+01.57|+00.95|-00.76',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Pan|+01.57|+00.95|-00.76"})]
Error Message: object not found: Pan|+01.57|+00.95|-00.76
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.57|+00.95|-00.76',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Pan|+01.57|+00.95|-00.76"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.57|+00.95|-00.76',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pan|+01.57|+00.95|-00.76"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Pan|+01.57|+00.95|-00.76',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Pan|+01.57|+00.95|-00.76", "receptacle_object_id": "Pan|+01.57|+00.95|-00.76"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.57|+00.95|-00.76',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Pan|+01.57|+00.95|-00.76"})]
Error Message: object not found: Pan|+01.57|+00.95|-00.76
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.57|+00.95|-00.76',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Pan|+01.57|+00.95|-00.76"})]
Error Message: object not found: Pan|+01.57|+00.95|-00.76
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.57|+00.95|-00.76',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Pan|+01.57|+00.95|-00.76"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.57|+00.95|-00.76',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pan|+01.57|+00.95|-00.76"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Pan|+01.57|+00.95|-00.76"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Pan|+01.57|+00.95|-00.76',)) True
	 State: False

Error Message: object not found: Pan|+01.57|+00.95|-00.76
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.57|+00.95|-00.76',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pan|+01.57|+00.95|-00.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Pan|+01.57|+00.95|-00.76"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Pan|+01.57|+00.95|-00.76',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.57|+00.95|-00.76',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pan|+01.57|+00.95|-00.76"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pan|+01.57|+00.95|-00.76"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Pan|+01.57|+00.95|-00.76',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.57|+00.95|-00.76',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pan|+01.57|+00.95|-00.76"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Pan|+01.57|+00.95|-00.76", "receptacle_object_id": "Pan|+01.57|+00.95|-00.76"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Pan|+01.57|+00.95|-00.76',)) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.57|+00.95|-00.76',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pan|+01.57|+00.95|-00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Pan|+01.57|+00.95|-00.76"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Pan|+01.57|+00.95|-00.76',)) True
	 State: False

Error Message: object not found: Pan|+01.57|+00.95|-00.76
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.57|+00.95|-00.76',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pan|+01.57|+00.95|-00.76"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Pan|+01.57|+00.95|-00.76"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Pan|+01.57|+00.95|-00.76',)) True
	 State: False

Error Message: object not found: Pan|+01.57|+00.95|-00.76
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.57|+00.95|-00.76',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pan|+01.57|+00.95|-00.76"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Pan|+01.57|+00.95|-00.76"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Pan|+01.57|+00.95|-00.76',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.57|+00.95|-00.76',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Pan|+01.85|+00.95|-00.36',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Pan|+01.85|+00.95|-00.36"})]
Error Message: object not found: Pan|+01.85|+00.95|-00.36
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.85|+00.95|-00.36',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Pan|+01.85|+00.95|-00.36"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.85|+00.95|-00.36',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pan|+01.85|+00.95|-00.36"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Pan|+01.85|+00.95|-00.36',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Pan|+01.85|+00.95|-00.36", "receptacle_object_id": "Pan|+01.85|+00.95|-00.36"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.85|+00.95|-00.36',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Pan|+01.85|+00.95|-00.36"})]
Error Message: object not found: Pan|+01.85|+00.95|-00.36
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.85|+00.95|-00.36',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Pan|+01.85|+00.95|-00.36"})]
Error Message: object not found: Pan|+01.85|+00.95|-00.36
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.85|+00.95|-00.36',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Pan|+01.85|+00.95|-00.36"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.85|+00.95|-00.36',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pan|+01.85|+00.95|-00.36"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Pan|+01.85|+00.95|-00.36"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Pan|+01.85|+00.95|-00.36',)) True
	 State: False

Error Message: object not found: Pan|+01.85|+00.95|-00.36
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.85|+00.95|-00.36',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pan|+01.85|+00.95|-00.36"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Pan|+01.85|+00.95|-00.36"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Pan|+01.85|+00.95|-00.36',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.85|+00.95|-00.36',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pan|+01.85|+00.95|-00.36"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pan|+01.85|+00.95|-00.36"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Pan|+01.85|+00.95|-00.36',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.85|+00.95|-00.36',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pan|+01.85|+00.95|-00.36"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Pan|+01.85|+00.95|-00.36", "receptacle_object_id": "Pan|+01.85|+00.95|-00.36"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Pan|+01.85|+00.95|-00.36',)) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.85|+00.95|-00.36',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pan|+01.85|+00.95|-00.36"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Pan|+01.85|+00.95|-00.36"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Pan|+01.85|+00.95|-00.36',)) True
	 State: False

Error Message: object not found: Pan|+01.85|+00.95|-00.36
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.85|+00.95|-00.36',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pan|+01.85|+00.95|-00.36"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Pan|+01.85|+00.95|-00.36"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Pan|+01.85|+00.95|-00.36',)) True
	 State: False

Error Message: object not found: Pan|+01.85|+00.95|-00.36
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.85|+00.95|-00.36',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pan|+01.85|+00.95|-00.36"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Pan|+01.85|+00.95|-00.36"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Pan|+01.85|+00.95|-00.36',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pan|+01.85|+00.95|-00.36',)) True
	 State: False

Rollout 14/50
=============================================
Problem Number: 39
Problem ID: train/pick_cool_then_place_in_recep-Pan-None-SinkBasin-20/trial_T20190909_001251_773684
Motion plan result: task_success: False
Total Actions Taken: 30
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
ChillObject_1 1.0 2.1 / 2.1
TakeObject_1 1.0 2.1 / 2.1
WashObject_1 1.0 1.1 / 1.1
CutObject_0 1.0 1.1 / 1.1
CutObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8382749326145552 31.1 / 37.1
PlaceObject_0 0.8198198198198198 9.1 / 11.1
CoolObject_0 0.09090909090909091 0.1 / 1.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 39 / 245, train/pick_cool_then_place_in_recep-Pan-None-SinkBasin-20/trial_T20190909_001251_773684
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 39 / 245, train/pick_cool_then_place_in_recep-Pan-None-SinkBasin-20/trial_T20190909_001251_773684
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 39 / 245, train/pick_cool_then_place_in_recep-Pan-None-SinkBasin-20/trial_T20190909_001251_773684
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 40 / 245, train/pick_cool_then_place_in_recep-Pot-None-Cabinet-1/trial_T20190908_184157_888194
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 41 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'CoolObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	put a cold pot in the cabinet.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_2_bar_7_bar_2_bar_30 loc_bar_0_bar__minus_5_bar_2_bar_45)
(gotolocation agent1 loc_bar_0_bar__minus_5_bar_2_bar_45 loc_bar__minus_5_bar__minus_7_bar_2_bar_45)
(takeobject_0 agent1 loc_bar__minus_5_bar__minus_7_bar_2_bar_45 pot__minus_4_dot_876_comma__minus_4_dot_876_comma__minus_9_dot_424_comma__minus_9_dot_424_comma_3_dot_6_comma_3_dot_6)
(coolobject_0 agent1 loc_bar__minus_5_bar__minus_7_bar_2_bar_45 pot__minus_4_dot_876_comma__minus_4_dot_876_comma__minus_9_dot_424_comma__minus_9_dot_424_comma_3_dot_6_comma_3_dot_6 pot__minus_4_dot_876_comma__minus_4_dot_876_comma__minus_9_dot_424_comma__minus_9_dot_424_comma_3_dot_6_comma_3_dot_6)
(gotolocation agent1 loc_bar__minus_5_bar__minus_7_bar_2_bar_45 loc_bar_0_bar__minus_5_bar_2_bar_45)
(placeobject_0 agent1 loc_bar_0_bar__minus_5_bar_2_bar_45 cabinet_2_dot_72_comma_2_dot_72_comma__minus_8_dot_8_comma__minus_8_dot_8_comma_1_dot_9799999_comma_1_dot_9799999 pot__minus_4_dot_876_comma__minus_4_dot_876_comma__minus_9_dot_424_comma__minus_9_dot_424_comma_3_dot_6_comma_3_dot_6)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 40 / 245
Motion planning for: train/pick_cool_then_place_in_recep-Pot-None-Cabinet-1/trial_T20190908_184157_888194
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['pot'], 'is_neg': False}], 'precondition_ground_predicates': []}

CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
{'action': 'CoolObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'isCool', 'arguments': ['pot'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'coolable', 'arguments': ['pot'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['pot'], 'is_neg': False}]}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['pot', 'cabinet'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['cabinet', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['pot'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject pot)
(GotoLocation fridge)
(CoolObject pot)
(GotoLocation cabinet)
(PutObject pot cabinet)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['pot', 'cabinet'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['pot'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['pot'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['pot'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Pot|-01.22|+00.90|-02.36',)]

PERMISSIBLE OBJECT SET:
[('Pot|-01.22|+00.90|-02.36',)]


Permissible Objects:
('Pot|-01.22|+00.90|-02.36',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pot|-01.22|+00.90|-02.36"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pot|-01.22|+00.90|-02.36"})]
Action feasible: True

OPERATOR:
{'action': 'CoolObject_0',
 'postcondition_ground_predicates': [{'arguments': ['pot'],
                                      'is_neg': False,
                                      'predicate_name': 'isCool'}],
 'precondition_ground_predicates': [{'arguments': ['pot'],
                                     'is_neg': False,
                                     'predicate_name': 'coolable'},
                                    {'arguments': ['pot'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Pot|-01.22|+00.90|-02.36',)]

PERMISSIBLE OBJECT SET:
[('Pot|-01.22|+00.90|-02.36',)]


Permissible Objects:
('Pot|-01.22|+00.90|-02.36',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Pot|-01.22|+00.90|-02.36"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Pot|-01.22|+00.90|-02.36"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pot|-01.22|+00.90|-02.36',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Pot|-01.22|+00.90|-02.36',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Pot|-01.22|+00.90|-02.36"})]
Error Message: object not found: Pot|-01.22|+00.90|-02.36
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pot|-01.22|+00.90|-02.36',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Pot|-01.22|+00.90|-02.36"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pot|-01.22|+00.90|-02.36',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pot|-01.22|+00.90|-02.36"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pot|-01.22|+00.90|-02.36',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Pot|-01.22|+00.90|-02.36", "receptacle_object_id": "Pot|-01.22|+00.90|-02.36"})]
Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pot|-01.22|+00.90|-02.36',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Pot|-01.22|+00.90|-02.36"})]
Error Message: object not found: Pot|-01.22|+00.90|-02.36
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pot|-01.22|+00.90|-02.36',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Pot|-01.22|+00.90|-02.36"})]
Error Message: object not found: Pot|-01.22|+00.90|-02.36
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pot|-01.22|+00.90|-02.36',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Pot|-01.22|+00.90|-02.36"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Pot|-01.22|+00.90|-02.36',)) True
	 State: False

Rollout 7/50
=============================================
Problem Number: 40
Problem ID: train/pick_cool_then_place_in_recep-Pot-None-Cabinet-1/trial_T20190908_184157_888194
Motion plan result: task_success: False
Total Actions Taken: 9
Failed at operator: 2 / 3 operators in task plan.
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
ChillObject_1 1.0 2.1 / 2.1
TakeObject_1 1.0 2.1 / 2.1
WashObject_1 1.0 1.1 / 1.1
CutObject_0 1.0 1.1 / 1.1
CutObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8425196850393701 32.1 / 38.1
PlaceObject_0 0.8198198198198198 9.1 / 11.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_0 0.047619047619047616 0.1 / 2.1
CoolObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 40 / 245, train/pick_cool_then_place_in_recep-Pot-None-Cabinet-1/trial_T20190908_184157_888194
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 40 / 245, train/pick_cool_then_place_in_recep-Pot-None-Cabinet-1/trial_T20190908_184157_888194
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 40 / 245, train/pick_cool_then_place_in_recep-Pot-None-Cabinet-1/trial_T20190908_184157_888194
Sucessfully found 0 plans for goals.
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	evaluated successful motion plans: 10 / 41 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 41 / 245, train/pick_and_place_simple-AppleSliced-None-Fridge-30/trial_T20190907_105723_672392
Now attempting to plan for goal: 0 / 2
	Running planner with existing operators + 41 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'HeatObject_0', 'PlaceObject_2', 'TakeObject_2', 'TurnOnLight_0', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	place an apple slice inside of the fridge.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(isSliced ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_1_bar__minus_2_bar_2_bar_30 loc_bar_0_bar_2_bar_1_bar_60)
(takeobject_0 agent1 loc_bar_0_bar_2_bar_1_bar_60 knife_2_dot_1344_comma_2_dot_1344_comma_2_dot_1080524_comma_2_dot_1080524_comma_3_dot_7463136_comma_3_dot_7463136)
(gotolocation agent1 loc_bar_0_bar_2_bar_1_bar_60 loc_bar_4_bar__minus_3_bar_2_bar_60)
(gotolocation agent1 loc_bar_4_bar__minus_3_bar_2_bar_60 loc_bar__minus_1_bar_5_bar_3_bar_30)
(takeobject_0 agent1 loc_bar__minus_1_bar_5_bar_3_bar_30 apple__minus_4_dot_20862772_comma__minus_4_dot_20862772_comma_5_dot_24733972_comma_5_dot_24733972_comma_4_dot_28595684_comma_4_dot_28595684)
(cutobject_0 knife_2_dot_1344_comma_2_dot_1344_comma_2_dot_1080524_comma_2_dot_1080524_comma_3_dot_7463136_comma_3_dot_7463136 agent1 loc_bar__minus_1_bar_5_bar_3_bar_30 apple__minus_4_dot_20862772_comma__minus_4_dot_20862772_comma_5_dot_24733972_comma_5_dot_24733972_comma_4_dot_28595684_comma_4_dot_28595684)
(gotolocation agent1 loc_bar__minus_1_bar_5_bar_3_bar_30 loc_bar_4_bar__minus_3_bar_2_bar_60)
(placeobject_0 agent1 loc_bar_4_bar__minus_3_bar_2_bar_60 fridge_4_dot_032_comma_4_dot_032_comma__minus_5_dot_8716_comma__minus_5_dot_8716_comma_0_dot_1178706288_comma_0_dot_1178706288 apple__minus_4_dot_20862772_comma__minus_4_dot_20862772_comma_5_dot_24733972_comma_5_dot_24733972_comma_4_dot_28595684_comma_4_dot_28595684)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 41 / 245
Motion planning for: train/pick_and_place_simple-AppleSliced-None-Fridge-30/trial_T20190907_105723_672392
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(isSliced ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['knife'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['apple'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'CutObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'isSliced', 'arguments': ['apple'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['knife'], 'is_neg': False}]}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['apple', 'fridge'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['fridge', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['apple'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject knife)
(GotoLocation apple)
(SliceObject apple)
(GotoLocation fridge)
(PutObject knife fridge)
(GotoLocation microwave)
(PickupObject apple)
(GotoLocation fridge)
(PutObject apple fridge)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['apple', 'fridge'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['apple'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['apple'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['knife'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Knife|+00.53|+00.94|+00.53',), ('Knife|-00.99|+00.93|-00.75',)]

PERMISSIBLE OBJECT SET:
[('Knife|+00.53|+00.94|+00.53',), ('Knife|-00.99|+00.93|-00.75',)]


Permissible Objects:
('Knife|+00.53|+00.94|+00.53',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True

OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['apple'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Apple|+00.80|+00.98|+00.63',),
 ('Apple|+00.80|+00.98|+00.63',),
 ('Apple|-00.86|+00.97|+00.40',),
 ('Apple|-00.86|+00.97|+00.40',),
 ('Apple|-00.94|+00.97|-00.05',),
 ('Apple|-00.94|+00.97|-00.05',),
 ('Apple|-01.05|+01.07|+01.31',),
 ('Apple|-01.05|+01.07|+01.31',)]

PERMISSIBLE OBJECT SET:
[('Apple|+00.80|+00.98|+00.63',),
 ('Apple|+00.80|+00.98|+00.63', 'Knife|+00.53|+00.94|+00.53'),
 ('Apple|-00.86|+00.97|+00.40',),
 ('Apple|-00.86|+00.97|+00.40', 'Knife|+00.53|+00.94|+00.53'),
 ('Apple|-00.94|+00.97|-00.05',),
 ('Apple|-00.94|+00.97|-00.05', 'Knife|+00.53|+00.94|+00.53'),
 ('Apple|-01.05|+01.07|+01.31',),
 ('Apple|-01.05|+01.07|+01.31', 'Knife|+00.53|+00.94|+00.53')]


Permissible Objects:
('Apple|+00.80|+00.98|+00.63',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Apple|+00.80|+00.98|+00.63', 'Knife|+00.53|+00.94|+00.53')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 5/50

Permissible Objects:
('Apple|-00.86|+00.97|+00.40',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Apple|-00.86|+00.97|+00.40', 'Knife|+00.53|+00.94|+00.53')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 5/50

Permissible Objects:
('Apple|-00.94|+00.97|-00.05',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Apple|-00.94|+00.97|-00.05', 'Knife|+00.53|+00.94|+00.53')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 5/50

Permissible Objects:
('Apple|-01.05|+01.07|+01.31',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Apple|-01.05|+01.07|+01.31', 'Knife|+00.53|+00.94|+00.53')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 5/50

Permissible Objects:
('Apple|+00.80|+00.98|+00.63',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: object not found: Apple|+00.80|+00.98|+00.63
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+00.80|+00.98|+00.63", "receptacle_object_id": "Apple|+00.80|+00.98|+00.63"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: object not found: Apple|+00.80|+00.98|+00.63
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: object not found: Apple|+00.80|+00.98|+00.63
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: object not found: Apple|+00.80|+00.98|+00.63|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+00.80|+00.98|+00.63", "receptacle_object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: object not found: Apple|+00.80|+00.98|+00.63|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: object not found: Apple|+00.80|+00.98|+00.63|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: Apple_30_Sliced_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Apple|+00.80|+00.98|+00.63', 'Knife|+00.53|+00.94|+00.53')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: object not found: Apple|+00.80|+00.98|+00.63
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+00.80|+00.98|+00.63", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+00.80|+00.98|+00.63", "receptacle_object_id": "Apple|+00.80|+00.98|+00.63"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: object not found: Apple|+00.80|+00.98|+00.63
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: object not found: Apple|+00.80|+00.98|+00.63
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: object not found: Apple|+00.80|+00.98|+00.63|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+00.80|+00.98|+00.63", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+00.80|+00.98|+00.63", "receptacle_object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: object not found: Apple|+00.80|+00.98|+00.63|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: object not found: Apple|+00.80|+00.98|+00.63|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: Apple_30_Sliced_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 32/50

Permissible Objects:
('Apple|-00.86|+00.97|+00.40',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: object not found: Apple|-00.86|+00.97|+00.40
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.86|+00.97|+00.40", "receptacle_object_id": "Apple|-00.86|+00.97|+00.40"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: object not found: Apple|-00.86|+00.97|+00.40
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: object not found: Apple|-00.86|+00.97|+00.40
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: object not found: Apple|-00.86|+00.97|+00.40|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.86|+00.97|+00.40", "receptacle_object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: object not found: Apple|-00.86|+00.97|+00.40|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: object not found: Apple|-00.86|+00.97|+00.40|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

--------
ADDING TO ABSTRACT TREE:
Goal: (Literal(neg=False, fluent=Fluent(predicate='isSliced', objects=('2',))), Literal(neg=True, fluent=Fluent(predicate='inReceptacle', objects=('0', '1'))), Literal(neg=True, fluent=Fluent(predicate='inReceptacle', objects=('2', '3'))))
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "0"})]
Goal to Traj Map: {'0': None, '1': None, '2': '0', '3': None}
--------
Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: Apple_30_Sliced_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Apple|-00.86|+00.97|+00.40', 'Knife|+00.53|+00.94|+00.53')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: object not found: Apple|-00.86|+00.97|+00.40
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.86|+00.97|+00.40", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.86|+00.97|+00.40", "receptacle_object_id": "Apple|-00.86|+00.97|+00.40"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: object not found: Apple|-00.86|+00.97|+00.40
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: object not found: Apple|-00.86|+00.97|+00.40
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: object not found: Apple|-00.86|+00.97|+00.40|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.86|+00.97|+00.40", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.86|+00.97|+00.40", "receptacle_object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: object not found: Apple|-00.86|+00.97|+00.40|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: object not found: Apple|-00.86|+00.97|+00.40|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: Apple_30_Sliced_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 32/50

Permissible Objects:
('Apple|-00.94|+00.97|-00.05',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: object not found: Apple|-00.94|+00.97|-00.05
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.94|+00.97|-00.05", "receptacle_object_id": "Apple|-00.94|+00.97|-00.05"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: object not found: Apple|-00.94|+00.97|-00.05
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: object not found: Apple|-00.94|+00.97|-00.05
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: object not found: Apple|-00.94|+00.97|-00.05|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.94|+00.97|-00.05", "receptacle_object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: object not found: Apple|-00.94|+00.97|-00.05|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: object not found: Apple|-00.94|+00.97|-00.05|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: Apple_30_Sliced_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Apple|-00.94|+00.97|-00.05', 'Knife|+00.53|+00.94|+00.53')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: object not found: Apple|-00.94|+00.97|-00.05
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.94|+00.97|-00.05", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.94|+00.97|-00.05", "receptacle_object_id": "Apple|-00.94|+00.97|-00.05"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: object not found: Apple|-00.94|+00.97|-00.05
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: object not found: Apple|-00.94|+00.97|-00.05
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: object not found: Apple|-00.94|+00.97|-00.05|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.94|+00.97|-00.05", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.94|+00.97|-00.05", "receptacle_object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: object not found: Apple|-00.94|+00.97|-00.05|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: object not found: Apple|-00.94|+00.97|-00.05|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: Apple_30_Sliced_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 32/50

Permissible Objects:
('Apple|-01.05|+01.07|+01.31',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-01.05|+01.07|+01.31", "receptacle_object_id": "Apple|-01.05|+01.07|+01.31"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: object not found: Apple|-01.05|+01.07|+01.31
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: object not found: Apple|-01.05|+01.07|+01.31
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: object not found: Apple|-01.05|+01.07|+01.31
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Apple|-01.05|+01.07|+01.31', 'Knife|+00.53|+00.94|+00.53')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-01.05|+01.07|+01.31", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-01.05|+01.07|+01.31", "receptacle_object_id": "Apple|-01.05|+01.07|+01.31"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: object not found: Apple|-01.05|+01.07|+01.31
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: object not found: Apple|-01.05|+01.07|+01.31
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: object not found: Apple|-01.05|+01.07|+01.31
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 16/50
=============================================
Problem Number: 41
Problem ID: train/pick_and_place_simple-AppleSliced-None-Fridge-30/trial_T20190907_105723_672392
Motion plan result: task_success: False
Total Actions Taken: 186
Failed at operator: 2 / 4 operators in task plan.
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
ChillObject_1 1.0 2.1 / 2.1
TakeObject_1 1.0 2.1 / 2.1
WashObject_1 1.0 1.1 / 1.1
CutObject_0 1.0 1.1 / 1.1
CutObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
TakeObject_0 0.8254364089775561 33.1 / 40.1
PlaceObject_0 0.8198198198198198 9.1 / 11.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_0 0.047619047619047616 0.1 / 2.1
CoolObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 41 / 245, train/pick_and_place_simple-AppleSliced-None-Fridge-30/trial_T20190907_105723_672392
Now attempting to plan for goal: 1 / 2
	Running planner with existing operators + 41 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'HeatObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	place an apple slice inside of the fridge.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	 Plan string: (gotolocation agent1 loc_bar_1_bar__minus_2_bar_2_bar_30 loc_bar_0_bar_2_bar_1_bar_60)
(takeobject_0 agent1 loc_bar_0_bar_2_bar_1_bar_60 knife_2_dot_1344_comma_2_dot_1344_comma_2_dot_1080524_comma_2_dot_1080524_comma_3_dot_7463136_comma_3_dot_7463136)
(gotolocation agent1 loc_bar_0_bar_2_bar_1_bar_60 loc_bar_4_bar__minus_3_bar_2_bar_60)
(gotolocation agent1 loc_bar_4_bar__minus_3_bar_2_bar_60 loc_bar__minus_1_bar_5_bar_3_bar_30)
(takeobject_0 agent1 loc_bar__minus_1_bar_5_bar_3_bar_30 apple__minus_4_dot_20862772_comma__minus_4_dot_20862772_comma_5_dot_24733972_comma_5_dot_24733972_comma_4_dot_28595684_comma_4_dot_28595684)
(cutobject_0 knife_2_dot_1344_comma_2_dot_1344_comma_2_dot_1080524_comma_2_dot_1080524_comma_3_dot_7463136_comma_3_dot_7463136 agent1 loc_bar__minus_1_bar_5_bar_3_bar_30 apple__minus_4_dot_20862772_comma__minus_4_dot_20862772_comma_5_dot_24733972_comma_5_dot_24733972_comma_4_dot_28595684_comma_4_dot_28595684)
(gotolocation agent1 loc_bar__minus_1_bar_5_bar_3_bar_30 loc_bar_4_bar__minus_3_bar_2_bar_60)
(placeobject_0 agent1 loc_bar_4_bar__minus_3_bar_2_bar_60 fridge_4_dot_032_comma_4_dot_032_comma__minus_5_dot_8716_comma__minus_5_dot_8716_comma_0_dot_1178706288_comma_0_dot_1178706288 apple__minus_4_dot_20862772_comma__minus_4_dot_20862772_comma_5_dot_24733972_comma_5_dot_24733972_comma_4_dot_28595684_comma_4_dot_28595684)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 41 / 245
Motion planning for: train/pick_and_place_simple-AppleSliced-None-Fridge-30/trial_T20190907_105723_672392
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o AppleType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['knife'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['apple'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'CutObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'isSliced', 'arguments': ['apple'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['knife'], 'is_neg': False}]}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['apple', 'fridge'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['fridge', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['apple'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject knife)
(GotoLocation apple)
(SliceObject apple)
(GotoLocation fridge)
(PutObject knife fridge)
(GotoLocation microwave)
(PickupObject apple)
(GotoLocation fridge)
(PutObject apple fridge)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['apple', 'fridge'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['apple'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['apple'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['knife'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Knife|+00.53|+00.94|+00.53',), ('Knife|-00.99|+00.93|-00.75',)]

PERMISSIBLE OBJECT SET:
[('Knife|+00.53|+00.94|+00.53',), ('Knife|-00.99|+00.93|-00.75',)]


Permissible Objects:
('Knife|+00.53|+00.94|+00.53',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True

OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['apple'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Apple|+00.80|+00.98|+00.63',),
 ('Apple|+00.80|+00.98|+00.63',),
 ('Apple|-00.86|+00.97|+00.40',),
 ('Apple|-00.86|+00.97|+00.40',),
 ('Apple|-00.94|+00.97|-00.05',),
 ('Apple|-00.94|+00.97|-00.05',),
 ('Apple|-01.05|+01.07|+01.31',),
 ('Apple|-01.05|+01.07|+01.31',)]

PERMISSIBLE OBJECT SET:
[('Apple|+00.80|+00.98|+00.63',),
 ('Apple|+00.80|+00.98|+00.63', 'Knife|+00.53|+00.94|+00.53'),
 ('Apple|-00.86|+00.97|+00.40',),
 ('Apple|-00.86|+00.97|+00.40', 'Knife|+00.53|+00.94|+00.53'),
 ('Apple|-00.94|+00.97|-00.05',),
 ('Apple|-00.94|+00.97|-00.05', 'Knife|+00.53|+00.94|+00.53'),
 ('Apple|-01.05|+01.07|+01.31',),
 ('Apple|-01.05|+01.07|+01.31', 'Knife|+00.53|+00.94|+00.53')]


Permissible Objects:
('Apple|+00.80|+00.98|+00.63',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Apple|+00.80|+00.98|+00.63', 'Knife|+00.53|+00.94|+00.53')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 5/50

Permissible Objects:
('Apple|-00.86|+00.97|+00.40',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Apple|-00.86|+00.97|+00.40', 'Knife|+00.53|+00.94|+00.53')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 5/50

Permissible Objects:
('Apple|-00.94|+00.97|-00.05',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Apple|-00.94|+00.97|-00.05', 'Knife|+00.53|+00.94|+00.53')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 5/50

Permissible Objects:
('Apple|-01.05|+01.07|+01.31',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Apple|-01.05|+01.07|+01.31', 'Knife|+00.53|+00.94|+00.53')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 5/50

Permissible Objects:
('Apple|+00.80|+00.98|+00.63',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: object not found: Apple|+00.80|+00.98|+00.63
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+00.80|+00.98|+00.63", "receptacle_object_id": "Apple|+00.80|+00.98|+00.63"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: object not found: Apple|+00.80|+00.98|+00.63
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: object not found: Apple|+00.80|+00.98|+00.63
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: object not found: Apple|+00.80|+00.98|+00.63|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+00.80|+00.98|+00.63", "receptacle_object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: object not found: Apple|+00.80|+00.98|+00.63|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: object not found: Apple|+00.80|+00.98|+00.63|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: Apple_30_Sliced_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Apple|+00.80|+00.98|+00.63', 'Knife|+00.53|+00.94|+00.53')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: object not found: Apple|+00.80|+00.98|+00.63
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+00.80|+00.98|+00.63", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+00.80|+00.98|+00.63", "receptacle_object_id": "Apple|+00.80|+00.98|+00.63"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: object not found: Apple|+00.80|+00.98|+00.63
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Error Message: object not found: Apple|+00.80|+00.98|+00.63
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: object not found: Apple|+00.80|+00.98|+00.63|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+00.80|+00.98|+00.63", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|+00.80|+00.98|+00.63", "receptacle_object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: object not found: Apple|+00.80|+00.98|+00.63|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: object not found: Apple|+00.80|+00.98|+00.63|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|+00.80|+00.98|+00.63"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Error Message: Apple_30_Sliced_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|+00.80|+00.98|+00.63',)) True
	 State: False

Rollout 32/50

Permissible Objects:
('Apple|-00.86|+00.97|+00.40',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: object not found: Apple|-00.86|+00.97|+00.40
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.86|+00.97|+00.40", "receptacle_object_id": "Apple|-00.86|+00.97|+00.40"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: object not found: Apple|-00.86|+00.97|+00.40
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: object not found: Apple|-00.86|+00.97|+00.40
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: object not found: Apple|-00.86|+00.97|+00.40|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

--------
ADDING TO ABSTRACT TREE:
Goal: (Literal(neg=False, fluent=Fluent(predicate='isSliced', objects=('4',))), Literal(neg=True, fluent=Fluent(predicate='inReceptacle', objects=('0', '1'))), Literal(neg=True, fluent=Fluent(predicate='inReceptacle', objects=('2', '3'))))
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "0"})]
Goal to Traj Map: {'0': None, '1': None, '2': None, '3': None, '4': '0'}
--------
Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.86|+00.97|+00.40", "receptacle_object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: object not found: Apple|-00.86|+00.97|+00.40|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: object not found: Apple|-00.86|+00.97|+00.40|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: Apple_30_Sliced_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Apple|-00.86|+00.97|+00.40', 'Knife|+00.53|+00.94|+00.53')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: object not found: Apple|-00.86|+00.97|+00.40
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.86|+00.97|+00.40", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.86|+00.97|+00.40", "receptacle_object_id": "Apple|-00.86|+00.97|+00.40"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: object not found: Apple|-00.86|+00.97|+00.40
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Error Message: object not found: Apple|-00.86|+00.97|+00.40
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: object not found: Apple|-00.86|+00.97|+00.40|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.86|+00.97|+00.40", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.86|+00.97|+00.40", "receptacle_object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: object not found: Apple|-00.86|+00.97|+00.40|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: object not found: Apple|-00.86|+00.97|+00.40|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.86|+00.97|+00.40"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Error Message: Apple_30_Sliced_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.86|+00.97|+00.40',)) True
	 State: False

Rollout 32/50

Permissible Objects:
('Apple|-00.94|+00.97|-00.05',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: object not found: Apple|-00.94|+00.97|-00.05
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.94|+00.97|-00.05", "receptacle_object_id": "Apple|-00.94|+00.97|-00.05"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: object not found: Apple|-00.94|+00.97|-00.05
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: object not found: Apple|-00.94|+00.97|-00.05
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: object not found: Apple|-00.94|+00.97|-00.05|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.94|+00.97|-00.05", "receptacle_object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: object not found: Apple|-00.94|+00.97|-00.05|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: object not found: Apple|-00.94|+00.97|-00.05|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: Apple_30_Sliced_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Apple|-00.94|+00.97|-00.05', 'Knife|+00.53|+00.94|+00.53')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: object not found: Apple|-00.94|+00.97|-00.05
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.94|+00.97|-00.05", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.94|+00.97|-00.05", "receptacle_object_id": "Apple|-00.94|+00.97|-00.05"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: object not found: Apple|-00.94|+00.97|-00.05
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Error Message: object not found: Apple|-00.94|+00.97|-00.05
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: object not found: Apple|-00.94|+00.97|-00.05|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.94|+00.97|-00.05", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-00.94|+00.97|-00.05", "receptacle_object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: object not found: Apple|-00.94|+00.97|-00.05|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: object not found: Apple|-00.94|+00.97|-00.05|AppleSliced_0
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-00.94|+00.97|-00.05"})]
Action feasible: True
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Error Message: Apple_30_Sliced_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-00.94|+00.97|-00.05',)) True
	 State: False

Rollout 32/50

Permissible Objects:
('Apple|-01.05|+01.07|+01.31',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-01.05|+01.07|+01.31", "receptacle_object_id": "Apple|-01.05|+01.07|+01.31"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: object not found: Apple|-01.05|+01.07|+01.31
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: object not found: Apple|-01.05|+01.07|+01.31
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: object not found: Apple|-01.05|+01.07|+01.31
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Apple|-01.05|+01.07|+01.31', 'Knife|+00.53|+00.94|+00.53')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.53|+00.94|+00.53", "receptacle_object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-01.05|+01.07|+01.31", "receptacle_object_id": "Knife|+00.53|+00.94|+00.53"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Apple|-01.05|+01.07|+01.31", "receptacle_object_id": "Apple|-01.05|+01.07|+01.31"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: object not found: Apple|-01.05|+01.07|+01.31
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: object not found: Knife|+00.53|+00.94|+00.53
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: object not found: Apple|-01.05|+01.07|+01.31
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+00.53|+00.94|+00.53"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Apple|-01.05|+01.07|+01.31"})]
Error Message: object not found: Apple|-01.05|+01.07|+01.31
Action feasible: False
	 Fluent(predicate='holds', objects=('Apple|-01.05|+01.07|+01.31',)) True
	 State: False

Rollout 16/50
=============================================
Problem Number: 41
Problem ID: train/pick_and_place_simple-AppleSliced-None-Fridge-30/trial_T20190907_105723_672392
Motion plan result: task_success: False
Total Actions Taken: 186
Failed at operator: 2 / 4 operators in task plan.
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
ChillObject_1 1.0 2.1 / 2.1
TakeObject_1 1.0 2.1 / 2.1
WashObject_1 1.0 1.1 / 1.1
CutObject_0 1.0 1.1 / 1.1
CutObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PlaceObject_0 0.8198198198198198 9.1 / 11.1
TakeObject_0 0.8099762470308789 34.1 / 42.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_0 0.047619047619047616 0.1 / 2.1
CoolObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 41 / 245, train/pick_and_place_simple-AppleSliced-None-Fridge-30/trial_T20190907_105723_672392
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 41 / 245, train/pick_and_place_simple-AppleSliced-None-Fridge-30/trial_T20190907_105723_672392
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 42 / 245, train/pick_clean_then_place_in_recep-Cloth-None-Drawer-427/trial_T20190909_070336_423393
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 40 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	put a cleaned cloth in a drawer.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ClothType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ClothType)
		(receptacleType ?r DrawerType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_8_bar_5_bar_1_bar_30 loc_bar__minus_10_bar_2_bar_2_bar_45)
(gotolocation agent1 loc_bar__minus_10_bar_2_bar_2_bar_45 loc_bar__minus_10_bar_7_bar_1_bar_45)
(gotolocation agent1 loc_bar__minus_10_bar_7_bar_1_bar_45 loc_bar__minus_11_bar_4_bar_3_bar_60)
(takeobject_0 agent1 loc_bar__minus_11_bar_4_bar_3_bar_60 cloth__minus_14_dot_756876_comma__minus_14_dot_756876_comma_3_dot_861499788_comma_3_dot_861499788_comma_0_dot_1521594524_comma_0_dot_1521594524)
(gotolocation agent1 loc_bar__minus_11_bar_4_bar_3_bar_60 loc_bar__minus_10_bar_2_bar_2_bar_45)
(placeobject_0 agent1 loc_bar__minus_10_bar_2_bar_2_bar_45 drawer__minus_7_dot_57877732_comma__minus_7_dot_57877732_comma__minus_2_dot_483495472_comma__minus_2_dot_483495472_comma_1_dot_085167408_comma_1_dot_085167408 cloth__minus_14_dot_756876_comma__minus_14_dot_756876_comma_3_dot_861499788_comma_3_dot_861499788_comma_0_dot_1521594524_comma_0_dot_1521594524)
(gotolocation agent1 loc_bar__minus_10_bar_2_bar_2_bar_45 loc_bar__minus_10_bar_7_bar_1_bar_45)
(washobject_1 sinkbasin__minus_7_dot_6359992_comma__minus_7_dot_6359992_comma_7_dot_92400028_comma_7_dot_92400028_comma_4_dot_044_comma_4_dot_044 agent1 loc_bar__minus_10_bar_7_bar_1_bar_45 cloth__minus_14_dot_756876_comma__minus_14_dot_756876_comma_3_dot_861499788_comma_3_dot_861499788_comma_0_dot_1521594524_comma_0_dot_1521594524)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 42 / 245
Motion planning for: train/pick_clean_then_place_in_recep-Cloth-None-Drawer-427/trial_T20190909_070336_423393
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o ClothType)
		(receptacleType ?r DrawerType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ClothType) 
                (receptacleType ?r DrawerType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['cloth'], 'is_neg': False}], 'precondition_ground_predicates': []}

CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['cloth', 'drawer'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['drawer', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['cloth'], 'is_neg': False}]}

{'action': 'WashObject_1', 'postcondition_ground_predicates': [{'predicate_name': 'isClean', 'arguments': ['cloth'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['sinkbasin', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['cloth'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation bathtubbasin)
(PickupObject cloth)
(GotoLocation sinkbasin)
(CleanObject cloth)
(GotoLocation drawer)
(PutObject cloth drawer)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['cloth', 'drawer'], 'is_neg': False}

{'predicate_name': 'cleanable', 'arguments': ['cloth'], 'is_neg': False}

{'predicate_name': 'isClean', 'arguments': ['cloth'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['cloth'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Cloth|-03.86|+00.04|+00.22',),
 ('Cloth|-03.69|+00.04|+00.97',),
 ('Cloth|-03.60|+00.04|+00.41',)]

PERMISSIBLE OBJECT SET:
[('Cloth|-03.86|+00.04|+00.22',),
 ('Cloth|-03.69|+00.04|+00.97',),
 ('Cloth|-03.60|+00.04|+00.41',)]


Permissible Objects:
('Cloth|-03.86|+00.04|+00.22',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cloth|-03.86|+00.04|+00.22"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cloth|-03.86|+00.04|+00.22"})]
Action feasible: True

OPERATOR:
{'action': 'PlaceObject_0',
 'postcondition_ground_predicates': [{'arguments': ['cloth', 'drawer'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'}],
 'precondition_ground_predicates': [{'arguments': ['drawer', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['cloth'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Cloth|-03.86|+00.04|+00.22', 'Drawer|-01.44|+00.53|-00.62'),
 ('Cloth|-03.86|+00.04|+00.22', 'Drawer|-02.34|+00.53|-00.62'),
 ('Cloth|-03.86|+00.04|+00.22', 'Drawer|-02.34|+00.27|-00.62'),
 ('Cloth|-03.86|+00.04|+00.22', 'Drawer|-01.89|+00.27|-00.62'),
 ('Cloth|-03.86|+00.04|+00.22', 'Drawer|-02.79|+00.27|-00.62'),
 ('Cloth|-03.86|+00.04|+00.22', 'Drawer|-01.89|+00.53|-00.62'),
 ('Cloth|-03.86|+00.04|+00.22', 'Drawer|-02.79|+00.53|-00.62'),
 ('Cloth|-03.86|+00.04|+00.22', 'Drawer|-01.44|+00.27|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-01.44|+00.53|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-01.44|+00.53|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-02.34|+00.53|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-02.34|+00.53|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-02.34|+00.27|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-02.34|+00.27|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-01.89|+00.27|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-01.89|+00.27|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-02.79|+00.27|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-02.79|+00.27|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-01.89|+00.53|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-01.89|+00.53|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-02.79|+00.53|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-02.79|+00.53|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-01.44|+00.27|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-01.44|+00.27|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-01.44|+00.53|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-01.44|+00.53|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-02.34|+00.53|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-02.34|+00.53|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-02.34|+00.27|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-02.34|+00.27|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-01.89|+00.27|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-01.89|+00.27|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-02.79|+00.27|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-02.79|+00.27|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-01.89|+00.53|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-01.89|+00.53|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-02.79|+00.53|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-02.79|+00.53|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-01.44|+00.27|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-01.44|+00.27|-00.62')]

PERMISSIBLE OBJECT SET:
[('Cloth|-03.86|+00.04|+00.22', 'Drawer|-01.44|+00.53|-00.62'),
 ('Cloth|-03.86|+00.04|+00.22', 'Drawer|-02.34|+00.53|-00.62'),
 ('Cloth|-03.86|+00.04|+00.22', 'Drawer|-02.34|+00.27|-00.62'),
 ('Cloth|-03.86|+00.04|+00.22', 'Drawer|-01.89|+00.27|-00.62'),
 ('Cloth|-03.86|+00.04|+00.22', 'Drawer|-02.79|+00.27|-00.62'),
 ('Cloth|-03.86|+00.04|+00.22', 'Drawer|-01.89|+00.53|-00.62'),
 ('Cloth|-03.86|+00.04|+00.22', 'Drawer|-02.79|+00.53|-00.62'),
 ('Cloth|-03.86|+00.04|+00.22', 'Drawer|-01.44|+00.27|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-01.44|+00.53|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97',
  'Drawer|-01.44|+00.53|-00.62',
  'Cloth|-03.86|+00.04|+00.22'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-02.34|+00.53|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97',
  'Drawer|-02.34|+00.53|-00.62',
  'Cloth|-03.86|+00.04|+00.22'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-02.34|+00.27|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97',
  'Drawer|-02.34|+00.27|-00.62',
  'Cloth|-03.86|+00.04|+00.22'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-01.89|+00.27|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97',
  'Drawer|-01.89|+00.27|-00.62',
  'Cloth|-03.86|+00.04|+00.22'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-02.79|+00.27|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97',
  'Drawer|-02.79|+00.27|-00.62',
  'Cloth|-03.86|+00.04|+00.22'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-01.89|+00.53|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97',
  'Drawer|-01.89|+00.53|-00.62',
  'Cloth|-03.86|+00.04|+00.22'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-02.79|+00.53|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97',
  'Drawer|-02.79|+00.53|-00.62',
  'Cloth|-03.86|+00.04|+00.22'),
 ('Cloth|-03.69|+00.04|+00.97', 'Drawer|-01.44|+00.27|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97',
  'Drawer|-01.44|+00.27|-00.62',
  'Cloth|-03.86|+00.04|+00.22'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-01.44|+00.53|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41',
  'Drawer|-01.44|+00.53|-00.62',
  'Cloth|-03.86|+00.04|+00.22'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-02.34|+00.53|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41',
  'Drawer|-02.34|+00.53|-00.62',
  'Cloth|-03.86|+00.04|+00.22'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-02.34|+00.27|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41',
  'Drawer|-02.34|+00.27|-00.62',
  'Cloth|-03.86|+00.04|+00.22'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-01.89|+00.27|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41',
  'Drawer|-01.89|+00.27|-00.62',
  'Cloth|-03.86|+00.04|+00.22'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-02.79|+00.27|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41',
  'Drawer|-02.79|+00.27|-00.62',
  'Cloth|-03.86|+00.04|+00.22'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-01.89|+00.53|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41',
  'Drawer|-01.89|+00.53|-00.62',
  'Cloth|-03.86|+00.04|+00.22'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-02.79|+00.53|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41',
  'Drawer|-02.79|+00.53|-00.62',
  'Cloth|-03.86|+00.04|+00.22'),
 ('Cloth|-03.60|+00.04|+00.41', 'Drawer|-01.44|+00.27|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41',
  'Drawer|-01.44|+00.27|-00.62',
  'Cloth|-03.86|+00.04|+00.22')]


Permissible Objects:
('Cloth|-03.86|+00.04|+00.22', 'Drawer|-01.44|+00.53|-00.62')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Drawer|-01.44|+00.53|-00.62"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Drawer|-01.44|+00.53|-00.62"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.86|+00.04|+00.22', 'Drawer|-01.44|+00.53|-00.62')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cloth|-03.86|+00.04|+00.22", "receptacle_object_id": "Drawer|-01.44|+00.53|-00.62"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cloth|-03.86|+00.04|+00.22", "receptacle_object_id": "Drawer|-01.44|+00.53|-00.62"})]
Error Message: Target openable Receptacle is CLOSED, can't place if target is not open!
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.86|+00.04|+00.22', 'Drawer|-01.44|+00.53|-00.62')) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cloth|-03.86|+00.04|+00.22"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cloth|-03.86|+00.04|+00.22"})]
Error Message: object not found: Cloth|-03.86|+00.04|+00.22
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.86|+00.04|+00.22', 'Drawer|-01.44|+00.53|-00.62')) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cloth|-03.86|+00.04|+00.22"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cloth|-03.86|+00.04|+00.22"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.86|+00.04|+00.22', 'Drawer|-01.44|+00.53|-00.62')) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Drawer|-01.44|+00.53|-00.62"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cloth|-03.86|+00.04|+00.22", "receptacle_object_id": "Drawer|-01.44|+00.53|-00.62"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Drawer|-01.44|+00.53|-00.62"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cloth|-03.86|+00.04|+00.22", "receptacle_object_id": "Drawer|-01.44|+00.53|-00.62"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.86|+00.04|+00.22', 'Drawer|-01.44|+00.53|-00.62')) True
	 State: False

Action feasible: True

OPERATOR:
{'action': 'WashObject_1',
 'postcondition_ground_predicates': [{'arguments': ['cloth'],
                                      'is_neg': False,
                                      'predicate_name': 'isClean'}],
 'precondition_ground_predicates': [{'arguments': ['sinkbasin', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['cloth'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Cloth|-03.86|+00.04|+00.22',),
 ('Cloth|-03.86|+00.04|+00.22',),
 ('Cloth|-03.86|+00.04|+00.22',),
 ('Cloth|-03.86|+00.04|+00.22',),
 ('Cloth|-03.86|+00.04|+00.22',),
 ('Cloth|-03.69|+00.04|+00.97',),
 ('Cloth|-03.69|+00.04|+00.97',),
 ('Cloth|-03.69|+00.04|+00.97',),
 ('Cloth|-03.69|+00.04|+00.97',),
 ('Cloth|-03.69|+00.04|+00.97',),
 ('Cloth|-03.69|+00.04|+00.97',),
 ('Cloth|-03.60|+00.04|+00.41',),
 ('Cloth|-03.60|+00.04|+00.41',),
 ('Cloth|-03.60|+00.04|+00.41',),
 ('Cloth|-03.60|+00.04|+00.41',),
 ('Cloth|-03.60|+00.04|+00.41',),
 ('Cloth|-03.60|+00.04|+00.41',)]

PERMISSIBLE OBJECT SET:
[('Cloth|-03.86|+00.04|+00.22',),
 ('Cloth|-03.86|+00.04|+00.22', 'Sink|-01.92|+00.44|+02.03|SinkBasin'),
 ('Cloth|-03.86|+00.04|+00.22',
  'Sink|-01.92|+00.44|+02.03|SinkBasin',
  'Faucet|-01.92|+01.06|+02.18'),
 ('Cloth|-03.86|+00.04|+00.22',
  'Sink|-01.92|+00.44|+02.03|SinkBasin',
  'Faucet|-03.74|+01.86|+01.83'),
 ('Cloth|-03.86|+00.04|+00.22',
  'Sink|-01.92|+00.44|+02.03|SinkBasin',
  'Drawer|-01.44|+00.53|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97',),
 ('Cloth|-03.69|+00.04|+00.97', 'Sink|-01.92|+00.44|+02.03|SinkBasin'),
 ('Cloth|-03.69|+00.04|+00.97',
  'Sink|-01.92|+00.44|+02.03|SinkBasin',
  'Faucet|-01.92|+01.06|+02.18'),
 ('Cloth|-03.69|+00.04|+00.97',
  'Sink|-01.92|+00.44|+02.03|SinkBasin',
  'Faucet|-03.74|+01.86|+01.83'),
 ('Cloth|-03.69|+00.04|+00.97',
  'Sink|-01.92|+00.44|+02.03|SinkBasin',
  'Drawer|-01.44|+00.53|-00.62'),
 ('Cloth|-03.69|+00.04|+00.97',
  'Sink|-01.92|+00.44|+02.03|SinkBasin',
  'Drawer|-01.44|+00.53|-00.62',
  'Cloth|-03.86|+00.04|+00.22'),
 ('Cloth|-03.60|+00.04|+00.41',),
 ('Cloth|-03.60|+00.04|+00.41', 'Sink|-01.92|+00.44|+02.03|SinkBasin'),
 ('Cloth|-03.60|+00.04|+00.41',
  'Sink|-01.92|+00.44|+02.03|SinkBasin',
  'Faucet|-01.92|+01.06|+02.18'),
 ('Cloth|-03.60|+00.04|+00.41',
  'Sink|-01.92|+00.44|+02.03|SinkBasin',
  'Faucet|-03.74|+01.86|+01.83'),
 ('Cloth|-03.60|+00.04|+00.41',
  'Sink|-01.92|+00.44|+02.03|SinkBasin',
  'Drawer|-01.44|+00.53|-00.62'),
 ('Cloth|-03.60|+00.04|+00.41',
  'Sink|-01.92|+00.44|+02.03|SinkBasin',
  'Drawer|-01.44|+00.53|-00.62',
  'Cloth|-03.86|+00.04|+00.22')]


Permissible Objects:
('Cloth|-03.86|+00.04|+00.22',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cloth|-03.86|+00.04|+00.22"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cloth|-03.86|+00.04|+00.22"})]
Error Message: object not found: Cloth|-03.86|+00.04|+00.22
Action feasible: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.86|+00.04|+00.22',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Cloth|-03.86|+00.04|+00.22', 'Sink|-01.92|+00.44|+02.03|SinkBasin')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cloth|-03.86|+00.04|+00.22"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cloth|-03.86|+00.04|+00.22"})]
Error Message: object not found: Cloth|-03.86|+00.04|+00.22
Action feasible: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.86|+00.04|+00.22',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-01.92|+00.44|+02.03|SinkBasin"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-01.92|+00.44|+02.03|SinkBasin"})]
Error Message: object not found: Sink|-01.92|+00.44|+02.03|SinkBasin
Action feasible: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.86|+00.04|+00.22',)) True
	 State: False

Rollout 2/50

Permissible Objects:
('Cloth|-03.86|+00.04|+00.22', 'Sink|-01.92|+00.44|+02.03|SinkBasin', 'Faucet|-01.92|+01.06|+02.18')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cloth|-03.86|+00.04|+00.22"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cloth|-03.86|+00.04|+00.22"})]
Error Message: object not found: Cloth|-03.86|+00.04|+00.22
Action feasible: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.86|+00.04|+00.22',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-01.92|+01.06|+02.18"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-01.92|+01.06|+02.18"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Cloth|-03.86|+00.04|+00.22',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-01.92|+00.44|+02.03|SinkBasin"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-01.92|+00.44|+02.03|SinkBasin"})]
Error Message: object not found: Sink|-01.92|+00.44|+02.03|SinkBasin
Action feasible: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.86|+00.04|+00.22',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cloth|-03.86|+00.04|+00.22", "receptacle_object_id": "Sink|-01.92|+00.44|+02.03|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-01.92|+01.06|+02.18"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cloth|-03.86|+00.04|+00.22", "receptacle_object_id": "Sink|-01.92|+00.44|+02.03|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-01.92|+01.06|+02.18"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.86|+00.04|+00.22',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cloth|-03.86|+00.04|+00.22", "receptacle_object_id": "Faucet|-01.92|+01.06|+02.18"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-01.92|+00.44|+02.03|SinkBasin"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cloth|-03.86|+00.04|+00.22", "receptacle_object_id": "Faucet|-01.92|+01.06|+02.18"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|-01.92|+00.44|+02.03|SinkBasin"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.86|+00.04|+00.22',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-01.92|+01.06|+02.18"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Faucet|-01.92|+01.06|+02.18"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-01.92|+01.06|+02.18"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Faucet|-01.92|+01.06|+02.18"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Cloth|-03.86|+00.04|+00.22',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Cloth|-03.86|+00.04|+00.22',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-01.92|+01.06|+02.18"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Faucet|-01.92|+01.06|+02.18"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-01.92|+01.06|+02.18"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-01.92|+01.06|+02.18"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Faucet|-01.92|+01.06|+02.18"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-01.92|+01.06|+02.18"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Cloth|-03.86|+00.04|+00.22',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Cloth|-03.86|+00.04|+00.22',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Cloth|-03.86|+00.04|+00.22',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cloth|-03.86|+00.04|+00.22"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cloth|-03.86|+00.04|+00.22", "receptacle_object_id": "Sink|-01.92|+00.44|+02.03|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-01.92|+01.06|+02.18"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cloth|-03.86|+00.04|+00.22"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cloth|-03.86|+00.04|+00.22", "receptacle_object_id": "Sink|-01.92|+00.44|+02.03|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|-01.92|+01.06|+02.18"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Cloth|-03.86|+00.04|+00.22',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Cloth|-03.86|+00.04|+00.22',)) True
	 State: False

Action feasible: True

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.86|+00.04|+00.22', 'Drawer|-01.44|+00.53|-00.62')) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.86|+00.04|+00.22', 'Drawer|-02.34|+00.53|-00.62')) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.86|+00.04|+00.22', 'Drawer|-02.34|+00.27|-00.62')) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.86|+00.04|+00.22', 'Drawer|-01.89|+00.27|-00.62')) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.86|+00.04|+00.22', 'Drawer|-02.79|+00.27|-00.62')) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.86|+00.04|+00.22', 'Drawer|-01.89|+00.53|-00.62')) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.86|+00.04|+00.22', 'Drawer|-02.79|+00.53|-00.62')) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.86|+00.04|+00.22', 'Drawer|-01.44|+00.27|-00.62')) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.69|+00.04|+00.97', 'Drawer|-01.44|+00.53|-00.62')) True
	 State: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.69|+00.04|+00.97',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.69|+00.04|+00.97', 'Drawer|-02.34|+00.53|-00.62')) True
	 State: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.69|+00.04|+00.97',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.69|+00.04|+00.97', 'Drawer|-02.34|+00.27|-00.62')) True
	 State: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.69|+00.04|+00.97',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.69|+00.04|+00.97', 'Drawer|-01.89|+00.27|-00.62')) True
	 State: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.69|+00.04|+00.97',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.69|+00.04|+00.97', 'Drawer|-02.79|+00.27|-00.62')) True
	 State: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.69|+00.04|+00.97',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.69|+00.04|+00.97', 'Drawer|-01.89|+00.53|-00.62')) True
	 State: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.69|+00.04|+00.97',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.69|+00.04|+00.97', 'Drawer|-02.79|+00.53|-00.62')) True
	 State: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.69|+00.04|+00.97',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.69|+00.04|+00.97', 'Drawer|-01.44|+00.27|-00.62')) True
	 State: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.69|+00.04|+00.97',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.60|+00.04|+00.41', 'Drawer|-01.44|+00.53|-00.62')) True
	 State: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.60|+00.04|+00.41',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.60|+00.04|+00.41', 'Drawer|-02.34|+00.53|-00.62')) True
	 State: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.60|+00.04|+00.41',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.60|+00.04|+00.41', 'Drawer|-02.34|+00.27|-00.62')) True
	 State: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.60|+00.04|+00.41',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.60|+00.04|+00.41', 'Drawer|-01.89|+00.27|-00.62')) True
	 State: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.60|+00.04|+00.41',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.60|+00.04|+00.41', 'Drawer|-02.79|+00.27|-00.62')) True
	 State: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.60|+00.04|+00.41',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.60|+00.04|+00.41', 'Drawer|-01.89|+00.53|-00.62')) True
	 State: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.60|+00.04|+00.41',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.60|+00.04|+00.41', 'Drawer|-02.79|+00.53|-00.62')) True
	 State: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.60|+00.04|+00.41',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Cloth|-03.60|+00.04|+00.41', 'Drawer|-01.44|+00.27|-00.62')) True
	 State: False
	 Fluent(predicate='isClean', objects=('Cloth|-03.60|+00.04|+00.41',)) True
	 State: False

GOAL CHECK FUNCTION FAILED!
=============================================
Problem Number: 42
Problem ID: train/pick_clean_then_place_in_recep-Cloth-None-Drawer-427/trial_T20190909_070336_423393
Motion plan result: task_success: False
Total Actions Taken: 17
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 2.1 / 2.1
ChillObject_1 1.0 2.1 / 2.1
TakeObject_1 1.0 2.1 / 2.1
CutObject_0 1.0 1.1 / 1.1
CutObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PlaceObject_0 0.8347107438016529 10.1 / 12.1
TakeObject_0 0.814385150812065 35.1 / 43.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_0 0.047619047619047616 0.1 / 2.1
CoolObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 42 / 245, train/pick_clean_then_place_in_recep-Cloth-None-Drawer-427/trial_T20190909_070336_423393
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 42 / 245, train/pick_clean_then_place_in_recep-Cloth-None-Drawer-427/trial_T20190909_070336_423393
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 42 / 245, train/pick_clean_then_place_in_recep-Cloth-None-Drawer-427/trial_T20190909_070336_423393
Sucessfully found 0 plans for goals.
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 10 / 43 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 43 / 245, train/pick_and_place_simple-TomatoSliced-None-Fridge-6/trial_T20190907_233151_665009
Now attempting to plan for goal: 0 / 4
	Running planner with existing operators + 41 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'ChillObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	slice the bell pepper in the fridge.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PepperShakerType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: False
	 Plan string: Plan not found with FD! Error: INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpjl41dzfl /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpispgi86y --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp7g_3aidd
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.002s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.005s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 334 rules.
Computing model... [0.090s CPU, 0.099s wall-clock]
9440 relevant atoms
11821 auxiliary atoms
21261 final queue length
33701 total queue pushes
Completing instantiation... [0.120s CPU, 0.120s wall-clock]
Instantiating: [0.220s CPU, 0.233s wall-clock]
No relaxed solution! Generating unsolvable task...
Translator variables: 1
Translator derived variables: 0
Translator facts: 2
Translator goal facts: 1
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 0
Translator axioms: 0
Translator task size: 4
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.220s CPU, 0.241s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp7g_3aidd
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp7g_3aidd
[t=0.00194479s, 408500464 KB] reading input...
[t=0.00215119s, 408500464 KB] done reading input!
[t=0.00634487s, 408509680 KB] Initializing landmark sum heuristic...
[t=0.00636423s, 408509680 KB] Generating landmark graph...
[t=0.00638784s, 408509680 KB] Building a landmark graph with reasonable orders.
[t=0.00639317s, 408509680 KB] Initializing Exploration...
[t=0.00640879s, 408509680 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.00644713s, 408509680 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00646447s, 408509680 KB] Landmarks generation time: 7.3431e-05s
[t=0.00646791s, 408509680 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00647267s, 408509680 KB] 1 edges
[t=0.00647648s, 408509680 KB] approx. reasonable orders
[t=0.00647952s, 408509680 KB] approx. obedient reasonable orders
[t=0.00648399s, 408509680 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00648694s, 408509680 KB] Landmarks generation time: 0.00011931s
[t=0.00649141s, 408509680 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00649526s, 408509680 KB] 1 edges
[t=0.00649834s, 408509680 KB] Landmark graph generation time: 0.000135669s
[t=0.00650285s, 408509680 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00651654s, 408509680 KB] Landmark graph contains 1 orderings.
[t=0.00655529s, 408510704 KB] Simplifying 0 unary operators... done! [0 unary operators]
[t=0.0065607s, 408510704 KB] time to simplify: 7.462e-06s
[t=0.00656414s, 408510704 KB] Initializing additive heuristic...
[t=0.00656656s, 408510704 KB] Initializing FF heuristic...
[t=0.00661851s, 408510704 KB] Building successor generator...done!
[t=0.00662576s, 408510704 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00662863s, 408510704 KB] time for successor generation creation: 1.23e-06s
[t=0.00663167s, 408510704 KB] Variables: 1
[t=0.00663413s, 408510704 KB] FactPairs: 2
[t=0.00663622s, 408510704 KB] Bytes per state: 4
[t=0.00671092s, 408518896 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00673843s, 408527088 KB] 1 initial landmarks, 1 goal landmarks
[t=0.00676287s, 408527088 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity
[t=0.00676857s, 408527088 KB] Completely explored state space -- no solution!
[t=0.00677201s, 408527088 KB] Actual search time: 2.9643e-05s
[t=0.00677693s, 408527088 KB] Expanded 0 state(s).
[t=0.00677693s, 408527088 KB] Reopened 0 state(s).
[t=0.00677693s, 408527088 KB] Evaluated 1 state(s).
[t=0.00677693s, 408527088 KB] Evaluations: 1
[t=0.00677693s, 408527088 KB] Generated 0 state(s).
[t=0.00677693s, 408527088 KB] Dead ends: 1 state(s).
[t=0.00677693s, 408527088 KB] Number of registered states: 1
[t=0.00677693s, 408527088 KB] Int hash set load factor: 1/1 = 1
[t=0.00677693s, 408527088 KB] Int hash set resizes: 0
[t=0.00677693s, 408527088 KB] Search time: 6.724e-05s
[t=0.00677693s, 408527088 KB] Total time: 0.00677693s
Search stopped without finding a solution.
Peak memory: 408527088 KB
search exit code: 12

Driver aborting after search
INFO     Planner time: 0.30s
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 43 / 245, train/pick_and_place_simple-TomatoSliced-None-Fridge-6/trial_T20190907_233151_665009
Now attempting to plan for goal: 1 / 4
	Running planner with existing operators + 40 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TurnOffObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	slice the bell pepper in the fridge.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	 Plan string: (gotolocation agent1 loc_bar_2_bar__minus_2_bar_3_bar_30 loc_bar_2_bar__minus_4_bar_2_bar_45)
(gotolocation agent1 loc_bar_2_bar__minus_4_bar_2_bar_45 loc_bar_3_bar__minus_4_bar_1_bar_60)
(takeobject_1 agent1 loc_bar_3_bar__minus_4_bar_1_bar_60 knife_5_dot_13406848_comma_5_dot_13406848_comma__minus_4_dot_6774254_comma__minus_4_dot_6774254_comma_3_dot_77591896_comma_3_dot_77591896)
(gotolocation agent1 loc_bar_3_bar__minus_4_bar_1_bar_60 loc_bar__minus_7_bar_6_bar_1_bar_60)
(gotolocation agent1 loc_bar__minus_7_bar_6_bar_1_bar_60 loc_bar__minus_7_bar__minus_2_bar_3_bar_45)
(takeobject_1 agent1 loc_bar__minus_7_bar__minus_2_bar_3_bar_45 tomato__minus_9_dot_57335948_comma__minus_9_dot_57335948_comma__minus_2_dot_0310724_comma__minus_2_dot_0310724_comma_4_dot_52616884_comma_4_dot_52616884)
(cutobject_0 knife_5_dot_13406848_comma_5_dot_13406848_comma__minus_4_dot_6774254_comma__minus_4_dot_6774254_comma_3_dot_77591896_comma_3_dot_77591896 agent1 loc_bar__minus_7_bar__minus_2_bar_3_bar_45 tomato__minus_9_dot_57335948_comma__minus_9_dot_57335948_comma__minus_2_dot_0310724_comma__minus_2_dot_0310724_comma_4_dot_52616884_comma_4_dot_52616884)
(gotolocation agent1 loc_bar__minus_7_bar__minus_2_bar_3_bar_45 loc_bar_2_bar__minus_4_bar_2_bar_45)
(placeobject_0 agent1 loc_bar_2_bar__minus_4_bar_2_bar_45 countertop_1_dot_896_comma_1_dot_896_comma__minus_6_dot_5_comma__minus_6_dot_5_comma_3_dot_7856_comma_3_dot_7856 tomato__minus_9_dot_57335948_comma__minus_9_dot_57335948_comma__minus_2_dot_0310724_comma__minus_2_dot_0310724_comma_4_dot_52616884_comma_4_dot_52616884)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 43 / 245
Motion planning for: train/pick_and_place_simple-TomatoSliced-None-Fridge-6/trial_T20190907_233151_665009
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CounterTopType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_1', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['knife'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'TakeObject_1', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['tomato'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'CutObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['knife'], 'is_neg': False}]}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['tomato', 'countertop'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['countertop', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['tomato'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject butterknife)
(GotoLocation tomato)
(SliceObject tomato)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['tomato', 'fridge'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_1',
 'postcondition_ground_predicates': [{'arguments': ['knife'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Knife|+01.28|+00.94|-01.17',), ('Knife|-02.26|+00.80|+00.86',)]

PERMISSIBLE OBJECT SET:
[('Knife|+01.28|+00.94|-01.17',), ('Knife|-02.26|+00.80|+00.86',)]


Permissible Objects:
('Knife|+01.28|+00.94|-01.17',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Action feasible: True

OPERATOR:
{'action': 'TakeObject_1',
 'postcondition_ground_predicates': [{'arguments': ['tomato'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Tomato|-02.39|+01.13|-00.51',), ('Tomato|-02.39|+01.13|-00.51',)]

PERMISSIBLE OBJECT SET:
[('Tomato|-02.39|+01.13|-00.51',),
 ('Tomato|-02.39|+01.13|-00.51', 'Knife|+01.28|+00.94|-01.17')]


Permissible Objects:
('Tomato|-02.39|+01.13|-00.51',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Tomato|-02.39|+01.13|-00.51', 'Knife|+01.28|+00.94|-01.17')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+01.28|+00.94|-01.17"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+01.28|+00.94|-01.17"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Knife|+01.28|+00.94|-01.17
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+01.28|+00.94|-01.17"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+01.28|+00.94|-01.17"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: object not found: Knife|+01.28|+00.94|-01.17
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+01.28|+00.94|-01.17"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+01.28|+00.94|-01.17"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: object not found: Knife|+01.28|+00.94|-01.17
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+01.28|+00.94|-01.17"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+01.28|+00.94|-01.17"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+01.28|+00.94|-01.17"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+01.28|+00.94|-01.17"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 5/50

Permissible Objects:
('Tomato|-02.39|+01.13|-00.51',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.39|+01.13|-00.51", "receptacle_object_id": "Tomato|-02.39|+01.13|-00.51"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Tomato|-02.39|+01.13|-00.51', 'Knife|+01.28|+00.94|-01.17')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: object not found: Knife|+01.28|+00.94|-01.17
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.39|+01.13|-00.51", "receptacle_object_id": "Tomato|-02.39|+01.13|-00.51"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.39|+01.13|-00.51", "receptacle_object_id": "Knife|+01.28|+00.94|-01.17"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+01.28|+00.94|-01.17", "receptacle_object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+01.28|+00.94|-01.17", "receptacle_object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: object not found: Knife|+01.28|+00.94|-01.17
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: object not found: Knife|+01.28|+00.94|-01.17
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='holds', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 16/50
=============================================
Problem Number: 43
Problem ID: train/pick_and_place_simple-TomatoSliced-None-Fridge-6/trial_T20190907_233151_665009
Motion plan result: task_success: False
Total Actions Taken: 30
Failed at operator: 2 / 4 operators in task plan.
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 2.1 / 2.1
ChillObject_1 1.0 2.1 / 2.1
CutObject_0 1.0 1.1 / 1.1
CutObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PlaceObject_0 0.8347107438016529 10.1 / 12.1
TakeObject_0 0.814385150812065 35.1 / 43.1
TakeObject_1 0.7560975609756099 3.1 / 4.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_0 0.047619047619047616 0.1 / 2.1
CoolObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 43 / 245, train/pick_and_place_simple-TomatoSliced-None-Fridge-6/trial_T20190907_233151_665009
Now attempting to plan for goal: 2 / 4
	Running planner with existing operators + 39 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	slice the bell pepper in the fridge.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_2_bar__minus_2_bar_3_bar_30 loc_bar_3_bar__minus_4_bar_1_bar_60)
(takeobject_1 agent1 loc_bar_3_bar__minus_4_bar_1_bar_60 knife_5_dot_13406848_comma_5_dot_13406848_comma__minus_4_dot_6774254_comma__minus_4_dot_6774254_comma_3_dot_77591896_comma_3_dot_77591896)
(gotolocation agent1 loc_bar_3_bar__minus_4_bar_1_bar_60 loc_bar__minus_7_bar__minus_2_bar_3_bar_45)
(cutobject_0 knife_5_dot_13406848_comma_5_dot_13406848_comma__minus_4_dot_6774254_comma__minus_4_dot_6774254_comma_3_dot_77591896_comma_3_dot_77591896 agent1 loc_bar__minus_7_bar__minus_2_bar_3_bar_45 tomato__minus_9_dot_57335948_comma__minus_9_dot_57335948_comma__minus_2_dot_0310724_comma__minus_2_dot_0310724_comma_4_dot_52616884_comma_4_dot_52616884)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 43 / 245
Motion planning for: train/pick_and_place_simple-TomatoSliced-None-Fridge-6/trial_T20190907_233151_665009
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_1', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['knife'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'CutObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['knife'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject butterknife)
(GotoLocation tomato)
(SliceObject tomato)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['tomato', 'fridge'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_1',
 'postcondition_ground_predicates': [{'arguments': ['knife'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Knife|+01.28|+00.94|-01.17',), ('Knife|-02.26|+00.80|+00.86',)]

PERMISSIBLE OBJECT SET:
[('Knife|+01.28|+00.94|-01.17',), ('Knife|-02.26|+00.80|+00.86',)]


Permissible Objects:
('Knife|+01.28|+00.94|-01.17',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Action feasible: True

OPERATOR:
{'action': 'CutObject_0',
 'postcondition_ground_predicates': [{'arguments': ['tomato'],
                                      'is_neg': False,
                                      'predicate_name': 'isSliced'}],
 'precondition_ground_predicates': [{'arguments': ['knife'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Tomato|-02.39|+01.13|-00.51',),
 ('Tomato|-02.39|+01.13|-00.51',),
 ('Tomato|-02.39|+01.13|-00.51',),
 ('Tomato|-02.39|+01.13|-00.51',)]

PERMISSIBLE OBJECT SET:
[('Tomato|-02.39|+01.13|-00.51',),
 ('Tomato|-02.39|+01.13|-00.51', 'Knife|+01.28|+00.94|-01.17'),
 ('Tomato|-02.39|+01.13|-00.51', 'Knife|-02.26|+00.80|+00.86'),
 ('Tomato|-02.39|+01.13|-00.51',
  'Knife|-02.26|+00.80|+00.86',
  'Knife|+01.28|+00.94|-01.17')]


Permissible Objects:
('Tomato|-02.39|+01.13|-00.51',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Tomato|-02.39|+01.13|-00.51', 'Knife|+01.28|+00.94|-01.17')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Tomato|-02.39|+01.13|-00.51', 'Knife|-02.26|+00.80|+00.86')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Tomato|-02.39|+01.13|-00.51', 'Knife|-02.26|+00.80|+00.86', 'Knife|+01.28|+00.94|-01.17')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Tomato|-02.39|+01.13|-00.51',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.39|+01.13|-00.51", "receptacle_object_id": "Tomato|-02.39|+01.13|-00.51"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Tomato|-02.39|+01.13|-00.51', 'Knife|+01.28|+00.94|-01.17')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: object not found: Knife|+01.28|+00.94|-01.17
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.39|+01.13|-00.51", "receptacle_object_id": "Tomato|-02.39|+01.13|-00.51"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.39|+01.13|-00.51", "receptacle_object_id": "Knife|+01.28|+00.94|-01.17"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+01.28|+00.94|-01.17", "receptacle_object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+01.28|+00.94|-01.17", "receptacle_object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: object not found: Knife|+01.28|+00.94|-01.17
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: object not found: Knife|+01.28|+00.94|-01.17
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 16/50

Permissible Objects:
('Tomato|-02.39|+01.13|-00.51', 'Knife|-02.26|+00.80|+00.86')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.39|+01.13|-00.51", "receptacle_object_id": "Tomato|-02.39|+01.13|-00.51"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.39|+01.13|-00.51", "receptacle_object_id": "Knife|-02.26|+00.80|+00.86"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-02.26|+00.80|+00.86", "receptacle_object_id": "Tomato|-02.39|+01.13|-00.51"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-02.26|+00.80|+00.86", "receptacle_object_id": "Knife|-02.26|+00.80|+00.86"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: object not found: Knife|-02.26|+00.80|+00.86
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: object not found: Knife|-02.26|+00.80|+00.86
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: object not found: Knife|-02.26|+00.80|+00.86
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 16/50

Permissible Objects:
('Tomato|-02.39|+01.13|-00.51', 'Knife|-02.26|+00.80|+00.86', 'Knife|+01.28|+00.94|-01.17')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: object not found: Knife|+01.28|+00.94|-01.17
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.39|+01.13|-00.51", "receptacle_object_id": "Tomato|-02.39|+01.13|-00.51"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.39|+01.13|-00.51", "receptacle_object_id": "Knife|-02.26|+00.80|+00.86"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.39|+01.13|-00.51", "receptacle_object_id": "Knife|+01.28|+00.94|-01.17"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-02.26|+00.80|+00.86", "receptacle_object_id": "Tomato|-02.39|+01.13|-00.51"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-02.26|+00.80|+00.86", "receptacle_object_id": "Knife|-02.26|+00.80|+00.86"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-02.26|+00.80|+00.86", "receptacle_object_id": "Knife|+01.28|+00.94|-01.17"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+01.28|+00.94|-01.17", "receptacle_object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+01.28|+00.94|-01.17", "receptacle_object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+01.28|+00.94|-01.17", "receptacle_object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: object not found: Knife|-02.26|+00.80|+00.86
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: object not found: Knife|+01.28|+00.94|-01.17
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: object not found: Knife|-02.26|+00.80|+00.86
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: object not found: Knife|+01.28|+00.94|-01.17
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: object not found: Knife|-02.26|+00.80|+00.86
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 27/50
=============================================
Problem Number: 43
Problem ID: train/pick_and_place_simple-TomatoSliced-None-Fridge-6/trial_T20190907_233151_665009
Motion plan result: task_success: False
Total Actions Taken: 71
Failed at operator: 2 / 2 operators in task plan.
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 2.1 / 2.1
ChillObject_1 1.0 2.1 / 2.1
CutObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PlaceObject_0 0.8347107438016529 10.1 / 12.1
TakeObject_0 0.814385150812065 35.1 / 43.1
TakeObject_1 0.803921568627451 4.1 / 5.1
CutObject_0 0.5238095238095238 1.1 / 2.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_0 0.047619047619047616 0.1 / 2.1
CoolObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 43 / 245, train/pick_and_place_simple-TomatoSliced-None-Fridge-6/trial_T20190907_233151_665009
Now attempting to plan for goal: 3 / 4
	Running planner with existing operators + 40 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	slice the bell pepper in the fridge.
	 Ground truth goal: 
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?ro - receptacle)
(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(and 
		(inReceptacle ?o ?ro)
		(inReceptacle ?ot ?r)
		(sliceable ?o)
		(isSliced ?o))))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_2_bar__minus_2_bar_3_bar_30 loc_bar_3_bar__minus_4_bar_1_bar_60)
(takeobject_0 agent1 loc_bar_3_bar__minus_4_bar_1_bar_60 knife_5_dot_13406848_comma_5_dot_13406848_comma__minus_4_dot_6774254_comma__minus_4_dot_6774254_comma_3_dot_77591896_comma_3_dot_77591896)
(gotolocation agent1 loc_bar_3_bar__minus_4_bar_1_bar_60 loc_bar__minus_7_bar__minus_2_bar_3_bar_45)
(cutobject_0 knife_5_dot_13406848_comma_5_dot_13406848_comma__minus_4_dot_6774254_comma__minus_4_dot_6774254_comma_3_dot_77591896_comma_3_dot_77591896 agent1 loc_bar__minus_7_bar__minus_2_bar_3_bar_45 tomato__minus_9_dot_57335948_comma__minus_9_dot_57335948_comma__minus_2_dot_0310724_comma__minus_2_dot_0310724_comma_4_dot_52616884_comma_4_dot_52616884)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 43 / 245
Motion planning for: train/pick_and_place_simple-TomatoSliced-None-Fridge-6/trial_T20190907_233151_665009
Proposed goal is: 
(:goal
	(exists (?ro - receptacle)
(exists (?r - receptacle)
(exists (?ot - object)
(exists (?o - object)
(and 
		(inReceptacle ?o ?ro)
		(inReceptacle ?ot ?r)
		(sliceable ?o)
		(isSliced ?o))))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['knife'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'CutObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['knife'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject butterknife)
(GotoLocation tomato)
(SliceObject tomato)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['tomato', 'fridge'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['knife'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Knife|+01.28|+00.94|-01.17',), ('Knife|-02.26|+00.80|+00.86',)]

PERMISSIBLE OBJECT SET:
[('Knife|+01.28|+00.94|-01.17',), ('Knife|-02.26|+00.80|+00.86',)]


Permissible Objects:
('Knife|+01.28|+00.94|-01.17',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Action feasible: True

OPERATOR:
{'action': 'CutObject_0',
 'postcondition_ground_predicates': [{'arguments': ['tomato'],
                                      'is_neg': False,
                                      'predicate_name': 'isSliced'}],
 'precondition_ground_predicates': [{'arguments': ['knife'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Tomato|-02.39|+01.13|-00.51',),
 ('Tomato|-02.39|+01.13|-00.51',),
 ('Tomato|-02.39|+01.13|-00.51',),
 ('Tomato|-02.39|+01.13|-00.51',)]

PERMISSIBLE OBJECT SET:
[('Tomato|-02.39|+01.13|-00.51',),
 ('Tomato|-02.39|+01.13|-00.51', 'Knife|+01.28|+00.94|-01.17'),
 ('Tomato|-02.39|+01.13|-00.51', 'Knife|-02.26|+00.80|+00.86'),
 ('Tomato|-02.39|+01.13|-00.51',
  'Knife|-02.26|+00.80|+00.86',
  'Knife|+01.28|+00.94|-01.17')]


Permissible Objects:
('Tomato|-02.39|+01.13|-00.51',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Tomato|-02.39|+01.13|-00.51', 'Knife|+01.28|+00.94|-01.17')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Tomato|-02.39|+01.13|-00.51', 'Knife|-02.26|+00.80|+00.86')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Tomato|-02.39|+01.13|-00.51', 'Knife|-02.26|+00.80|+00.86', 'Knife|+01.28|+00.94|-01.17')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Tomato|-02.39|+01.13|-00.51',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.39|+01.13|-00.51", "receptacle_object_id": "Tomato|-02.39|+01.13|-00.51"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Tomato|-02.39|+01.13|-00.51', 'Knife|+01.28|+00.94|-01.17')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: object not found: Knife|+01.28|+00.94|-01.17
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.39|+01.13|-00.51", "receptacle_object_id": "Tomato|-02.39|+01.13|-00.51"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.39|+01.13|-00.51", "receptacle_object_id": "Knife|+01.28|+00.94|-01.17"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+01.28|+00.94|-01.17", "receptacle_object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+01.28|+00.94|-01.17", "receptacle_object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: object not found: Knife|+01.28|+00.94|-01.17
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: object not found: Knife|+01.28|+00.94|-01.17
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 16/50

Permissible Objects:
('Tomato|-02.39|+01.13|-00.51', 'Knife|-02.26|+00.80|+00.86')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.39|+01.13|-00.51", "receptacle_object_id": "Tomato|-02.39|+01.13|-00.51"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.39|+01.13|-00.51", "receptacle_object_id": "Knife|-02.26|+00.80|+00.86"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-02.26|+00.80|+00.86", "receptacle_object_id": "Tomato|-02.39|+01.13|-00.51"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-02.26|+00.80|+00.86", "receptacle_object_id": "Knife|-02.26|+00.80|+00.86"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: object not found: Knife|-02.26|+00.80|+00.86
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: object not found: Knife|-02.26|+00.80|+00.86
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: object not found: Knife|-02.26|+00.80|+00.86
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 16/50

Permissible Objects:
('Tomato|-02.39|+01.13|-00.51', 'Knife|-02.26|+00.80|+00.86', 'Knife|+01.28|+00.94|-01.17')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: object not found: Knife|+01.28|+00.94|-01.17
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.39|+01.13|-00.51", "receptacle_object_id": "Tomato|-02.39|+01.13|-00.51"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.39|+01.13|-00.51", "receptacle_object_id": "Knife|-02.26|+00.80|+00.86"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.39|+01.13|-00.51", "receptacle_object_id": "Knife|+01.28|+00.94|-01.17"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-02.26|+00.80|+00.86", "receptacle_object_id": "Tomato|-02.39|+01.13|-00.51"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-02.26|+00.80|+00.86", "receptacle_object_id": "Knife|-02.26|+00.80|+00.86"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|-02.26|+00.80|+00.86", "receptacle_object_id": "Knife|+01.28|+00.94|-01.17"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+01.28|+00.94|-01.17", "receptacle_object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+01.28|+00.94|-01.17", "receptacle_object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: No valid Receptacle found
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+01.28|+00.94|-01.17", "receptacle_object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: object not found: Knife|-02.26|+00.80|+00.86
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: object not found: Knife|+01.28|+00.94|-01.17
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: object not found: Knife|-02.26|+00.80|+00.86
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: object not found: Knife|+01.28|+00.94|-01.17
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.39|+01.13|-00.51"})]
Error Message: object not found: Tomato|-02.39|+01.13|-00.51
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|-02.26|+00.80|+00.86"})]
Error Message: object not found: Knife|-02.26|+00.80|+00.86
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+01.28|+00.94|-01.17"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='isSliced', objects=('Tomato|-02.39|+01.13|-00.51',)) True
	 State: False

Rollout 27/50
=============================================
Problem Number: 43
Problem ID: train/pick_and_place_simple-TomatoSliced-None-Fridge-6/trial_T20190907_233151_665009
Motion plan result: task_success: False
Total Actions Taken: 71
Failed at operator: 2 / 2 operators in task plan.
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 2.1 / 2.1
ChillObject_1 1.0 2.1 / 2.1
CutObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PlaceObject_0 0.8347107438016529 10.1 / 12.1
TakeObject_0 0.8185941043083901 36.1 / 44.1
TakeObject_1 0.803921568627451 4.1 / 5.1
CutObject_0 0.3548387096774194 1.1 / 3.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_0 0.047619047619047616 0.1 / 2.1
CoolObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 44 / 245, train/pick_clean_then_place_in_recep-Bowl-None-DiningTable-21/trial_T20190907_000053_568571
Now attempting to plan for goal: 0 / 4
	Running planner with existing operators + 39 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'HeatObject_2', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	put a bowl filled with water on the long table.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(inReceptacle ?o ?r))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: 
		Failed to parse plan string: 
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 44 / 245, train/pick_clean_then_place_in_recep-Bowl-None-DiningTable-21/trial_T20190907_000053_568571
Now attempting to plan for goal: 1 / 4
	Running planner with existing operators + 40 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	put a bowl filled with water on the long table.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r CounterTopType))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: 
		Failed to parse plan string: 
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 44 / 245, train/pick_clean_then_place_in_recep-Bowl-None-DiningTable-21/trial_T20190907_000053_568571
Now attempting to plan for goal: 2 / 4
	Running planner with existing operators + 38 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	put a bowl filled with water on the long table.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(isOn ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: False
	 Plan string: Plan not found with FD! Error: INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp1v1bpj8r /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp8c4d79oy --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp7pht4ss0
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.005s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 315 rules.
Computing model... [0.060s CPU, 0.062s wall-clock]
4498 relevant atoms
7037 auxiliary atoms
11535 final queue length
16650 total queue pushes
Completing instantiation... [0.040s CPU, 0.048s wall-clock]
Instantiating: [0.120s CPU, 0.123s wall-clock]
No relaxed solution! Generating unsolvable task...
Translator variables: 1
Translator derived variables: 0
Translator facts: 2
Translator goal facts: 1
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 0
Translator axioms: 0
Translator task size: 4
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.120s CPU, 0.128s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp7pht4ss0
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp7pht4ss0
[t=0.000147026s, 408517872 KB] reading input...
[t=0.000300653s, 408526064 KB] done reading input!
[t=0.00468732s, 408556784 KB] Initializing landmark sum heuristic...
[t=0.00470237s, 408556784 KB] Generating landmark graph...
[t=0.00470774s, 408556784 KB] Building a landmark graph with reasonable orders.
[t=0.00471086s, 408556784 KB] Initializing Exploration...
[t=0.00471422s, 408556784 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.00472824s, 408556784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00473193s, 408556784 KB] Landmarks generation time: 2.3042e-05s
[t=0.00473427s, 408556784 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00473698s, 408556784 KB] 1 edges
[t=0.00473935s, 408556784 KB] approx. reasonable orders
[t=0.00474157s, 408556784 KB] approx. obedient reasonable orders
[t=0.00474366s, 408556784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00474575s, 408556784 KB] Landmarks generation time: 4.1656e-05s
[t=0.00474776s, 408556784 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00475001s, 408556784 KB] 1 edges
[t=0.00475272s, 408556784 KB] Landmark graph generation time: 5.166e-05s
[t=0.00475477s, 408556784 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00475711s, 408556784 KB] Landmark graph contains 1 orderings.
[t=0.00476707s, 408556784 KB] Simplifying 0 unary operators... done! [0 unary operators]
[t=0.00477019s, 408556784 KB] time to simplify: 9.3521e-05s
[t=0.0048624s, 408556784 KB] Initializing additive heuristic...
[t=0.00486526s, 408556784 KB] Initializing FF heuristic...
[t=0.00489339s, 408556784 KB] Building successor generator...done!
[t=0.00490048s, 408556784 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0049027s, 408556784 KB] time for successor generation creation: 2.173e-06s
[t=0.0049052s, 408556784 KB] Variables: 1
[t=0.00490709s, 408556784 KB] FactPairs: 2
[t=0.00490909s, 408556784 KB] Bytes per state: 4
[t=0.00493021s, 408556784 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00493497s, 408556784 KB] 1 initial landmarks, 1 goal landmarks
[t=0.00494353s, 408556784 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity
[t=0.00494608s, 408556784 KB] Completely explored state space -- no solution!
[t=0.00494804s, 408556784 KB] Actual search time: 1.1439e-05s
[t=0.00495018s, 408556784 KB] Expanded 0 state(s).
[t=0.00495018s, 408556784 KB] Reopened 0 state(s).
[t=0.00495018s, 408556784 KB] Evaluated 1 state(s).
[t=0.00495018s, 408556784 KB] Evaluations: 1
[t=0.00495018s, 408556784 KB] Generated 0 state(s).
[t=0.00495018s, 408556784 KB] Dead ends: 1 state(s).
[t=0.00495018s, 408556784 KB] Number of registered states: 1
[t=0.00495018s, 408556784 KB] Int hash set load factor: 1/1 = 1
[t=0.00495018s, 408556784 KB] Int hash set resizes: 0
[t=0.00495018s, 408556784 KB] Search time: 2.0377e-05s
[t=0.00495018s, 408556784 KB] Total time: 0.00495018s
Search stopped without finding a solution.
Peak memory: 408556784 KB
search exit code: 12

Driver aborting after search
INFO     Planner time: 0.18s
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 44 / 245, train/pick_clean_then_place_in_recep-Bowl-None-DiningTable-21/trial_T20190907_000053_568571
Now attempting to plan for goal: 3 / 4
	Running planner with existing operators + 40 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	put a bowl filled with water on the long table.
	 Ground truth goal: 
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(isReceptacleObject ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_0_bar__minus_8_bar_2_bar_30 loc_bar_0_bar_1_bar_0_bar_60)
(gotolocation agent1 loc_bar_0_bar_1_bar_0_bar_60 loc_bar_1_bar__minus_1_bar_1_bar_15)
(takeobject_0 agent1 loc_bar_1_bar__minus_1_bar_1_bar_15 bowl_3_dot_797578_comma_3_dot_797578_comma__minus_0_dot_584428312_comma__minus_0_dot_584428312_comma_5_dot_84905912_comma_5_dot_84905912)
(gotolocation agent1 loc_bar_1_bar__minus_1_bar_1_bar_15 loc_bar_0_bar_1_bar_0_bar_60)
(placeobject_0 agent1 loc_bar_0_bar_1_bar_0_bar_60 diningtable__minus_2_dot_096_comma__minus_2_dot_096_comma_3_dot_804_comma_3_dot_804_comma_0_dot_024_comma_0_dot_024 bowl_3_dot_797578_comma_3_dot_797578_comma__minus_0_dot_584428312_comma__minus_0_dot_584428312_comma_5_dot_84905912_comma_5_dot_84905912)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 44 / 245
Motion planning for: train/pick_clean_then_place_in_recep-Bowl-None-DiningTable-21/trial_T20190907_000053_568571
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o BowlType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(isReceptacleObject ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BowlType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['bowl'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['bowl', 'diningtable'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['diningtable', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['bowl'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation cabinet)
(PickupObject bowl)
(GotoLocation sinkbasin)
(CleanObject bowl)
(GotoLocation diningtable)
(PutObject bowl diningtable)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['bowl', 'diningtable'], 'is_neg': False}

{'predicate_name': 'cleanable', 'arguments': ['bowl'], 'is_neg': False}

{'predicate_name': 'isClean', 'arguments': ['bowl'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['bowl'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Bowl|+00.86|+01.46|+00.41',),
 ('Bowl|+00.75|+00.46|-01.80',),
 ('Bowl|+00.75|+00.46|-02.11',),
 ('Bowl|+00.95|+01.46|-00.15',)]

PERMISSIBLE OBJECT SET:
[('Bowl|+00.86|+01.46|+00.41',),
 ('Bowl|+00.75|+00.46|-01.80',),
 ('Bowl|+00.75|+00.46|-02.11',),
 ('Bowl|+00.95|+01.46|-00.15',)]


Permissible Objects:
('Bowl|+00.86|+01.46|+00.41',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bowl|+00.86|+01.46|+00.41"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bowl|+00.86|+01.46|+00.41"})]
Error Message: Bowl|+00.86|+01.46|+00.41 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.86|+01.46|+00.41',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Bowl|+00.75|+00.46|-01.80',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bowl|+00.75|+00.46|-01.80"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bowl|+00.75|+00.46|-01.80"})]
Error Message: Bowl|+00.75|+00.46|-01.80 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.75|+00.46|-01.80',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Bowl|+00.75|+00.46|-02.11',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bowl|+00.75|+00.46|-02.11"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bowl|+00.75|+00.46|-02.11"})]
Error Message: Bowl|+00.75|+00.46|-02.11 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.75|+00.46|-02.11',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Bowl|+00.95|+01.46|-00.15',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bowl|+00.95|+01.46|-00.15"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bowl|+00.95|+01.46|-00.15"})]
Error Message: Bowl|+00.95|+01.46|-00.15 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.95|+01.46|-00.15',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Bowl|+00.86|+01.46|+00.41',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Bowl|+00.86|+01.46|+00.41"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.86|+01.46|+00.41',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Bowl|+00.86|+01.46|+00.41"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.86|+01.46|+00.41',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bowl|+00.86|+01.46|+00.41"})]
Error Message: Bowl|+00.86|+01.46|+00.41 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.86|+01.46|+00.41',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Bowl|+00.86|+01.46|+00.41", "receptacle_object_id": "Bowl|+00.86|+01.46|+00.41"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.86|+01.46|+00.41',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Bowl|+00.86|+01.46|+00.41"})]
Error Message: object not found: Bowl|+00.86|+01.46|+00.41
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.86|+01.46|+00.41',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Bowl|+00.86|+01.46|+00.41"})]
Error Message: object not found: Bowl|+00.86|+01.46|+00.41
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.86|+01.46|+00.41',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Bowl|+00.86|+01.46|+00.41"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.86|+01.46|+00.41',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Bowl|+00.75|+00.46|-01.80',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Bowl|+00.75|+00.46|-01.80"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.75|+00.46|-01.80',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Bowl|+00.75|+00.46|-01.80"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.75|+00.46|-01.80',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bowl|+00.75|+00.46|-01.80"})]
Error Message: Bowl|+00.75|+00.46|-01.80 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.75|+00.46|-01.80',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Bowl|+00.75|+00.46|-01.80", "receptacle_object_id": "Bowl|+00.75|+00.46|-01.80"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.75|+00.46|-01.80',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Bowl|+00.75|+00.46|-01.80"})]
Error Message: object not found: Bowl|+00.75|+00.46|-01.80
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.75|+00.46|-01.80',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Bowl|+00.75|+00.46|-01.80"})]
Error Message: object not found: Bowl|+00.75|+00.46|-01.80
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.75|+00.46|-01.80',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Bowl|+00.75|+00.46|-01.80"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.75|+00.46|-01.80',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Bowl|+00.75|+00.46|-02.11',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Bowl|+00.75|+00.46|-02.11"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.75|+00.46|-02.11',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Bowl|+00.75|+00.46|-02.11"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.75|+00.46|-02.11',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bowl|+00.75|+00.46|-02.11"})]
Error Message: Bowl|+00.75|+00.46|-02.11 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.75|+00.46|-02.11',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Bowl|+00.75|+00.46|-02.11", "receptacle_object_id": "Bowl|+00.75|+00.46|-02.11"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.75|+00.46|-02.11',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Bowl|+00.75|+00.46|-02.11"})]
Error Message: object not found: Bowl|+00.75|+00.46|-02.11
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.75|+00.46|-02.11',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Bowl|+00.75|+00.46|-02.11"})]
Error Message: object not found: Bowl|+00.75|+00.46|-02.11
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.75|+00.46|-02.11',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Bowl|+00.75|+00.46|-02.11"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.75|+00.46|-02.11',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Bowl|+00.95|+01.46|-00.15',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Bowl|+00.95|+01.46|-00.15"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.95|+01.46|-00.15',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Bowl|+00.95|+01.46|-00.15"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.95|+01.46|-00.15',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Bowl|+00.95|+01.46|-00.15"})]
Error Message: Bowl|+00.95|+01.46|-00.15 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.95|+01.46|-00.15',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Bowl|+00.95|+01.46|-00.15", "receptacle_object_id": "Bowl|+00.95|+01.46|-00.15"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.95|+01.46|-00.15',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Bowl|+00.95|+01.46|-00.15"})]
Error Message: object not found: Bowl|+00.95|+01.46|-00.15
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.95|+01.46|-00.15',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Bowl|+00.95|+01.46|-00.15"})]
Error Message: object not found: Bowl|+00.95|+01.46|-00.15
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.95|+01.46|-00.15',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Bowl|+00.95|+01.46|-00.15"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='holds', objects=('Bowl|+00.95|+01.46|-00.15',)) True
	 State: False

Rollout 7/50
=============================================
Problem Number: 44
Problem ID: train/pick_clean_then_place_in_recep-Bowl-None-DiningTable-21/trial_T20190907_000053_568571
Motion plan result: task_success: False
Total Actions Taken: 32
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 2.1 / 2.1
ChillObject_1 1.0 2.1 / 2.1
CutObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PlaceObject_0 0.8347107438016529 10.1 / 12.1
TakeObject_1 0.803921568627451 4.1 / 5.1
TakeObject_0 0.8004434589800443 36.1 / 45.1
CutObject_0 0.3548387096774194 1.1 / 3.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_0 0.047619047619047616 0.1 / 2.1
CoolObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 10 / 45 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 45 / 245, train/pick_clean_then_place_in_recep-DishSponge-None-Shelf-20/trial_T20190907_222429_992578
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 41 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'WarmObject_1', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	put the sponge on the shelf.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o DishSpongeType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o DishSpongeType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_5_bar_3_bar_0_bar_30 loc_bar_7_bar_8_bar_0_bar_60)
(gotolocation agent1 loc_bar_7_bar_8_bar_0_bar_60 loc_bar__minus_2_bar_0_bar_1_bar_60)
(takeobject_0 agent1 loc_bar__minus_2_bar_0_bar_1_bar_60 dishsponge__minus_0_dot_1882647276_comma__minus_0_dot_1882647276_comma_0_dot_30654_comma_0_dot_30654_comma_3_dot_720834972_comma_3_dot_720834972)
(gotolocation agent1 loc_bar__minus_2_bar_0_bar_1_bar_60 loc_bar_6_bar_6_bar_0_bar_45)
(placeobject_0 agent1 loc_bar_6_bar_6_bar_0_bar_45 shelf_6_dot_20640184_comma_6_dot_20640184_comma_9_dot_9316_comma_9_dot_9316_comma_2_dot_1681444_comma_2_dot_1681444 dishsponge__minus_0_dot_1882647276_comma__minus_0_dot_1882647276_comma_0_dot_30654_comma_0_dot_30654_comma_3_dot_720834972_comma_3_dot_720834972)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 45 / 245
Motion planning for: train/pick_clean_then_place_in_recep-DishSponge-None-Shelf-20/trial_T20190907_222429_992578
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o DishSpongeType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o DishSpongeType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['dishsponge'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['dishsponge', 'shelf'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['shelf', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['dishsponge'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation diningtable)
(PickupObject dishsponge)
(GotoLocation sinkbasin)
(CleanObject dishsponge)
(GotoLocation shelf)
(PutObject dishsponge shelf)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['dishsponge', 'shelf'], 'is_neg': False}

{'predicate_name': 'cleanable', 'arguments': ['dishsponge'], 'is_neg': False}

{'predicate_name': 'isClean', 'arguments': ['dishsponge'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['dishsponge'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('DishSponge|-00.05|+00.93|+00.08',)]

PERMISSIBLE OBJECT SET:
[('DishSponge|-00.05|+00.93|+00.08',)]


Permissible Objects:
('DishSponge|-00.05|+00.93|+00.08',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "DishSponge|-00.05|+00.93|+00.08"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "DishSponge|-00.05|+00.93|+00.08"})]
Action feasible: True

OPERATOR:
{'action': 'PlaceObject_0',
 'postcondition_ground_predicates': [{'arguments': ['dishsponge', 'shelf'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'}],
 'precondition_ground_predicates': [{'arguments': ['shelf', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['dishsponge'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('DishSponge|-00.05|+00.93|+00.08', 'Shelf|+01.55|+00.87|+02.48'),
 ('DishSponge|-00.05|+00.93|+00.08', 'Shelf|+01.55|+00.54|+02.48'),
 ('DishSponge|-00.05|+00.93|+00.08', 'Shelf|+01.55|+00.16|+02.48')]

PERMISSIBLE OBJECT SET:
[('DishSponge|-00.05|+00.93|+00.08', 'Shelf|+01.55|+00.87|+02.48'),
 ('DishSponge|-00.05|+00.93|+00.08', 'Shelf|+01.55|+00.54|+02.48'),
 ('DishSponge|-00.05|+00.93|+00.08', 'Shelf|+01.55|+00.16|+02.48')]


Permissible Objects:
('DishSponge|-00.05|+00.93|+00.08', 'Shelf|+01.55|+00.87|+02.48')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Shelf|+01.55|+00.87|+02.48"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('DishSponge|-00.05|+00.93|+00.08', 'Shelf|+01.55|+00.87|+02.48')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "DishSponge|-00.05|+00.93|+00.08", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "DishSponge|-00.05|+00.93|+00.08", "receptacle_object_id": "Shelf|+01.55|+00.87|+02.48"})]
Action feasible: True

	 Fluent(predicate='isClean', objects=('DishSponge|-00.05|+00.93|+00.08',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('DishSponge|-00.05|+00.93|+00.08', 'Shelf|+01.55|+00.54|+02.48')) True
	 State: False
	 Fluent(predicate='isClean', objects=('DishSponge|-00.05|+00.93|+00.08',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('DishSponge|-00.05|+00.93|+00.08', 'Shelf|+01.55|+00.16|+02.48')) True
	 State: False
	 Fluent(predicate='isClean', objects=('DishSponge|-00.05|+00.93|+00.08',)) True
	 State: False

GOAL CHECK FUNCTION FAILED!
=============================================
Problem Number: 45
Problem ID: train/pick_clean_then_place_in_recep-DishSponge-None-Shelf-20/trial_T20190907_222429_992578
Motion plan result: task_success: False
Total Actions Taken: 3
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 2.1 / 2.1
ChillObject_1 1.0 2.1 / 2.1
CutObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PlaceObject_0 0.8473282442748091 11.1 / 13.1
TakeObject_0 0.8047722342733189 37.1 / 46.1
TakeObject_1 0.803921568627451 4.1 / 5.1
CutObject_0 0.3548387096774194 1.1 / 3.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_0 0.047619047619047616 0.1 / 2.1
CoolObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 45 / 245, train/pick_clean_then_place_in_recep-DishSponge-None-Shelf-20/trial_T20190907_222429_992578
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 45 / 245, train/pick_clean_then_place_in_recep-DishSponge-None-Shelf-20/trial_T20190907_222429_992578
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 45 / 245, train/pick_clean_then_place_in_recep-DishSponge-None-Shelf-20/trial_T20190907_222429_992578
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 46 / 245, train/pick_clean_then_place_in_recep-Pot-None-Shelf-1/trial_T20190908_001818_534745
Now attempting to plan for goal: 0 / 2
	Running planner with existing operators + 39 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	place a pot with water on a shelf.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: False
	 Plan string: Plan not found with FD! Error: INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpbru1wors /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpki_movie --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpsu3jbhrb
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.005s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 321 rules.
Computing model... [0.040s CPU, 0.045s wall-clock]
3497 relevant atoms
4086 auxiliary atoms
7583 final queue length
11136 total queue pushes
Completing instantiation... [0.030s CPU, 0.038s wall-clock]
Instantiating: [0.080s CPU, 0.096s wall-clock]
No relaxed solution! Generating unsolvable task...
Translator variables: 1
Translator derived variables: 0
Translator facts: 2
Translator goal facts: 1
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 0
Translator axioms: 0
Translator task size: 4
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.080s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpsu3jbhrb
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpsu3jbhrb
[t=0.0019712s, 408518896 KB] reading input...
[t=0.00219912s, 408518896 KB] done reading input!
[t=0.00642855s, 408546544 KB] Initializing landmark sum heuristic...
[t=0.00644221s, 408546544 KB] Generating landmark graph...
[t=0.00645865s, 408546544 KB] Building a landmark graph with reasonable orders.
[t=0.00646328s, 408546544 KB] Initializing Exploration...
[t=0.00648038s, 408546544 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.00651531s, 408546544 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00653224s, 408546544 KB] Landmarks generation time: 7.0889e-05s
[t=0.00653577s, 408546544 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00654069s, 408546544 KB] 1 edges
[t=0.00654442s, 408546544 KB] approx. reasonable orders
[t=0.00654905s, 408546544 KB] approx. obedient reasonable orders
[t=0.00655287s, 408546544 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00655701s, 408546544 KB] Landmarks generation time: 0.00011357s
[t=0.0065598s, 408546544 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00656492s, 408546544 KB] 1 edges
[t=0.00656824s, 408546544 KB] Landmark graph generation time: 0.000127592s
[t=0.00657226s, 408546544 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00657525s, 408546544 KB] Landmark graph contains 1 orderings.
[t=0.00658632s, 408546544 KB] Simplifying 0 unary operators... done! [0 unary operators]
[t=0.00659141s, 408546544 KB] time to simplify: 6.56e-06s
[t=0.00659575s, 408546544 KB] Initializing additive heuristic...
[t=0.00659743s, 408546544 KB] Initializing FF heuristic...
[t=0.00666574s, 408546544 KB] Building successor generator...done!
[t=0.00668624s, 408546544 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00669108s, 408546544 KB] time for successor generation creation: 2.173e-06s
[t=0.00669604s, 408546544 KB] Variables: 1
[t=0.0066996s, 408546544 KB] FactPairs: 2
[t=0.0067044s, 408546544 KB] Bytes per state: 4
[t=0.00673905s, 408546544 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00674684s, 408546544 KB] 1 initial landmarks, 1 goal landmarks
[t=0.00676935s, 408546544 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity
[t=0.0067739s, 408546544 KB] Completely explored state space -- no solution!
[t=0.00677767s, 408546544 KB] Actual search time: 2.7306e-05s
[t=0.00678189s, 408546544 KB] Expanded 0 state(s).
[t=0.00678189s, 408546544 KB] Reopened 0 state(s).
[t=0.00678189s, 408546544 KB] Evaluated 1 state(s).
[t=0.00678189s, 408546544 KB] Evaluations: 1
[t=0.00678189s, 408546544 KB] Generated 0 state(s).
[t=0.00678189s, 408546544 KB] Dead ends: 1 state(s).
[t=0.00678189s, 408546544 KB] Number of registered states: 1
[t=0.00678189s, 408546544 KB] Int hash set load factor: 1/1 = 1
[t=0.00678189s, 408546544 KB] Int hash set resizes: 0
[t=0.00678189s, 408546544 KB] Search time: 4.3132e-05s
[t=0.00678189s, 408546544 KB] Total time: 0.00678189s
Search stopped without finding a solution.
Peak memory: 408546544 KB
search exit code: 12

Driver aborting after search
INFO     Planner time: 0.15s
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 46 / 245, train/pick_clean_then_place_in_recep-Pot-None-Shelf-1/trial_T20190908_001818_534745
Now attempting to plan for goal: 1 / 2
	Running planner with existing operators + 40 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	place a pot with water on a shelf.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_1_bar_5_bar_3_bar_30 loc_bar_7_bar__minus_8_bar_2_bar_60)
(gotolocation agent1 loc_bar_7_bar__minus_8_bar_2_bar_60 loc_bar__minus_5_bar__minus_7_bar_3_bar_60)
(takeobject_0 agent1 loc_bar__minus_5_bar__minus_7_bar_3_bar_60 pot__minus_6_dot_82172252_comma__minus_6_dot_82172252_comma__minus_6_dot_96076868_comma__minus_6_dot_96076868_comma_0_dot_562260152_comma_0_dot_562260152)
(gotolocation agent1 loc_bar__minus_5_bar__minus_7_bar_3_bar_60 loc_bar_5_bar__minus_6_bar_2_bar_45)
(placeobject_0 agent1 loc_bar_5_bar__minus_6_bar_2_bar_45 shelf_7_dot_21759892_comma_7_dot_21759892_comma__minus_10_dot_2516_comma__minus_10_dot_2516_comma_2_dot_1681444_comma_2_dot_1681444 pot__minus_6_dot_82172252_comma__minus_6_dot_82172252_comma__minus_6_dot_96076868_comma__minus_6_dot_96076868_comma_0_dot_562260152_comma_0_dot_562260152)
Sucessfully found 1 plans for goals.
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 46 / 245
Motion planning for: train/pick_clean_then_place_in_recep-Pot-None-Shelf-1/trial_T20190908_001818_534745
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PotType)
		(receptacleType ?r ShelfType)
		(inReceptacle ?o ?r))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['pot'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['pot', 'shelf'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['shelf', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['pot'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation cabinet)
(PickupObject pot)
(GotoLocation sinkbasin)
(CleanObject pot)
(GotoLocation shelf)
(PutObject pot shelf)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['pot', 'shelf'], 'is_neg': False}

{'predicate_name': 'cleanable', 'arguments': ['pot'], 'is_neg': False}

{'predicate_name': 'isClean', 'arguments': ['pot'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['pot'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Pot|-01.71|+00.14|-01.74',)]

PERMISSIBLE OBJECT SET:
[('Pot|-01.71|+00.14|-01.74',)]


Permissible Objects:
('Pot|-01.71|+00.14|-01.74',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pot|-01.71|+00.14|-01.74"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pot|-01.71|+00.14|-01.74"})]
Error Message: Pot|-01.71|+00.14|-01.74 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Pot|-01.71|+00.14|-01.74',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Pot|-01.71|+00.14|-01.74',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Pot|-01.71|+00.14|-01.74"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Pot|-01.71|+00.14|-01.74',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Pot|-01.71|+00.14|-01.74"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='holds', objects=('Pot|-01.71|+00.14|-01.74',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Pot|-01.71|+00.14|-01.74"})]
Error Message: Pot|-01.71|+00.14|-01.74 is not visible.
Action feasible: False
	 Fluent(predicate='holds', objects=('Pot|-01.71|+00.14|-01.74',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Pot|-01.71|+00.14|-01.74", "receptacle_object_id": "Pot|-01.71|+00.14|-01.74"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='holds', objects=('Pot|-01.71|+00.14|-01.74',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Pot|-01.71|+00.14|-01.74"})]
Error Message: object not found: Pot|-01.71|+00.14|-01.74
Action feasible: False
	 Fluent(predicate='holds', objects=('Pot|-01.71|+00.14|-01.74',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Pot|-01.71|+00.14|-01.74"})]
Error Message: object not found: Pot|-01.71|+00.14|-01.74
Action feasible: False
	 Fluent(predicate='holds', objects=('Pot|-01.71|+00.14|-01.74',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Pot|-01.71|+00.14|-01.74"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='holds', objects=('Pot|-01.71|+00.14|-01.74',)) True
	 State: False

Rollout 7/50
=============================================
Problem Number: 46
Problem ID: train/pick_clean_then_place_in_recep-Pot-None-Shelf-1/trial_T20190908_001818_534745
Motion plan result: task_success: False
Total Actions Taken: 8
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 2.1 / 2.1
ChillObject_1 1.0 2.1 / 2.1
CutObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PlaceObject_0 0.8473282442748091 11.1 / 13.1
TakeObject_1 0.803921568627451 4.1 / 5.1
TakeObject_0 0.7876857749469215 37.1 / 47.1
CutObject_0 0.3548387096774194 1.1 / 3.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_0 0.047619047619047616 0.1 / 2.1
CoolObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 46 / 245, train/pick_clean_then_place_in_recep-Pot-None-Shelf-1/trial_T20190908_001818_534745
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 46 / 245, train/pick_clean_then_place_in_recep-Pot-None-Shelf-1/trial_T20190908_001818_534745
Sucessfully found 0 plans for goals.
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 10 / 47 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 47 / 245, train/pick_and_place_simple-Plunger-None-Cabinet-405/trial_T20190908_120726_695995
Now attempting to plan for goal: 0 / 4
	Running planner with existing operators + 41 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'CutObject_2', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	move the plunger from next to the toilet to the cupboard under the sink.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlungerType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PlungerType)
		(inReceptacle ?o ?r))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_10_bar_3_bar_0_bar_30 loc_bar__minus_10_bar_1_bar_3_bar_60)
(gotolocation agent1 loc_bar__minus_10_bar_1_bar_3_bar_60 loc_bar__minus_10_bar_3_bar_0_bar_60)
(takeobject_0 agent1 loc_bar__minus_10_bar_3_bar_0_bar_60 plunger__minus_12_dot_17401028_comma__minus_12_dot_17401028_comma_6_dot_73406504_comma_6_dot_73406504_comma_0_dot_013557136_comma_0_dot_013557136)
(gotolocation agent1 loc_bar__minus_10_bar_3_bar_0_bar_60 loc_bar__minus_10_bar_1_bar_3_bar_60)
(placeobject_0 agent1 loc_bar__minus_10_bar_1_bar_3_bar_60 sinkbasin__minus_12_dot_0672_comma__minus_12_dot_0672_comma_0_dot_87_comma_0_dot_87_comma_3_dot_4988_comma_3_dot_4988 plunger__minus_12_dot_17401028_comma__minus_12_dot_17401028_comma_6_dot_73406504_comma_6_dot_73406504_comma_0_dot_013557136_comma_0_dot_013557136)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 47 / 245
Motion planning for: train/pick_and_place_simple-Plunger-None-Cabinet-405/trial_T20190908_120726_695995
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PlungerType)
		(inReceptacle ?o ?r))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlungerType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['plunger'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['plunger', 'sinkbasin'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['sinkbasin', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['plunger'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation plunger)
(PickupObject plunger)
(GotoLocation cabinet)
(PutObject plunger cabinet)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['plunger', 'cabinet'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['plunger'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Plunger|-03.04|+00.00|+01.68',)]

PERMISSIBLE OBJECT SET:
[('Plunger|-03.04|+00.00|+01.68',)]


Permissible Objects:
('Plunger|-03.04|+00.00|+01.68',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Action feasible: True

OPERATOR:
{'action': 'PlaceObject_0',
 'postcondition_ground_predicates': [{'arguments': ['plunger', 'sinkbasin'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'}],
 'precondition_ground_predicates': [{'arguments': ['sinkbasin', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['plunger'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Plunger|-03.04|+00.00|+01.68', 'Sink|-03.02|+00.87|+00.21|SinkBasin'),
 ('Plunger|-03.04|+00.00|+01.68', 'Sink|-03.02|+00.87|+00.21|SinkBasin'),
 ('Plunger|-03.04|+00.00|+01.68', 'Sink|-03.02|+00.87|+00.21|SinkBasin')]

PERMISSIBLE OBJECT SET:
[('Plunger|-03.04|+00.00|+01.68', 'Sink|-03.02|+00.87|+00.21|SinkBasin'),
 ('Plunger|-03.04|+00.00|+01.68',
  'Sink|-03.02|+00.87|+00.21|SinkBasin',
  'Faucet|-00.62|+00.67|+01.81'),
 ('Plunger|-03.04|+00.00|+01.68',
  'Sink|-03.02|+00.87|+00.21|SinkBasin',
  'Faucet|-03.31|+00.99|+00.21')]


Permissible Objects:
('Plunger|-03.04|+00.00|+01.68', 'Sink|-03.02|+00.87|+00.21|SinkBasin')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Sink|-03.02|+00.87|+00.21|SinkBasin"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Sink|-03.02|+00.87|+00.21|SinkBasin"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Sink|-03.02|+00.87|+00.21|SinkBasin')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Plunger|-03.04|+00.00|+01.68", "receptacle_object_id": "Sink|-03.02|+00.87|+00.21|SinkBasin"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Plunger|-03.04|+00.00|+01.68", "receptacle_object_id": "Sink|-03.02|+00.87|+00.21|SinkBasin"})]
Action feasible: True

	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.42|-00.76')) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.91|+02.10|+01.88')) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.42|-00.27')) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.90|+02.05|+01.01')) True
	 State: False

GOAL CHECK FUNCTION FAILED!
=============================================
Problem Number: 47
Problem ID: train/pick_and_place_simple-Plunger-None-Cabinet-405/trial_T20190908_120726_695995
Motion plan result: task_success: False
Total Actions Taken: 3
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 2.1 / 2.1
ChillObject_1 1.0 2.1 / 2.1
CutObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PlaceObject_0 0.8581560283687943 12.1 / 14.1
TakeObject_1 0.803921568627451 4.1 / 5.1
TakeObject_0 0.7920997920997921 38.1 / 48.1
CutObject_0 0.3548387096774194 1.1 / 3.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_0 0.047619047619047616 0.1 / 2.1
CoolObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 47 / 245, train/pick_and_place_simple-Plunger-None-Cabinet-405/trial_T20190908_120726_695995
Now attempting to plan for goal: 1 / 4
	Running planner with existing operators + 39 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	move the plunger from next to the toilet to the cupboard under the sink.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlungerType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PlungerType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_10_bar_3_bar_0_bar_30 loc_bar__minus_10_bar_3_bar_0_bar_60)
(takeobject_0 agent1 loc_bar__minus_10_bar_3_bar_0_bar_60 plunger__minus_12_dot_17401028_comma__minus_12_dot_17401028_comma_6_dot_73406504_comma_6_dot_73406504_comma_0_dot_013557136_comma_0_dot_013557136)
(gotolocation agent1 loc_bar__minus_10_bar_3_bar_0_bar_60 loc_bar__minus_7_bar_0_bar_3_bar_45)
(placeobject_0 agent1 loc_bar__minus_7_bar_0_bar_3_bar_45 cabinet__minus_11_dot_04684_comma__minus_11_dot_04684_comma_2_dot_399622_comma_2_dot_399622_comma_1_dot_7867198_comma_1_dot_7867198 plunger__minus_12_dot_17401028_comma__minus_12_dot_17401028_comma_6_dot_73406504_comma_6_dot_73406504_comma_0_dot_013557136_comma_0_dot_013557136)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 47 / 245
Motion planning for: train/pick_and_place_simple-Plunger-None-Cabinet-405/trial_T20190908_120726_695995
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o PlungerType)
		(receptacleType ?r CabinetType)
		(inReceptacle ?o ?r))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PlungerType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['plunger'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['plunger', 'cabinet'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['cabinet', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['plunger'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation plunger)
(PickupObject plunger)
(GotoLocation cabinet)
(PutObject plunger cabinet)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['plunger', 'cabinet'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['plunger'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Plunger|-03.04|+00.00|+01.68',)]

PERMISSIBLE OBJECT SET:
[('Plunger|-03.04|+00.00|+01.68',)]


Permissible Objects:
('Plunger|-03.04|+00.00|+01.68',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Action feasible: True

OPERATOR:
{'action': 'PlaceObject_0',
 'postcondition_ground_predicates': [{'arguments': ['plunger', 'cabinet'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'}],
 'precondition_ground_predicates': [{'arguments': ['cabinet', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['plunger'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60'),
 ('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.42|-00.76'),
 ('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.91|+02.10|+01.88'),
 ('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.42|-00.27'),
 ('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.90|+02.05|+01.01')]

PERMISSIBLE OBJECT SET:
[('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60'),
 ('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.42|-00.76'),
 ('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.91|+02.10|+01.88'),
 ('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.42|-00.27'),
 ('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.90|+02.05|+01.01')]


Permissible Objects:
('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Plunger|-03.04|+00.00|+01.68", "receptacle_object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Plunger|-03.04|+00.00|+01.68", "receptacle_object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Error Message: Target openable Receptacle is CLOSED, can't place if target is not open!
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Error Message: object not found: Plunger|-03.04|+00.00|+01.68
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Plunger|-03.04|+00.00|+01.68", "receptacle_object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Plunger|-03.04|+00.00|+01.68", "receptacle_object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Plunger|-03.04|+00.00|+01.68"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Plunger|-03.04|+00.00|+01.68"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Error Message: object not found: Plunger|-03.04|+00.00|+01.68
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Plunger|-03.04|+00.00|+01.68", "receptacle_object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Plunger|-03.04|+00.00|+01.68", "receptacle_object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Error Message: object not found: Plunger|-03.04|+00.00|+01.68
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Error Message: object not found: Cabinet|-02.76|+00.45|+00.60
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Error Message: object not found: Cabinet|-02.76|+00.45|+00.60
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Plunger|-03.04|+00.00|+01.68"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Plunger|-03.04|+00.00|+01.68"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Error Message: object not found: Plunger|-03.04|+00.00|+01.68
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60", "receptacle_object_id": "Plunger|-03.04|+00.00|+01.68"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60", "receptacle_object_id": "Plunger|-03.04|+00.00|+01.68"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Plunger|-03.04|+00.00|+01.68", "receptacle_object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Plunger|-03.04|+00.00|+01.68", "receptacle_object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 18/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Plunger|-03.04|+00.00|+01.68"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Plunger|-03.04|+00.00|+01.68"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Error Message: object not found: Plunger|-03.04|+00.00|+01.68
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 19/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Plunger|-03.04|+00.00|+01.68", "receptacle_object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Plunger|-03.04|+00.00|+01.68", "receptacle_object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 20/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Error Message: object not found: Cabinet|-02.76|+00.45|+00.60
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 21/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Error Message: object not found: Plunger|-03.04|+00.00|+01.68
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 22/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Error Message: object not found: Cabinet|-02.76|+00.45|+00.60
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 23/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Plunger|-03.04|+00.00|+01.68", "receptacle_object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Plunger|-03.04|+00.00|+01.68", "receptacle_object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Error Message: No valid positions to place object found
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 24/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Error Message: object not found: Plunger|-03.04|+00.00|+01.68
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 25/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Plunger|-03.04|+00.00|+01.68"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.45|+00.60"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Plunger|-03.04|+00.00|+01.68"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Error Message: object not found: Plunger|-03.04|+00.00|+01.68
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False

Rollout 26/50

Permissible Objects:
('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.42|-00.76')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.42|-00.76"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cabinet|-02.76|+00.42|-00.76"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.42|-00.76')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Plunger|-03.04|+00.00|+01.68", "receptacle_object_id": "Cabinet|-02.76|+00.42|-00.76"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Plunger|-03.04|+00.00|+01.68", "receptacle_object_id": "Cabinet|-02.76|+00.42|-00.76"})]
Error Message: Target openable Receptacle is CLOSED, can't place if target is not open!
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.42|-00.76')) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Error Message: object not found: Plunger|-03.04|+00.00|+01.68
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.42|-00.76')) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Plunger|-03.04|+00.00|+01.68"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.42|-00.76')) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.42|-00.76"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Plunger|-03.04|+00.00|+01.68", "receptacle_object_id": "Cabinet|-02.76|+00.42|-00.76"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cabinet|-02.76|+00.42|-00.76"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Plunger|-03.04|+00.00|+01.68", "receptacle_object_id": "Cabinet|-02.76|+00.42|-00.76"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.42|-00.76')) True
	 State: False

Action feasible: True

	 Fluent(predicate='inReceptacle', objects=('Plunger|-03.04|+00.00|+01.68', 'Cabinet|-02.76|+00.45|+00.60')) True
	 State: False


Motion plan operator success!: {'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['plunger', 'cabinet'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['cabinet', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['plunger'], 'is_neg': False}]}
=============================================
Problem Number: 47
Problem ID: train/pick_and_place_simple-Plunger-None-Cabinet-405/trial_T20190908_120726_695995
Motion plan result: task_success: True
Total Actions Taken: 32
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 2.1 / 2.1
ChillObject_1 1.0 2.1 / 2.1
CutObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_0 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PlaceObject_0 0.8675496688741722 13.1 / 15.1
TakeObject_1 0.803921568627451 4.1 / 5.1
TakeObject_0 0.7963340122199593 39.1 / 49.1
CutObject_0 0.3548387096774194 1.1 / 3.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_0 0.047619047619047616 0.1 / 2.1
CoolObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 48 / 245, train/pick_cool_then_place_in_recep-TomatoSliced-None-DiningTable-18/trial_T20190909_101216_297477
Now attempting to plan for goal: 0 / 3
	Running planner with existing operators + 41 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'WarmObject_2', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TurnOffObject_0', 'ChillObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	pick up knife , cut tomato , place tomato in the fridge , remove from fridge , place on table.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o KnifeType)
		(inReceptacle ?o ?r))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: 
		Failed to parse plan string: 
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 48 / 245, train/pick_cool_then_place_in_recep-TomatoSliced-None-DiningTable-18/trial_T20190909_101216_297477
Now attempting to plan for goal: 1 / 3
	Running planner with existing operators + 40 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	pick up knife , cut tomato , place tomato in the fridge , remove from fridge , place on table.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_0_bar_21_bar_2_bar_30 loc_bar_0_bar_22_bar_0_bar_45)
(takeobject_0 agent1 loc_bar_0_bar_22_bar_0_bar_45 knife_0_dot_234653592_comma_0_dot_234653592_comma_25_dot_044792_comma_25_dot_044792_comma_3_dot_159154652_comma_3_dot_159154652)
(gotolocation agent1 loc_bar_0_bar_22_bar_0_bar_45 loc_bar__minus_5_bar_26_bar_1_bar_45)
(sliceobject_0 knife_0_dot_234653592_comma_0_dot_234653592_comma_25_dot_044792_comma_25_dot_044792_comma_3_dot_159154652_comma_3_dot_159154652 agent1 loc_bar__minus_5_bar_26_bar_1_bar_45 tomato__minus_1_dot_869007824_comma__minus_1_dot_869007824_comma_26_dot_166156_comma_26_dot_166156_comma_3_dot_2382156_comma_3_dot_2382156)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 48 / 245
Motion planning for: train/pick_cool_then_place_in_recep-TomatoSliced-None-DiningTable-18/trial_T20190909_101216_297477
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(sliceable ?o)
		(isSliced ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['knife'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'SliceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'sliceable', 'arguments': ['tomato'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['knife'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation diningtable)
(PickupObject knife)
(GotoLocation tomato)
(SliceObject tomato)
(GotoLocation fridge)
(PutObject knife fridge)
(GotoLocation diningtable)
(PickupObject tomato)
(GotoLocation fridge)
(CoolObject tomato)
(GotoLocation diningtable)
(PutObject tomato diningtable)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['tomato', 'diningtable'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['knife'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Knife|+00.06|+00.79|+06.26',)]

PERMISSIBLE OBJECT SET:
[('Knife|+00.06|+00.79|+06.26',)]


Permissible Objects:
('Knife|+00.06|+00.79|+06.26',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True

OPERATOR:
{'action': 'SliceObject_0',
 'postcondition_ground_predicates': [{'arguments': ['tomato'],
                                      'is_neg': False,
                                      'predicate_name': 'isSliced'}],
 'precondition_ground_predicates': [{'arguments': ['tomato'],
                                     'is_neg': False,
                                     'predicate_name': 'sliceable'},
                                    {'arguments': ['knife'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Tomato|+00.54|+01.04|+00.67',),
 ('Tomato|+00.54|+01.04|+00.67',),
 ('Tomato|-00.47|+00.81|+06.54',),
 ('Tomato|-00.47|+00.81|+06.54',),
 ('Tomato|-00.58|+00.81|+06.72',),
 ('Tomato|-00.58|+00.81|+06.72',),
 ('Tomato|-00.29|+00.81|+06.61',),
 ('Tomato|-00.29|+00.81|+06.61',)]

PERMISSIBLE OBJECT SET:
[('Tomato|+00.54|+01.04|+00.67',),
 ('Tomato|+00.54|+01.04|+00.67', 'Knife|+00.06|+00.79|+06.26'),
 ('Tomato|-00.47|+00.81|+06.54',),
 ('Tomato|-00.47|+00.81|+06.54', 'Knife|+00.06|+00.79|+06.26'),
 ('Tomato|-00.58|+00.81|+06.72',),
 ('Tomato|-00.58|+00.81|+06.72', 'Knife|+00.06|+00.79|+06.26'),
 ('Tomato|-00.29|+00.81|+06.61',),
 ('Tomato|-00.29|+00.81|+06.61', 'Knife|+00.06|+00.79|+06.26')]


Permissible Objects:
('Tomato|+00.54|+01.04|+00.67',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Action feasible: True

	 Fluent(predicate='inReceptacle', objects=('Tomato|+00.54|+01.04|+00.67', 'DiningTable|-00.16|+00.67|+06.47')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False
	 Fluent(predicate='isSliced', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False
	 Fluent(predicate='isSliced', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False
	 Fluent(predicate='isSliced', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

GOAL CHECK FUNCTION FAILED!
=============================================
Problem Number: 48
Problem ID: train/pick_cool_then_place_in_recep-TomatoSliced-None-DiningTable-18/trial_T20190909_101216_297477
Motion plan result: task_success: False
Total Actions Taken: 2
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 2.1 / 2.1
ChillObject_1 1.0 2.1 / 2.1
SliceObject_0 1.0 1.1 / 1.1
CutObject_1 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PlaceObject_0 0.8675496688741722 13.1 / 15.1
TakeObject_1 0.803921568627451 4.1 / 5.1
TakeObject_0 0.8003992015968064 40.1 / 50.1
CutObject_0 0.3548387096774194 1.1 / 3.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_0 0.047619047619047616 0.1 / 2.1
CoolObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_0 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 48 / 245, train/pick_cool_then_place_in_recep-TomatoSliced-None-DiningTable-18/trial_T20190909_101216_297477
Now attempting to plan for goal: 2 / 3
	Running planner with existing operators + 42 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'HeatObject_2', 'TakeObject_0', 'HeatObject_1', 'ChillObject_0', 'TurnOffObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	pick up knife , cut tomato , place tomato in the fridge , remove from fridge , place on table.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r1 FridgeType)
		(receptacleType ?r2 CounterTopType)
		(inReceptacle ?o ?r1)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o)
		(inReceptacle ?o ?r2)))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar_0_bar_21_bar_2_bar_30 loc_bar_0_bar_22_bar_0_bar_45)
(takeobject_0 agent1 loc_bar_0_bar_22_bar_0_bar_45 knife_0_dot_234653592_comma_0_dot_234653592_comma_25_dot_044792_comma_25_dot_044792_comma_3_dot_159154652_comma_3_dot_159154652)
(gotolocation agent1 loc_bar_0_bar_22_bar_0_bar_45 loc_bar_2_bar_4_bar_2_bar_60)
(chillobject_0 agent1 loc_bar_2_bar_4_bar_2_bar_60 tomato_2_dot_17939186_comma_2_dot_17939186_comma_2_dot_6800412_comma_2_dot_6800412_comma_4_dot_16866256_comma_4_dot_16866256)
(takeobject_0 agent1 loc_bar_2_bar_4_bar_2_bar_60 tomato_2_dot_17939186_comma_2_dot_17939186_comma_2_dot_6800412_comma_2_dot_6800412_comma_4_dot_16866256_comma_4_dot_16866256)
(sliceobject_0 knife_0_dot_234653592_comma_0_dot_234653592_comma_25_dot_044792_comma_25_dot_044792_comma_3_dot_159154652_comma_3_dot_159154652 agent1 loc_bar_2_bar_4_bar_2_bar_60 tomato_2_dot_17939186_comma_2_dot_17939186_comma_2_dot_6800412_comma_2_dot_6800412_comma_4_dot_16866256_comma_4_dot_16866256)
(gotolocation agent1 loc_bar_2_bar_4_bar_2_bar_60 loc_bar_4_bar_22_bar_1_bar_30)
(placeobject_0 agent1 loc_bar_4_bar_22_bar_1_bar_30 fridge_8_dot_14_comma_8_dot_14_comma_22_dot_504_comma_22_dot_504_comma_0_dot_0_comma_0_dot_0 tomato_2_dot_17939186_comma_2_dot_17939186_comma_2_dot_6800412_comma_2_dot_6800412_comma_4_dot_16866256_comma_4_dot_16866256)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 48 / 245
Motion planning for: train/pick_cool_then_place_in_recep-TomatoSliced-None-DiningTable-18/trial_T20190909_101216_297477
Proposed goal is: 
(:goal
	(exists (?r2 - receptacle)
(exists (?r1 - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r1 FridgeType)
		(receptacleType ?r2 CounterTopType)
		(inReceptacle ?o ?r1)
		(coolable ?o)
		(isCool ?o)
		(sliceable ?o)
		(isSliced ?o)
		(inReceptacle ?o ?r2)))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['knife'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'ChillObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'isCool', 'arguments': ['tomato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'coolable', 'arguments': ['tomato'], 'is_neg': False}]}

{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['tomato'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'SliceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'sliceable', 'arguments': ['tomato'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['knife'], 'is_neg': False}]}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['tomato', 'fridge'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['fridge', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['tomato'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation diningtable)
(PickupObject knife)
(GotoLocation tomato)
(SliceObject tomato)
(GotoLocation fridge)
(PutObject knife fridge)
(GotoLocation diningtable)
(PickupObject tomato)
(GotoLocation fridge)
(CoolObject tomato)
(GotoLocation diningtable)
(PutObject tomato diningtable)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['tomato', 'diningtable'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['knife'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Knife|+00.06|+00.79|+06.26',)]

PERMISSIBLE OBJECT SET:
[('Knife|+00.06|+00.79|+06.26',)]


Permissible Objects:
('Knife|+00.06|+00.79|+06.26',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True

OPERATOR:
{'action': 'ChillObject_0',
 'postcondition_ground_predicates': [{'arguments': ['tomato'],
                                      'is_neg': False,
                                      'predicate_name': 'isCool'}],
 'precondition_ground_predicates': [{'arguments': ['tomato'],
                                     'is_neg': False,
                                     'predicate_name': 'coolable'}]}

GOAL OBJECT SET:
[('Tomato|+00.54|+01.04|+00.67',),
 ('Tomato|+00.54|+01.04|+00.67',),
 ('Tomato|-00.47|+00.81|+06.54',),
 ('Tomato|-00.47|+00.81|+06.54',),
 ('Tomato|-00.58|+00.81|+06.72',),
 ('Tomato|-00.58|+00.81|+06.72',),
 ('Tomato|-00.29|+00.81|+06.61',),
 ('Tomato|-00.29|+00.81|+06.61',)]

PERMISSIBLE OBJECT SET:
[('Tomato|+00.54|+01.04|+00.67',),
 ('Tomato|+00.54|+01.04|+00.67', 'Knife|+00.06|+00.79|+06.26'),
 ('Tomato|-00.47|+00.81|+06.54',),
 ('Tomato|-00.47|+00.81|+06.54', 'Knife|+00.06|+00.79|+06.26'),
 ('Tomato|-00.58|+00.81|+06.72',),
 ('Tomato|-00.58|+00.81|+06.72', 'Knife|+00.06|+00.79|+06.26'),
 ('Tomato|-00.29|+00.81|+06.61',),
 ('Tomato|-00.29|+00.81|+06.61', 'Knife|+00.06|+00.79|+06.26')]


Permissible Objects:
('Tomato|+00.54|+01.04|+00.67',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Tomato|+00.54|+01.04|+00.67', 'Knife|+00.06|+00.79|+06.26')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|+00.54|+01.04|+00.67", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|+00.54|+01.04|+00.67", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|+00.54|+01.04|+00.67", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|+00.54|+01.04|+00.67", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|+00.54|+01.04|+00.67", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|+00.54|+01.04|+00.67", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Error Message: object not found: Tomato|+00.54|+01.04|+00.67
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Tomato|-00.47|+00.81|+06.54',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Tomato|-00.47|+00.81|+06.54', 'Knife|+00.06|+00.79|+06.26')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.47|+00.81|+06.54", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.47|+00.81|+06.54", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.47|+00.81|+06.54", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.47|+00.81|+06.54", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.47|+00.81|+06.54", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.47|+00.81|+06.54", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Error Message: object not found: Tomato|-00.47|+00.81|+06.54
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Tomato|-00.58|+00.81|+06.72',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Tomato|-00.58|+00.81|+06.72', 'Knife|+00.06|+00.79|+06.26')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.58|+00.81|+06.72", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.58|+00.81|+06.72", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.58|+00.81|+06.72", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.58|+00.81|+06.72", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.58|+00.81|+06.72", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.58|+00.81|+06.72", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Error Message: object not found: Tomato|-00.58|+00.81|+06.72
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Tomato|-00.29|+00.81|+06.61',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Tomato|-00.29|+00.81|+06.61', 'Knife|+00.06|+00.79|+06.26')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.29|+00.81|+06.61", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.29|+00.81|+06.61", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.29|+00.81|+06.61", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.29|+00.81|+06.61", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.29|+00.81|+06.61", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.29|+00.81|+06.61", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Error Message: object not found: Tomato|-00.29|+00.81|+06.61
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 7/50

Permissible Objects:
('Tomato|+00.54|+01.04|+00.67',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Error Message: object not found: Tomato|+00.54|+01.04|+00.67
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|+00.54|+01.04|+00.67", "receptacle_object_id": "Tomato|+00.54|+01.04|+00.67"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Error Message: object not found: Tomato|+00.54|+01.04|+00.67
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Error Message: object not found: Tomato|+00.54|+01.04|+00.67
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Error Message: object not found: Tomato|+00.54|+01.04|+00.67|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|+00.54|+01.04|+00.67", "receptacle_object_id": "Tomato|+00.54|+01.04|+00.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Error Message: object not found: Tomato|+00.54|+01.04|+00.67|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Error Message: object not found: Tomato|+00.54|+01.04|+00.67|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Error Message: Tomato_18_Slice_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Tomato|+00.54|+01.04|+00.67', 'Knife|+00.06|+00.79|+06.26')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Error Message: object not found: Tomato|+00.54|+01.04|+00.67
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|+00.54|+01.04|+00.67", "receptacle_object_id": "Tomato|+00.54|+01.04|+00.67"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|+00.54|+01.04|+00.67", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|+00.54|+01.04|+00.67"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Error Message: object not found: Tomato|+00.54|+01.04|+00.67
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Error Message: object not found: Tomato|+00.54|+01.04|+00.67
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Error Message: object not found: Tomato|+00.54|+01.04|+00.67|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|+00.54|+01.04|+00.67", "receptacle_object_id": "Tomato|+00.54|+01.04|+00.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|+00.54|+01.04|+00.67", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|+00.54|+01.04|+00.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Error Message: object not found: Tomato|+00.54|+01.04|+00.67|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Error Message: object not found: Tomato|+00.54|+01.04|+00.67|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Error Message: Tomato_18_Slice_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|+00.54|+01.04|+00.67"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|+00.54|+01.04|+00.67',)) True
	 State: False

Rollout 32/50

Permissible Objects:
('Tomato|-00.47|+00.81|+06.54',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Error Message: object not found: Tomato|-00.47|+00.81|+06.54
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.47|+00.81|+06.54", "receptacle_object_id": "Tomato|-00.47|+00.81|+06.54"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Error Message: object not found: Tomato|-00.47|+00.81|+06.54
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Error Message: object not found: Tomato|-00.47|+00.81|+06.54
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Error Message: object not found: Tomato|-00.47|+00.81|+06.54|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.47|+00.81|+06.54", "receptacle_object_id": "Tomato|-00.47|+00.81|+06.54"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Error Message: object not found: Tomato|-00.47|+00.81|+06.54|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Error Message: object not found: Tomato|-00.47|+00.81|+06.54|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Error Message: Tomato_18_Slice_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Tomato|-00.47|+00.81|+06.54', 'Knife|+00.06|+00.79|+06.26')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Error Message: object not found: Tomato|-00.47|+00.81|+06.54
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.47|+00.81|+06.54", "receptacle_object_id": "Tomato|-00.47|+00.81|+06.54"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.47|+00.81|+06.54", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|-00.47|+00.81|+06.54"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Error Message: object not found: Tomato|-00.47|+00.81|+06.54
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Error Message: object not found: Tomato|-00.47|+00.81|+06.54
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Error Message: object not found: Tomato|-00.47|+00.81|+06.54|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.47|+00.81|+06.54", "receptacle_object_id": "Tomato|-00.47|+00.81|+06.54"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.47|+00.81|+06.54", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|-00.47|+00.81|+06.54"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Error Message: object not found: Tomato|-00.47|+00.81|+06.54|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Error Message: object not found: Tomato|-00.47|+00.81|+06.54|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Error Message: Tomato_18_Slice_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.47|+00.81|+06.54"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.47|+00.81|+06.54',)) True
	 State: False

Rollout 32/50

Permissible Objects:
('Tomato|-00.58|+00.81|+06.72',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Error Message: object not found: Tomato|-00.58|+00.81|+06.72
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.58|+00.81|+06.72", "receptacle_object_id": "Tomato|-00.58|+00.81|+06.72"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Error Message: object not found: Tomato|-00.58|+00.81|+06.72
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Error Message: object not found: Tomato|-00.58|+00.81|+06.72
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Error Message: object not found: Tomato|-00.58|+00.81|+06.72|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.58|+00.81|+06.72", "receptacle_object_id": "Tomato|-00.58|+00.81|+06.72"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Error Message: object not found: Tomato|-00.58|+00.81|+06.72|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Error Message: object not found: Tomato|-00.58|+00.81|+06.72|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Error Message: Tomato_18_Slice_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Tomato|-00.58|+00.81|+06.72', 'Knife|+00.06|+00.79|+06.26')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Error Message: object not found: Tomato|-00.58|+00.81|+06.72
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|-00.58|+00.81|+06.72"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.58|+00.81|+06.72", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.58|+00.81|+06.72", "receptacle_object_id": "Tomato|-00.58|+00.81|+06.72"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Error Message: object not found: Tomato|-00.58|+00.81|+06.72
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Error Message: object not found: Tomato|-00.58|+00.81|+06.72
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Error Message: object not found: Tomato|-00.58|+00.81|+06.72|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|-00.58|+00.81|+06.72"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.58|+00.81|+06.72", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.58|+00.81|+06.72", "receptacle_object_id": "Tomato|-00.58|+00.81|+06.72"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Error Message: object not found: Tomato|-00.58|+00.81|+06.72|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Error Message: object not found: Tomato|-00.58|+00.81|+06.72|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.58|+00.81|+06.72"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Error Message: Tomato_18_Slice_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.58|+00.81|+06.72',)) True
	 State: False

Rollout 32/50

Permissible Objects:
('Tomato|-00.29|+00.81|+06.61',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Error Message: object not found: Tomato|-00.29|+00.81|+06.61
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.29|+00.81|+06.61", "receptacle_object_id": "Tomato|-00.29|+00.81|+06.61"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Error Message: object not found: Tomato|-00.29|+00.81|+06.61
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Error Message: object not found: Tomato|-00.29|+00.81|+06.61
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Error Message: object not found: Tomato|-00.29|+00.81|+06.61|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.29|+00.81|+06.61", "receptacle_object_id": "Tomato|-00.29|+00.81|+06.61"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Error Message: object not found: Tomato|-00.29|+00.81|+06.61|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Error Message: object not found: Tomato|-00.29|+00.81|+06.61|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Error Message: Tomato_18_Slice_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Tomato|-00.29|+00.81|+06.61', 'Knife|+00.06|+00.79|+06.26')
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Error Message: object not found: Tomato|-00.29|+00.81|+06.61
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.29|+00.81|+06.61", "receptacle_object_id": "Tomato|-00.29|+00.81|+06.61"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.29|+00.81|+06.61", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"})]
Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|-00.29|+00.81|+06.61"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Error Message: object not found: Tomato|-00.29|+00.81|+06.61
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Error Message: object not found: Tomato|-00.29|+00.81|+06.61
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 14/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 15/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 16/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Error Message: object not found: Tomato|-00.29|+00.81|+06.61|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 17/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 18/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 19/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 20/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 21/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 22/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.29|+00.81|+06.61", "receptacle_object_id": "Tomato|-00.29|+00.81|+06.61"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 23/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-00.29|+00.81|+06.61", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Exception: Agent must have object in inventory to place it.
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 24/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Tomato|-00.29|+00.81|+06.61"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 25/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Knife|+00.06|+00.79|+06.26", "receptacle_object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 26/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Error Message: object not found: Tomato|-00.29|+00.81|+06.61|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 27/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 28/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Error Message: object not found: Tomato|-00.29|+00.81|+06.61|TomatoSliced_0
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 29/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Error Message: object not found: Knife|+00.06|+00.79|+06.26
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 30/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Error Message: Tomato_18_Slice_1 Does not have the CanBeSliced property!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 31/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-00.29|+00.81|+06.61"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Knife|+00.06|+00.79|+06.26"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Error Message: target object cannot be sliced if it is in the agent's hand
Action feasible: False
	 Fluent(predicate='isCool', objects=('Tomato|-00.29|+00.81|+06.61',)) True
	 State: False

Rollout 32/50
Exceeded max number of trajs!
=============================================
Problem Number: 48
Problem ID: train/pick_cool_then_place_in_recep-TomatoSliced-None-DiningTable-18/trial_T20190909_101216_297477
Motion plan result: task_success: False
Total Actions Taken: 217
Failed at operator: 2 / 5 operators in task plan.
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 2.1 / 2.1
ChillObject_1 1.0 2.1 / 2.1
SliceObject_0 1.0 1.1 / 1.1
CutObject_1 1.0 1.1 / 1.1
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
WarmObject_0 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PlaceObject_0 0.8675496688741722 13.1 / 15.1
TakeObject_0 0.8043052837573386 41.1 / 51.1
TakeObject_1 0.803921568627451 4.1 / 5.1
CutObject_0 0.3548387096774194 1.1 / 3.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_0 0.047619047619047616 0.1 / 2.1
CoolObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
ChillObject_0 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 48 / 245, train/pick_cool_then_place_in_recep-TomatoSliced-None-DiningTable-18/trial_T20190909_101216_297477
Sucessfully found 0 plans for goals.
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 11 / 49 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 49 / 245, train/pick_heat_then_place_in_recep-Cup-None-Fridge-22/trial_T20190908_072702_772430
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 39 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	place a heated cup inside the refrigerator.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CupType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_8_bar_0_bar_0_bar_30 loc_bar_1_bar__minus_2_bar_2_bar_45)
(gotolocation agent1 loc_bar_1_bar__minus_2_bar_2_bar_45 loc_bar__minus_6_bar__minus_2_bar_2_bar_45)
(takeobject_0 agent1 loc_bar__minus_6_bar__minus_2_bar_2_bar_45 cup__minus_6_dot_365632_comma__minus_6_dot_365632_comma__minus_4_dot_7788806_comma__minus_4_dot_7788806_comma_3_dot_4016656_comma_3_dot_4016656)
(gotolocation agent1 loc_bar__minus_6_bar__minus_2_bar_2_bar_45 loc_bar_1_bar__minus_2_bar_2_bar_45)
(warmobject_0 microwave_1_dot_132_comma_1_dot_132_comma__minus_5_dot_3248_comma__minus_5_dot_3248_comma_3_dot_6003664_comma_3_dot_6003664 agent1 loc_bar_1_bar__minus_2_bar_2_bar_45 cup__minus_6_dot_365632_comma__minus_6_dot_365632_comma__minus_4_dot_7788806_comma__minus_4_dot_7788806_comma_3_dot_4016656_comma_3_dot_4016656)
(gotolocation agent1 loc_bar_1_bar__minus_2_bar_2_bar_45 loc_bar__minus_8_bar_4_bar_3_bar_60)
(placeobject_0 agent1 loc_bar__minus_8_bar_4_bar_3_bar_60 fridge__minus_11_dot_424_comma__minus_11_dot_424_comma_3_dot_408_comma_3_dot_408_comma_0_dot_0_comma_0_dot_0 cup__minus_6_dot_365632_comma__minus_6_dot_365632_comma__minus_4_dot_7788806_comma__minus_4_dot_7788806_comma_3_dot_4016656_comma_3_dot_4016656)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 49 / 245
Motion planning for: train/pick_heat_then_place_in_recep-Cup-None-Fridge-22/trial_T20190908_072702_772430
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o CupType)
		(receptacleType ?r FridgeType)
		(inReceptacle ?o ?r)
		(heatable ?o)
		(isHot ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o CupType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['cup'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'WarmObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'isHot', 'arguments': ['cup'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['microwave', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['cup'], 'is_neg': False}]}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['cup', 'fridge'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['fridge', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['cup'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation sinkbasin)
(PickupObject cup)
(GotoLocation microwave)
(HeatObject cup)
(GotoLocation fridge)
(PutObject cup fridge)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['cup', 'fridge'], 'is_neg': False}

{'predicate_name': 'heatable', 'arguments': ['cup'], 'is_neg': False}

{'predicate_name': 'isHot', 'arguments': ['cup'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['cup'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Cup|-01.42|+00.85|-01.36',), ('Cup|-01.59|+00.85|-01.19',)]

PERMISSIBLE OBJECT SET:
[('Cup|-01.42|+00.85|-01.36',), ('Cup|-01.59|+00.85|-01.19',)]


Permissible Objects:
('Cup|-01.42|+00.85|-01.36',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Action feasible: True

OPERATOR:
{'action': 'WarmObject_0',
 'postcondition_ground_predicates': [{'arguments': ['cup'],
                                      'is_neg': False,
                                      'predicate_name': 'isHot'}],
 'precondition_ground_predicates': [{'arguments': ['microwave', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['cup'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Cup|-01.42|+00.85|-01.36',),
 ('Cup|-01.42|+00.85|-01.36',),
 ('Cup|-01.59|+00.85|-01.19',),
 ('Cup|-01.59|+00.85|-01.19',),
 ('Cup|-01.59|+00.85|-01.19',)]

PERMISSIBLE OBJECT SET:
[('Cup|-01.42|+00.85|-01.36',),
 ('Cup|-01.42|+00.85|-01.36', 'Microwave|+00.28|+00.90|-01.33'),
 ('Cup|-01.59|+00.85|-01.19',),
 ('Cup|-01.59|+00.85|-01.19', 'Microwave|+00.28|+00.90|-01.33'),
 ('Cup|-01.59|+00.85|-01.19',
  'Microwave|+00.28|+00.90|-01.33',
  'Cup|-01.42|+00.85|-01.36')]


Permissible Objects:
('Cup|-01.42|+00.85|-01.36',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Error Message: object not found: Cup|-01.42|+00.85|-01.36
Action feasible: False
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Error Message: object not found: Cup|-01.42|+00.85|-01.36
Action feasible: False
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Rollout 3/50

Permissible Objects:
('Cup|-01.42|+00.85|-01.36', 'Microwave|+00.28|+00.90|-01.33')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Error Message: object not found: Cup|-01.42|+00.85|-01.36
Action feasible: False
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Error Message: object not found: Cup|-01.42|+00.85|-01.36
Action feasible: False
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Action feasible: True
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isHot', objects=('Cup|-01.42|+00.85|-01.36',)) True
	 State: False

Action feasible: True

--------
ADDING TO ABSTRACT TREE:
Goal: (Literal(neg=False, fluent=Fluent(predicate='inReceptacle', objects=('0', '2'))), Literal(neg=False, fluent=Fluent(predicate='isHot', objects=('0',))), Literal(neg=False, fluent=Fluent(predicate='isHot', objects=('1',))), Literal(neg=False, fluent=Fluent(predicate='isOn', objects=('2',))), Literal(neg=False, fluent=Fluent(predicate='isToggled', objects=('2',))), Literal(neg=True, fluent=Fluent(predicate='holds', objects=('0',))))
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "0"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "1", "receptacle_object_id": "0"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "0"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "0"})]
Goal to Traj Map: {'0': '1', '1': None, '2': '0'}
--------
OPERATOR:
{'action': 'PlaceObject_0',
 'postcondition_ground_predicates': [{'arguments': ['cup', 'fridge'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'}],
 'precondition_ground_predicates': [{'arguments': ['fridge', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['cup'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85'),
 ('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85'),
 ('Cup|-01.59|+00.85|-01.19', 'Fridge|-02.86|+00.00|+00.85'),
 ('Cup|-01.59|+00.85|-01.19', 'Fridge|-02.86|+00.00|+00.85'),
 ('Cup|-01.59|+00.85|-01.19', 'Fridge|-02.86|+00.00|+00.85')]

PERMISSIBLE OBJECT SET:
[('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85'),
 ('Cup|-01.42|+00.85|-01.36',
  'Fridge|-02.86|+00.00|+00.85',
  'Microwave|+00.28|+00.90|-01.33'),
 ('Cup|-01.59|+00.85|-01.19', 'Fridge|-02.86|+00.00|+00.85'),
 ('Cup|-01.59|+00.85|-01.19',
  'Fridge|-02.86|+00.00|+00.85',
  'Microwave|+00.28|+00.90|-01.33'),
 ('Cup|-01.59|+00.85|-01.19',
  'Fridge|-02.86|+00.00|+00.85',
  'Microwave|+00.28|+00.90|-01.33',
  'Cup|-01.42|+00.85|-01.36')]


Permissible Objects:
('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Error Message: object not found: Cup|-01.42|+00.85|-01.36
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Error Message: Cup|-01.42|+00.85|-01.36 is not visible.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Error Message: object not found: Cup|-01.42|+00.85|-01.36
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Error Message: object not found: Fridge|-02.86|+00.00|+00.85
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Error Message: object not found: Fridge|-02.86|+00.00|+00.85
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Error Message: Fridge|-02.86|+00.00|+00.85 must have the property CanPickup to be picked up.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Error Message: object not found: Cup|-01.42|+00.85|-01.36
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-02.86|+00.00|+00.85", "receptacle_object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-02.86|+00.00|+00.85", "receptacle_object_id": "Cup|-01.42|+00.85|-01.36"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 18/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Error Message: object not found: Cup|-01.42|+00.85|-01.36
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 19/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Error Message: Cup|-01.42|+00.85|-01.36 is not visible.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 20/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Error Message: object not found: Fridge|-02.86|+00.00|+00.85
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 21/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 22/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Error Message: object not found: Fridge|-02.86|+00.00|+00.85
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 23/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 24/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 25/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Error Message: object not found: Cup|-01.42|+00.85|-01.36
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 26/50

Permissible Objects:
('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85', 'Microwave|+00.28|+00.90|-01.33')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Error Message: object not found: Cup|-01.42|+00.85|-01.36
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Error Message: Target must be OFF to open!
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Error Message: Cup|-01.42|+00.85|-01.36 is not visible.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 9/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 10/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Error Message: object not found: Cup|-01.42|+00.85|-01.36
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 11/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Error Message: object not found: Fridge|-02.86|+00.00|+00.85
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 12/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Error Message: can't toggle object on if it's already on!
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 13/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Error Message: object not found: Fridge|-02.86|+00.00|+00.85
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 14/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 15/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 16/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 17/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Error Message: Fridge|-02.86|+00.00|+00.85 must have the property CanPickup to be picked up.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 18/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Error Message: Microwave|+00.28|+00.90|-01.33 must have the property CanPickup to be picked up.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 19/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Error Message: object not found: Cup|-01.42|+00.85|-01.36
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 20/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-02.86|+00.00|+00.85", "receptacle_object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-02.86|+00.00|+00.85", "receptacle_object_id": "Cup|-01.42|+00.85|-01.36"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 21/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|+00.28|+00.90|-01.33", "receptacle_object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|+00.28|+00.90|-01.33", "receptacle_object_id": "Cup|-01.42|+00.85|-01.36"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 22/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|+00.28|+00.90|-01.33", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Microwave|+00.28|+00.90|-01.33", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 23/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-02.86|+00.00|+00.85", "receptacle_object_id": "Microwave|+00.28|+00.90|-01.33"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Fridge|-02.86|+00.00|+00.85", "receptacle_object_id": "Microwave|+00.28|+00.90|-01.33"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 24/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 25/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Error Message: Target openable Receptacle is CLOSED, can't place if target is not open!
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 26/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 27/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Microwave|+00.28|+00.90|-01.33"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Microwave|+00.28|+00.90|-01.33"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Exception: list index out of range
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 28/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 29/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Error Message: Cup|-01.42|+00.85|-01.36 is not visible.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 30/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Error Message: object not found: Cup|-01.42|+00.85|-01.36
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 31/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-01.42|+00.85|-01.36"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Error Message: Cup|-01.42|+00.85|-01.36 is not visible.
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 32/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Microwave|+00.28|+00.90|-01.33"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Rollout 33/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.86|+00.00|+00.85"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Microwave|+00.28|+00.90|-01.33"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Cup|-01.42|+00.85|-01.36"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Cup|-01.42|+00.85|-01.36", "receptacle_object_id": "Fridge|-02.86|+00.00|+00.85"})]
Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True
	 Fluent(predicate='inReceptacle', objects=('Cup|-01.42|+00.85|-01.36', 'Fridge|-02.86|+00.00|+00.85')) True
	 State: False

Action feasible: True

--------
ADDING TO ABSTRACT TREE:
Goal: (Literal(neg=False, fluent=Fluent(predicate='inReceptacle', objects=('1', '2'))), Literal(neg=False, fluent=Fluent(predicate='opened', objects=('0',))), Literal(neg=False, fluent=Fluent(predicate='opened', objects=('2',))), Literal(neg=True, fluent=Fluent(predicate='inReceptacle', objects=('1', '0'))), Literal(neg=True, fluent=Fluent(predicate='isOn', objects=('0',))), Literal(neg=True, fluent=Fluent(predicate='isToggled', objects=('0',))))
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "0"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "1"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "1"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "2"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "2", "receptacle_object_id": "0"})]
Goal to Traj Map: {'0': '1', '1': '2', '2': '0'}
--------

Motion plan operator success!: {'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['cup', 'fridge'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['fridge', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['cup'], 'is_neg': False}]}
=============================================
Problem Number: 49
Problem ID: train/pick_heat_then_place_in_recep-Cup-None-Fridge-22/trial_T20190908_072702_772430
Motion plan result: task_success: True
Total Actions Taken: 75
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 2.1 / 2.1
ChillObject_1 1.0 2.1 / 2.1
SliceObject_0 1.0 1.1 / 1.1
CutObject_1 1.0 1.1 / 1.1
WarmObject_0 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PlaceObject_0 0.8757763975155278 14.1 / 16.1
TakeObject_0 0.8080614203454894 42.1 / 52.1
TakeObject_1 0.803921568627451 4.1 / 5.1
CutObject_0 0.3548387096774194 1.1 / 3.1
WashObject_2 0.09090909090909091 0.1 / 1.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_0 0.047619047619047616 0.1 / 2.1
CoolObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
ChillObject_0 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 50 / 245, train/pick_clean_then_place_in_recep-Tomato-None-DiningTable-23/trial_T20190909_000922_271997
Now attempting to plan for goal: 0 / 2
	Running planner with existing operators + 38 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TurnOffObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	place a rinsed tomato on a table.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r CoffeeTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: False
	 Plan string: Plan not found with FD! Error: INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /Users/zyzzyva/miniconda3/envs/llm-operators-zs/bin/python3 /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/translate/translate.py /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpo1mhhovn /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmpc5k7yndw --sas-file /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp6k_ybgf0
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.006s wall-clock]
Preparing model... [0.000s CPU, 0.005s wall-clock]
Generated 312 rules.
Computing model... [0.050s CPU, 0.046s wall-clock]
3590 relevant atoms
4938 auxiliary atoms
8528 final queue length
12332 total queue pushes
Completing instantiation... [0.030s CPU, 0.031s wall-clock]
Instantiating: [0.090s CPU, 0.091s wall-clock]
No relaxed solution! Generating unsolvable task...
Translator variables: 1
Translator derived variables: 0
Translator facts: 2
Translator goal facts: 1
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 0
Translator axioms: 0
Translator task size: 4
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.100s CPU, 0.095s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp6k_ybgf0
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/pddlgym_planners/FD/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file sas_plan < /var/folders/d6/l_63vcns4fd8zd1w5fbtdvz40000gn/T/tmp6k_ybgf0
[t=0.00193188s, 408508656 KB] reading input...
[t=0.00215123s, 408508656 KB] done reading input!
[t=0.00616291s, 408509680 KB] Initializing landmark sum heuristic...
[t=0.0061721s, 408509680 KB] Generating landmark graph...
[t=0.00619223s, 408509680 KB] Building a landmark graph with reasonable orders.
[t=0.00619793s, 408509680 KB] Initializing Exploration...
[t=0.00621252s, 408509680 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.00624368s, 408509680 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00625918s, 408509680 KB] Landmarks generation time: 8.2574e-05s
[t=0.00628362s, 408509680 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0062885s, 408509680 KB] 1 edges
[t=0.00629141s, 408509680 KB] approx. reasonable orders
[t=0.00629768s, 408509680 KB] approx. obedient reasonable orders
[t=0.00630277s, 408509680 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00630551s, 408509680 KB] Landmarks generation time: 0.00012751s
[t=0.00630769s, 408509680 KB] Discovered 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0063106s, 408509680 KB] 1 edges
[t=0.00631273s, 408509680 KB] Landmark graph generation time: 0.000142229s
[t=0.00631556s, 408509680 KB] Landmark graph contains 2 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00631851s, 408509680 KB] Landmark graph contains 1 orderings.
[t=0.00633881s, 408510704 KB] Simplifying 0 unary operators... done! [0 unary operators]
[t=0.00634368s, 408510704 KB] time to simplify: 6.191e-06s
[t=0.0063461s, 408510704 KB] Initializing additive heuristic...
[t=0.00634803s, 408510704 KB] Initializing FF heuristic...
[t=0.00639485s, 408510704 KB] Building successor generator...done!
[t=0.006401s, 408510704 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00640354s, 408510704 KB] time for successor generation creation: 8.61e-07s
[t=0.00640609s, 408510704 KB] Variables: 1
[t=0.00640846s, 408510704 KB] FactPairs: 2
[t=0.00641035s, 408510704 KB] Bytes per state: 4
[t=0.00644356s, 408518896 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00644782s, 408518896 KB] 1 initial landmarks, 1 goal landmarks
[t=0.00646525s, 408518896 KB] Initial heuristic value for ff(transform=adapt_costs(one)): infinity
[t=0.00646837s, 408518896 KB] Completely explored state space -- no solution!
[t=0.00647058s, 408518896 KB] Actual search time: 2.1238e-05s
[t=0.00647316s, 408518896 KB] Expanded 0 state(s).
[t=0.00647316s, 408518896 KB] Reopened 0 state(s).
[t=0.00647316s, 408518896 KB] Evaluated 1 state(s).
[t=0.00647316s, 408518896 KB] Evaluations: 1
[t=0.00647316s, 408518896 KB] Generated 0 state(s).
[t=0.00647316s, 408518896 KB] Dead ends: 1 state(s).
[t=0.00647316s, 408518896 KB] Number of registered states: 1
[t=0.00647316s, 408518896 KB] Int hash set load factor: 1/1 = 1
[t=0.00647316s, 408518896 KB] Int hash set resizes: 0
[t=0.00647316s, 408518896 KB] Search time: 2.9807e-05s
[t=0.00647316s, 408518896 KB] Total time: 0.00647316s
Search stopped without finding a solution.
Peak memory: 408518896 KB
search exit code: 12

Driver aborting after search
INFO     Planner time: 0.14s
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 50 / 245, train/pick_clean_then_place_in_recep-Tomato-None-DiningTable-23/trial_T20190909_000922_271997
Now attempting to plan for goal: 1 / 2
	Running planner with existing operators + 40 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'WashObject_2', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	place a rinsed tomato on a table.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_7_bar__minus_2_bar_0_bar_30 loc_bar__minus_7_bar__minus_6_bar_3_bar_60)
(washobject_2 agent1 loc_bar__minus_7_bar__minus_6_bar_3_bar_60 tomato__minus_8_dot_3860426_comma__minus_8_dot_3860426_comma__minus_5_dot_69593908_comma__minus_5_dot_69593908_comma_3_dot_9491456_comma_3_dot_9491456)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 50 / 245
Motion planning for: train/pick_clean_then_place_in_recep-Tomato-None-DiningTable-23/trial_T20190909_000922_271997
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o TomatoType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
Ground truth oracle goal is: 
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'WashObject_2', 'postcondition_ground_predicates': [{'predicate_name': 'isClean', 'arguments': ['tomato'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'cleanable', 'arguments': ['tomato'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation diningtable)
(PickupObject tomato)
(GotoLocation sinkbasin)
(CleanObject tomato)
(GotoLocation diningtable)
(PutObject tomato diningtable)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['tomato', 'diningtable'], 'is_neg': False}

{'predicate_name': 'cleanable', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'isClean', 'arguments': ['tomato'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'WashObject_2',
 'postcondition_ground_predicates': [{'arguments': ['tomato'],
                                      'is_neg': False,
                                      'predicate_name': 'isClean'}],
 'precondition_ground_predicates': [{'arguments': ['tomato'],
                                     'is_neg': False,
                                     'predicate_name': 'cleanable'}]}

GOAL OBJECT SET:
[('Tomato|-02.10|+00.99|-01.42',), ('Tomato|-01.88|+00.09|-03.76',)]

PERMISSIBLE OBJECT SET:
[('Tomato|-02.10|+00.99|-01.42',), ('Tomato|-01.88|+00.09|-03.76',)]


Permissible Objects:
('Tomato|-02.10|+00.99|-01.42',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.10|+00.99|-01.42"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.10|+00.99|-01.42"})]
Error Message: object not found: Tomato|-02.10|+00.99|-01.42
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-02.10|+00.99|-01.42',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Tomato|-01.88|+00.09|-03.76',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.88|+00.09|-03.76"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.88|+00.09|-03.76"})]
Error Message: object not found: Tomato|-01.88|+00.09|-03.76
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-01.88|+00.09|-03.76',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Tomato|-02.10|+00.99|-01.42',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-02.10|+00.99|-01.42"})]
Error Message: object not found: Tomato|-02.10|+00.99|-01.42
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-02.10|+00.99|-01.42',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-02.10|+00.99|-01.42"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-02.10|+00.99|-01.42',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.10|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Tomato|-02.10|+00.99|-01.42',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.10|+00.99|-01.42", "receptacle_object_id": "Tomato|-02.10|+00.99|-01.42"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-02.10|+00.99|-01.42',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.10|+00.99|-01.42"})]
Error Message: object not found: Tomato|-02.10|+00.99|-01.42
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-02.10|+00.99|-01.42',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-02.10|+00.99|-01.42"})]
Error Message: object not found: Tomato|-02.10|+00.99|-01.42
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-02.10|+00.99|-01.42',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.10|+00.99|-01.42"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-02.10|+00.99|-01.42',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.10|+00.99|-01.42"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-02.10|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Tomato|-02.10|+00.99|-01.42',)) True
	 State: False

Error Message: object not found: Tomato|-02.10|+00.99|-01.42
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-02.10|+00.99|-01.42',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.10|+00.99|-01.42"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-02.10|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Tomato|-02.10|+00.99|-01.42',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-02.10|+00.99|-01.42',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.10|+00.99|-01.42"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.10|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Tomato|-02.10|+00.99|-01.42',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-02.10|+00.99|-01.42',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.10|+00.99|-01.42"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-02.10|+00.99|-01.42", "receptacle_object_id": "Tomato|-02.10|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Tomato|-02.10|+00.99|-01.42',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-02.10|+00.99|-01.42',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.10|+00.99|-01.42"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-02.10|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Tomato|-02.10|+00.99|-01.42',)) True
	 State: False

Error Message: object not found: Tomato|-02.10|+00.99|-01.42
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-02.10|+00.99|-01.42',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.10|+00.99|-01.42"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-02.10|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Tomato|-02.10|+00.99|-01.42',)) True
	 State: False

Error Message: object not found: Tomato|-02.10|+00.99|-01.42
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-02.10|+00.99|-01.42',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-02.10|+00.99|-01.42"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-02.10|+00.99|-01.42"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Tomato|-02.10|+00.99|-01.42',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-02.10|+00.99|-01.42',)) True
	 State: False

Rollout 14/50

Permissible Objects:
('Tomato|-01.88|+00.09|-03.76',)
Starting BFS Search:
Rollout 0/50
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.88|+00.09|-03.76"})]
Error Message: object not found: Tomato|-01.88|+00.09|-03.76
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-01.88|+00.09|-03.76',)) True
	 State: False

Rollout 1/50
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.88|+00.09|-03.76"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-01.88|+00.09|-03.76',)) True
	 State: False

Rollout 2/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.88|+00.09|-03.76"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Tomato|-01.88|+00.09|-03.76',)) True
	 State: False

Rollout 3/50
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.88|+00.09|-03.76", "receptacle_object_id": "Tomato|-01.88|+00.09|-03.76"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-01.88|+00.09|-03.76',)) True
	 State: False

Rollout 4/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.88|+00.09|-03.76"})]
Error Message: object not found: Tomato|-01.88|+00.09|-03.76
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-01.88|+00.09|-03.76',)) True
	 State: False

Rollout 5/50
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-01.88|+00.09|-03.76"})]
Error Message: object not found: Tomato|-01.88|+00.09|-03.76
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-01.88|+00.09|-03.76',)) True
	 State: False

Rollout 6/50
Traj: [ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-01.88|+00.09|-03.76"})]
Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-01.88|+00.09|-03.76',)) True
	 State: False

Rollout 7/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.88|+00.09|-03.76"}), ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Tomato|-01.88|+00.09|-03.76"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Tomato|-01.88|+00.09|-03.76',)) True
	 State: False

Error Message: object not found: Tomato|-01.88|+00.09|-03.76
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-01.88|+00.09|-03.76',)) True
	 State: False

Rollout 8/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.88|+00.09|-03.76"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Tomato|-01.88|+00.09|-03.76"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Tomato|-01.88|+00.09|-03.76',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-01.88|+00.09|-03.76',)) True
	 State: False

Rollout 9/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.88|+00.09|-03.76"}), ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.88|+00.09|-03.76"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Tomato|-01.88|+00.09|-03.76',)) True
	 State: False

Error Message: 
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-01.88|+00.09|-03.76',)) True
	 State: False

Rollout 10/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.88|+00.09|-03.76"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Tomato|-01.88|+00.09|-03.76", "receptacle_object_id": "Tomato|-01.88|+00.09|-03.76"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Tomato|-01.88|+00.09|-03.76',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-01.88|+00.09|-03.76',)) True
	 State: False

Rollout 11/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.88|+00.09|-03.76"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Tomato|-01.88|+00.09|-03.76"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Tomato|-01.88|+00.09|-03.76',)) True
	 State: False

Error Message: object not found: Tomato|-01.88|+00.09|-03.76
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-01.88|+00.09|-03.76',)) True
	 State: False

Rollout 12/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.88|+00.09|-03.76"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Tomato|-01.88|+00.09|-03.76"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Tomato|-01.88|+00.09|-03.76',)) True
	 State: False

Error Message: object not found: Tomato|-01.88|+00.09|-03.76
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-01.88|+00.09|-03.76',)) True
	 State: False

Rollout 13/50
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Tomato|-01.88|+00.09|-03.76"}), ActionConstructors[AlfredActionType.SliceObject]({"object_id": "Tomato|-01.88|+00.09|-03.76"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Tomato|-01.88|+00.09|-03.76',)) True
	 State: False

Exception: Agent should be holding a knife before slicing.
Action feasible: False
	 Fluent(predicate='isClean', objects=('Tomato|-01.88|+00.09|-03.76',)) True
	 State: False

Rollout 14/50
=============================================
Problem Number: 50
Problem ID: train/pick_clean_then_place_in_recep-Tomato-None-DiningTable-23/trial_T20190909_000922_271997
Motion plan result: task_success: False
Total Actions Taken: 30
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 2.1 / 2.1
ChillObject_1 1.0 2.1 / 2.1
SliceObject_0 1.0 1.1 / 1.1
CutObject_1 1.0 1.1 / 1.1
WarmObject_0 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PlaceObject_0 0.8757763975155278 14.1 / 16.1
TakeObject_0 0.8080614203454894 42.1 / 52.1
TakeObject_1 0.803921568627451 4.1 / 5.1
CutObject_0 0.3548387096774194 1.1 / 3.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_0 0.047619047619047616 0.1 / 2.1
CoolObject_2 0.047619047619047616 0.1 / 2.1
WashObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
ChillObject_0 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 50 / 245, train/pick_clean_then_place_in_recep-Tomato-None-DiningTable-23/trial_T20190909_000922_271997
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 50 / 245, train/pick_clean_then_place_in_recep-Tomato-None-DiningTable-23/trial_T20190909_000922_271997
Sucessfully found 0 plans for goals.
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 12 / 51 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 51 / 245, train/pick_clean_then_place_in_recep-Lettuce-None-DiningTable-21/trial_T20190908_215554_002650
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 40 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	put a clean head of lettuce on the table.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_3_bar__minus_1_bar_2_bar_30 loc_bar_0_bar_1_bar_0_bar_60)
(gotolocation agent1 loc_bar_0_bar_1_bar_0_bar_60 loc_bar_1_bar_1_bar_1_bar_60)
(takeobject_0 agent1 loc_bar_1_bar_1_bar_1_bar_60 lettuce_3_dot_12699938_comma_3_dot_12699938_comma_2_dot_279071808_comma_2_dot_279071808_comma_3_dot_0048232_comma_3_dot_0048232)
(gotolocation agent1 loc_bar_1_bar_1_bar_1_bar_60 loc_bar_0_bar_1_bar_0_bar_60)
(placeobject_0 agent1 loc_bar_0_bar_1_bar_0_bar_60 diningtable__minus_2_dot_096_comma__minus_2_dot_096_comma_3_dot_804_comma_3_dot_804_comma_0_dot_024_comma_0_dot_024 lettuce_3_dot_12699938_comma_3_dot_12699938_comma_2_dot_279071808_comma_2_dot_279071808_comma_3_dot_0048232_comma_3_dot_0048232)
(gotolocation agent1 loc_bar_0_bar_1_bar_0_bar_60 loc_bar_1_bar__minus_2_bar_1_bar_60)
(washobject_1 sinkbasin_3_dot_0292_comma_3_dot_0292_comma__minus_2_dot_754_comma__minus_2_dot_754_comma_3_dot_048_comma_3_dot_048 agent1 loc_bar_1_bar__minus_2_bar_1_bar_60 lettuce_3_dot_12699938_comma_3_dot_12699938_comma_2_dot_279071808_comma_2_dot_279071808_comma_3_dot_0048232_comma_3_dot_0048232)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 51 / 245
Motion planning for: train/pick_clean_then_place_in_recep-Lettuce-None-DiningTable-21/trial_T20190908_215554_002650
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(receptacleType ?r DiningTableType)
		(inReceptacle ?o ?r)
		(cleanable ?o)
		(isClean ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['lettuce'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'PlaceObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'inReceptacle', 'arguments': ['lettuce', 'diningtable'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['diningtable', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['lettuce'], 'is_neg': False}]}

{'action': 'WashObject_1', 'postcondition_ground_predicates': [{'predicate_name': 'isClean', 'arguments': ['lettuce'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['sinkbasin', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['lettuce'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation sidetable)
(PickupObject lettuce)
(GotoLocation sinkbasin)
(CleanObject lettuce)
(GotoLocation diningtable)
(PutObject lettuce diningtable)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['lettuce', 'diningtable'], 'is_neg': False}

{'predicate_name': 'cleanable', 'arguments': ['lettuce'], 'is_neg': False}

{'predicate_name': 'isClean', 'arguments': ['lettuce'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['lettuce'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Lettuce|+00.78|+00.75|+00.57',), ('Lettuce|+00.71|+01.25|-01.96',)]

PERMISSIBLE OBJECT SET:
[('Lettuce|+00.78|+00.75|+00.57',), ('Lettuce|+00.71|+01.25|-01.96',)]


Permissible Objects:
('Lettuce|+00.78|+00.75|+00.57',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|+00.78|+00.75|+00.57"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|+00.78|+00.75|+00.57"})]
Action feasible: True

OPERATOR:
{'action': 'PlaceObject_0',
 'postcondition_ground_predicates': [{'arguments': ['lettuce', 'diningtable'],
                                      'is_neg': False,
                                      'predicate_name': 'inReceptacle'}],
 'precondition_ground_predicates': [{'arguments': ['diningtable', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['lettuce'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Lettuce|+00.78|+00.75|+00.57', 'DiningTable|-01.73|-00.03|-00.96'),
 ('Lettuce|+00.78|+00.75|+00.57', 'DiningTable|-00.52|+00.01|+00.95'),
 ('Lettuce|+00.78|+00.75|+00.57', 'DiningTable|-02.17|-00.03|-03.37'),
 ('Lettuce|+00.71|+01.25|-01.96', 'DiningTable|-01.73|-00.03|-00.96'),
 ('Lettuce|+00.71|+01.25|-01.96', 'DiningTable|-01.73|-00.03|-00.96'),
 ('Lettuce|+00.71|+01.25|-01.96', 'DiningTable|-00.52|+00.01|+00.95'),
 ('Lettuce|+00.71|+01.25|-01.96', 'DiningTable|-00.52|+00.01|+00.95'),
 ('Lettuce|+00.71|+01.25|-01.96', 'DiningTable|-02.17|-00.03|-03.37'),
 ('Lettuce|+00.71|+01.25|-01.96', 'DiningTable|-02.17|-00.03|-03.37')]

PERMISSIBLE OBJECT SET:
[('Lettuce|+00.78|+00.75|+00.57', 'DiningTable|-01.73|-00.03|-00.96'),
 ('Lettuce|+00.78|+00.75|+00.57', 'DiningTable|-00.52|+00.01|+00.95'),
 ('Lettuce|+00.78|+00.75|+00.57', 'DiningTable|-02.17|-00.03|-03.37'),
 ('Lettuce|+00.71|+01.25|-01.96', 'DiningTable|-01.73|-00.03|-00.96'),
 ('Lettuce|+00.71|+01.25|-01.96',
  'DiningTable|-01.73|-00.03|-00.96',
  'Lettuce|+00.78|+00.75|+00.57'),
 ('Lettuce|+00.71|+01.25|-01.96', 'DiningTable|-00.52|+00.01|+00.95'),
 ('Lettuce|+00.71|+01.25|-01.96',
  'DiningTable|-00.52|+00.01|+00.95',
  'Lettuce|+00.78|+00.75|+00.57'),
 ('Lettuce|+00.71|+01.25|-01.96', 'DiningTable|-02.17|-00.03|-03.37'),
 ('Lettuce|+00.71|+01.25|-01.96',
  'DiningTable|-02.17|-00.03|-03.37',
  'Lettuce|+00.78|+00.75|+00.57')]


Permissible Objects:
('Lettuce|+00.78|+00.75|+00.57', 'DiningTable|-01.73|-00.03|-00.96')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "DiningTable|-01.73|-00.03|-00.96"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "DiningTable|-01.73|-00.03|-00.96"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='inReceptacle', objects=('Lettuce|+00.78|+00.75|+00.57', 'DiningTable|-01.73|-00.03|-00.96')) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|+00.78|+00.75|+00.57", "receptacle_object_id": "DiningTable|-01.73|-00.03|-00.96"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|+00.78|+00.75|+00.57", "receptacle_object_id": "DiningTable|-01.73|-00.03|-00.96"})]
Action feasible: True

OPERATOR:
{'action': 'WashObject_1',
 'postcondition_ground_predicates': [{'arguments': ['lettuce'],
                                      'is_neg': False,
                                      'predicate_name': 'isClean'}],
 'precondition_ground_predicates': [{'arguments': ['sinkbasin', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['lettuce'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Lettuce|+00.78|+00.75|+00.57',),
 ('Lettuce|+00.78|+00.75|+00.57',),
 ('Lettuce|+00.78|+00.75|+00.57',),
 ('Lettuce|+00.78|+00.75|+00.57',),
 ('Lettuce|+00.71|+01.25|-01.96',),
 ('Lettuce|+00.71|+01.25|-01.96',),
 ('Lettuce|+00.71|+01.25|-01.96',),
 ('Lettuce|+00.71|+01.25|-01.96',),
 ('Lettuce|+00.71|+01.25|-01.96',)]

PERMISSIBLE OBJECT SET:
[('Lettuce|+00.78|+00.75|+00.57',),
 ('Lettuce|+00.78|+00.75|+00.57', 'Sink|+00.75|+00.88|-00.68|SinkBasin'),
 ('Lettuce|+00.78|+00.75|+00.57',
  'Sink|+00.75|+00.88|-00.68|SinkBasin',
  'Faucet|+01.03|+00.87|-00.68'),
 ('Lettuce|+00.78|+00.75|+00.57',
  'Sink|+00.75|+00.88|-00.68|SinkBasin',
  'DiningTable|-01.73|-00.03|-00.96'),
 ('Lettuce|+00.71|+01.25|-01.96',),
 ('Lettuce|+00.71|+01.25|-01.96', 'Sink|+00.75|+00.88|-00.68|SinkBasin'),
 ('Lettuce|+00.71|+01.25|-01.96',
  'Sink|+00.75|+00.88|-00.68|SinkBasin',
  'Faucet|+01.03|+00.87|-00.68'),
 ('Lettuce|+00.71|+01.25|-01.96',
  'Sink|+00.75|+00.88|-00.68|SinkBasin',
  'DiningTable|-01.73|-00.03|-00.96'),
 ('Lettuce|+00.71|+01.25|-01.96',
  'Sink|+00.75|+00.88|-00.68|SinkBasin',
  'DiningTable|-01.73|-00.03|-00.96',
  'Lettuce|+00.78|+00.75|+00.57')]


Permissible Objects:
('Lettuce|+00.78|+00.75|+00.57',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Lettuce|+00.78|+00.75|+00.57"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Lettuce|+00.78|+00.75|+00.57"})]
Error Message: object not found: Lettuce|+00.78|+00.75|+00.57
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|+00.78|+00.75|+00.57',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Lettuce|+00.78|+00.75|+00.57', 'Sink|+00.75|+00.88|-00.68|SinkBasin')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|+00.75|+00.88|-00.68|SinkBasin"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|+00.75|+00.88|-00.68|SinkBasin"})]
Error Message: object not found: Sink|+00.75|+00.88|-00.68|SinkBasin
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|+00.78|+00.75|+00.57',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Lettuce|+00.78|+00.75|+00.57"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Lettuce|+00.78|+00.75|+00.57"})]
Error Message: object not found: Lettuce|+00.78|+00.75|+00.57
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|+00.78|+00.75|+00.57',)) True
	 State: False

Rollout 2/50

Permissible Objects:
('Lettuce|+00.78|+00.75|+00.57', 'Sink|+00.75|+00.88|-00.68|SinkBasin', 'Faucet|+01.03|+00.87|-00.68')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|+01.03|+00.87|-00.68"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|+01.03|+00.87|-00.68"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|+00.78|+00.75|+00.57',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|+00.75|+00.88|-00.68|SinkBasin"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|+00.75|+00.88|-00.68|SinkBasin"})]
Error Message: object not found: Sink|+00.75|+00.88|-00.68|SinkBasin
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|+00.78|+00.75|+00.57',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Lettuce|+00.78|+00.75|+00.57"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Lettuce|+00.78|+00.75|+00.57"})]
Error Message: object not found: Lettuce|+00.78|+00.75|+00.57
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|+00.78|+00.75|+00.57',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|+00.78|+00.75|+00.57", "receptacle_object_id": "Faucet|+01.03|+00.87|-00.68"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|+00.75|+00.88|-00.68|SinkBasin"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|+00.78|+00.75|+00.57", "receptacle_object_id": "Faucet|+01.03|+00.87|-00.68"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|+00.75|+00.88|-00.68|SinkBasin"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|+00.78|+00.75|+00.57',)) True
	 State: False

Rollout 4/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|+00.78|+00.75|+00.57", "receptacle_object_id": "Sink|+00.75|+00.88|-00.68|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|+01.03|+00.87|-00.68"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|+00.78|+00.75|+00.57", "receptacle_object_id": "Sink|+00.75|+00.88|-00.68|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|+01.03|+00.87|-00.68"})]
Exception: list index out of range
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|+00.78|+00.75|+00.57',)) True
	 State: False

Rollout 5/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|+01.03|+00.87|-00.68"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Faucet|+01.03|+00.87|-00.68"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|+01.03|+00.87|-00.68"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Faucet|+01.03|+00.87|-00.68"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|+00.78|+00.75|+00.57',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|+00.78|+00.75|+00.57',)) True
	 State: False

Rollout 6/50
[counter] counter suggests [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|+01.03|+00.87|-00.68"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Faucet|+01.03|+00.87|-00.68"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|+01.03|+00.87|-00.68"})]
Traj: [ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|+01.03|+00.87|-00.68"}), ActionConstructors[AlfredActionType.ToggleObjectOff]({"object_id": "Faucet|+01.03|+00.87|-00.68"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|+01.03|+00.87|-00.68"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|+00.78|+00.75|+00.57',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|+00.78|+00.75|+00.57',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|+00.78|+00.75|+00.57',)) True
	 State: False

Rollout 7/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|+00.78|+00.75|+00.57"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|+00.78|+00.75|+00.57", "receptacle_object_id": "Faucet|+01.03|+00.87|-00.68"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|+00.75|+00.88|-00.68|SinkBasin"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|+00.78|+00.75|+00.57"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|+00.78|+00.75|+00.57", "receptacle_object_id": "Faucet|+01.03|+00.87|-00.68"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Sink|+00.75|+00.88|-00.68|SinkBasin"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|+00.78|+00.75|+00.57',)) True
	 State: False

Error Message: This target object is NOT a receptacle!
Action feasible: False
	 Fluent(predicate='isClean', objects=('Lettuce|+00.78|+00.75|+00.57',)) True
	 State: False

Rollout 8/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|+00.78|+00.75|+00.57"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|+00.78|+00.75|+00.57", "receptacle_object_id": "Sink|+00.75|+00.88|-00.68|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|+01.03|+00.87|-00.68"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|+00.78|+00.75|+00.57"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|+00.78|+00.75|+00.57", "receptacle_object_id": "Sink|+00.75|+00.88|-00.68|SinkBasin"}), ActionConstructors[AlfredActionType.ToggleObjectOn]({"object_id": "Faucet|+01.03|+00.87|-00.68"})]
Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|+00.78|+00.75|+00.57',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isClean', objects=('Lettuce|+00.78|+00.75|+00.57',)) True
	 State: False

Action feasible: True

	 Fluent(predicate='inReceptacle', objects=('Lettuce|+00.78|+00.75|+00.57', 'DiningTable|-01.73|-00.03|-00.96')) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Lettuce|+00.78|+00.75|+00.57', 'DiningTable|-00.52|+00.01|+00.95')) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Lettuce|+00.78|+00.75|+00.57', 'DiningTable|-02.17|-00.03|-03.37')) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Lettuce|+00.71|+01.25|-01.96', 'DiningTable|-01.73|-00.03|-00.96')) True
	 State: False
	 Fluent(predicate='isClean', objects=('Lettuce|+00.71|+01.25|-01.96',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Lettuce|+00.71|+01.25|-01.96', 'DiningTable|-00.52|+00.01|+00.95')) True
	 State: False
	 Fluent(predicate='isClean', objects=('Lettuce|+00.71|+01.25|-01.96',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Lettuce|+00.71|+01.25|-01.96', 'DiningTable|-02.17|-00.03|-03.37')) True
	 State: False
	 Fluent(predicate='isClean', objects=('Lettuce|+00.71|+01.25|-01.96',)) True
	 State: False

GOAL CHECK FUNCTION FAILED!
=============================================
Problem Number: 51
Problem ID: train/pick_clean_then_place_in_recep-Lettuce-None-DiningTable-21/trial_T20190908_215554_002650
Motion plan result: task_success: False
Total Actions Taken: 15
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 3.1 / 3.1
ChillObject_1 1.0 2.1 / 2.1
SliceObject_0 1.0 1.1 / 1.1
CutObject_1 1.0 1.1 / 1.1
WarmObject_0 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PlaceObject_0 0.8830409356725145 15.1 / 17.1
TakeObject_0 0.8116760828625236 43.1 / 53.1
TakeObject_1 0.803921568627451 4.1 / 5.1
CutObject_0 0.3548387096774194 1.1 / 3.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_0 0.047619047619047616 0.1 / 2.1
CoolObject_2 0.047619047619047616 0.1 / 2.1
WashObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
ChillObject_0 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 51 / 245, train/pick_clean_then_place_in_recep-Lettuce-None-DiningTable-21/trial_T20190908_215554_002650
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 51 / 245, train/pick_clean_then_place_in_recep-Lettuce-None-DiningTable-21/trial_T20190908_215554_002650
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 51 / 245, train/pick_clean_then_place_in_recep-Lettuce-None-DiningTable-21/trial_T20190908_215554_002650
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 52 / 245, train/look_at_obj_in_light-Statue-None-FloorLamp-205/trial_T20190908_103342_172151
	...no goals, skipping.
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 52 / 245, train/look_at_obj_in_light-Statue-None-FloorLamp-205/trial_T20190908_103342_172151
	...no goals, skipping.
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 52 / 245, train/look_at_obj_in_light-Statue-None-FloorLamp-205/trial_T20190908_103342_172151
	...no goals, skipping.
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 52 / 245, train/look_at_obj_in_light-Statue-None-FloorLamp-205/trial_T20190908_103342_172151
	...no goals, skipping.
Sucessfully found 0 plans for goals.
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 12 / 53 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 53 / 245, train/pick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin-6/trial_T20190907_191715_104381
Now attempting to plan for goal: 0 / 1
	Running planner with existing operators + 40 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'HeatObject_2', 'TakeObject_0', 'TurnOffObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	move a chilled piece of lettuce to the sink.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_6_bar_3_bar_2_bar_30 loc_bar_2_bar_3_bar_3_bar_45)
(takeobject_0 agent1 loc_bar_2_bar_3_bar_3_bar_45 lettuce__minus_1_dot_365187408_comma__minus_1_dot_365187408_comma_2_dot_5892888_comma_2_dot_5892888_comma_3_dot_976215364_comma_3_dot_976215364)
(gotolocation agent1 loc_bar_2_bar_3_bar_3_bar_45 loc_bar__minus_7_bar__minus_3_bar_3_bar_60)
(chillobject_1 fridge__minus_9_dot_90399932_comma__minus_9_dot_90399932_comma__minus_3_dot_132_comma__minus_3_dot_132_comma_0_dot_0_comma_0_dot_0 agent1 loc_bar__minus_7_bar__minus_3_bar_3_bar_60 lettuce__minus_1_dot_365187408_comma__minus_1_dot_365187408_comma_2_dot_5892888_comma_2_dot_5892888_comma_3_dot_976215364_comma_3_dot_976215364)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 53 / 245
Motion planning for: train/pick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin-6/trial_T20190907_191715_104381
Proposed goal is: 
(:goal
	(exists (?r - receptacle)
(exists (?o - object)
(and 
		(objectType ?o LettuceType)
		(inReceptacle ?o ?r)
		(coolable ?o)
		(isCool ?o))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['lettuce'], 'is_neg': False}], 'precondition_ground_predicates': []}

{'action': 'ChillObject_1', 'postcondition_ground_predicates': [{'predicate_name': 'isCool', 'arguments': ['lettuce'], 'is_neg': False}], 'precondition_ground_predicates': [{'predicate_name': 'receptacleAtLocation', 'arguments': ['fridge', 'loc'], 'is_neg': False}, {'predicate_name': 'holds', 'arguments': ['lettuce'], 'is_neg': False}]}

Ground truth PDDL plan is: 
(GotoLocation knife)
(PickupObject knife)
(GotoLocation lettuce)
(SliceObject lettuce)
(GotoLocation sinkbasin)
(PutObject knife sinkbasin)
(GotoLocation lettuce)
(PickupObject lettuce)
(GotoLocation fridge)
(CoolObject lettuce)
(GotoLocation sinkbasin)
(PutObject lettuce sinkbasin)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['lettuce', 'sinkbasin'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['lettuce'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['lettuce'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['lettuce'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['lettuce'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['lettuce'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Lettuce|-00.34|+00.99|+00.65',),
 ('Lettuce|-00.21|+00.99|+01.76',),
 ('Lettuce|-02.62|+00.99|+00.63',),
 ('Lettuce|+01.44|+01.00|-01.22',)]

PERMISSIBLE OBJECT SET:
[('Lettuce|-00.34|+00.99|+00.65',),
 ('Lettuce|-00.21|+00.99|+01.76',),
 ('Lettuce|-02.62|+00.99|+00.63',),
 ('Lettuce|+01.44|+01.00|-01.22',)]


Permissible Objects:
('Lettuce|-00.34|+00.99|+00.65',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-00.34|+00.99|+00.65"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Lettuce|-00.34|+00.99|+00.65"})]
Action feasible: True

OPERATOR:
{'action': 'ChillObject_1',
 'postcondition_ground_predicates': [{'arguments': ['lettuce'],
                                      'is_neg': False,
                                      'predicate_name': 'isCool'}],
 'precondition_ground_predicates': [{'arguments': ['fridge', 'loc'],
                                     'is_neg': False,
                                     'predicate_name': 'receptacleAtLocation'},
                                    {'arguments': ['lettuce'],
                                     'is_neg': False,
                                     'predicate_name': 'holds'}]}

GOAL OBJECT SET:
[('Lettuce|-00.34|+00.99|+00.65',),
 ('Lettuce|-00.34|+00.99|+00.65',),
 ('Lettuce|-00.21|+00.99|+01.76',),
 ('Lettuce|-00.21|+00.99|+01.76',),
 ('Lettuce|-00.21|+00.99|+01.76',),
 ('Lettuce|-02.62|+00.99|+00.63',),
 ('Lettuce|-02.62|+00.99|+00.63',),
 ('Lettuce|-02.62|+00.99|+00.63',),
 ('Lettuce|+01.44|+01.00|-01.22',),
 ('Lettuce|+01.44|+01.00|-01.22',),
 ('Lettuce|+01.44|+01.00|-01.22',)]

PERMISSIBLE OBJECT SET:
[('Lettuce|-00.34|+00.99|+00.65',),
 ('Lettuce|-00.34|+00.99|+00.65', 'Fridge|-02.48|+00.00|-00.78'),
 ('Lettuce|-00.21|+00.99|+01.76',),
 ('Lettuce|-00.21|+00.99|+01.76', 'Fridge|-02.48|+00.00|-00.78'),
 ('Lettuce|-00.21|+00.99|+01.76',
  'Fridge|-02.48|+00.00|-00.78',
  'Lettuce|-00.34|+00.99|+00.65'),
 ('Lettuce|-02.62|+00.99|+00.63',),
 ('Lettuce|-02.62|+00.99|+00.63', 'Fridge|-02.48|+00.00|-00.78'),
 ('Lettuce|-02.62|+00.99|+00.63',
  'Fridge|-02.48|+00.00|-00.78',
  'Lettuce|-00.34|+00.99|+00.65'),
 ('Lettuce|+01.44|+01.00|-01.22',),
 ('Lettuce|+01.44|+01.00|-01.22', 'Fridge|-02.48|+00.00|-00.78'),
 ('Lettuce|+01.44|+01.00|-01.22',
  'Fridge|-02.48|+00.00|-00.78',
  'Lettuce|-00.34|+00.99|+00.65')]


Permissible Objects:
('Lettuce|-00.34|+00.99|+00.65',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Lettuce|-00.34|+00.99|+00.65"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Lettuce|-00.34|+00.99|+00.65"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Lettuce|-00.34|+00.99|+00.65',)) True
	 State: False

Rollout 1/50

Permissible Objects:
('Lettuce|-00.34|+00.99|+00.65', 'Fridge|-02.48|+00.00|-00.78')
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Lettuce|-00.34|+00.99|+00.65"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Lettuce|-00.34|+00.99|+00.65"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Lettuce|-00.34|+00.99|+00.65',)) True
	 State: False

Rollout 1/50
[counter] counter suggests [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.48|+00.00|-00.78"})]
Traj: [ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.48|+00.00|-00.78"})]
Error Message: 
Action feasible: False
	 Fluent(predicate='isCool', objects=('Lettuce|-00.34|+00.99|+00.65',)) True
	 State: False

Rollout 2/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-00.34|+00.99|+00.65", "receptacle_object_id": "Fridge|-02.48|+00.00|-00.78"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.48|+00.00|-00.78"})]
Traj: [ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-00.34|+00.99|+00.65", "receptacle_object_id": "Fridge|-02.48|+00.00|-00.78"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.48|+00.00|-00.78"})]
Error Message: Target openable Receptacle is CLOSED, can't place if target is not open!
Action feasible: False
	 Fluent(predicate='isCool', objects=('Lettuce|-00.34|+00.99|+00.65',)) True
	 State: False

Rollout 3/50
[counter] counter suggests [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.48|+00.00|-00.78"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-00.34|+00.99|+00.65", "receptacle_object_id": "Fridge|-02.48|+00.00|-00.78"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.48|+00.00|-00.78"})]
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "Fridge|-02.48|+00.00|-00.78"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "Lettuce|-00.34|+00.99|+00.65", "receptacle_object_id": "Fridge|-02.48|+00.00|-00.78"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "Fridge|-02.48|+00.00|-00.78"})]
Action feasible: True
	 Fluent(predicate='isCool', objects=('Lettuce|-00.34|+00.99|+00.65',)) True
	 State: False

Action feasible: True
	 Fluent(predicate='isCool', objects=('Lettuce|-00.34|+00.99|+00.65',)) True
	 State: False

Action feasible: True

--------
ADDING TO ABSTRACT TREE:
Goal: (Literal(neg=False, fluent=Fluent(predicate='inReceptacle', objects=('0', '1'))), Literal(neg=False, fluent=Fluent(predicate='isCool', objects=('0',))), Literal(neg=True, fluent=Fluent(predicate='holds', objects=('0',))), Literal(neg=True, fluent=Fluent(predicate='inReceptacle', objects=('2', '3'))))
Traj: [ActionConstructors[AlfredActionType.OpenObject]({"object_id": "0"}), ActionConstructors[AlfredActionType.PutObject]({"object_id": "1", "receptacle_object_id": "0"}), ActionConstructors[AlfredActionType.CloseObject]({"object_id": "0"})]
Goal to Traj Map: {'0': '1', '1': '0', '2': None, '3': None}
--------
	 Fluent(predicate='inReceptacle', objects=('Lettuce|-00.34|+00.99|+00.65', 'Sink|+01.38|+00.81|-01.27|SinkBasin')) True
	 State: False
	 Fluent(predicate='isSliced', objects=('Lettuce|-00.34|+00.99|+00.65',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Lettuce|-00.21|+00.99|+01.76', 'Sink|+01.38|+00.81|-01.27|SinkBasin')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Lettuce|-00.21|+00.99|+01.76',)) True
	 State: False
	 Fluent(predicate='isSliced', objects=('Lettuce|-00.21|+00.99|+01.76',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Lettuce|-02.62|+00.99|+00.63', 'Sink|+01.38|+00.81|-01.27|SinkBasin')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Lettuce|-02.62|+00.99|+00.63',)) True
	 State: False
	 Fluent(predicate='isSliced', objects=('Lettuce|-02.62|+00.99|+00.63',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Lettuce|+01.44|+01.00|-01.22', 'Sink|+01.38|+00.81|-01.27|SinkBasin')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Lettuce|+01.44|+01.00|-01.22',)) True
	 State: False
	 Fluent(predicate='isSliced', objects=('Lettuce|+01.44|+01.00|-01.22',)) True
	 State: False

GOAL CHECK FUNCTION FAILED!
=============================================
Problem Number: 53
Problem ID: train/pick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin-6/trial_T20190907_191715_104381
Motion plan result: task_success: False
Total Actions Taken: 6
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 3.1 / 3.1
ChillObject_1 1.0 3.1 / 3.1
SliceObject_0 1.0 1.1 / 1.1
CutObject_1 1.0 1.1 / 1.1
WarmObject_0 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PlaceObject_0 0.8830409356725145 15.1 / 17.1
TakeObject_0 0.8151571164510166 44.1 / 54.1
TakeObject_1 0.803921568627451 4.1 / 5.1
CutObject_0 0.3548387096774194 1.1 / 3.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_0 0.047619047619047616 0.1 / 2.1
CoolObject_2 0.047619047619047616 0.1 / 2.1
WashObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
ChillObject_0 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 53 / 245, train/pick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin-6/trial_T20190907_191715_104381
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 53 / 245, train/pick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin-6/trial_T20190907_191715_104381
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 53 / 245, train/pick_cool_then_place_in_recep-LettuceSliced-None-SinkBasin-6/trial_T20190907_191715_104381
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 54 / 245, train/look_at_obj_in_light-AlarmClock-None-DeskLamp-304/trial_T20190907_170615_242578
	...no goals, skipping.
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 54 / 245, train/look_at_obj_in_light-AlarmClock-None-DeskLamp-304/trial_T20190907_170615_242578
	...no goals, skipping.
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 54 / 245, train/look_at_obj_in_light-AlarmClock-None-DeskLamp-304/trial_T20190907_170615_242578
	...no goals, skipping.
Sucessfully found 0 plans for goals.
task_planner.attempt_task_plan_for_problem: attempt 0 : 54 / 245, train/look_at_obj_in_light-AlarmClock-None-DeskLamp-304/trial_T20190907_170615_242578
	...no goals, skipping.
Sucessfully found 0 plans for goals.
Logging scored operators: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_task_plans.json
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
Logging all motion plans out to: generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_plans.json
Logging motion planner results to generated/alfred_cot_250_full_2_872023/0/alfred_cot_250_full_2_872023_motion_planner_results.csv
=========EXPERIMENT SUMMARY=================
	iteration: 0
	evaluated successful motion plans: 12 / 55 problems so far of 245 total problems in this iteration.
	total problems: 245
	current operators: 245
=========EXPERIMENT SUMMARY=================
task_planner.attempt_task_plan_for_problem: attempt 0 : 55 / 245, train/pick_and_place_simple-LettuceSliced-None-DiningTable-24/trial_T20190906_220147_111155
Now attempting to plan for goal: 0 / 4
	Running planner with existing operators + 40 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'CutObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'TakeObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	use the knife to cut the lettuce on the table.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?o2 - object)
(exists (?o1 - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?o1 KnifeType)
		(holds ?a ?o1)
		(objectType ?o2 LettuceType)
		(objectAtLocation ?o2 ?l)
		(atLocation ?a ?l))))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_6_bar_12_bar_3_bar_30 loc_bar__minus_5_bar_8_bar_2_bar_60)
(gotolocation agent1 loc_bar__minus_5_bar_8_bar_2_bar_60 loc_bar__minus_7_bar_5_bar_1_bar_45)
(takeobject_0 agent1 loc_bar__minus_7_bar_5_bar_1_bar_45 knife__minus_4_dot_74204636_comma__minus_4_dot_74204636_comma_5_dot_398312_comma_5_dot_398312_comma_3_dot_694805384_comma_3_dot_694805384)
(gotolocation agent1 loc_bar__minus_7_bar_5_bar_1_bar_45 loc_bar__minus_8_bar_9_bar_3_bar_45)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 55 / 245
Motion planning for: train/pick_and_place_simple-LettuceSliced-None-DiningTable-24/trial_T20190906_220147_111155
Proposed goal is: 
(:goal
	(exists (?o2 - object)
(exists (?o1 - object)
(exists (?l - location)
(exists (?a - agent)
(and 
		(objectType ?o1 KnifeType)
		(holds ?a ?o1)
		(objectType ?o2 LettuceType)
		(objectAtLocation ?o2 ?l)
		(atLocation ?a ?l))))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Attempting to execute the following motion plan:
{'action': 'TakeObject_0', 'postcondition_ground_predicates': [{'predicate_name': 'holds', 'arguments': ['knife'], 'is_neg': False}], 'precondition_ground_predicates': []}

Ground truth PDDL plan is: 
(GotoLocation diningtable)
(PickupObject butterknife)
(GotoLocation lettuce)
(SliceObject lettuce)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['lettuce', 'diningtable'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['lettuce'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['lettuce'], 'is_neg': False}

ThorEnv started.
OPERATOR:
{'action': 'TakeObject_0',
 'postcondition_ground_predicates': [{'arguments': ['knife'],
                                      'is_neg': False,
                                      'predicate_name': 'holds'}],
 'precondition_ground_predicates': []}

GOAL OBJECT SET:
[('Knife|-01.19|+00.92|+01.35',)]

PERMISSIBLE OBJECT SET:
[('Knife|-01.19|+00.92|+01.35',)]


Permissible Objects:
('Knife|-01.19|+00.92|+01.35',)
Starting Counter Search:
Rollout 0/50
[counter] counter suggests [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|-01.19|+00.92|+01.35"})]
Traj: [ActionConstructors[AlfredActionType.PickupObject]({"object_id": "Knife|-01.19|+00.92|+01.35"})]
Action feasible: True

	 Fluent(predicate='isSliced', objects=('Lettuce|-01.19|+00.98|+01.56',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Lettuce|-02.58|+01.07|+02.33', 'DiningTable|-00.88|+00.01|+01.32')) True
	 State: False
	 Fluent(predicate='isSliced', objects=('Lettuce|-02.58|+01.07|+02.33',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Lettuce|-02.68|+01.48|+02.33', 'DiningTable|-00.88|+00.01|+01.32')) True
	 State: False
	 Fluent(predicate='isSliced', objects=('Lettuce|-02.68|+01.48|+02.33',)) True
	 State: False

GOAL CHECK FUNCTION FAILED!
=============================================
Problem Number: 55
Problem ID: train/pick_and_place_simple-LettuceSliced-None-DiningTable-24/trial_T20190906_220147_111155
Motion plan result: task_success: False
Total Actions Taken: 1
=============================================
Top operators after success are:
TurnOnLamp_1 1.0 7.1 / 7.1
PutObjectInReceptacle 1.0 4.1 / 4.1
WashObject_1 1.0 3.1 / 3.1
ChillObject_1 1.0 3.1 / 3.1
SliceObject_0 1.0 1.1 / 1.1
CutObject_1 1.0 1.1 / 1.1
WarmObject_0 1.0 1.1 / 1.1
TurnOnObject_0 1.0 0.1 / 0.1
TurnOnObject_1 1.0 0.1 / 0.1
TurnOnObject_2 1.0 0.1 / 0.1
TurnOffObject_0 1.0 0.1 / 0.1
TurnOffObject_1 1.0 0.1 / 0.1
TurnOffObject_2 1.0 0.1 / 0.1
OpenObject_0 1.0 0.1 / 0.1
OpenObject_1 1.0 0.1 / 0.1
OpenObject_2 1.0 0.1 / 0.1
CloseObject_0 1.0 0.1 / 0.1
CloseObject_1 1.0 0.1 / 0.1
CloseObject_2 1.0 0.1 / 0.1
SliceObject_1 1.0 0.1 / 0.1
CoolObject_1 1.0 0.1 / 0.1
WashObject_0 1.0 0.1 / 0.1
ThrowAwayObject_0 1.0 0.1 / 0.1
ThrowAwayObject_1 1.0 0.1 / 0.1
PlaceObject_1 1.0 0.1 / 0.1
PlaceObject_2 1.0 0.1 / 0.1
TakeObject_2 1.0 0.1 / 0.1
TurnOnLight_0 1.0 0.1 / 0.1
TurnOnLight_1 1.0 0.1 / 0.1
DropObject_0 1.0 0.1 / 0.1
DropObject_1 1.0 0.1 / 0.1
DropObject_2 1.0 0.1 / 0.1
ThrowObject_0 1.0 0.1 / 0.1
ThrowObject_1 1.0 0.1 / 0.1
ThrowObject_2 1.0 0.1 / 0.1
TurnOnLamp_0 1.0 0.1 / 0.1
TurnOnLamp_2 1.0 0.1 / 0.1
PlaceObject_0 0.8830409356725145 15.1 / 17.1
TakeObject_0 0.8185117967332124 45.1 / 55.1
TakeObject_1 0.803921568627451 4.1 / 5.1
CutObject_0 0.3548387096774194 1.1 / 3.1
CutObject_2 0.09090909090909091 0.1 / 1.1
HeatObject_0 0.09090909090909091 0.1 / 1.1
HeatObject_1 0.09090909090909091 0.1 / 1.1
HeatObject_2 0.09090909090909091 0.1 / 1.1
WarmObject_1 0.09090909090909091 0.1 / 1.1
WarmObject_2 0.09090909090909091 0.1 / 1.1
CoolObject_0 0.047619047619047616 0.1 / 2.1
CoolObject_2 0.047619047619047616 0.1 / 2.1
WashObject_2 0.047619047619047616 0.1 / 2.1
ChillObject_2 0.047619047619047616 0.1 / 2.1
SliceObject_2 0.03225806451612903 0.1 / 3.1
ChillObject_0 0.03225806451612903 0.1 / 3.1
task_planner.attempt_task_plan_for_problem: attempt 0 : 55 / 245, train/pick_and_place_simple-LettuceSliced-None-DiningTable-24/trial_T20190906_220147_111155
Now attempting to plan for goal: 1 / 4
	Running planner with existing operators + 38 proposed operators: 
	 Initial Operators: dict_keys(['GotoLocation', 'PickupObjectInReceptacle', 'PickupObjectNotInReceptacle', 'PutObjectInReceptacle'])
CrashReporter: initialized
Mono path[0] = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Resources/Data/Managed'
Mono config path = '/Users/zyzzyva/.ai2thor/releases/thor-201909061227-OSXIntel64/thor-201909061227-OSXIntel64.app/Contents/Mono/etc'
	 Proposed Operators: {'ThrowAwayObject_1', 'TurnOnObject_2', 'SliceObject_0', 'WarmObject_0', 'SliceObject_1', 'PlaceObject_0', 'WashObject_1', 'TurnOnLamp_2', 'CoolObject_1', 'TurnOffObject_1', 'CloseObject_1', 'ThrowObject_2', 'ThrowObject_1', 'TurnOnObject_1', 'DropObject_1', 'TurnOnLamp_0', 'TurnOnLamp_1', 'ThrowAwayObject_0', 'CloseObject_0', 'TurnOnLight_0', 'PlaceObject_2', 'TakeObject_2', 'CloseObject_2', 'ThrowObject_0', 'OpenObject_0', 'ChillObject_1', 'DropObject_0', 'TurnOffObject_2', 'TakeObject_0', 'TurnOffObject_0', 'OpenObject_1', 'TurnOnObject_0', 'PlaceObject_1', 'CutObject_1', 'OpenObject_2', 'WashObject_0', 'DropObject_2', 'TurnOnLight_1'}
	 Language:
	use the knife to cut the lettuce on the table.
	 Ground truth goal: 
	(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
	 Proposed goal:
	(:goal
	(exists (?ot - object)
(exists (?o - agent)
(exists (?l - location)
(and 
		(objectAtLocation ?ot ?l)
		(atLocation ?o ?l)))))
)
Instantiating FD with --alias "lama-first" 
	Plan success: True
	 Plan string: (gotolocation agent1 loc_bar__minus_6_bar_12_bar_3_bar_30 loc_bar__minus_8_bar_9_bar_3_bar_45)
Sucessfully found 1 plans for goals.
motion_planner.attempt_motion_plan_for_problem: attempt 0 : 55 / 245
Motion planning for: train/pick_and_place_simple-LettuceSliced-None-DiningTable-24/trial_T20190906_220147_111155
Proposed goal is: 
(:goal
	(exists (?ot - object)
(exists (?o - agent)
(exists (?l - location)
(and 
		(objectAtLocation ?ot ?l)
		(atLocation ?o ?l)))))
)
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Attempting to execute the following motion plan:
Ground truth PDDL plan is: 
(GotoLocation diningtable)
(PickupObject butterknife)
(GotoLocation lettuce)
(SliceObject lettuce)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['lettuce', 'diningtable'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['lettuce'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['lettuce'], 'is_neg': False}

ThorEnv started.
	 Fluent(predicate='isSliced', objects=('Lettuce|-01.19|+00.98|+01.56',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Lettuce|-02.58|+01.07|+02.33', 'DiningTable|-00.88|+00.01|+01.32')) True
	 State: False
	 Fluent(predicate='isSliced', objects=('Lettuce|-02.58|+01.07|+02.33',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Lettuce|-02.68|+01.48|+02.33', 'DiningTable|-00.88|+00.01|+01.32')) True
	 State: False
	 Fluent(predicate='isSliced', objects=('Lettuce|-02.68|+01.48|+02.33',)) True
	 State: False

GOAL CHECK FUNCTION FAILED!
> [0;32m/Users/zyzzyva/Desktop/zyzzyva/code/llm-operators/alfred/alfred/alfredplanner.py[0m(796)[0;36mrun_motion_planner[0;34m()[0m
[0;32m    795 [0;31m            [0;34m"max_satisfied_predicates"[0m[0;34m:[0m [0;32mNone[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m--> 796 [0;31m            [0;34m"motion_trajectory"[0m[0;34m:[0m [0mmotion_trajectory[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m    797 [0;31m            [0;34m"total_trajs_sampled"[0m[0;34m:[0m [0mtotal_trajs_taken[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0m
ipdb> 