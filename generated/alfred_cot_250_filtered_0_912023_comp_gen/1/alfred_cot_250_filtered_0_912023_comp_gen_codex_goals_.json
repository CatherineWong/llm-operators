{"train/pick_and_place_simple-ToiletPaper-None-ToiletPaperHanger-426/trial_T20190909_044756_658872": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nto put an empty roll on the toilet paper holder on the wall.\n;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto put an empty roll on the toilet paper holder on the wall.\n;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto put an empty roll on the toilet paper holder on the wall.\n;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto put an empty roll on the toilet paper holder on the wall.\n;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto put an empty roll on the toilet paper holder on the wall.\n;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto put an empty roll on the toilet paper holder on the wall.\n;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto put an empty roll on the toilet paper holder on the wall.\n;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto put an empty roll on the toilet paper holder on the wall.\n;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto put an empty roll on the toilet paper holder on the wall.\n;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto put an empty roll on the toilet paper holder on the wall.\n;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.to put an empty roll on the toilet paper holder on the wall.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaperRoll-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperRollType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n", "\n;; PDDL guess 2 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaperRoll-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperRollType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n", "\n;; PDDL guess 3 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaperRoll-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperRollType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n", "\n;; PDDL guess 4 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaperRoll-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperRollType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n"]}, "train/pick_and_place_simple-Vase-None-Safe-204/trial_T20190919_000336_714640": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a blue vase in the safe on the floor.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"put a blue vase in the safe on the floor.\"\n;; Official goal name: pick_and_place_simple-Vase-None-Safe\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (atLocation ?r ?l)\n                (receptacleAtLocation ?r ?l)\n                (atLocation ?l ?fl)\n                (objectAtLocation ?o ?l)\n            )\n    )))\n", "\n;; PDDL guess 2 for \"put a blue vase in the safe on the floor.\"\n;; Official goal name: pick_and_place_simple-Vase-None-Safe\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (atLocation ?r ?l)\n                (receptacleAtLocation ?r ?l)\n                (atLocation ?l ?fl)\n                (objectAtLocation ?o ?l)\n            )\n    )))\n", "\n;; PDDL guess 3 for \"put a blue vase in the safe on the floor.\"\n;; Official goal name: pick_and_place_simple-Vase-None-Safe\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (atLocation ?r ?l)\n                (receptacleAtLocation ?r ?l)\n                (atLocation ?l ?fl)\n                (objectAtLocation ?o ?l)\n            )\n    )))\n", "\n;; PDDL guess 4 for \"put a blue vase in the safe on the floor.\"\n;; Official goal name: pick_and_place_simple-Vase-None-Safe\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (atLocation ?r ?l)\n                (receptacleAtLocation ?r ?l)\n                (atLocation ?l ?fl)\n                (objectAtLocation ?o ?l)\n            )\n    )))\n"]}, "train/pick_and_place_simple-Pen-None-Desk-310/trial_T20190908_030223_620154": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\npick a pencil in the dustbin and place it on the table.\n;; PDDL guess 1 for 'pick a pencil in the dustbin and place it on the table.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Desk\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick a pencil in the dustbin and place it on the table.\n;; PDDL guess 1 for 'pick a pencil in the dustbin and place it on the table.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Desk\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick a pencil in the dustbin and place it on the table.\n;; PDDL guess 1 for 'pick a pencil in the dustbin and place it on the table.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Desk\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick a pencil in the dustbin and place it on the table.\n;; PDDL guess 1 for 'pick a pencil in the dustbin and place it on the table.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Desk\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick a pencil in the dustbin and place it on the table.\n;; PDDL guess 1 for 'pick a pencil in the dustbin and place it on the table.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Desk\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick a pencil in the dustbin and place it on the table.\n;; PDDL guess 1 for 'pick a pencil in the dustbin and place it on the table.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Desk\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick a pencil in the dustbin and place it on the table.\n;; PDDL guess 1 for 'pick a pencil in the dustbin and place it on the table.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Desk\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick a pencil in the dustbin and place it on the table.\n;; PDDL guess 1 for 'pick a pencil in the dustbin and place it on the table.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Desk\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick a pencil in the dustbin and place it on the table.\n;; PDDL guess 1 for 'pick a pencil in the dustbin and place it on the table.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Desk\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick a pencil in the dustbin and place it on the table.\n;; PDDL guess 1 for 'pick a pencil in the dustbin and place it on the table.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Desk\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.pick a pencil in the dustbin and place it on the table.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"pick a pencil in the dustbin and place it on the table.\"\n;; Official goal name: pick_and_place_simple-Pencil-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n", "\n;; PDDL guess 2 for \"pick a pencil in the dustbin and place it on the table.\"\n;; Official goal name: pick_and_place_simple-Pencil-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n", "\n;; PDDL guess 3 for \"pick a pencil in the dustbin and place it on the table.\"\n;; Official goal name: pick_and_place_simple-Pencil-None-CoffeeTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n", "\n;; PDDL guess 4 for \"pick a pencil in the dustbin and place it on the table.\"\n;; Official goal name: pick_and_place_simple-Pencil-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n"]}, "train/pick_clean_then_place_in_recep-ButterKnife-None-CounterTop-25/trial_T20190907_212022_934468": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a clean knife in the large sink.\n;; PDDL guess 1 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean knife in the large sink.\n;; PDDL guess 1 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean knife in the large sink.\n;; PDDL guess 1 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean knife in the large sink.\n;; PDDL guess 1 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean knife in the large sink.\n;; PDDL guess 1 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean knife in the large sink.\n;; PDDL guess 1 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean knife in the large sink.\n;; PDDL guess 1 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean knife in the large sink.\n;; PDDL guess 1 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean knife in the large sink.\n;; PDDL guess 1 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean knife in the large sink.\n;; PDDL guess 1 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a clean knife in the large sink.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"place a clean knife in the large sink.\"\n;; Official goal name: pick_clean_then_place_in_recep-ButterKnife-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for \"place a clean knife in the large sink.\"\n;; Official goal name: pick_clean_then_place_in_recep-ButterKnife-None-DishRack\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DishRackType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"place a clean knife in the large sink.\"\n;; Official goal name: pick_clean_then_place_in_recep-ButterKnife-None-Sink\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r SinkType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"place a clean knife in the large sink.\"\n;; Official goal name: pick_clean_then_place_in_recep-ButterKnife-None-DryingRack\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DryingRackType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n"]}, "train/pick_clean_then_place_in_recep-Knife-None-SideTable-3/trial_T20190906_210539_903984": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a washed knife on a counter.\n;; PDDL guess 1 for 'put a washed knife on a counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Knife-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a washed knife on a counter.\n;; PDDL guess 1 for 'put a washed knife on a counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Knife-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a washed knife on a counter.\n;; PDDL guess 1 for 'put a washed knife on a counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Knife-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a washed knife on a counter.\n;; PDDL guess 1 for 'put a washed knife on a counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Knife-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a washed knife on a counter.\n;; PDDL guess 1 for 'put a washed knife on a counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Knife-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a washed knife on a counter.\n;; PDDL guess 1 for 'put a washed knife on a counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Knife-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a washed knife on a counter.\n;; PDDL guess 1 for 'put a washed knife on a counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Knife-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a washed knife on a counter.\n;; PDDL guess 1 for 'put a washed knife on a counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Knife-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a washed knife on a counter.\n;; PDDL guess 1 for 'put a washed knife on a counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Knife-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a washed knife on a counter.\n;; PDDL guess 1 for 'put a washed knife on a counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Knife-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a washed knife on a counter.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"put a washed knife on a counter.\"\n;; Official goal name: pick_clean_then_place_in_recep-KnifeType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for \"put a washed knife on a counter.\"\n;; Official goal name: pick_clean_then_place_in_recep-ButterKnifeType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"put a washed knife on a counter.\"\n;; Official goal name: pick_clean_then_place_in_recep-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"put a washed knife on a counter.\"\n;; Official goal name: pick_clean_then_place_in_recep-SpoonType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n"]}, "train/pick_clean_then_place_in_recep-Mug-None-CoffeeMachine-25/trial_T20190907_223942_379753": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.clean mug in sink and return to coffee maker.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n"]}, "train/pick_clean_then_place_in_recep-Mug-None-CoffeeMachine-24/trial_T20190906_185346_459023": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a clean mug in the coffee machine.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"put a clean mug in the coffee machine.\"\n;; Official goal name: pick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n", "\n;; PDDL guess 2 for \"put a clean mug in the coffee machine.\"\n;; Official goal name: pick_clean_then_place_in_recep-GlassbottleType-None-CoffeeMachineType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n", "\n;; PDDL guess 3 for \"put a clean mug in the coffee machine.\"\n;; Official goal name: pick_clean_then_place_in_recep-CupType-None-CoffeeMachineType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n", "\n;; PDDL guess 4 for \"put a clean mug in the coffee machine.\"\n;; Official goal name: pick_clean_then_place_in_recep-MugType-None-CoffeeMachineType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n"]}, "train/pick_clean_then_place_in_recep-SoapBar-None-BathtubBasin-411/trial_T20190907_033311_020938": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace wet soap on the edge of the bathtub.\n;; PDDL guess 1 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap on the edge of the bathtub.\n;; PDDL guess 1 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap on the edge of the bathtub.\n;; PDDL guess 1 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap on the edge of the bathtub.\n;; PDDL guess 1 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap on the edge of the bathtub.\n;; PDDL guess 1 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap on the edge of the bathtub.\n;; PDDL guess 1 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap on the edge of the bathtub.\n;; PDDL guess 1 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap on the edge of the bathtub.\n;; PDDL guess 1 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap on the edge of the bathtub.\n;; PDDL guess 1 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap on the edge of the bathtub.\n;; PDDL guess 1 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place wet soap on the edge of the bathtub.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"place wet soap on the edge of the bathtub.\"\n;; Official goal name: pick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)\n            )\n    )))\n", "\n;; PDDL guess 2 for \"place wet soap on the edge of the bathtub.\"\n;; Official goal name: pick_clean_then_place_in_recep-SoapBottle-None-BathtubBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBottleType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)\n            )\n    )))\n", "\n;; PDDL guess 3 for \"place wet soap on the edge of the bathtub.\"\n;; Official goal name: pick_clean_then_place_in_recep-DishSpongeType-None-BathtubBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o DishSpongeType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)\n            )\n    )))\n", "\n;; PDDL guess 4 for \"place wet soap on the edge of the bathtub.\"\n;; Official goal name: pick_clean_then_place_in_recep-ClothType-None-BathtubBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)\n            )\n    )))\n"]}, "train/pick_clean_then_place_in_recep-ButterKnife-None-Drawer-30/trial_T20190908_051931_072703": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put the clean knife in the cabinet drawer.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"put the clean knife in the cabinet drawer.\"\n;; Official goal name: pick_clean_then_place_in_recep-Knife-None-DrawerType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n)))\n", "\n;; PDDL guess 2 for \"put the clean knife in the cabinet drawer.\"\n;; Official goal name: pick_clean_then_place_in_recep-ButterKnife-None-DrawerType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n)))\n", "\n;; PDDL guess 3 for \"put the clean knife in the cabinet drawer.\"\n;; Official goal name: pick_clean_then_place_in_recep-Spoon-None-DrawerType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n)))\n", "\n;; PDDL guess 4 for \"put the clean knife in the cabinet drawer.\"\n;; Official goal name: pick_clean_then_place_in_recep-ForkType-None-DrawerType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n)))\n"]}, "train/pick_clean_then_place_in_recep-ButterKnife-None-Drawer-2/trial_T20190908_044255_995925": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a rinsed knife in a drawer.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"place a rinsed knife in a drawer.\"\n;; Official goal name: pick_clean_then_place_in_recep-ButterKnife-None-Drawer\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for \"place a rinsed knife in a drawer.\"\n;; Official goal name: pick_clean_then_place_in_recep-SteakKnife-None-Drawer\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SteakKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"place a rinsed knife in a drawer.\"\n;; Official goal name: pick_clean_then_place_in_recep-ButterKnife-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"place a rinsed knife in a drawer.\"\n;; Official goal name: pick_clean_then_place_in_recep-SteakKnife-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SteakKnifeType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n"]}, "train/pick_clean_then_place_in_recep-Pan-None-StoveBurner-2/trial_T20190906_215744_388781": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a clean pan on the electric cooker.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: pick_clean_then_place_in_recep-Pan-None-StoveBurner\n(:goal\n    (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n        )\n    )\n)\n", "\n;; PDDL guess 2 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: pick_clean_then_place_in_recep-Pan-None-StoveBurner\n(:goal\n    (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n        )\n    )\n)\n", "\n;; PDDL guess 3 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: pick_clean_then_place_in_recep-Pan-None-StoveBurner\n(:goal\n    (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n        )\n    )\n)\n", "\n;; PDDL guess 4 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: pick_clean_then_place_in_recep-Pan-None-StoveBurner\n(:goal\n    (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n        )\n    )\n)\n"]}, "train/pick_clean_then_place_in_recep-Cloth-None-BathtubBasin-419/trial_T20190909_014042_055607": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a rinsed towel inside a tub.\n;; PDDL guess 1 for 'place a rinsed towel inside a tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed towel inside a tub.\n;; PDDL guess 1 for 'place a rinsed towel inside a tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed towel inside a tub.\n;; PDDL guess 1 for 'place a rinsed towel inside a tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed towel inside a tub.\n;; PDDL guess 1 for 'place a rinsed towel inside a tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed towel inside a tub.\n;; PDDL guess 1 for 'place a rinsed towel inside a tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed towel inside a tub.\n;; PDDL guess 1 for 'place a rinsed towel inside a tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed towel inside a tub.\n;; PDDL guess 1 for 'place a rinsed towel inside a tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed towel inside a tub.\n;; PDDL guess 1 for 'place a rinsed towel inside a tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed towel inside a tub.\n;; PDDL guess 1 for 'place a rinsed towel inside a tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed towel inside a tub.\n;; PDDL guess 1 for 'place a rinsed towel inside a tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a rinsed towel inside a tub.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"place a rinsed towel inside a tub.\"\n;; Official goal name: pick_and_place_simple-Cloth-None-BathtubBasinType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n", "\n;; PDDL guess 2 for \"place a rinsed towel inside a tub.\"\n;; Official goal name: pick_and_place_simple-LaundryHamperType-None-BathtubBasinType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LaundryHamperType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"place a rinsed towel inside a tub.\"\n;; Official goal name: pick_and_place_simple-BathTowelType-None-BathtubBasinType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BathTowelType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"place a rinsed towel inside a tub.\"\n;; Official goal name: pick_and_place_simple-HandTowelType-None-BathtubBasinType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o HandTowelType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n"]}, "train/pick_clean_then_place_in_recep-Lettuce-None-SideTable-21/trial_T20190907_101234_922599": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a cleaned head of lettuce on a small side table.\n;; PDDL guess 1 for 'place a cleaned head of lettuce on a small side table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cleaned head of lettuce on a small side table.\n;; PDDL guess 1 for 'place a cleaned head of lettuce on a small side table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cleaned head of lettuce on a small side table.\n;; PDDL guess 1 for 'place a cleaned head of lettuce on a small side table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cleaned head of lettuce on a small side table.\n;; PDDL guess 1 for 'place a cleaned head of lettuce on a small side table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cleaned head of lettuce on a small side table.\n;; PDDL guess 1 for 'place a cleaned head of lettuce on a small side table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cleaned head of lettuce on a small side table.\n;; PDDL guess 1 for 'place a cleaned head of lettuce on a small side table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cleaned head of lettuce on a small side table.\n;; PDDL guess 1 for 'place a cleaned head of lettuce on a small side table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cleaned head of lettuce on a small side table.\n;; PDDL guess 1 for 'place a cleaned head of lettuce on a small side table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cleaned head of lettuce on a small side table.\n;; PDDL guess 1 for 'place a cleaned head of lettuce on a small side table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cleaned head of lettuce on a small side table.\n;; PDDL guess 1 for 'place a cleaned head of lettuce on a small side table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a cleaned head of lettuce on a small side table.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"place a cleaned head of lettuce on a small side table.\"\n;; Official goal name: pick_clean_then_place_in_recep-Lettuce-None-SideTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n", "\n;; PDDL guess 2 for \"place a cleaned head of lettuce on a small side table.\"\n;; Official goal name: pick_clean_then_place_in_recep-Leek-None-SideTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LeekType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n", "\n;; PDDL guess 3 for \"place a cleaned head of lettuce on a small side table.\"\n;; Official goal name: pick_clean_then_place_in_recep-Cabbage-None-SideTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CabbageType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n", "\n;; PDDL guess 4 for \"place a cleaned head of lettuce on a small side table.\"\n;; Official goal name: pick_clean_then_place_in_recep-Potato-None-SideTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n"]}, "train/pick_clean_then_place_in_recep-SoapBar-None-Cabinet-418/trial_T20190907_035143_529621": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place wet soap in a cabinet.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"place wet soap in a cabinet.\"\n;; Official goal name: pick_clean_then_place_in_recep-SoapBar-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for \"place wet soap in a cabinet.\"\n;; Official goal name: pick_clean_then_place_in_recep-SoapBar-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"place wet soap in a cabinet.\"\n;; Official goal name: pick_clean_then_place_in_recep-SoapBar-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"place wet soap in a cabinet.\"\n;; Official goal name: pick_clean_then_place_in_recep-SoapBar-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n"]}, "train/pick_heat_then_place_in_recep-Mug-None-Cabinet-6/trial_T20190908_034437_632398": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.to take a mug from the microwave to put it away in the cabinet.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"to take a mug from the microwave to put it away in the cabinet.\"\n;; Official goal name: pick_from_recep_then_place-Mug-None-Cabinet\n(:goal\n        (exists (?r1 - receptacle) \n        (exists (?r2 - receptacle)\n        (exists (?o - object)\n            (and\n                (objectType ?o MugType)\n                (receptacleType ?r1 MicrowaveType)\n                (receptacleType ?r2 CabinetType)\n                (inReceptacle ?o ?r1)\n                (atLocation ?a - agent ?r1)\n                (atLocation ?a ?r2)\n            )\n        )\n    ))\n)\n", "\n;; PDDL guess 2 for \"to take a mug from the microwave to put it away in the cabinet.\"\n;; Official goal name: pick_from_recep_then_place-Mug-None-Cabinet\n(:goal\n        (exists (?r1 - receptacle) \n        (exists (?r2 - receptacle)\n        (exists (?o - object)\n            (and\n                (objectType ?o MugType)\n                (receptacleType ?r1 MicrowaveType)\n                (receptacleType ?r2 CabinetType)\n                (inReceptacle ?o ?r1)\n                (atLocation ?a - agent ?r1)\n                (atLocation ?a ?r2)\n            )\n        )\n    ))\n)\n", "\n;; PDDL guess 3 for \"to take a mug from the microwave to put it away in the cabinet.\"\n;; Official goal name: pick_from_recep_then_place-Mug-None-Cabinet\n(:goal\n        (exists (?r1 - receptacle) \n        (exists (?r2 - receptacle)\n        (exists (?o - object)\n            (and\n                (objectType ?o MugType)\n                (receptacleType ?r1 MicrowaveType)\n                (receptacleType ?r2 CabinetType)\n                (inReceptacle ?o ?r1)\n                (atLocation ?a - agent ?r1)\n                (atLocation ?a ?r2)\n            )\n        )\n    ))\n)\n", "\n;; PDDL guess 4 for \"to take a mug from the microwave to put it away in the cabinet.\"\n;; Official goal name: pick_from_recep_then_place-Mug-None-Cabinet\n(:goal\n        (exists (?r1 - receptacle) \n        (exists (?r2 - receptacle)\n        (exists (?o - object)\n            (and\n                (objectType ?o MugType)\n                (receptacleType ?r1 MicrowaveType)\n                (receptacleType ?r2 CabinetType)\n                (inReceptacle ?o ?r1)\n                (atLocation ?a - agent ?r1)\n                (atLocation ?a ?r2)\n            )\n        )\n    ))\n)\n"]}, "train/pick_heat_then_place_in_recep-Mug-None-CoffeeMachine-11/trial_T20190907_164503_292853": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a heated mug in the coffee maker.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n", "\n;; PDDL guess 2 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n", "\n;; PDDL guess 3 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n", "\n;; PDDL guess 4 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CoffeeMachineTypr)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n"]}, "train/pick_heat_then_place_in_recep-Apple-None-GarbageCan-12/trial_T20190908_172302_166350": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a warmed apple in the trash can.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"put a warmed apple in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-Apple-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for \"put a warmed apple in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-Apple-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"put a warmed apple in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-Apple-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"put a warmed apple in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-Apple-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n"]}, "train/pick_heat_then_place_in_recep-Mug-None-CoffeeMachine-7/trial_T20190908_123421_558588": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a heated coffee mug in a coffeemaker.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"place a heated coffee mug in a coffeemaker.\"\n;; Official goal name: pick_heat_then_place_in_recep-MugType-None-CoffeeMachineType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n            )\n)))\n", "\n;; PDDL guess 2 for \"place a heated coffee mug in a coffeemaker.\"\n;; Official goal name: pick_heat_then_place_in_recep-MugType-None-CoffeeMakerType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMakerType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n            )\n)))\n", "\n;; PDDL guess 3 for \"place a heated coffee mug in a coffeemaker.\"\n;; Official goal name: pick_heat_then_place_in_recep-LadleType-None-CoffeeMachineType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n            )\n)))\n", "\n;; PDDL guess 4 for \"place a heated coffee mug in a coffeemaker.\"\n;; Official goal name: pick_heat_then_place_in_recep-LadleType-None-CoffeeMakerType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r CoffeeMakerType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n            )\n)))\n"]}, "train/pick_heat_then_place_in_recep-Egg-None-Fridge-20/trial_T20190907_224507_776787": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.warm up an egg to put in the fridge.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"warm up an egg to put in the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-Egg-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for \"warm up an egg to put in the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-Egg-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"warm up an egg to put in the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-Egg-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"warm up an egg to put in the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-Egg-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n"]}, "train/pick_heat_then_place_in_recep-Egg-None-GarbageCan-5/trial_T20190906_190505_376018": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a heated egg in the trash can.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"put a heated egg in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-Egg-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for \"put a heated egg in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-Potato-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"put a heated egg in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-Apple-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"put a heated egg in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-Tomato-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n"]}, "train/pick_cool_then_place_in_recep-Mug-None-CoffeeMachine-20/trial_T20190906_161428_039508": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a chilled mug on the coffee maker.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"put a chilled mug on the coffee maker.\"\n;; Official goal name: pick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for \"put a chilled mug on the coffee maker.\"\n;; Official goal name: pick_cool_then_place_in_recep-CupType-None-CoffeeMachineType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"put a chilled mug on the coffee maker.\"\n;; Official goal name: pick_cool_then_place_in_recep-GlassbottleType-None-CoffeeMachineType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"put a chilled mug on the coffee maker.\"\n;; Official goal name: pick_cool_then_place_in_recep-SoapBottleType-None-CoffeeMachineType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBottleType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n"]}, "train/pick_cool_then_place_in_recep-WineBottle-None-GarbageCan-16/trial_T20190907_015045_510934": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.chill bottle in refrigerator , throw in trash can to front left of paper towels.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"chill bottle in refrigerator , throw in trash can to front left of paper towels.\"\n;; Official goal name: pick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for \"chill bottle in refrigerator , throw in trash can to front left of paper towels.\"\n;; Official goal name: pick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"chill bottle in refrigerator , throw in trash can to front left of paper towels.\"\n;; Official goal name: pick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"chill bottle in refrigerator , throw in trash can to front left of paper towels.\"\n;; Official goal name: pick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n"]}, "train/pick_cool_then_place_in_recep-Mug-None-CoffeeMachine-20/trial_T20190906_161453_754806": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a chilled mug in a coffee maker.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"place a chilled mug in a coffee maker.\"\n;; Official goal name: pick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for \"place a chilled mug in a coffee maker.\"\n;; Official goal name: pick_cool_then_place_in_recep-Teacup-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TeacupType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"place a chilled mug in a coffee maker.\"\n;; Official goal name: pick_cool_then_place_in_recep-CoffeeCup-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CoffeeCupType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"place a chilled mug in a coffee maker.\"\n;; Official goal name: pick_cool_then_place_in_recep-TravelMug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TravelMugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n"]}, "train/pick_cool_then_place_in_recep-Pot-None-DiningTable-23/trial_T20190909_061357_391676": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.chill a pan in the fridge and put it on the counter.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Official goal name: pick_cool_then_place_in_recep-Pot-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for 'chill a pan in the fridge and put it on the counter.'\n;; Official goal name: pick_cool_then_place_in_recep-Pot-None-SideTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for 'chill a pan in the fridge and put it on the counter.'\n;; Official goal name: pick_cool_then_place_in_recep-Pot-None-CoffeeTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for 'chill a pan in the fridge and put it on the counter.'\n;; Official goal name: pick_cool_then_place_in_recep-Pot-None-Desk\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n"]}, "train/pick_cool_then_place_in_recep-Pot-None-Cabinet-1/trial_T20190908_184157_888194": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a cold pot in the cabinet.\n;; PDDL guess 1 for 'put a cold pot in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold pot in the cabinet.\n;; PDDL guess 1 for 'put a cold pot in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold pot in the cabinet.\n;; PDDL guess 1 for 'put a cold pot in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold pot in the cabinet.\n;; PDDL guess 1 for 'put a cold pot in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold pot in the cabinet.\n;; PDDL guess 1 for 'put a cold pot in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold pot in the cabinet.\n;; PDDL guess 1 for 'put a cold pot in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold pot in the cabinet.\n;; PDDL guess 1 for 'put a cold pot in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold pot in the cabinet.\n;; PDDL guess 1 for 'put a cold pot in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold pot in the cabinet.\n;; PDDL guess 1 for 'put a cold pot in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold pot in the cabinet.\n;; PDDL guess 1 for 'put a cold pot in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a cold pot in the cabinet.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'put a cold pot in the cabinet.'\n;; Official goal name: pick_and_place_cool_pot_in_recep-Pot-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for 'put a cold pot in the cabinet.'\n;; Official goal name: pick_and_place_cold_pot_in_recep-Pot-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for 'put a cold pot in the cabinet.'\n;; Official goal name: pick_and_place_chilled_pot_in_recep-Pot-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for 'put a cold pot in the cabinet.'\n;; Official goal name: pick_and_place_pot_in_recep-Pot-None-Cabinet-Cooled\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n"]}, "train/pick_cool_then_place_in_recep-Apple-None-Microwave-12/trial_T20190911_003046_688848": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a cold apple in the microwave.\n"}], "codex_output": ["\n;; PDDL guess 1 for \"put a cold apple in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-Apple-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for \"put a cold apple in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-Tomato-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for \"put a cold apple in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-Pear-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PearType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for \"put a cold apple in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-Orange-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o OrangeType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n"]}, "train/pick_cool_then_place_in_recep-Mug-None-CoffeeMachine-6/trial_T20190906_204029_896727": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.to place a chilled mug in the coffee maker.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Official goal name: pick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for 'to place a chilled mug in the coffee maker.'\n;; Official goal name: pick_cool_then_place_in_recep-CupType-None-CoffeeMachineType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for 'to place a chilled mug in the coffee maker.'\n;; Official goal name: pick_cool_then_place_in_recep-Mug-None-CoffeeMachine-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for 'to place a chilled mug in the coffee maker.'\n;; Official goal name: pick_cool_then_place_in_recep-CupType-None-CoffeeMachineType-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n"]}, "train/pick_cool_then_place_in_recep-Cup-None-SinkBasin-12/trial_T20190906_180434_894600": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put the chilled glass in the sink.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Official goal name: pick_and_place_cool-Cup-None-Sink\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 2 for 'put the chilled glass in the sink.'\n;; Official goal name: pick_and_place_cool-Cup-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 3 for 'put the chilled glass in the sink.'\n;; Official goal name: pick_and_place_cool-Cup-None-Toilet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r ToiletType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n", "\n;; PDDL guess 4 for 'put the chilled glass in the sink.'\n;; Official goal name: pick_and_place_cool-Cup-None-BathtubBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n"]}, "train/look_at_obj_in_light-KeyChain-None-FloorLamp-205/trial_T20190909_114633_189769": {"codex_prompt": [{"role": "system", "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object)  \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"}, {"role": "user", "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine a key chain by the dim natural light of a living room.\n"}], "codex_output": ["\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n", "\n;; PDDL guess 2 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-Lamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot LampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n", "\n;; PDDL guess 3 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLampType\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n", "\n;; PDDL guess 4 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-LampType\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot LampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n"]}}