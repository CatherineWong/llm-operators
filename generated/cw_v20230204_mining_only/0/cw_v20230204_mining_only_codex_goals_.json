{
    "train_3": {
        "codex_prompt": "\n;; Natural language goals and PDDL goals\n\n\n        (define (domain movie-dom)\n            (:predicates\n        (movie-rewound)\n        (counter-at-two-hours)\n        (counter-at-zero)\n        (have-chips)\n        (have-dip)\n        (have-pop)\n        (have-cheese)\n        (have-crackers)\n    )\n            (:types\n        chips dip pop cheese crackers - object\n        chips5 chips4 chips3 chips2 chips1 - chips\n        dip5 dip4 dip3 dip2 dip1 - dip\n        pop5 pop4 pop3 pop2 pop1 - pop\n        cheese5 cheese4 cheese3 cheese2 cheese1 - cheese\n        crackers5 crackers4 crackers3 crackers2 crackers1 - crackers)\n                    \n\n;; Goal: \nrewind the movie and eat chips with dip, cheese and crakers, and a soda\n\n;; PDDL Goal: \n(:goal\n        (and (movie-rewound)\n            (counter-at-zero)\n            (have-chips)\n            (have-dip)\n            (have-pop)\n            (have-cheese)\n            (have-crackers))\n    )\n\n<END>\n\n        (define (domain Depot)\n            (:predicates\n        (at ?x - locatable ?y - place)\n        (on ?x - crate ?y - surface)\n        (in ?x - crate ?y - truck)\n        (lifting ?x - hoist ?y - crate)\n        (available ?x - hoist)\n        (clear ?x - surface)\n    )\n            (:types\n        place locatable - object\n        depot distributor - place\n        truck hoist surface - locatable\n        pallet crate - surface\n        depot0 - Depot\n        distributor0 distributor1 - Distributor\n        truck0 truck1 - Truck\n        pallet0 pallet1 pallet2 - Pallet\n        crate0 crate1 - Crate\n        hoist0 hoist1 hoist2 - Hoist)\n                    \n\n;; Goal: \nplace the first crate on the third pallet and the second crate on the second pallet\n\n;; PDDL Goal: \n(:goal\n        (and\n            (on crate0 pallet2)\n            (on crate1 pallet1)\n        )\n    )\n\n<END>\n\n        (define (domain travel)\n            (:predicates\n        (road ?from ?to)\n        (at ?thing ?place)\n        (driving ?p ?v)\n        (bridge ?from ?to)\n        (mobile ?thing)\n        (person ?p)\n        (vehicle ?v)\n    )\n            (:types\n        a b c d e f g jack bulldozer)\n                    \n\n;; Goal: \nthe bulldozer is at location g and the jack is at location a\n\n;; PDDL Goal: \n(:goal\n        (and (at bulldozer g) (at jack a))\n    )\n\n<END>\n\n        (define (domain crafting-world-v20230106)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)  \n   (tile-down ?t1 - tile ?t2 - tile)  \n   (tile-left ?t1 - tile ?t2 - tile)  \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n\n;; Goal: \nMine wool from the map.\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n        (define (domain crafting-world-v20230106)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)  \n   (tile-down ?t1 - tile ?t2 - tile)  \n   (tile-left ?t1 - tile ?t2 - tile)  \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n\n;; Goal: \nMine iron ore from the map.\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n        (define (domain crafting-world-v20230106)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)  \n   (tile-down ?t1 - tile ?t2 - tile)  \n   (tile-left ?t1 - tile ?t2 - tile)  \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n\n;; Goal: \nMine potato from the map.",
        "codex_output": [
            "\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))\n"
        ]
    },
    "train_4": {
        "codex_prompt": "\n;; Natural language goals and PDDL goals\n\n\n        (define (domain movie-dom)\n            (:predicates\n        (movie-rewound)\n        (counter-at-two-hours)\n        (counter-at-zero)\n        (have-chips)\n        (have-dip)\n        (have-pop)\n        (have-cheese)\n        (have-crackers)\n    )\n            (:types\n        chips dip pop cheese crackers - object\n        chips5 chips4 chips3 chips2 chips1 - chips\n        dip5 dip4 dip3 dip2 dip1 - dip\n        pop5 pop4 pop3 pop2 pop1 - pop\n        cheese5 cheese4 cheese3 cheese2 cheese1 - cheese\n        crackers5 crackers4 crackers3 crackers2 crackers1 - crackers)\n                    \n\n;; Goal: \nrewind the movie and eat chips with dip, cheese and crakers, and a soda\n\n;; PDDL Goal: \n(:goal\n        (and (movie-rewound)\n            (counter-at-zero)\n            (have-chips)\n            (have-dip)\n            (have-pop)\n            (have-cheese)\n            (have-crackers))\n    )\n\n<END>\n\n        (define (domain Depot)\n            (:predicates\n        (at ?x - locatable ?y - place)\n        (on ?x - crate ?y - surface)\n        (in ?x - crate ?y - truck)\n        (lifting ?x - hoist ?y - crate)\n        (available ?x - hoist)\n        (clear ?x - surface)\n    )\n            (:types\n        place locatable - object\n        depot distributor - place\n        truck hoist surface - locatable\n        pallet crate - surface\n        depot0 - Depot\n        distributor0 distributor1 - Distributor\n        truck0 truck1 - Truck\n        pallet0 pallet1 pallet2 - Pallet\n        crate0 crate1 - Crate\n        hoist0 hoist1 hoist2 - Hoist)\n                    \n\n;; Goal: \nplace the first crate on the third pallet and the second crate on the second pallet\n\n;; PDDL Goal: \n(:goal\n        (and\n            (on crate0 pallet2)\n            (on crate1 pallet1)\n        )\n    )\n\n<END>\n\n        (define (domain travel)\n            (:predicates\n        (road ?from ?to)\n        (at ?thing ?place)\n        (driving ?p ?v)\n        (bridge ?from ?to)\n        (mobile ?thing)\n        (person ?p)\n        (vehicle ?v)\n    )\n            (:types\n        a b c d e f g jack bulldozer)\n                    \n\n;; Goal: \nthe bulldozer is at location g and the jack is at location a\n\n;; PDDL Goal: \n(:goal\n        (and (at bulldozer g) (at jack a))\n    )\n\n<END>\n\n        (define (domain crafting-world-v20230106)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)  \n   (tile-down ?t1 - tile ?t2 - tile)  \n   (tile-left ?t1 - tile ?t2 - tile)  \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n\n;; Goal: \nMine wool from the map.\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n        (define (domain crafting-world-v20230106)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)  \n   (tile-down ?t1 - tile ?t2 - tile)  \n   (tile-left ?t1 - tile ?t2 - tile)  \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n\n;; Goal: \nMine iron ore from the map.\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n        (define (domain crafting-world-v20230106)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)  \n   (tile-down ?t1 - tile ?t2 - tile)  \n   (tile-left ?t1 - tile ?t2 - tile)  \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n\n;; Goal: \nMine sugar cane from the map.",
        "codex_output": [
            "\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))\n"
        ]
    },
    "train_5": {
        "codex_prompt": "\n;; Natural language goals and PDDL goals\n\n\n        (define (domain movie-dom)\n            (:predicates\n        (movie-rewound)\n        (counter-at-two-hours)\n        (counter-at-zero)\n        (have-chips)\n        (have-dip)\n        (have-pop)\n        (have-cheese)\n        (have-crackers)\n    )\n            (:types\n        chips dip pop cheese crackers - object\n        chips5 chips4 chips3 chips2 chips1 - chips\n        dip5 dip4 dip3 dip2 dip1 - dip\n        pop5 pop4 pop3 pop2 pop1 - pop\n        cheese5 cheese4 cheese3 cheese2 cheese1 - cheese\n        crackers5 crackers4 crackers3 crackers2 crackers1 - crackers)\n                    \n\n;; Goal: \nrewind the movie and eat chips with dip, cheese and crakers, and a soda\n\n;; PDDL Goal: \n(:goal\n        (and (movie-rewound)\n            (counter-at-zero)\n            (have-chips)\n            (have-dip)\n            (have-pop)\n            (have-cheese)\n            (have-crackers))\n    )\n\n<END>\n\n        (define (domain Depot)\n            (:predicates\n        (at ?x - locatable ?y - place)\n        (on ?x - crate ?y - surface)\n        (in ?x - crate ?y - truck)\n        (lifting ?x - hoist ?y - crate)\n        (available ?x - hoist)\n        (clear ?x - surface)\n    )\n            (:types\n        place locatable - object\n        depot distributor - place\n        truck hoist surface - locatable\n        pallet crate - surface\n        depot0 - Depot\n        distributor0 distributor1 - Distributor\n        truck0 truck1 - Truck\n        pallet0 pallet1 pallet2 - Pallet\n        crate0 crate1 - Crate\n        hoist0 hoist1 hoist2 - Hoist)\n                    \n\n;; Goal: \nplace the first crate on the third pallet and the second crate on the second pallet\n\n;; PDDL Goal: \n(:goal\n        (and\n            (on crate0 pallet2)\n            (on crate1 pallet1)\n        )\n    )\n\n<END>\n\n        (define (domain travel)\n            (:predicates\n        (road ?from ?to)\n        (at ?thing ?place)\n        (driving ?p ?v)\n        (bridge ?from ?to)\n        (mobile ?thing)\n        (person ?p)\n        (vehicle ?v)\n    )\n            (:types\n        a b c d e f g jack bulldozer)\n                    \n\n;; Goal: \nthe bulldozer is at location g and the jack is at location a\n\n;; PDDL Goal: \n(:goal\n        (and (at bulldozer g) (at jack a))\n    )\n\n<END>\n\n        (define (domain crafting-world-v20230106)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)  \n   (tile-down ?t1 - tile ?t2 - tile)  \n   (tile-left ?t1 - tile ?t2 - tile)  \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n\n;; Goal: \nMine wool from the map.\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n        (define (domain crafting-world-v20230106)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)  \n   (tile-down ?t1 - tile ?t2 - tile)  \n   (tile-left ?t1 - tile ?t2 - tile)  \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n\n;; Goal: \nMine iron ore from the map.\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n        (define (domain crafting-world-v20230106)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)  \n   (tile-down ?t1 - tile ?t2 - tile)  \n   (tile-left ?t1 - tile ?t2 - tile)  \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n\n;; Goal: \nMine potato from the map.",
        "codex_output": [
            "\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Potato)\n ))\n"
        ]
    },
    "train_6": {
        "codex_prompt": "\n;; Natural language goals and PDDL goals\n\n\n        (define (domain movie-dom)\n            (:predicates\n        (movie-rewound)\n        (counter-at-two-hours)\n        (counter-at-zero)\n        (have-chips)\n        (have-dip)\n        (have-pop)\n        (have-cheese)\n        (have-crackers)\n    )\n            (:types\n        chips dip pop cheese crackers - object\n        chips5 chips4 chips3 chips2 chips1 - chips\n        dip5 dip4 dip3 dip2 dip1 - dip\n        pop5 pop4 pop3 pop2 pop1 - pop\n        cheese5 cheese4 cheese3 cheese2 cheese1 - cheese\n        crackers5 crackers4 crackers3 crackers2 crackers1 - crackers)\n                    \n\n;; Goal: \nrewind the movie and eat chips with dip, cheese and crakers, and a soda\n\n;; PDDL Goal: \n(:goal\n        (and (movie-rewound)\n            (counter-at-zero)\n            (have-chips)\n            (have-dip)\n            (have-pop)\n            (have-cheese)\n            (have-crackers))\n    )\n\n<END>\n\n        (define (domain Depot)\n            (:predicates\n        (at ?x - locatable ?y - place)\n        (on ?x - crate ?y - surface)\n        (in ?x - crate ?y - truck)\n        (lifting ?x - hoist ?y - crate)\n        (available ?x - hoist)\n        (clear ?x - surface)\n    )\n            (:types\n        place locatable - object\n        depot distributor - place\n        truck hoist surface - locatable\n        pallet crate - surface\n        depot0 - Depot\n        distributor0 distributor1 - Distributor\n        truck0 truck1 - Truck\n        pallet0 pallet1 pallet2 - Pallet\n        crate0 crate1 - Crate\n        hoist0 hoist1 hoist2 - Hoist)\n                    \n\n;; Goal: \nplace the first crate on the third pallet and the second crate on the second pallet\n\n;; PDDL Goal: \n(:goal\n        (and\n            (on crate0 pallet2)\n            (on crate1 pallet1)\n        )\n    )\n\n<END>\n\n        (define (domain travel)\n            (:predicates\n        (road ?from ?to)\n        (at ?thing ?place)\n        (driving ?p ?v)\n        (bridge ?from ?to)\n        (mobile ?thing)\n        (person ?p)\n        (vehicle ?v)\n    )\n            (:types\n        a b c d e f g jack bulldozer)\n                    \n\n;; Goal: \nthe bulldozer is at location g and the jack is at location a\n\n;; PDDL Goal: \n(:goal\n        (and (at bulldozer g) (at jack a))\n    )\n\n<END>\n\n        (define (domain crafting-world-v20230106)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)  \n   (tile-down ?t1 - tile ?t2 - tile)  \n   (tile-left ?t1 - tile ?t2 - tile)  \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n\n;; Goal: \nMine wool from the map.\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n        (define (domain crafting-world-v20230106)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)  \n   (tile-down ?t1 - tile ?t2 - tile)  \n   (tile-left ?t1 - tile ?t2 - tile)  \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n\n;; Goal: \nMine iron ore from the map.\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n        (define (domain crafting-world-v20230106)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)  \n   (tile-down ?t1 - tile ?t2 - tile)  \n   (tile-left ?t1 - tile ?t2 - tile)  \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n\n;; Goal: \nMine sugar cane from the map.",
        "codex_output": [
            "\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Sugarcane)\n ))\n"
        ]
    },
    "train_7": {
        "codex_prompt": "\n;; Natural language goals and PDDL goals\n\n\n        (define (domain movie-dom)\n            (:predicates\n        (movie-rewound)\n        (counter-at-two-hours)\n        (counter-at-zero)\n        (have-chips)\n        (have-dip)\n        (have-pop)\n        (have-cheese)\n        (have-crackers)\n    )\n            (:types\n        chips dip pop cheese crackers - object\n        chips5 chips4 chips3 chips2 chips1 - chips\n        dip5 dip4 dip3 dip2 dip1 - dip\n        pop5 pop4 pop3 pop2 pop1 - pop\n        cheese5 cheese4 cheese3 cheese2 cheese1 - cheese\n        crackers5 crackers4 crackers3 crackers2 crackers1 - crackers)\n                    \n\n;; Goal: \nrewind the movie and eat chips with dip, cheese and crakers, and a soda\n\n;; PDDL Goal: \n(:goal\n        (and (movie-rewound)\n            (counter-at-zero)\n            (have-chips)\n            (have-dip)\n            (have-pop)\n            (have-cheese)\n            (have-crackers))\n    )\n\n<END>\n\n        (define (domain Depot)\n            (:predicates\n        (at ?x - locatable ?y - place)\n        (on ?x - crate ?y - surface)\n        (in ?x - crate ?y - truck)\n        (lifting ?x - hoist ?y - crate)\n        (available ?x - hoist)\n        (clear ?x - surface)\n    )\n            (:types\n        place locatable - object\n        depot distributor - place\n        truck hoist surface - locatable\n        pallet crate - surface\n        depot0 - Depot\n        distributor0 distributor1 - Distributor\n        truck0 truck1 - Truck\n        pallet0 pallet1 pallet2 - Pallet\n        crate0 crate1 - Crate\n        hoist0 hoist1 hoist2 - Hoist)\n                    \n\n;; Goal: \nplace the first crate on the third pallet and the second crate on the second pallet\n\n;; PDDL Goal: \n(:goal\n        (and\n            (on crate0 pallet2)\n            (on crate1 pallet1)\n        )\n    )\n\n<END>\n\n        (define (domain travel)\n            (:predicates\n        (road ?from ?to)\n        (at ?thing ?place)\n        (driving ?p ?v)\n        (bridge ?from ?to)\n        (mobile ?thing)\n        (person ?p)\n        (vehicle ?v)\n    )\n            (:types\n        a b c d e f g jack bulldozer)\n                    \n\n;; Goal: \nthe bulldozer is at location g and the jack is at location a\n\n;; PDDL Goal: \n(:goal\n        (and (at bulldozer g) (at jack a))\n    )\n\n<END>\n\n        (define (domain crafting-world-v20230106)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)  \n   (tile-down ?t1 - tile ?t2 - tile)  \n   (tile-left ?t1 - tile ?t2 - tile)  \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n\n;; Goal: \nMine wool from the map.\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n        (define (domain crafting-world-v20230106)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)  \n   (tile-down ?t1 - tile ?t2 - tile)  \n   (tile-left ?t1 - tile ?t2 - tile)  \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n\n;; Goal: \nMine iron ore from the map.\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n        (define (domain crafting-world-v20230106)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)  \n   (tile-down ?t1 - tile ?t2 - tile)  \n   (tile-left ?t1 - tile ?t2 - tile)  \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n\n;; Goal: \nMine wool from the map.",
        "codex_output": [
            "\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n"
        ]
    },
    "train_8": {
        "codex_prompt": "\n;; Natural language goals and PDDL goals\n\n\n        (define (domain movie-dom)\n            (:predicates\n        (movie-rewound)\n        (counter-at-two-hours)\n        (counter-at-zero)\n        (have-chips)\n        (have-dip)\n        (have-pop)\n        (have-cheese)\n        (have-crackers)\n    )\n            (:types\n        chips dip pop cheese crackers - object\n        chips5 chips4 chips3 chips2 chips1 - chips\n        dip5 dip4 dip3 dip2 dip1 - dip\n        pop5 pop4 pop3 pop2 pop1 - pop\n        cheese5 cheese4 cheese3 cheese2 cheese1 - cheese\n        crackers5 crackers4 crackers3 crackers2 crackers1 - crackers)\n                    \n\n;; Goal: \nrewind the movie and eat chips with dip, cheese and crakers, and a soda\n\n;; PDDL Goal: \n(:goal\n        (and (movie-rewound)\n            (counter-at-zero)\n            (have-chips)\n            (have-dip)\n            (have-pop)\n            (have-cheese)\n            (have-crackers))\n    )\n\n<END>\n\n        (define (domain Depot)\n            (:predicates\n        (at ?x - locatable ?y - place)\n        (on ?x - crate ?y - surface)\n        (in ?x - crate ?y - truck)\n        (lifting ?x - hoist ?y - crate)\n        (available ?x - hoist)\n        (clear ?x - surface)\n    )\n            (:types\n        place locatable - object\n        depot distributor - place\n        truck hoist surface - locatable\n        pallet crate - surface\n        depot0 - Depot\n        distributor0 distributor1 - Distributor\n        truck0 truck1 - Truck\n        pallet0 pallet1 pallet2 - Pallet\n        crate0 crate1 - Crate\n        hoist0 hoist1 hoist2 - Hoist)\n                    \n\n;; Goal: \nplace the first crate on the third pallet and the second crate on the second pallet\n\n;; PDDL Goal: \n(:goal\n        (and\n            (on crate0 pallet2)\n            (on crate1 pallet1)\n        )\n    )\n\n<END>\n\n        (define (domain travel)\n            (:predicates\n        (road ?from ?to)\n        (at ?thing ?place)\n        (driving ?p ?v)\n        (bridge ?from ?to)\n        (mobile ?thing)\n        (person ?p)\n        (vehicle ?v)\n    )\n            (:types\n        a b c d e f g jack bulldozer)\n                    \n\n;; Goal: \nthe bulldozer is at location g and the jack is at location a\n\n;; PDDL Goal: \n(:goal\n        (and (at bulldozer g) (at jack a))\n    )\n\n<END>\n\n        (define (domain crafting-world-v20230106)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)  \n   (tile-down ?t1 - tile ?t2 - tile)  \n   (tile-left ?t1 - tile ?t2 - tile)  \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n\n;; Goal: \nMine wool from the map.\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n        (define (domain crafting-world-v20230106)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)  \n   (tile-down ?t1 - tile ?t2 - tile)  \n   (tile-left ?t1 - tile ?t2 - tile)  \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n\n;; Goal: \nMine iron ore from the map.\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n        (define (domain crafting-world-v20230106)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)  \n   (tile-down ?t1 - tile ?t2 - tile)  \n   (tile-left ?t1 - tile ?t2 - tile)  \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n\n;; Goal: \nMine sugar cane from the map.",
        "codex_output": [
            "\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 SugarCane)\n ))\n"
        ]
    },
    "train_9": {
        "codex_prompt": "\n;; Natural language goals and PDDL goals\n\n\n        (define (domain movie-dom)\n            (:predicates\n        (movie-rewound)\n        (counter-at-two-hours)\n        (counter-at-zero)\n        (have-chips)\n        (have-dip)\n        (have-pop)\n        (have-cheese)\n        (have-crackers)\n    )\n            (:types\n        chips dip pop cheese crackers - object\n        chips5 chips4 chips3 chips2 chips1 - chips\n        dip5 dip4 dip3 dip2 dip1 - dip\n        pop5 pop4 pop3 pop2 pop1 - pop\n        cheese5 cheese4 cheese3 cheese2 cheese1 - cheese\n        crackers5 crackers4 crackers3 crackers2 crackers1 - crackers)\n                    \n\n;; Goal: \nrewind the movie and eat chips with dip, cheese and crakers, and a soda\n\n;; PDDL Goal: \n(:goal\n        (and (movie-rewound)\n            (counter-at-zero)\n            (have-chips)\n            (have-dip)\n            (have-pop)\n            (have-cheese)\n            (have-crackers))\n    )\n\n<END>\n\n        (define (domain Depot)\n            (:predicates\n        (at ?x - locatable ?y - place)\n        (on ?x - crate ?y - surface)\n        (in ?x - crate ?y - truck)\n        (lifting ?x - hoist ?y - crate)\n        (available ?x - hoist)\n        (clear ?x - surface)\n    )\n            (:types\n        place locatable - object\n        depot distributor - place\n        truck hoist surface - locatable\n        pallet crate - surface\n        depot0 - Depot\n        distributor0 distributor1 - Distributor\n        truck0 truck1 - Truck\n        pallet0 pallet1 pallet2 - Pallet\n        crate0 crate1 - Crate\n        hoist0 hoist1 hoist2 - Hoist)\n                    \n\n;; Goal: \nplace the first crate on the third pallet and the second crate on the second pallet\n\n;; PDDL Goal: \n(:goal\n        (and\n            (on crate0 pallet2)\n            (on crate1 pallet1)\n        )\n    )\n\n<END>\n\n        (define (domain travel)\n            (:predicates\n        (road ?from ?to)\n        (at ?thing ?place)\n        (driving ?p ?v)\n        (bridge ?from ?to)\n        (mobile ?thing)\n        (person ?p)\n        (vehicle ?v)\n    )\n            (:types\n        a b c d e f g jack bulldozer)\n                    \n\n;; Goal: \nthe bulldozer is at location g and the jack is at location a\n\n;; PDDL Goal: \n(:goal\n        (and (at bulldozer g) (at jack a))\n    )\n\n<END>\n\n        (define (domain crafting-world-v20230106)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)  \n   (tile-down ?t1 - tile ?t2 - tile)  \n   (tile-left ?t1 - tile ?t2 - tile)  \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n\n;; Goal: \nMine wool from the map.\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 Wool)\n ))\n\n<END>\n\n        (define (domain crafting-world-v20230106)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)  \n   (tile-down ?t1 - tile ?t2 - tile)  \n   (tile-left ?t1 - tile ?t2 - tile)  \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n\n;; Goal: \nMine iron ore from the map.\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 IronOre)\n ))\n\n<END>\n\n        (define (domain crafting-world-v20230106)\n            (:predicates\n   (tile-up ?t1 - tile ?t2 - tile)  \n   (tile-down ?t1 - tile ?t2 - tile)  \n   (tile-left ?t1 - tile ?t2 - tile)  \n   (tile-right ?t1 - tile ?t2 - tile)  \n\n   (agent-at ?t - tile)\n   (object-at ?x - object ?t - tile)\n   (inventory-holding ?i - inventory ?x - object)\n   (inventory-empty ?i - inventory)\n\n   (object-of-type ?x - object ?ot - object-type)\n )\n            (:types\n   tile\n   object\n   inventory\n   object-type\n   o1 - object\n   o2 - object\n   o3 - object\n   o4 - object\n   o5 - object\n   o6 - object\n   o7 - object\n   o8 - object\n   o9 - object\n   o10 - object\n   o11 - object\n   o12 - object\n   o13 - object\n   o14 - object\n   o15 - object\n   i1 - inventory\n   o16 - object\n   i2 - inventory\n   o17 - object\n   i3 - inventory\n   t1 - tile\n   t2 - tile\n   t3 - tile\n   t4 - tile\n   t5 - tile\n   t6 - tile\n   t7 - tile\n   t8 - tile\n   t9 - tile\n   t10 - tile\n   t11 - tile\n   t12 - tile\n   t13 - tile\n   t14 - tile\n   t15 - tile)\n            \n                    \n\n;; Goal: \nMine gold ore from the map.",
        "codex_output": [
            "\n\n;; PDDL Goal: \n(:goal (and\n   (inventory-holding i3 o17)\n   (object-of-type o17 GoldOre)\n ))\n"
        ]
    }
}