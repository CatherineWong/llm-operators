{"mine-wood_1": "(:action mine-wood_1\n        :parameters (?t - tile ?x - object ?toolinv - inventory ?tool - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x Tree)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Axe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Wood)\n\t\t)\n)", "mine-wood_2": "(:action mine-wood_2\n        :parameters (?t - tile ?x - object ?toolinv - inventory ?tool - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x Tree)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Axe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Wood)\n\t\t)\n)", "mine-wool1_0": "(:action mine-wool1_0\n        :parameters (?t - tile ?x - object ?toolinv - inventory ?tool - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x Sheep)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Shears)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Wool)\n\t\t)\n)", "mine-wool1_1": "(:action mine-wool1_1\n        :parameters (?t - tile ?x - object ?toolinv - inventory ?tool - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x Sheep)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Shears)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Wool)\n\t\t)\n)", "mine-wool1_2": "(:action mine-wool1_2\n        :parameters (?t - tile ?x - object ?toolinv - inventory ?tool - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x Sheep)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Shears)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Wool)\n\t\t)\n)", "move-right_0": "(:action move-right_0\n        :parameters (?t1 - tile ?t2 - tile)\n\n        :precondition (and \n\t\t(agent-at ?t1)\n\t\t(tile-right ?t1 ?t2)\n\t\t)\n        :effect (and \n\t\t(agent-at ?t2)\n\t\t(not (agent-at ?t1))\n\t\t)\n)", "move-right_2": "(:action move-right_2\n        :parameters (?t1 - tile ?t2 - tile)\n\n        :precondition (and \n\t\t(agent-at ?t1)\n\t\t(tile-right ?t1 ?t2)\n\t\t)\n        :effect (and \n\t\t(agent-at ?t2)\n\t\t(not (agent-at ?t1))\n\t\t)\n)", "mine-potato_0": "(:action mine-potato_0\n        :parameters (?t - tile ?x - object ?toolinv - inventory ?tool - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x PotatoPlant)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Potato)\n\t\t)\n)", "mine-potato_1": "(:action mine-potato_1\n        :parameters (?t - tile ?x - object ?toolinv - inventory ?tool - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x PotatoPlant)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Potato)\n\t\t)\n)", "mine-potato_2": "(:action mine-potato_2\n        :parameters (?t - tile ?x - object ?toolinv - inventory ?tool - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x PotatoPlant)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Potato)\n\t\t)\n)", "mine-sugar-cane_0": "(:action mine-sugar-cane_0\n        :parameters (?t - tile ?x - object ?toolinv - inventory ?tool - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x SugarCanePlant)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Shears)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target SugarCane)\n\t\t)\n)", "mine-sugar-cane_1": "(:action mine-sugar-cane_1\n        :parameters (?t - tile ?x - object ?toolinv - inventory ?tool - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x SugarCanePlant)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Axe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target SugarCane)\n\t\t)\n)", "mine-sugar-cane_2": "(:action mine-sugar-cane_2\n        :parameters (?t - tile ?x - object ?toolinv - inventory ?tool - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?x ?t)\n\t\t(object-of-type ?x SugarCanePlant)\n\t\t(inventory-holding ?toolinv ?tool)\n\t\t(object-of-type ?tool Axe)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target SugarCane)\n\t\t)\n)"}