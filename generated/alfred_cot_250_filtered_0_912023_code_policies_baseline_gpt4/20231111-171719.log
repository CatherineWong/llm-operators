Experiment Parameters
================================================================================
Timestamp: 2023-11-11 17:17:19.935737
Command to replicate: python main.py --experiment_name alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4 --random_seed 0 --output_directory generated --train_iterations 1 --val_split valid_seen --pddl_domain_name alfred_linearized --dataset_name alfred_cot_250_filtered --dataset_fraction 1.0 --dataset_pddl_directory data/dataset/alfred_linearized_pddl --supervision_name supervision --restrict_goal_prefix_train ALL --restrict_goal_prefix_val ALL --goal_supervision_fraction 0.1 --initial_goal_supervision_prefix ALL --plan_supervision_fraction 0.1 --initial_plans_prefix ALL --llm_model gpt-4-1106-preview --initial_pddl_predicates  --initial_pddl_operators GotoLocation PickupObjectInReceptacle PickupObjectNotInReceptacle PutObjectInReceptacle --operator_propose_minimum_usage 2 --operator_use_cot 1 --goal_propose_include_codex_types  --codex_goal_temperature 1.0 --codex_operator_temperature 1.0 --codex_plan_temperature 1.0 --maximum_operator_arity 4 --n_goal_samples 4 --n_plan_samples 5 --n_operator_samples 3 --n_attempts_to_plan 1 --external_goal_sample_with_prompt  --external_goal_supervision data/dataset/alfred-goal-supervision_ --external_plan_supervision data/dataset/alfred-grate-break-fill-restart-supervision.json --external_operator_supervision data/dataset/alfred-grate-break-fill-restart-operator-supervision_ --external_operator_sample_with_prompt  --external_operator_names GrateObject BakeObject FillObject RestartObject --planner task_planner_fd --planner_timeout None --planner_minimum_n_operators 7 --planner_run_second_pass 1 --motionplan_search_type counter --operator_pseudocounts 0.05 --operator_pseudocounts_denominator 0.5 --operator_acceptance_threshold 0.5 --conservative_library_proposal  --checkpoint_every_n_problem_plans 2 --resume  --resume_from_iteration 0 --resume_from_problem_idx 0 --resume_from_last_scored_operators  --val_only  --llm_propose_task_predicates  --external_task_predicates_supervision None --llm_propose_code_policies  --external_code_policies_supervision data/dataset/alfred-code-policies-supervision_ --motion_plan_directly_on_goal  --verbose  --debug_export_failed_pddl None --debug_no_propose_plans_operators_goals  --debug_mock_propose_goals  --debug_mock_propose_plans  --debug_mock_propose_operators  --debug_skip_propose_operators_after -1 --debug_skip_propose_plans_after -1 --debug_skip_task_plans  --debug_mock_task_plans  --debug_mock_motion_plans  --debug_skip_motion_plans  --debug_start_problem_idx 0 --debug_skip_problems None --debug_ground_truth_operators  --debug_ground_truth_goals  --debug_stop_after_first_proposal  --debug_cw_skip_location_check  


Loaded PDDL file with operators
================================================================================
Domain: alfred_linearized
Filename: data/domains/alfred_linearized.pddl
Operators: 12
Ground truth operators: 
   GotoLocation
   OpenObject
   CloseObject
   PickupObjectInReceptacle
   PickupObjectNotInReceptacle
   PutObjectInReceptacle
   PutObjectInReceptacleObject
   CleanObject
   HeatObject
   CoolObject
   ToggleObject
   SliceObject
Initializing with operators: 
  GotoLocation
  PickupObjectInReceptacle
  PickupObjectNotInReceptacle
  PutObjectInReceptacle


load_alfred_filtered_planning_domain_problems: loaded alfred_cot_250_filtered from data/dataset/alfred-cot-250-filtered-NLgoals-operators.json
train : 223 / original 223 problems
valid_seen : 145 / original 145 problems
valid_unseen : 155 / original 155 problems
Restricting planning problems in train from goal prefix: ['ALL']
Restricting planning problems in val from goal prefix: ['ALL']
Loaded initial dataset: alfred_cot_250_filtered
================================================================================
Initial train problems: 223
Marking problems for goal supervision: fraction=0.1, prefix=['ALL']
Sampling problems for goal supervision: 
	 look_at_obj_in_light : 3
	 pick_cool_then_place_in_recep : 2
	 pick_and_place_simple : 3
	 pick_heat_then_place_in_recep : 3
	 pick_and_place_simple_slice : 1
	 pick_heat_then_place_in_recep_slice : 2
	 pick_clean_then_place_in_recep : 2
	 pick_cool_then_place_in_recep_slice : 2
Total goal supervision problems: 18
Marking problems for plan supervision: fraction=0.1, prefix=['ALL']
This is not implemented yet. (!!!)

Loaded PDDL supervision
================================================================================
Loaded additional PDDL supervision from the following domain files:
  data/domains/supervision_domains/movie_domain.pddl
  data/domains/supervision_domains/depot_domain.pddl
  data/domains/supervision_domains/travel_domain.pddl


Training started.
================================================================================

mock_code_policies_for_problems:: from generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_codex_code_policies.json
mock_code_policies_for_problems:: loaded a total of 223 code policies for 223 unsolved problems.
preprocess_task_predicates: preprocessing 223 unsolved problems.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Error, could not parse predicates list.
Found a total of 3527 distinct code skill definitions for 202 code skill names.
All code skill names: dict_keys(['PickupObject', 'PutObjectInReceptacle', 'ToggleObjectOn', 'LookAtObjectWithLight', 'CheckForToggledLamp', 'FindAndPositionTowel', 'ExamineTowel', 'CoolObject', 'ChillObject', 'PutObjectOnReceptacle', 'PutObject', 'CloseObject', 'ThrowInTrashCan', 'ThrowObjectInTrash', 'ThrowAwayObject', 'OpenObject', 'SliceObject', 'PickupObjectFromReceptacle', 'InspectObjectWithLight', 'EnsureLampIsOn', 'PickupMugToInspect', 'CheckIfObjectIsClean', 'TurnLampOn', 'HeatObject', 'PutObjectOnTable', 'ToggleObjectOff', 'PutObjectInReceptacleAndCook', 'PickUpCookedTomatoSlice', 'PutCookedTomatoSliceInRefrigerator', 'CleanObject', 'EnsureObjectIsClean', 'PlaceObjectOnReceptacle', 'EnsureLightIsOn', 'TransportObject', 'ExamineObject', 'FindAndApproachStatue', 'OpenReceptacle', 'CloseReceptacle', 'WaitForCookedEgg', 'EnsureKnifeIsClean', 'CoolAndSlicePotato', 'PutPotatoSliceInSink', 'WaitForTomatoToHeat', 'CleanObjectIfDirty', 'PickupObjectIfNotHolding', 'CoolObjectIfNotCold', 'PutObjectInMicrowave', 'CooldownObject', 'HeatObjectToMakeItHot', 'PickupSlicedObject', 'FindAndTurnOnLamp', 'PlaceObjectOnCounter', 'PlaceHeatedObjectOnReceptacle', 'SliceObjectIfNotSliced', 'HeatUpObject', 'PutObjectInReceptacleWithObject', 'WashObject', 'PickupCleanObject', 'PutObjectInReceptacleWithOtherObject', 'TakeOutAndHoldCleanObject', 'PutObjectInReceptacleWithAnotherObject', 'FindReceptacleWithFork', 'PutObjectInReceptacleWithFork', 'ToggleObjectOnWhileHoldingAnother', 'FindAndInteractWithLaptop', 'FindDimLightSource', 'PlacePotOnCountertop', 'CookSliceOfBread', 'SliceObjectMultipleTimes', 'PutObjectInSink', 'CleanObjectIfNeeded', 'CleanObjectInSink', 'WaitForObjectCooling', 'PickupObjectFromFridge', 'MicrowaveObject', 'ThrowObjectInGarbage', 'FindKeychain', 'TurnOffArtificialLights', 'ExamineKeychain', 'FindDimLightLocation', 'AdjustLight', 'GoToDimLightSource', 'DisposeObjectInTrash', 'CookObject', 'ToggleLampOn', 'PickupBowl', 'PlaceBowlUnderLamp', 'EnsureObjectVisibility', 'WarmObject', 'RetrieveObjectFromMicrowave', 'EnsureObjectIsCool', 'ExamineObjectInLight', 'PickupRemoteControl', 'ExamineRemoteInLight', 'EnsureMugIsClean', 'CleanMugIfNeeded', 'VerifyCookedAndSlicedPotato', 'EnsureCleanKnife', 'PickupKnifeIfNotYet', 'PlaceKnifeOnCountertopIfElsewhere', 'PickupTomato', 'SliceTomato', 'PlaceObjectInLight', 'HeatObjectInMicrowave', 'CoolObjectInFridge', 'PutObjectBackOnTable', 'LocateAndToggleOnLamp', 'TurnOnLamp', 'TurnOnLampBehindChair', 'CoolObjectToMakeItCold', 'CheckIfBreadIsHot', 'SliceBreadIfNotSliced', 'PickupBreadSlice', 'PlaceBreadSliceInTrashCan', 'CheckSliceBread', 'CoolSlicedBread', 'PutInTrashCan', 'CoolObjectInsideFridge', 'PlacePillowInLight', 'VisualInspection', 'EnsureObjectIsIlluminated', 'HoldObjectByLight', 'TurnOnObjectWhileHolding', 'RinseObject', 'WaitForCook', 'PlaceInCoffeemachine', 'OpenDrawer', 'CloseDrawer', 'CheckCleanStatusAndCleanPan', 'PutObjectOnStoveBurner', 'SimulateExamine', 'WashObjectAtSink', 'PlaceObjectInReceptacle', 'CoolObjectIfNeeded', 'OpenMicrowave', 'PutObjectOnCounter', 'DisposeObject', 'CoolObjectIfNotChilled', 'WaitForCooling', 'PutObjectInCoffeemachine', 'PutObjectNearCoffeemachine', 'TurnOnObject', 'TurnOnToggleableObject', 'PickupObjectAgain', 'PlaceOnCoffeeMaker', 'PutObjectOnCoffeemachine', 'FindAndPickupObjectOnReceptacle', 'FindAndPickupObject', 'LocateObjectInReceptacle', 'FindNearestReceptacle', 'PlaceObjectNearLamp', 'TurnOnLight', 'PlaceObjectOnCountertop', 'FindAndToggleOnLamp', 'PositionRobotToViewPillowUnderLamp', 'CheckForPillowUnderLamp', 'FindPillow', 'EnsureLampIsLit', 'LookAtPillowUnderLitLamp', 'PlacePillowUnderLamp', 'PutCleanObjectInReceptacle', 'DisposeOfObject', 'CheckAndCleanEgg', 'PutObjectOnDiningTable', 'TurnOnDeskLamp', 'ToggleTableLampOn', 'LocateAndPlaceAlarmClock', 'CoolSlicedTomato', 'PlaceInMicrowave', 'PlaceObjectBetweenObjectsOnReceptacle', 'PlaceObject', 'PlaceBetweenObjects', 'WaitForHeatedObject', 'FindToggleableLamp', 'CleanObjectAtSink', 'PlaceObjectOnSurface', 'EnsureObjectNotClean', 'WetObject', 'CheckCooked', 'PickupCookedEgg', 'PlaceInSink', 'CheckObjectTemperature', 'PutObjectInGarbage', 'SliceObjectOnReceptacle', 'CoolObjectInReceptacle', 'WaitForObjectToChill', 'ThrowObjectAway', 'CoolMugInFridge', 'RemoveMugFromFridge', 'PutCooledObjectOnReceptacle', 'PickupPen', 'ExaminePen', 'PutPenOnSmallTable', 'ExaminePenByLampLight', 'CheckIfCleanAndPickup', 'OpenDrawerAndPutFork', 'CheckIfSliceableAndSliceObject', 'PutObjectInFridge', 'PlaceCleanObject', 'EnsureObjectClean', 'SliceObjectWithTool', 'CleanSoapBar'])
Logging preprocessed code_policies: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_preprocessed_code_policies.csv

Attempting task and motion planning on all problems.
Evaluating [1/4] LLM proposed code policies.
[Counter] Loaded counter tree from pickle.
[Counter] Stored Goals: 266
motion_planner.attempt_motion_plan_for_problem: attempt 0 / 223 ID=train/look_at_obj_in_light-Cloth-None-DeskLamp-303/trial_T20190908_131610_591705 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [2/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 0 / 223 ID=train/look_at_obj_in_light-Cloth-None-DeskLamp-303/trial_T20190908_131610_591705 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [3/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 0 / 223 ID=train/look_at_obj_in_light-Cloth-None-DeskLamp-303/trial_T20190908_131610_591705 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [4/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 0 / 223 ID=train/look_at_obj_in_light-Cloth-None-DeskLamp-303/trial_T20190908_131610_591705 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
update_pddl_domain_and_problem::re-scored operators:
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333

Logging scored operators: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_motion_plans.json

Experiment Summary
================================================================================
Iteration: 0
Evaluated successful motion plans: 0 / 1 problems so far.
Overall successful motion plans: 0 / 223 problems.
Total problems: 223
Current operators: 223

Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 1 / 223 ID=train/pick_cool_then_place_in_recep-Mug-None-CoffeeMachine-20/trial_T20190906_161428_039508 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 3 operators in task plan.
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 1 / 223 ID=train/pick_cool_then_place_in_recep-Mug-None-CoffeeMachine-20/trial_T20190906_161428_039508 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 3 operators in task plan.
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 1 / 223 ID=train/pick_cool_then_place_in_recep-Mug-None-CoffeeMachine-20/trial_T20190906_161428_039508 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 3 operators in task plan.
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 1 / 223 ID=train/pick_cool_then_place_in_recep-Mug-None-CoffeeMachine-20/trial_T20190906_161428_039508 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 3 operators in task plan.
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 1 / 223 ID=train/pick_cool_then_place_in_recep-Mug-None-CoffeeMachine-20/trial_T20190906_161428_039508 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 3 operators in task plan.
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 2 / 223 ID=train/look_at_obj_in_light-TissueBox-None-FloorLamp-225/trial_T20190907_150815_536818 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 2 / 223 ID=train/look_at_obj_in_light-TissueBox-None-FloorLamp-225/trial_T20190907_150815_536818 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 2 / 223 ID=train/look_at_obj_in_light-TissueBox-None-FloorLamp-225/trial_T20190907_150815_536818 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 2 / 223 ID=train/look_at_obj_in_light-TissueBox-None-FloorLamp-225/trial_T20190907_150815_536818 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 2 / 223 ID=train/look_at_obj_in_light-TissueBox-None-FloorLamp-225/trial_T20190907_150815_536818 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333

Logging scored operators: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_motion_plans.json

Experiment Summary
================================================================================
Iteration: 0
Evaluated successful motion plans: 0 / 3 problems so far.
Overall successful motion plans: 0 / 223 problems.
Total problems: 223
Current operators: 223

Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 3 / 223 ID=train/pick_cool_then_place_in_recep-WineBottle-None-GarbageCan-16/trial_T20190907_015045_510934 AttemptIdx=0
Motion planning for: train/pick_cool_then_place_in_recep-WineBottle-None-GarbageCan-16/trial_T20190907_015045_510934
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o WineBottleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o WineBottleType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_162', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'waterbottle'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the bottle.\n    try:\n        action = PickupObject(args={\'object_id\': object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the bottle!")\n    except Exception as e:\n        print("Execution failure:", e)\n        return False\n\n    # Postconditions: holding the bottle.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'CoolObject_108', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'waterbottle', 'fridge'), 'body': '\n    # Preconditions: we should be holding the bottle.\n    if not env_state.holds(object_id):\n        print("Failure, not holding bottle.")\n        return False, env_state\n\n    # Low-level actions: open the refrigerator.\n    try:\n        action = OpenObject(args={\'object_id\': receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Refrigerator opened successfully!")\n    except Exception as e:\n        print("Execution failure:", e)\n        return False\n\n    # Low-level actions: put the bottle in the refrigerator.\n    try:\n        action = PutObject(args={\'object_id\': object_id, \'receptacle_object_id\': receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Bottle is now chilling in the refrigerator.")\n    except Exception as e:\n        print("Execution failure:", e)\n        return False\n\n    # Postconditions: the bottle is in the refrigerator.\n    final_env_state = perceive(env)\n    return (final_env_state.inReceptacle(object_id, receptacle_object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'CloseObject_2', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'fridge'), 'body': '\n    # Preconditions: the refrigerator is open.\n\n    # Low-level actions: close the refrigerator.\n    try:\n        action = CloseObject(args={\'object_id\': object_id})\n        success = act(env=env, action=action)\n        print("Refrigerator closed successfully!")\n    except Exception as e:\n        print("Execution failure:", e)\n        return False\n\n    # Postconditions: the refrigerator is closed.\n    final_env_state = perceive(env)\n    return not (final_env_state.opened(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'ThrowInTrashCan_0', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id', 'relative_position'), 'ground_arguments': ('env_state', 'env', 'glassbottle', 'garbagecan', 'front_left'), 'body': '\n    # Preconditions: the bottle is in the refrigerator, which is now closed.\n\n    # Intermediate actions: Open the refrigerator and retrieve the chilled bottle.\n    if not env_state.holds(object_id):\n        try:\n            # Open fridge to retrieve the bottle.\n            action = OpenObject(args={\'object_id\': "fridge"})\n            success = act(env=env, action=action)\n            if success:\n                # Pickup the bottle from fridge.\n                action = PickupObject(args={\'object_id\': object_id})\n                success = act(env=env, action=action)\n                if not success:\n                    print("Failure picking up the chilled bottle.")\n                    return False, env_state\n            else:\n                print("Failure opening refrigerator.")\n                return False, env_state\n        except Exception as e:\n            print("Execution failure during retrieval:", e)\n            return False, env_state\n\n    # Low-level actions: find the trash can near the paper towels and throw the bottle in it.\n    try:\n        # Assuming a FindReceptacleNearObject function gives us the correct id for trash can.\n        receptacle_object_id = FindReceptacleNearObject(env_state, \'garbagecan\', \'papertowelroll\', relative_position)\n        action = PutObject(args={\'object_id\': object_id, \'receptacle_object_id\': receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Bottle thrown in trash can successfully.")\n    except Exception as e:\n        print("Execution Failure:", e)\n        return False, env_state\n\n    # Postconditions: the bottle is in the trash can.\n    final_env_state = perceive(env)\n    return (final_env_state.inReceptacle(object_id, receptacle_object_id)), final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject winebottle)
(GotoLocation fridge)
(CoolObject winebottle)
(GotoLocation garbagecan)
(PutObject winebottle garbagecan)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['winebottle', 'garbagecan'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['winebottle'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['winebottle'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/4: PickupObject_162
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 2.300s
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 3 / 223 ID=train/pick_cool_then_place_in_recep-WineBottle-None-GarbageCan-16/trial_T20190907_015045_510934 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 3 / 223 ID=train/pick_cool_then_place_in_recep-WineBottle-None-GarbageCan-16/trial_T20190907_015045_510934 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 3 / 223 ID=train/pick_cool_then_place_in_recep-WineBottle-None-GarbageCan-16/trial_T20190907_015045_510934 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 3 / 223 ID=train/pick_cool_then_place_in_recep-WineBottle-None-GarbageCan-16/trial_T20190907_015045_510934 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 4 / 223 ID=train/pick_and_place_simple-Pencil-None-Shelf-310/trial_T20190908_023618_136375 AttemptIdx=0
Motion planning for: train/pick_and_place_simple-Pencil-None-Shelf-310/trial_T20190908_023618_136375
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PencilType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PencilType) 
                (receptacleType ?r ShelfType)
                (inReceptacle ?o ?r) 
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_988', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'pencil'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the object.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the pencil!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: holding the object.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_141', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'pencil', 'shelf'), 'body': '\n    # Preconditions: we should be holding the object.\n    if (not env_state.holds(object_id)):\n        print("Failure, not holding the pencil.")\n        return False, env_state\n\n    # Low-level actions: put the object on the shelf.\n    try:\n        print("Trying to put the pencil on the shelf.")\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print(f"Result of PutObject is: {success}")\n    except:\n        print("Failure, could not place the pencil on the shelf.")\n        return False, env_state\n\n    # Postconditions: not holding the object and the object is on the shelf.\n    final_env_state = perceive(env)\n    if (not final_env_state.holds(object_id)) and (final_env_state.inReceptacle(object_id, receptacle_object_id)):\n        return True, final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation desk)
(PickupObject pencil)
(GotoLocation shelf)
(PutObject pencil shelf)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['pencil', 'shelf'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/2: PickupObject_988
Ground objects:
('Pencil|-00.71|+00.84|-01.97',)
Successfully picked up the pencil!
Successfully executed: PickupObject_988 with object_ids: ('Pencil|-00.71|+00.84|-01.97',)
Now on policy: 1/2: PutObjectInReceptacle_141
Ground objects:
('Pencil|-00.71|+00.84|-01.97', 'Shelf|-00.94|+01.34|-02.12')
Trying to put the pencil on the shelf.
Result of PutObject is: True
Successfully executed: PutObjectInReceptacle_141 with object_ids: ('Pencil|-00.71|+00.84|-01.97', 'Shelf|-00.94|+01.34|-02.12')

Motion plan operator success!: frozendict.frozendict({'action': 'PutObjectInReceptacle_141', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'pencil', 'shelf'), 'body': '\n    # Preconditions: we should be holding the object.\n    if (not env_state.holds(object_id)):\n        print("Failure, not holding the pencil.")\n        return False, env_state\n\n    # Low-level actions: put the object on the shelf.\n    try:\n        print("Trying to put the pencil on the shelf.")\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print(f"Result of PutObject is: {success}")\n    except:\n        print("Failure, could not place the pencil on the shelf.")\n        return False, env_state\n\n    # Postconditions: not holding the object and the object is on the shelf.\n    final_env_state = perceive(env)\n    if (not final_env_state.holds(object_id)) and (final_env_state.inReceptacle(object_id, receptacle_object_id)):\n        return True, final_env_state\n'})
  Motion plan result: task_success: True
  Total Actions Taken: None
  Total Time Taken: 2.998s
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 4 / 223 ID=train/pick_and_place_simple-Pencil-None-Shelf-310/trial_T20190908_023618_136375 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: True
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 4 / 223 ID=train/pick_and_place_simple-Pencil-None-Shelf-310/trial_T20190908_023618_136375 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: True
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 4 / 223 ID=train/pick_and_place_simple-Pencil-None-Shelf-310/trial_T20190908_023618_136375 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: True
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 4 / 223 ID=train/pick_and_place_simple-Pencil-None-Shelf-310/trial_T20190908_023618_136375 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: True
  Total Actions Taken: None
  Total Time Taken: 0.000s
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333

Logging scored operators: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_motion_plans.json

Experiment Summary
================================================================================
Iteration: 0
Evaluated successful motion plans: 1 / 5 problems so far.
Overall successful motion plans: 1 / 223 problems.
Total problems: 223
Current operators: 223

Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 5 / 223 ID=train/pick_heat_then_place_in_recep-Mug-None-Cabinet-6/trial_T20190908_034437_632398 AttemptIdx=0
Motion planning for: train/pick_heat_then_place_in_recep-Mug-None-Cabinet-6/trial_T20190908_034437_632398
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'OpenObject_38', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'microwave'), 'body': '\n    # Preconditions: None.\n    \n    # Low-level actions: open the microwave.\n    try:\n        action = OpenObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully opened the microwave!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: the microwave is open.\n    final_env_state = perceive(env)\n    return (final_env_state.isOpen(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PickupObject_1050', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'mug'), 'body': '\n    # Preconditions: microwave is open.\n    \n    # Checking if the mug is in the microwave.\n    if not env_state.inReceptacle(object_id, \'microwave\'):\n        print("Mug is not in the microwave.")\n        return False, env_state\n\n    # Low-level actions: pick up the mug from the microwave.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the mug from the microwave!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: holding the mug.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'CloseObject_9', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'microwave'), 'body': '\n    # Preconditions: the microwave was opened previously.\n    \n    # Low-level actions: close the microwave.\n    try:\n        action = CloseObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully closed the microwave!")\n    except:\n        print("Execution failure, could not close the microwave...")\n        return False\n\n    # Postconditions: the microwave is closed.\n    final_env_state = perceive(env)\n    return (not final_env_state.isOpen(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_379', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'mug', 'cabinet'), 'body': '\n    # Preconditions: we should be holding the mug.\n    if (not env_state.holds(object_id)):\n        print("Failure, not holding the mug.")\n        return False, env_state\n\n    # Low-level actions: put the mug in the cabinet.\n    try:\n        print("Trying to put the mug in the cabinet.")\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Successfully put the mug in the cabinet!")\n    except:\n        print("Failure, could not place the mug in the cabinet.")\n        return False, env_state\n\n    # Postconditions: not holding the mug and the mug is in the cabinet.\n    final_env_state = perceive(env)\n    if (not final_env_state.holds(object_id)) and (final_env_state.inReceptacle(object_id, receptacle_object_id)):\n        return True, final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject mug)
(GotoLocation microwave)
(HeatObject mug)
(GotoLocation cabinet)
(PutObject mug cabinet)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['mug', 'cabinet'], 'is_neg': False}

{'predicate_name': 'heatable', 'arguments': ['mug'], 'is_neg': False}

{'predicate_name': 'isHot', 'arguments': ['mug'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/4: OpenObject_38
Ground objects:
('Microwave|-02.58|+00.90|+02.44',)
Successfully opened the microwave!
Failed to execute the function defined in code.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 2.613s
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 5 / 223 ID=train/pick_heat_then_place_in_recep-Mug-None-Cabinet-6/trial_T20190908_034437_632398 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 5 / 223 ID=train/pick_heat_then_place_in_recep-Mug-None-Cabinet-6/trial_T20190908_034437_632398 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 5 / 223 ID=train/pick_heat_then_place_in_recep-Mug-None-Cabinet-6/trial_T20190908_034437_632398 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 5 / 223 ID=train/pick_heat_then_place_in_recep-Mug-None-Cabinet-6/trial_T20190908_034437_632398 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 6 / 223 ID=train/pick_and_place_simple-AppleSliced-None-Fridge-30/trial_T20190907_105523_799331 AttemptIdx=0
Motion planning for: train/pick_and_place_simple-AppleSliced-None-Fridge-30/trial_T20190907_105523_799331
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_79', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'knife'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the knife.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the knife!")\n    except:\n        print("Execution failure in picking up the knife...")\n        return False\n\n    # Postconditions: holding the knife.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_322', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'knife', 'fridge'), 'body': '\n    # Preconditions: holding the knife.\n    if (not env_state.holds(object_id)):\n        print("Failure, not holding the knife.")\n        return False, env_state\n\n    # Low-level actions: Open fridge (receptacle) before putting the knife in it.\n    try:\n        action = OpenObject(args={\'object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Fridge opened successfully.")\n    except:\n        print("Execution failure in opening the fridge...")\n        return False, env_state\n\n    # Low-level actions: put the knife in the fridge.\n    try:\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Knife placed in the fridge successfully.")\n    except:\n        print("Failure, could not place the knife in the fridge.")\n        return False, env_state\n\n    # Postconditions: Knife is in the fridge.\n    final_env_state = perceive(env)\n    return (final_env_state.inReceptacle(object_id, receptacle_object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'SliceObject_217', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'apple'), 'body': '\n    # Preconditions: Knife should be in the fridge with the apple.\n    if not env_state.inReceptacle(\'knife\', \'fridge\'):\n        print("Failure, knife is not in the fridge.")\n        return False, env_state\n    \n    # Preconditions: Retrieve the apple from the fridge.\n    if env_state.inReceptacle(\'apple\', \'fridge\'):\n        action = PickupObject(args={\'object_id\':\'apple\'})\n        success = act(env=env, action=action)\n        if not success:\n            print("Execution failure in picking up the apple...")\n            return False, env_state\n    \n    # Preconditions: The apple must be sliceable.\n    if not env_state.sliceable(\'apple\'):\n        print("The apple is not sliceable.")\n        return False, env_state\n\n    # Low-level actions: cut the apple with the knife.\n    try:\n        action = SliceObject(args={\'object_id\':\'apple\'})\n        success = act(env=env, action=action)\n        print(f"Apple sliced successfully: {success}")\n    except:\n        print("Execution failure in slicing the apple...")\n        return False, env_state\n\n    # Postconditions: Apple is sliced.\n    final_env_state = perceive(env)\n    return final_env_state.isSliced(\'apple\'), final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject knife)
(GotoLocation apple)
(SliceObject apple)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['apple', 'fridge'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['apple'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['apple'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/3: PickupObject_79
Ground objects:
('Knife|+01.10|+00.93|+00.18',)
Successfully picked up the knife!
Successfully executed: PickupObject_79 with object_ids: ('Knife|+01.10|+00.93|+00.18',)
Now on policy: 1/3: PutObjectInReceptacle_322
Ground objects:
('Knife|+01.10|+00.93|+00.18', 'Fridge|+01.01|+00.03|-01.47')
Fridge opened successfully.
Knife placed in the fridge successfully.
Successfully executed: PutObjectInReceptacle_322 with object_ids: ('Knife|+01.10|+00.93|+00.18', 'Fridge|+01.01|+00.03|-01.47')
Now on policy: 2/3: SliceObject_217
Ground objects:
('Apple|+01.09|+00.79|-01.41',)
Failed to execute the function defined in code.
Ground objects:
('Apple|+01.09|+00.79|-01.41',)
Failed to execute the function defined in code.
Ground objects:
('Apple|+01.09|+00.79|-01.41',)
Failed to execute the function defined in code.
Ground objects:
('Apple|-01.02|+00.97|-00.72',)
Failed to execute the function defined in code.
Ground objects:
('Apple|-01.02|+00.97|-00.72',)
Failed to execute the function defined in code.
Ground objects:
('Apple|-01.02|+00.97|-00.72',)
Failed to execute the function defined in code.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 2.878s
  Failed at operator: 3 / 3 operators in task plan.
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 6 / 223 ID=train/pick_and_place_simple-AppleSliced-None-Fridge-30/trial_T20190907_105523_799331 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 3 / 3 operators in task plan.
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 6 / 223 ID=train/pick_and_place_simple-AppleSliced-None-Fridge-30/trial_T20190907_105523_799331 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 3 / 3 operators in task plan.
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 6 / 223 ID=train/pick_and_place_simple-AppleSliced-None-Fridge-30/trial_T20190907_105523_799331 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 3 / 3 operators in task plan.
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 6 / 223 ID=train/pick_and_place_simple-AppleSliced-None-Fridge-30/trial_T20190907_105523_799331 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 3 / 3 operators in task plan.
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333

Logging scored operators: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_motion_plans.json

Experiment Summary
================================================================================
Iteration: 0
Evaluated successful motion plans: 1 / 7 problems so far.
Overall successful motion plans: 1 / 223 problems.
Total problems: 223
Current operators: 223

Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 7 / 223 ID=train/pick_and_place_simple-AppleSliced-None-Fridge-30/trial_T20190907_105723_672392 AttemptIdx=0
Motion planning for: train/pick_and_place_simple-AppleSliced-None-Fridge-30/trial_T20190907_105723_672392
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_992', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'apple'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the object.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the apple!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: holding the apple.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'SliceObject_132', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'apple'), 'body': '\n    # Preconditions: We should be holding the apple. The apple must be able to be sliced.\n    if (not env_state.holds(object_id)) or (not env_state.sliceable(object_id)):\n        print("Failure, either not holding the apple or apple can\'t be sliced.")\n        return False, env_state\n\n    # Low-level actions: Slice the apple.\n    try:\n        action = SliceObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully sliced the apple!")\n    except:\n        print("Failure, could not slice the apple.")\n        return False\n\n    # Postconditions: The apple is now sliced.\n    final_env_state = perceive(env)\n    return (final_env_state.isSliced(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'OpenObject_47', 'argument_names': ('env_state', 'env', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'fridge'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: Open the fridge.\n    try:\n        action = OpenObject(args={\'object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Successfully opened the fridge!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: The fridge is now open.\n    final_env_state = perceive(env)\n    return (final_env_state.isOpen(receptacle_object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_59', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'apple', 'fridge'), 'body': '\n    # Preconditions: we should be holding the sliced apple, and the fridge must be open.\n    if (not env_state.holds(object_id)) or (not env_state.opened(receptacle_object_id)):\n        print("Failure, either not holding the apple slice or the fridge is not open.")\n        return False, env_state\n\n    # Low-level actions: put the apple slice in the fridge.\n    try:\n        print("Trying to put apple slice in the fridge.")\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print(f"Result of PutObject is: {success}")\n    except:\n        print("Failure, could not place apple slice in fridge.")\n        return False, env_state\n\n    # Postconditions: not holding the apple slice and the apple slice is in the fridge.\n    final_env_state = perceive(env)\n    if (not final_env_state.holds(object_id)) and (final_env_state.inReceptacle(object_id, receptacle_object_id)):\n        return True, final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject knife)
(GotoLocation apple)
(SliceObject apple)
(GotoLocation fridge)
(PutObject knife fridge)
(GotoLocation microwave)
(PickupObject apple)
(GotoLocation fridge)
(PutObject apple fridge)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['apple', 'fridge'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['apple'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['apple'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/4: PickupObject_992
Ground objects:
('Apple|+00.80|+00.98|+00.63',)
Successfully picked up the apple!
Successfully executed: PickupObject_992 with object_ids: ('Apple|+00.80|+00.98|+00.63',)
Now on policy: 1/4: SliceObject_132
Ground objects:
('Apple|+00.80|+00.98|+00.63',)
Successfully sliced the apple!
Ground objects:
('Apple|-00.86|+00.97|+00.40',)
Failure, either not holding the apple or apple can't be sliced.
Ground objects:
('Apple|-00.86|+00.97|+00.40',)
Failure, either not holding the apple or apple can't be sliced.
Ground objects:
('Apple|-00.94|+00.97|-00.05',)
Failure, either not holding the apple or apple can't be sliced.
Ground objects:
('Apple|-00.94|+00.97|-00.05',)
Failure, either not holding the apple or apple can't be sliced.
Ground objects:
('Apple|-01.05|+01.07|+01.31',)
Failure, either not holding the apple or apple can't be sliced.
Ground objects:
('Apple|-01.05|+01.07|+01.31',)
Failure, either not holding the apple or apple can't be sliced.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 2.529s
  Failed at operator: 2 / 4 operators in task plan.
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 7 / 223 ID=train/pick_and_place_simple-AppleSliced-None-Fridge-30/trial_T20190907_105723_672392 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 4 operators in task plan.
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 7 / 223 ID=train/pick_and_place_simple-AppleSliced-None-Fridge-30/trial_T20190907_105723_672392 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 4 operators in task plan.
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 7 / 223 ID=train/pick_and_place_simple-AppleSliced-None-Fridge-30/trial_T20190907_105723_672392 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 4 operators in task plan.
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 7 / 223 ID=train/pick_and_place_simple-AppleSliced-None-Fridge-30/trial_T20190907_105723_672392 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 4 operators in task plan.
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 8 / 223 ID=train/pick_cool_then_place_in_recep-Potato-None-SinkBasin-24/trial_T20190909_052222_333703 AttemptIdx=0
Motion planning for: train/pick_cool_then_place_in_recep-Potato-None-SinkBasin-24/trial_T20190909_052222_333703
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_418', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'potato'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the object.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the potato!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: holding the potato.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'CoolObject_111', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'potato', 'fridge'), 'body': '\n    # Preconditions: the potato should be held by the robot.\n    if (not env_state.holds(object_id)):\n        print("Failure, not holding the potato.")\n        return False, env_state\n\n    # Low-level actions: open the fridge to put the potato inside.\n    try:\n        action = OpenObject(args={\'object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Successfully opened the fridge!")\n    except:\n        print("Execution failure, could not open the fridge...")\n        return False, env_state\n    \n    # Low-level actions: put the potato in the fridge to cool it.\n    try:\n        print("Putting the potato in the fridge to cool.")\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Result of PutObject (cooling potato) is: {success}")\n    except:\n        print("Failure, could not put the potato in the fridge.")\n        return False, env_state\n\n    # Low-level actions: close the fridge after putting the potato inside.\n    try:\n        action = CloseObject(args={\'object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print(f"Result of CloseObject (fridge) is: {success}")\n    except:\n        print("Execution failure, could not close the fridge...")\n        return False\n\n    # Postconditions: potato should be in the fridge and cool.\n    final_env_state = perceive(env)\n    return (final_env_state.inReceptacle(object_id, receptacle_object_id) and final_env_state.isCool(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PickupObjectFromReceptacle_11', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'potato', 'fridge'), 'body': '\n    # Preconditions: the potato should be cooled inside the fridge.\n    if (not env_state.inReceptacle(object_id, receptacle_object_id) or not env_state.isCool(object_id)):\n        print("Failure, the potato is not cool or not in the fridge.")\n        return False, env_state\n\n    # Low-level actions: open the fridge to retrieve the potato.\n    try:\n        action = OpenObject(args={\'object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Successfully opened the fridge to retrieve the potato!")\n    except:\n        print("Execution failure, could not open the fridge...")\n        return False, env_state\n\n    # Low-level actions: pick up the potato from the fridge.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the chilled potato from the fridge!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: holding the chilled potato.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_722', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'potato', 'sink'), 'body': '\n    # Preconditions: we should be holding the chilled potato.\n    if (not env_state.holds(object_id)):\n        print("Failure, not holding the chilled potato.")\n        return False, env_state\n\n    # Low-level actions: put the chilled potato in the sink.\n    try {\n        print("Trying to put the chilled potato in the sink.")\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Result of PutObject is: {success}")\n    except:\n        print("Failure, could not place the chilled potato in the sink.")\n        return False, env_state\n\n    # Postconditions: not holding the potato and the potato is in the sink.\n    final_env_state = perceive(env)\n    if (not final_env_state.holds(object_id)) and (final_env_state.inReceptacle(object_id, receptacle_object_id)):\n        return True, final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject potato)
(GotoLocation fridge)
(CoolObject potato)
(GotoLocation sinkbasin)
(PutObject potato sinkbasin)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['potato', 'sinkbasin'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['potato'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/4: PickupObject_418
Ground objects:
('Potato|+01.02|+00.87|+00.98',)
Successfully picked up the potato!
Successfully executed: PickupObject_418 with object_ids: ('Potato|+01.02|+00.87|+00.98',)
Now on policy: 1/4: CoolObject_111
Ground objects:
('Potato|+01.02|+00.87|+00.98', 'Fridge|-02.64|+00.00|+02.13')
Successfully opened the fridge!
Putting the potato in the fridge to cool.
Result of PutObject (cooling potato) is: {success}
Result of CloseObject (fridge) is: True
Successfully executed: CoolObject_111 with object_ids: ('Potato|+01.02|+00.87|+00.98', 'Fridge|-02.64|+00.00|+02.13')
Now on policy: 2/4: PickupObjectFromReceptacle_11
Ground objects:
('Potato|+01.02|+00.87|+00.98', 'Fridge|-02.64|+00.00|+02.13')
Successfully opened the fridge to retrieve the potato!
Successfully picked up the chilled potato from the fridge!
Successfully executed: PickupObjectFromReceptacle_11 with object_ids: ('Potato|+01.02|+00.87|+00.98', 'Fridge|-02.64|+00.00|+02.13')
Now on policy: 3/4: PutObjectInReceptacle_722
Ground objects:
('Potato|+01.02|+00.87|+00.98', 'Sink|-01.70|+00.73|+03.83')
Failed to execute the function defined in code.
Ground objects:
('Potato|+01.02|+00.87|+00.98', 'Sink|-01.70|+00.73|+03.83')
Failed to execute the function defined in code.
Ground objects:
('Potato|+01.02|+00.87|+00.98', 'Sink|-01.70|+00.73|+03.83')
Failed to execute the function defined in code.
Ground objects:
('Potato|+01.02|+00.87|+00.98', 'Sink|-01.70|+00.73|+03.83')
Failed to execute the function defined in code.
Ground objects:
('Potato|+01.02|+00.87|+00.98', 'Sink|-01.70|+00.73|+03.83|SinkBasin')
Failed to execute the function defined in code.
Ground objects:
('Potato|+01.02|+00.87|+00.98', 'Sink|-01.70|+00.73|+03.83|SinkBasin')
Failed to execute the function defined in code.
Ground objects:
('Potato|+01.02|+00.87|+00.98', 'Sink|-01.70|+00.73|+03.83|SinkBasin')
Failed to execute the function defined in code.
Ground objects:
('Potato|+01.02|+00.87|+00.98', 'Sink|-01.70|+00.73|+03.83|SinkBasin')
Failed to execute the function defined in code.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 3.363s
  Failed at operator: 4 / 4 operators in task plan.
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 8 / 223 ID=train/pick_cool_then_place_in_recep-Potato-None-SinkBasin-24/trial_T20190909_052222_333703 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 4 / 4 operators in task plan.
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 8 / 223 ID=train/pick_cool_then_place_in_recep-Potato-None-SinkBasin-24/trial_T20190909_052222_333703 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 4 / 4 operators in task plan.
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 8 / 223 ID=train/pick_cool_then_place_in_recep-Potato-None-SinkBasin-24/trial_T20190909_052222_333703 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 4 / 4 operators in task plan.
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 8 / 223 ID=train/pick_cool_then_place_in_recep-Potato-None-SinkBasin-24/trial_T20190909_052222_333703 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 4 / 4 operators in task plan.
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333

Logging scored operators: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_motion_plans.json

Experiment Summary
================================================================================
Iteration: 0
Evaluated successful motion plans: 1 / 9 problems so far.
Overall successful motion plans: 1 / 223 problems.
Total problems: 223
Current operators: 223

Evaluating [1/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 9 / 223 ID=train/look_at_obj_in_light-Mug-None-DeskLamp-301/trial_T20190908_155916_103990 AttemptIdx=0
Motion planning for: train/look_at_obj_in_light-Mug-None-DeskLamp-301/trial_T20190908_155916_103990
Proposed goal is: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o MugType)
                (holds ?a ?o)
            )
    ))))))
Ground truth oracle goal is: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o MugType)
                (holds ?a ?o)
            )
    ))))))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'ToggleObjectOn_13', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'floorlamp'), 'body': '\n    # Preconditions: The lamp must be toggleable and not already on.\n    if not (env_state.toggleable(object_id) and not env_state.isToggled(object_id)):\n        print("Failure, object is not toggleable or is already on.")\n        return False, env_state\n\n    # Low-level actions: turn the lamp on.\n    try:\n        action = ToggleObjectOn(args={\'object_id\': object_id})\n        success = act(env=env, action=action)\n        print("Successfully toggled the lamp on for inspection!")\n    except:\n        print("Execution failure, couldn\'t toggle the lamp on.")\n        return False, env_state\n\n    # Postconditions: the lamp is on.\n    final_env_state = perceive(env)\n    return (final_env_state.isToggled(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PickupObject_90', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'mug'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the mug. This is for the purpose of inspecting it comfortably.\n    try:\n        action = PickupObject(args={\'object_id\': object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the mug!")\n    except:\n        print("Execution failure, couldn\'t pick up the mug.")\n        return False, env_state\n\n    # Postconditions: holding the mug.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation dresser)
(PickupObject mug)
(GotoLocation desklamp)
(ToggleObject desklamp)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'toggleable', 'arguments': ['desklamp'], 'is_neg': False}

{'predicate_name': 'isToggled', 'arguments': ['desklamp'], 'is_neg': False}

{'predicate_name': 'holds', 'arguments': ['?a', 'mug'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/2: ToggleObjectOn_13
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 2.624s
Evaluating [2/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 9 / 223 ID=train/look_at_obj_in_light-Mug-None-DeskLamp-301/trial_T20190908_155916_103990 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [3/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 9 / 223 ID=train/look_at_obj_in_light-Mug-None-DeskLamp-301/trial_T20190908_155916_103990 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [4/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 9 / 223 ID=train/look_at_obj_in_light-Mug-None-DeskLamp-301/trial_T20190908_155916_103990 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
Evaluating [1/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 10 / 223 ID=train/look_at_obj_in_light-RemoteControl-None-FloorLamp-229/trial_T20190907_184408_159194 AttemptIdx=0
Motion planning for: train/look_at_obj_in_light-RemoteControl-None-FloorLamp-229/trial_T20190907_184408_159194
Proposed goal is: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RemoteControlType)
                (holds ?a ?o)
            )
    ))))))
Ground truth oracle goal is: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RemoteControlType)
                (holds ?a ?o)
            )
    ))))))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_768', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'remotecontrol'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the object.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the remote control!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: holding the remote control.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'ToggleObjectOn_202', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'floorlamp'), 'body': '\n    # Preconditions: we should be holding the remote control.\n    remote_id = "remotecontrol"  # Assuming a fixed id for the remote control\n    if (not env_state.holds(remote_id)):\n        print("Failure, not holding the remote control.")\n        return False, env_state\n\n    # Low-level actions: turn the lamp on.\n    try:\n        print("Trying to turn on the lamp with the remote.")\n        action = ToggleObjectOn(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print(f"Result of ToggleObjectOn is: {success}")\n    except:\n        print("Failure, could not turn on the lamp with the remote.")\n        return False, env_state\n\n    # Postconditions: the lamp is on.\n    final_env_state = perceive(env)\n    return (final_env_state.isToggled(object_id)), final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation armchair)
(PickupObject remotecontrol)
(GotoLocation floorlamp)
(ToggleObject floorlamp)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'toggleable', 'arguments': ['floorlamp'], 'is_neg': False}

{'predicate_name': 'isToggled', 'arguments': ['floorlamp'], 'is_neg': False}

{'predicate_name': 'holds', 'arguments': ['?a', 'remotecontrol'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/2: PickupObject_768
Ground objects:
('RemoteControl|-02.90|+00.41|+02.34',)
Successfully picked up the remote control!
Successfully executed: PickupObject_768 with object_ids: ('RemoteControl|-02.90|+00.41|+02.34',)
Now on policy: 1/2: ToggleObjectOn_202
Ground objects:
('FloorLamp|-00.20|+00.02|+04.49',)
Failed to execute the function defined in code.
Ground objects:
('FloorLamp|-00.20|+00.02|+04.49',)
Failed to execute the function defined in code.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 2.624s
  Failed at operator: 2 / 2 operators in task plan.
Evaluating [2/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 10 / 223 ID=train/look_at_obj_in_light-RemoteControl-None-FloorLamp-229/trial_T20190907_184408_159194 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 2 operators in task plan.
Evaluating [3/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 10 / 223 ID=train/look_at_obj_in_light-RemoteControl-None-FloorLamp-229/trial_T20190907_184408_159194 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 2 operators in task plan.
Evaluating [4/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 10 / 223 ID=train/look_at_obj_in_light-RemoteControl-None-FloorLamp-229/trial_T20190907_184408_159194 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 2 operators in task plan.
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333

Logging scored operators: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_motion_plans.json

Experiment Summary
================================================================================
Iteration: 0
Evaluated successful motion plans: 1 / 11 problems so far.
Overall successful motion plans: 1 / 223 problems.
Total problems: 223
Current operators: 223

Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 11 / 223 ID=train/pick_heat_then_place_in_recep-Mug-None-CoffeeMachine-11/trial_T20190907_164503_292853 AttemptIdx=0
Motion planning for: train/pick_heat_then_place_in_recep-Mug-None-CoffeeMachine-11/trial_T20190907_164503_292853
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CoffeeMachineType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_52', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'mug'), 'body': '\n    # Preconditions: None.\n    \n    # Low-level actions: pick up the mug.\n    try:\n        action = PickupObject(args={\'object_id\': object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the mug!")\n    except:\n        print("Execution failure during pickup...")\n        return False\n\n    # Postconditions: now holding the mug.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'HeatObject_129', 'argument_names': ('env_state', 'env', 'object_id', 'heat_source_id'), 'ground_arguments': ('env_state', 'env', 'mug', 'microwave'), 'body': '\n    # Preconditions: we should be holding the mug.\n    if (not env_state.holds(object_id)):\n        print("Failure, not holding the mug.")\n        return False, env_state\n\n    # Low-level actions: open the heating source (e.g., microwave).\n    try:\n        action = OpenObject(args={\'object_id\': heat_source_id})\n        success = act(env=env, action=action)\n        print("Successfully opened the microwave!")\n    except:\n        print("Execution failure during opening...")\n        return False\n\n    # Low-level actions: put the mug in the heating source.\n    try:\n        action = PutObject(args={\'object_id\': object_id, \'receptacle_object_id\': heat_source_id})\n        success = act(env=env, action=action)\n        print("Placed the mug inside the microwave.")\n    except:\n        print("Failure during placement inside the microwave.")\n        return False\n\n    # Low-level actions: close the heating source and turn it on to heat the mug.\n    try:\n        action = CloseObject(args={\'object_id\': heat_source_id})\n        success = act(env=env, action=action)\n        action = ToggleObjectOn(args={\'object_id\': heat_source_id})\n        success = act(env=env, action=action)\n        print("Microwave turned on to heat the mug.")\n    except:\n        print("Execution failure during microwave operation...")\n        return False\n\n    # Postconditions: mug is hot.\n    final_env_state = perceive(env)\n    # Assuming there is some delay needed for heating, a wait or check for isHot might be needed here.\n    return (final_env_state.isHot(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_335', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'mug', 'coffeemachine'), 'body': '\n    # Preconditions: The mug should be hot.\n    if (not env_state.isHot(object_id)):\n        print("Failure, the mug is not hot.")\n        return False, env_state\n\n    # Low-level actions: pick up the hot mug (safely, assuming the robot can handle hot objects).\n    try:\n        action = PickupObject(args={\'object_id\': object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the hot mug!")\n    except:\n        print("Execution failure during pickup...")\n        return False\n        \n    # Low-level actions: put the hot mug in the coffee maker (coffeemachine).\n    try:\n        action = PutObject(args={\'object_id\': object_id, \'receptacle_object_id\': receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Successfully placed the heated mug in the coffee maker!")\n    except:\n        print("Failure, could not place the mug in the coffee maker.")\n        return False\n\n    # Postconditions: mug is not held and is in the coffee maker.\n    final_env_state = perceive(env)\n    return (not final_env_state.holds(object_id) and final_env_state.inReceptacle(object_id, receptacle_object_id)), final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject mug)
(GotoLocation microwave)
(HeatObject mug)
(GotoLocation coffeemachine)
(PutObject mug coffeemachine)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['mug', 'coffeemachine'], 'is_neg': False}

{'predicate_name': 'heatable', 'arguments': ['mug'], 'is_neg': False}

{'predicate_name': 'isHot', 'arguments': ['mug'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/3: PickupObject_52
Ground objects:
('Mug|+00.56|+00.91|+00.21',)
Successfully picked up the mug!
Successfully executed: PickupObject_52 with object_ids: ('Mug|+00.56|+00.91|+00.21',)
Now on policy: 1/3: HeatObject_129
Ground objects:
('Mug|+00.56|+00.91|+00.21', 'Microwave|-01.04|+00.90|-01.72')
Successfully opened the microwave!
Placed the mug inside the microwave.
Microwave turned on to heat the mug.
Successfully executed: HeatObject_129 with object_ids: ('Mug|+00.56|+00.91|+00.21', 'Microwave|-01.04|+00.90|-01.72')
Now on policy: 2/3: PutObjectInReceptacle_335
Ground objects:
('Mug|+00.56|+00.91|+00.21', 'CoffeeMachine|+00.62|+00.90|+00.60')
Successfully picked up the hot mug!
Successfully placed the heated mug in the coffee maker!
Ground objects:
('Mug|+00.56|+00.91|+00.21', 'CoffeeMachine|+00.62|+00.90|+00.60')
Successfully picked up the hot mug!
Successfully placed the heated mug in the coffee maker!
Ground objects:
('Mug|-02.40|+00.51|-01.76', 'CoffeeMachine|+00.62|+00.90|+00.60')
Failure, the mug is not hot.
Ground objects:
('Mug|-02.40|+00.51|-01.76', 'CoffeeMachine|+00.62|+00.90|+00.60')
Failure, the mug is not hot.
Ground objects:
('Mug|-02.40|+00.51|-01.76', 'CoffeeMachine|+00.62|+00.90|+00.60')
Failure, the mug is not hot.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 3.264s
  Failed at operator: 3 / 3 operators in task plan.
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 11 / 223 ID=train/pick_heat_then_place_in_recep-Mug-None-CoffeeMachine-11/trial_T20190907_164503_292853 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 3 / 3 operators in task plan.
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 11 / 223 ID=train/pick_heat_then_place_in_recep-Mug-None-CoffeeMachine-11/trial_T20190907_164503_292853 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 3 / 3 operators in task plan.
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 11 / 223 ID=train/pick_heat_then_place_in_recep-Mug-None-CoffeeMachine-11/trial_T20190907_164503_292853 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 3 / 3 operators in task plan.
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 11 / 223 ID=train/pick_heat_then_place_in_recep-Mug-None-CoffeeMachine-11/trial_T20190907_164503_292853 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 3 / 3 operators in task plan.
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  PickupObject_52 1.05 / 1.5 = 0.7000000000000001
  HeatObject_129 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_335 0.05 / 1.5 = 0.03333333333333333
Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 12 / 223 ID=train/pick_and_place_simple-TomatoSliced-None-SideTable-28/trial_T20190908_213552_035696 AttemptIdx=0
Motion planning for: train/pick_and_place_simple-TomatoSliced-None-SideTable-28/trial_T20190908_213552_035696
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_231', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'tomato'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the object.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        if success:\n            print("Successfully picked up the tomato.")\n        else:\n            print("Failed to pick up the tomato.")\n            return False\n    except Exception as e:\n        print(f"Execution failure: {e}")\n        return False\n\n    # Postconditions: holding the tomato.\n    final_env_state = perceive(env)\n    return final_env_state.holds(object_id)\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_699', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'tomato', 'countertop'), 'body': '\n    # Preconditions: we should be holding the tomato.\n    if not env_state.holds(object_id):\n        print("Not holding the tomato, cannot put it on the countertop.")\n        return False\n\n    # Low-level actions: put the tomato on the countertop.\n    try:\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        if success:\n            print("Placed the tomato on the countertop.")\n        else:\n            print("Failed to place the tomato on the countertop.")\n            return False\n    except Exception as e:\n        print(f"Execution failure: {e}")\n        return False\n\n    # Postconditions: The tomato is on the countertop.\n    final_env_state = perceive(env)\n    return final_env_state.inReceptacle(object_id, receptacle_object_id)\n'})

frozendict.frozendict({'action': 'SliceObject_229', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'tomato'), 'body': '\n    # Preconditions: The tomato should be on the countertop and not already sliced.\n    if not env_state.inReceptacle(object_id, \'countertop\') or env_state.isSliced(object_id):\n        print("The tomato is not on the countertop or it is already sliced.")\n        return False\n\n    # Low-level actions: slice the tomato.\n    try:\n        action = SliceObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        if success:\n            print("Successfully sliced the tomato.")\n        else:\n            print("Failed to slice the tomato.")\n            return False\n    except Exception as e:\n        print(f"Execution failure: {e}")\n        return False\n\n    # Postconditions: The tomato is sliced.\n    final_env_state = perceive(env)\n    return final_env_state.isSliced(object_id)\n'})

Ground truth PDDL plan is: 
(GotoLocation diningtable)
(PickupObject butterknife)
(GotoLocation tomato)
(SliceObject tomato)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['tomato', 'sidetable'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/3: PickupObject_231
Ground objects:
('Tomato|-04.06|+00.74|-00.31',)
Successfully picked up the tomato.
Failed to execute the function defined in code.
Ground objects:
('Tomato|-03.60|+00.81|-03.65',)
Failed to pick up the tomato.
Failed to execute the function defined in code.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 2.708s
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 12 / 223 ID=train/pick_and_place_simple-TomatoSliced-None-SideTable-28/trial_T20190908_213552_035696 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 12 / 223 ID=train/pick_and_place_simple-TomatoSliced-None-SideTable-28/trial_T20190908_213552_035696 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 12 / 223 ID=train/pick_and_place_simple-TomatoSliced-None-SideTable-28/trial_T20190908_213552_035696 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 12 / 223 ID=train/pick_and_place_simple-TomatoSliced-None-SideTable-28/trial_T20190908_213552_035696 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  PickupObject_52 1.05 / 1.5 = 0.7000000000000001
  HeatObject_129 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_699 0.05 / 0.5 = 0.1
  SliceObject_229 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_335 0.05 / 1.5 = 0.03333333333333333
  PickupObject_231 0.05 / 1.5 = 0.03333333333333333

Logging scored operators: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_motion_plans.json

Experiment Summary
================================================================================
Iteration: 0
Evaluated successful motion plans: 1 / 13 problems so far.
Overall successful motion plans: 1 / 223 problems.
Total problems: 223
Current operators: 223

Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 13 / 223 ID=train/pick_heat_then_place_in_recep-Potato-None-SideTable-28/trial_T20190907_075841_463460 AttemptIdx=0
Motion planning for: train/pick_heat_then_place_in_recep-Potato-None-SideTable-28/trial_T20190907_075841_463460
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SideTableType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_278', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'potato'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the object.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the potato!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: holding the object.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'HeatObject_147', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'potato', 'microwave'), 'body': '\n    # Preconditions: we should be holding the object.\n    if (not env_state.holds(object_id)):\n        print("Failure, not holding the potato.")\n        return False, env_state\n\n    # Low-level actions: open the microwave.\n    try:\n        action = OpenObject(args={\'object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Successfully opened the microwave!")\n    except:\n        print("Execution failure in opening microwave...")\n        return False, env_state\n\n    # Low-level actions: put the potato in the microwave.\n    try:\n        print("Trying to put the potato in the microwave.")\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Result of PutObject in microwave is: {success}")\n    except:\n        print("Failure in placing potato in microwave.")\n        return False, env_state\n\n    # Low-level actions: close the microwave and start heating.\n    try:\n        action = CloseObject(args={\'object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Microwave closed: {success}")\n        action = ToggleObjectOn(args={\'object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Microwave started: {success}")\n    except:\n        print("Execution failure in starting microwave...")\n        return False, env_state\n\n    # Assuming heating process is instantaneous for the sake of simulation.\n    # In a real scenario, we would wait for a set amount of time here.\n\n    # Low-level actions: open microwave to take out the heated potato.\n    try:\n        action = ToggleObjectOff(args={\'object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Microwave stopped: {success}")\n        action = OpenObject(args={\'object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Microwave opened: {success}")\n    except:\n        print("Execution failure in opening microwave...")\n        return False, env_state\n\n    # Low-level actions: pick up the heated potato.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the heated potato!")\n    except:\n        print("Failure in picking up potato from microwave.")\n        return False, env_state\n\n    # Postconditions: holding the heated object.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id) and final_env_state.isHot(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_242', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'potato', 'sidetable'), 'body': '\n    # Preconditions: we should be holding the heated potato.\n    if (not env_state.holds(object_id)) or (not env_state.isHot(object_id)):\n        print("Failure, not holding a heated potato.")\n        return False, env_state\n\n    # Low-level actions: put the heated potato on the sidetable.\n    try:\n        print("Trying to put the heated potato on the sidetable.")\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Result of PutObject on sidetable is: {success}")\n    except:\n        print("Failure in placing heated potato on sidetable.")\n        return False, env_state\n\n    # Postconditions: not holding the object and the object is on the sidetable.\n    final_env_state = perceive(env)\n    return (not final_env_state.holds(object_id)) and (final_env_state.inReceptacle(object_id, receptacle_object_id)), final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation fridge)
(PickupObject potato)
(GotoLocation microwave)
(HeatObject potato)
(GotoLocation sidetable)
(PutObject potato sidetable)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['potato', 'sidetable'], 'is_neg': False}

{'predicate_name': 'heatable', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'isHot', 'arguments': ['potato'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/3: PickupObject_278
Ground objects:
('Potato|-00.42|+01.32|-00.76',)
Successfully picked up the potato!
Ground objects:
('Potato|-02.45|+00.13|-03.60',)
Successfully picked up the potato!
Successfully executed: PickupObject_278 with object_ids: ('Potato|-02.45|+00.13|-03.60',)
Now on policy: 1/3: HeatObject_147
Ground objects:
('Potato|-00.42|+01.32|-00.76', 'Microwave|-00.22|+01.47|-02.06')
Failure, not holding the potato.
Ground objects:
('Potato|-00.42|+01.32|-00.76', 'Microwave|-00.22|+01.47|-02.06')
Failure, not holding the potato.
Ground objects:
('Potato|-02.45|+00.13|-03.60', 'Microwave|-00.22|+01.47|-02.06')
Successfully opened the microwave!
Trying to put the potato in the microwave.
Result of PutObject in microwave is: {success}
Microwave closed: {success}
Microwave started: {success}
Microwave stopped: {success}
Microwave opened: {success}
Successfully picked up the heated potato!
Successfully executed: HeatObject_147 with object_ids: ('Potato|-02.45|+00.13|-03.60', 'Microwave|-00.22|+01.47|-02.06')
Now on policy: 2/3: PutObjectInReceptacle_242
Ground objects:
('Potato|-00.42|+01.32|-00.76', 'SideTable|-04.07|+00.73|-00.31')
Failure, not holding a heated potato.
Ground objects:
('Potato|-00.42|+01.32|-00.76', 'SideTable|-04.07|+00.73|-00.31')
Failure, not holding a heated potato.
Ground objects:
('Potato|-00.42|+01.32|-00.76', 'SideTable|-04.07|+00.73|-00.31')
Failure, not holding a heated potato.
Ground objects:
('Potato|-02.45|+00.13|-03.60', 'SideTable|-04.07|+00.73|-00.31')
Trying to put the heated potato on the sidetable.
Result of PutObject on sidetable is: {success}
Successfully executed: PutObjectInReceptacle_242 with object_ids: ('Potato|-02.45|+00.13|-03.60', 'SideTable|-04.07|+00.73|-00.31')
	 Fluent(predicate='inReceptacle', objects=('Potato|-00.42|+01.32|-00.76', 'SideTable|-04.07|+00.73|-00.31')) True
	 State: False
	 Fluent(predicate='isHot', objects=('Potato|-00.42|+01.32|-00.76',)) True
	 State: False


Motion plan operator success!: frozendict.frozendict({'action': 'PutObjectInReceptacle_242', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'potato', 'sidetable'), 'body': '\n    # Preconditions: we should be holding the heated potato.\n    if (not env_state.holds(object_id)) or (not env_state.isHot(object_id)):\n        print("Failure, not holding a heated potato.")\n        return False, env_state\n\n    # Low-level actions: put the heated potato on the sidetable.\n    try:\n        print("Trying to put the heated potato on the sidetable.")\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Result of PutObject on sidetable is: {success}")\n    except:\n        print("Failure in placing heated potato on sidetable.")\n        return False, env_state\n\n    # Postconditions: not holding the object and the object is on the sidetable.\n    final_env_state = perceive(env)\n    return (not final_env_state.holds(object_id)) and (final_env_state.inReceptacle(object_id, receptacle_object_id)), final_env_state\n'})
  Motion plan result: task_success: True
  Total Actions Taken: None
  Total Time Taken: 4.021s
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 13 / 223 ID=train/pick_heat_then_place_in_recep-Potato-None-SideTable-28/trial_T20190907_075841_463460 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: True
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 13 / 223 ID=train/pick_heat_then_place_in_recep-Potato-None-SideTable-28/trial_T20190907_075841_463460 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: True
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 13 / 223 ID=train/pick_heat_then_place_in_recep-Potato-None-SideTable-28/trial_T20190907_075841_463460 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: True
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 13 / 223 ID=train/pick_heat_then_place_in_recep-Potato-None-SideTable-28/trial_T20190907_075841_463460 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: True
  Total Actions Taken: None
  Total Time Taken: 0.000s
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  PickupObject_52 1.05 / 1.5 = 0.7000000000000001
  HeatObject_129 1.05 / 1.5 = 0.7000000000000001
  PickupObject_278 1.05 / 1.5 = 0.7000000000000001
  HeatObject_147 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_242 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_699 0.05 / 0.5 = 0.1
  SliceObject_229 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_335 0.05 / 1.5 = 0.03333333333333333
  PickupObject_231 0.05 / 1.5 = 0.03333333333333333
Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 14 / 223 ID=train/pick_heat_then_place_in_recep-TomatoSliced-None-Fridge-5/trial_T20190908_061406_498045 AttemptIdx=0
Motion planning for: train/pick_heat_then_place_in_recep-TomatoSliced-None-Fridge-5/trial_T20190908_061406_498045
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_656', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'tomato'), 'body': '\n# Preconditions: None.\n\n# Low-level actions: pick up the object.\ntry:\n    action = PickupObject(args={\'object_id\':object_id})\n    success = act(env=env, action=action)\n    print("Successfully picked up a tomato!")\nexcept:\n    print("Execution failure...")\n    return False\n\n# Postconditions: holding the object.\nfinal_env_state = perceive(env)\nreturn (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'SliceObject_293', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'tomato'), 'body': '\n# Preconditions: the object must not already be sliced.\nif (env_state.isSliced(object_id)):\n    print("Object is already sliced.")\n    return True, env_state\n\n# Low-level actions: slice the object.\ntry:\n    action = SliceObject(args={\'object_id\':object_id})\n    success = act(env=env, action=action)\n    print("Successfully sliced a tomato!")\nexcept:\n    print("Execution failure...")\n    return False\n\n# Postconditions: object is sliced.\nfinal_env_state = perceive(env)\nreturn (final_env_state.isSliced(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'ToggleObjectOn_30', 'argument_names': ('env_state', 'env', 'heat_source_id', 'object_id'), 'ground_arguments': ('env_state', 'env', 'stoveburner', 'tomato'), 'body': '\n# Preconditions: the object must be sliceable and not already hot.\nif (env_state.isHot(object_id) or not env_state.heatable(object_id)):\n    print("Object is already hot or not heatable.")\n    return True, env_state\n\n# Low-level actions: turn on heat source to cook the object.\ntry:\n    action = ToggleObjectOn(args={\'object_id\':heat_source_id})\n    success = act(env=env, action=action)\n    print("Heat source is now on, cooking the tomato slice.")\nexcept:\n    print("Execution failure...")\n    return False\n\n# Wait for the object to cook (this would be a time-based action in a real scenario).\n# In this hypothetical API we act as if waiting is not required.\n# Postconditions: object is hot.\nfinal_env_state = perceive(env)\nreturn (final_env_state.isHot(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_282', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'tomato', 'fridge'), 'body': '\n# Preconditions: we should be holding the cooked tomato slice.\nif (not env_state.holds(object_id) or not env_state.isHot(object_id)):\n    print("Failure, not holding a hot tomato slice.")\n    return False, env_state\n\n# Low-level actions: open the refrigerator.\naction = OpenObject(args={\'object_id\':receptacle_object_id})\nsuccess = act(env=env, action=action)\nif not success:\n    print("Failed to open the refrigerator.")\n    return False, env_state\n\n# Low-level actions: put the object in the receptacle.\ntry:\n    print("Trying to put tomato slice in the refrigerator.")\n    action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n    success = act(env=env, action=action)\n    print("Result of PutObject is: {success}")\nexcept:\n    print("Failure, could not place in refrigerator.")\n    return False, env_state\n\n# Low-level actions: close the refrigerator.\naction = CloseObject(args={\'object_id\':receptacle_object_id})\nsuccess = act(env=env, action=action)\nif not success:\n    print("Failed to close the refrigerator.")\n    return False, env_state\n\n# Postconditions: not holding the object, and the object is in the refrigerator.\nfinal_env_state = perceive(env)\nreturn (not final_env_state.holds(object_id)) and (final_env_state.inReceptacle(object_id, receptacle_object_id)), final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject butterknife)
(GotoLocation tomato)
(SliceObject tomato)
(PutObject butterknife garbagecan)
(PickupObject tomato)
(GotoLocation microwave)
(HeatObject tomato)
(GotoLocation fridge)
(PutObject tomato fridge)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['tomato', 'fridge'], 'is_neg': False}

{'predicate_name': 'heatable', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'isHot', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/4: PickupObject_656
Ground objects:
('Tomato|+02.00|+00.11|+00.17',)
Failed to execute the function defined in code.
Ground objects:
('Tomato|+01.84|+01.48|-00.83',)
Failed to execute the function defined in code.
Ground objects:
('Tomato|+02.00|+01.48|-00.27',)
Failed to execute the function defined in code.
Ground objects:
('Tomato|-00.21|+00.96|+00.24',)
Failed to execute the function defined in code.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 3.034s
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 14 / 223 ID=train/pick_heat_then_place_in_recep-TomatoSliced-None-Fridge-5/trial_T20190908_061406_498045 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 14 / 223 ID=train/pick_heat_then_place_in_recep-TomatoSliced-None-Fridge-5/trial_T20190908_061406_498045 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 14 / 223 ID=train/pick_heat_then_place_in_recep-TomatoSliced-None-Fridge-5/trial_T20190908_061406_498045 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 14 / 223 ID=train/pick_heat_then_place_in_recep-TomatoSliced-None-Fridge-5/trial_T20190908_061406_498045 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  PickupObject_52 1.05 / 1.5 = 0.7000000000000001
  HeatObject_129 1.05 / 1.5 = 0.7000000000000001
  PickupObject_278 1.05 / 1.5 = 0.7000000000000001
  HeatObject_147 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_242 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_699 0.05 / 0.5 = 0.1
  SliceObject_229 0.05 / 0.5 = 0.1
  SliceObject_293 0.05 / 0.5 = 0.1
  ToggleObjectOn_30 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_282 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_335 0.05 / 1.5 = 0.03333333333333333
  PickupObject_231 0.05 / 1.5 = 0.03333333333333333
  PickupObject_656 0.05 / 1.5 = 0.03333333333333333

Logging scored operators: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_motion_plans.json

Experiment Summary
================================================================================
Iteration: 0
Evaluated successful motion plans: 2 / 15 problems so far.
Overall successful motion plans: 2 / 223 problems.
Total problems: 223
Current operators: 223

Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 15 / 223 ID=train/pick_clean_then_place_in_recep-SoapBar-None-GarbageCan-421/trial_T20190907_041233_785188 AttemptIdx=0
Motion planning for: train/pick_clean_then_place_in_recep-SoapBar-None-GarbageCan-421/trial_T20190907_041233_785188
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SoapBarType) 
                (receptacleType ?r GarbageCanType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_843', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'soapbar'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the object.\n    try:\n        action = PickupObject(args={\'object_id\': object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the soap bar!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: holding the object.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'CleanObject_22', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'soapbar'), 'body': '\n    # Preconditions: we should be holding the object.\n    if (not env_state.holds(object_id)):\n        print("Failure, not holding the soap bar.")\n        return False, env_state\n\n    # Low-level actions: clean the object if required.\n    if (not env_state.isClean(object_id) and env_state.cleanable(object_id)):\n        try:\n            action = CleanObject(args={\'object_id\': object_id})\n            success = act(env=env, action=action)\n            print("Successfully cleaned the soap bar!")\n        except:\n            print("Failure, could not clean the soap bar.")\n            return False, env_state\n\n    # Postconditions: the object is clean.\n    final_env_state = perceive(env)\n    return (final_env_state.isClean(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_124', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'soapbar', 'garbagecan'), 'body': '\n    # Preconditions: we should be holding the object, and the object should be clean.\n    if (not env_state.holds(object_id)) or (not env_state.isClean(object_id)):\n        print("Failure, not holding a clean soap bar.")\n        return False, env_state\n\n    # Low-level actions: put the object in the receptacle.\n    try:\n        print("Trying to put the soap bar in the trash can.")\n        action = PutObject(args={\'object_id\': object_id, \'receptacle_object_id\': receptacle_object_id})\n        success = act(env=env, action=action)\n        print(f"Result of PutObject is: {success}")\n    except:\n        print("Failure, could not place the soap bar in the trash can.")\n        return False, env_state\n\n    # Postconditions: not holding the object and the object is in the receptacle (trash can).\n    final_env_state = perceive(env)\n    if (not final_env_state.holds(object_id)) and (final_env_state.inReceptacle(object_id, receptacle_object_id)):\n        return True, final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject soapbar)
(GotoLocation sinkbasin)
(CleanObject soapbar)
(GotoLocation garbagecan)
(PutObject soapbar garbagecan)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['soapbar', 'garbagecan'], 'is_neg': False}

{'predicate_name': 'cleanable', 'arguments': ['soapbar'], 'is_neg': False}

{'predicate_name': 'isClean', 'arguments': ['soapbar'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/3: PickupObject_843
Ground objects:
('SoapBar|-00.48|+00.81|+03.17',)
Successfully picked up the soap bar!
Successfully executed: PickupObject_843 with object_ids: ('SoapBar|-00.48|+00.81|+03.17',)
Now on policy: 1/3: CleanObject_22
Ground objects:
('SoapBar|-00.48|+00.81|+03.17',)
Failure, could not clean the soap bar.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 3.030s
  Failed at operator: 2 / 3 operators in task plan.
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 15 / 223 ID=train/pick_clean_then_place_in_recep-SoapBar-None-GarbageCan-421/trial_T20190907_041233_785188 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 3 operators in task plan.
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 15 / 223 ID=train/pick_clean_then_place_in_recep-SoapBar-None-GarbageCan-421/trial_T20190907_041233_785188 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 3 operators in task plan.
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 15 / 223 ID=train/pick_clean_then_place_in_recep-SoapBar-None-GarbageCan-421/trial_T20190907_041233_785188 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 3 operators in task plan.
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 15 / 223 ID=train/pick_clean_then_place_in_recep-SoapBar-None-GarbageCan-421/trial_T20190907_041233_785188 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 3 operators in task plan.
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  PickupObject_52 1.05 / 1.5 = 0.7000000000000001
  HeatObject_129 1.05 / 1.5 = 0.7000000000000001
  PickupObject_278 1.05 / 1.5 = 0.7000000000000001
  HeatObject_147 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_242 1.05 / 1.5 = 0.7000000000000001
  PickupObject_843 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_699 0.05 / 0.5 = 0.1
  SliceObject_229 0.05 / 0.5 = 0.1
  SliceObject_293 0.05 / 0.5 = 0.1
  ToggleObjectOn_30 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_282 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_124 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_335 0.05 / 1.5 = 0.03333333333333333
  PickupObject_231 0.05 / 1.5 = 0.03333333333333333
  PickupObject_656 0.05 / 1.5 = 0.03333333333333333
  CleanObject_22 0.05 / 1.5 = 0.03333333333333333
Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 16 / 223 ID=train/pick_and_place_simple-PotatoSliced-None-SinkBasin-25/trial_T20190907_062007_896057 AttemptIdx=0
Motion planning for: train/pick_and_place_simple-PotatoSliced-None-SinkBasin-25/trial_T20190907_062007_896057
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_202', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'potato'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the potato.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up a potato!")\n    except:\n        print("Execution failure attempting to pick up potato.")\n        return False\n\n    # Postconditions: Holding the potato.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(\'potato\')), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_280', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'potato', 'sinkbasin'), 'body': '\n    # Preconditions: We should be holding the potato.\n    if (not env_state.holds(\'potato\')):\n        print("Not holding the potato, cannot put it in the sink.")\n        return False, env_state\n\n    # Low-level actions: put the potato in the sink.\n    try:\n        print("Attempting to put the potato in the sink.")\n        action = PutObject(args={\'object_id\': \'potato\', \'receptacle_object_id\': \'sinkbasin\'})\n        success = act(env=env, action=action)\n        print(f"Result of PutObject (potato in sink) is: {success}")\n    except:\n        print("Could not place the potato in the sink.")\n        return False, env_state\n\n    # Postconditions: The potato is in the sink.\n    final_env_state = perceive(env)\n    return (final_env_state.inReceptacle(\'potato\', \'sinkbasin\')), final_env_state\n'})

frozendict.frozendict({'action': 'PickupObject_405', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'knife'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the knife.\n    try:\n        action = PickupObject(args={\'object_id\': \'knife\'})\n        success = act(env=env, action=action)\n        print("Successfully picked up a knife!")\n    except:\n        print("Execution failure attempting to pick up knife.")\n        return False\n\n    # Postconditions: Holding the knife.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(\'knife\')), final_env_state\n'})

frozendict.frozendict({'action': 'SliceObject_82', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'potato'), 'body': '\n    # Preconditions: The knife is held and the potato is in the sink.\n    if not (env_state.holds(\'knife\') and env_state.inReceptacle(\'potato\', \'sinkbasin\')):\n        print("Cannot slice the potato, either not holding a knife or the potato is not in the sink.")\n        return False, env_state\n\n    # Low-level actions: Slice the potato.\n    try:\n        print("Attempting to slice the potato.")\n        action = SliceObject(args={\'object_id\': \'potato\'})\n        success = act(env=env, action=action)\n        print(f"Result of SliceObject (potato) is: {success}")\n    except:\n        print("Could not slice the potato.")\n        return False, env_state\n\n    # Postconditions: The potato is sliced.\n    final_env_state = perceive(env)\n    return (final_env_state.isSliced(\'potato\')), final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject knife)
(GotoLocation potato)
(SliceObject potato)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['potato', 'sinkbasin'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['potato'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/4: PickupObject_202
Ground objects:
('Potato|-01.86|+00.74|+00.21',)
Successfully picked up a potato!
Failed to execute the function defined in code.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 2.638s
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 16 / 223 ID=train/pick_and_place_simple-PotatoSliced-None-SinkBasin-25/trial_T20190907_062007_896057 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 16 / 223 ID=train/pick_and_place_simple-PotatoSliced-None-SinkBasin-25/trial_T20190907_062007_896057 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 16 / 223 ID=train/pick_and_place_simple-PotatoSliced-None-SinkBasin-25/trial_T20190907_062007_896057 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 16 / 223 ID=train/pick_and_place_simple-PotatoSliced-None-SinkBasin-25/trial_T20190907_062007_896057 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  PickupObject_52 1.05 / 1.5 = 0.7000000000000001
  HeatObject_129 1.05 / 1.5 = 0.7000000000000001
  PickupObject_278 1.05 / 1.5 = 0.7000000000000001
  HeatObject_147 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_242 1.05 / 1.5 = 0.7000000000000001
  PickupObject_843 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_699 0.05 / 0.5 = 0.1
  SliceObject_229 0.05 / 0.5 = 0.1
  SliceObject_293 0.05 / 0.5 = 0.1
  ToggleObjectOn_30 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_282 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_124 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_280 0.05 / 0.5 = 0.1
  PickupObject_405 0.05 / 0.5 = 0.1
  SliceObject_82 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_335 0.05 / 1.5 = 0.03333333333333333
  PickupObject_231 0.05 / 1.5 = 0.03333333333333333
  PickupObject_656 0.05 / 1.5 = 0.03333333333333333
  CleanObject_22 0.05 / 1.5 = 0.03333333333333333
  PickupObject_202 0.05 / 1.5 = 0.03333333333333333

Logging scored operators: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_motion_plans.json

Experiment Summary
================================================================================
Iteration: 0
Evaluated successful motion plans: 2 / 17 problems so far.
Overall successful motion plans: 2 / 223 problems.
Total problems: 223
Current operators: 223

Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 17 / 223 ID=train/pick_clean_then_place_in_recep-Tomato-None-CounterTop-14/trial_T20190909_012732_375728 AttemptIdx=0
Motion planning for: train/pick_clean_then_place_in_recep-Tomato-None-CounterTop-14/trial_T20190909_012732_375728
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_118', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'tomato'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the object.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the tomato!")\n    except:\n        print("Execution failure when attempting to pick up tomato.")\n        return False\n\n    # Postconditions: holding the tomato.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'CleanObject_19', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'tomato', 'sinkbasin'), 'body': '\n    # Preconditions: we should be holding the object.\n    if not env_state.holds(object_id):\n        print("Failure, not holding the tomato.")\n        return False, env_state\n\n    # Low-level actions: Wash the object if it is cleanable.\n    if env_state.cleanable(object_id):\n        try:\n            action = WashObject(args={\'object_id\': object_id, \'receptacle_object_id\': receptacle_object_id})\n            success = act(env=env, action=action)\n            print("Successfully cleaned the tomato!")\n        except:\n            print("Execution failure when attempting to wash the tomato.")\n            return False\n    else:\n        print("The tomato is not cleanable.")\n        return False, env_state\n    \n    # Low-level actions: Rinse and possibly dry the tomato if required.\n\n    # Postconditions: the tomato is clean.\n    final_env_state = perceive(env)\n    return (final_env_state.isClean(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_843', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'tomato', 'countertop'), 'body': '\n    # Preconditions: we should be holding the object and the object must be clean.\n    if not (env_state.holds(object_id) and env_state.isClean(object_id)):\n        print("Failure, not holding a clean tomato.")\n        return False, env_state\n\n    # Low-level actions: put the object on the receptacle (counter).\n    try:\n        print("Trying to place the clean tomato on the counter.")\n        action = PutObject(args={\'object_id\': object_id, \'receptacle_object_id\': receptacle_object_id})\n        success = act(env=env, action=action)\n        print(f"Result of PutObject is: {success}")\n    except:\n        print("Failure, could not place the tomato on the counter.")\n        return False, env_state\n\n    # Postconditions: not holding the object and the object is on the counter.\n    final_env_state = perceive(env)\n    return (not final_env_state.holds(object_id)) and (final_env_state.inReceptacle(object_id, receptacle_object_id)), final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject tomato)
(GotoLocation sinkbasin)
(CleanObject tomato)
(GotoLocation countertop)
(PutObject tomato countertop)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['tomato', 'countertop'], 'is_neg': False}

{'predicate_name': 'cleanable', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'isClean', 'arguments': ['tomato'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/3: PickupObject_118
Ground objects:
('Tomato|+01.76|+00.97|+00.52',)
Successfully picked up the tomato!
Successfully executed: PickupObject_118 with object_ids: ('Tomato|+01.76|+00.97|+00.52',)
Now on policy: 1/3: CleanObject_19
Ground objects:
('Tomato|+01.76|+00.97|+00.52', 'Sink|+01.10|+00.91|-01.60|SinkBasin')
Execution failure when attempting to wash the tomato.
Failed to execute the function defined in code.
Ground objects:
('Tomato|+01.76|+00.97|+00.52', 'Sink|+01.10|+00.91|-01.60|SinkBasin')
Execution failure when attempting to wash the tomato.
Failed to execute the function defined in code.
Ground objects:
('Tomato|-00.30|+01.12|-01.38', 'Sink|+01.10|+00.91|-01.60|SinkBasin')
Failure, not holding the tomato.
Ground objects:
('Tomato|-00.30|+01.12|-01.38', 'Sink|+01.10|+00.91|-01.60|SinkBasin')
Failure, not holding the tomato.
Ground objects:
('Tomato|-00.30|+01.12|-01.38', 'Sink|+01.10|+00.91|-01.60|SinkBasin')
Failure, not holding the tomato.
Ground objects:
('Tomato|+00.73|+00.97|+00.74', 'Sink|+01.10|+00.91|-01.60|SinkBasin')
Failure, not holding the tomato.
Ground objects:
('Tomato|+00.73|+00.97|+00.74', 'Sink|+01.10|+00.91|-01.60|SinkBasin')
Failure, not holding the tomato.
Ground objects:
('Tomato|+00.73|+00.97|+00.74', 'Sink|+01.10|+00.91|-01.60|SinkBasin')
Failure, not holding the tomato.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 2.960s
  Failed at operator: 2 / 3 operators in task plan.
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 17 / 223 ID=train/pick_clean_then_place_in_recep-Tomato-None-CounterTop-14/trial_T20190909_012732_375728 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 3 operators in task plan.
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 17 / 223 ID=train/pick_clean_then_place_in_recep-Tomato-None-CounterTop-14/trial_T20190909_012732_375728 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 3 operators in task plan.
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 17 / 223 ID=train/pick_clean_then_place_in_recep-Tomato-None-CounterTop-14/trial_T20190909_012732_375728 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 3 operators in task plan.
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 17 / 223 ID=train/pick_clean_then_place_in_recep-Tomato-None-CounterTop-14/trial_T20190909_012732_375728 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 3 operators in task plan.
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  PickupObject_52 1.05 / 1.5 = 0.7000000000000001
  HeatObject_129 1.05 / 1.5 = 0.7000000000000001
  PickupObject_278 1.05 / 1.5 = 0.7000000000000001
  HeatObject_147 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_242 1.05 / 1.5 = 0.7000000000000001
  PickupObject_843 1.05 / 1.5 = 0.7000000000000001
  PickupObject_118 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_699 0.05 / 0.5 = 0.1
  SliceObject_229 0.05 / 0.5 = 0.1
  SliceObject_293 0.05 / 0.5 = 0.1
  ToggleObjectOn_30 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_282 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_124 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_280 0.05 / 0.5 = 0.1
  PickupObject_405 0.05 / 0.5 = 0.1
  SliceObject_82 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_843 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_335 0.05 / 1.5 = 0.03333333333333333
  PickupObject_231 0.05 / 1.5 = 0.03333333333333333
  PickupObject_656 0.05 / 1.5 = 0.03333333333333333
  CleanObject_22 0.05 / 1.5 = 0.03333333333333333
  PickupObject_202 0.05 / 1.5 = 0.03333333333333333
  CleanObject_19 0.05 / 1.5 = 0.03333333333333333
Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 18 / 223 ID=train/pick_heat_then_place_in_recep-Potato-None-SinkBasin-26/trial_T20190909_095444_078134 AttemptIdx=0
Motion planning for: train/pick_heat_then_place_in_recep-Potato-None-SinkBasin-26/trial_T20190909_095444_078134
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_970', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'potato'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the object.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the potato!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: holding the object (potato).\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'HeatObject_134', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'potato', 'microwave'), 'body': '\n    # Preconditions: we should be holding the object (potato).\n    if (not env_state.holds(object_id)):\n        print("Failure, not holding the potato.")\n        return False, env_state\n\n    # Low-level actions: open the receptacle (microwave).\n    try:\n        action = OpenObject(args={\'object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Successfully opened the microwave!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Low-level actions: put the object (potato) in the receptacle (microwave).\n    try:\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print(f"Put the potato in the microwave: {success}")\n    except:\n        print("Failure, could not place the potato in the microwave.")\n        return False, env_state\n\n    # Low-level actions: Close the microwave.\n    try:\n        action = CloseObject(args={\'object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print(f"Closed the microwave: {success}")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Low-level actions: Turn on the microwave to heat the potato.\n    try:\n        action = ToggleObjectOn(args={\'object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print(f"Turned on the microwave: {success}")\n    except:\n        print("Execution failure...")\n        return False\n        \n    # Mock delay to simulate heating time.\n    time.sleep(5)\n    \n    # Low-level actions: Turn off the microwave after heating.\n    try:\n        action = ToggleObjectOff(args={\'object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print(f"Turned off the microwave: {success}")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Low-level actions: Open the microwave to retrieve the heated potato.\n    try:\n        action = OpenObject(args={\'object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print(f"Opened the microwave: {success}")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Low-level actions: Take the potato out of the microwave.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Picked up the heated potato!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: Potato is hot.\n    final_env_state = perceive(env)\n    return (final_env_state.isHot(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_812', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'potato', 'sinkbasin'), 'body': '\n    # Preconditions: we should be holding the object (hot potato).\n    if (not env_state.holds(object_id)):\n        print("Failure, not holding the heated potato.")\n        return False, env_state\n\n    # Low-level actions: put the potato in the sink basin.\n    try {\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Put the potato in the sink: {success}")\n    except:\n        print("Failure, could not place the heated potato in the sink.")\n        return False, env_state\n\n    # Postconditions: not holding the potato and heated potato is in the sink basin.\n    final_env_state = perceive(env)\n    if (not final_env_state.holds(object_id)) and (final_env_state.inReceptacle(object_id, receptacle_object_id)):\n        return True, final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject potato)
(GotoLocation microwave)
(HeatObject potato)
(GotoLocation sinkbasin)
(PutObject potato sinkbasin)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['potato', 'sinkbasin'], 'is_neg': False}

{'predicate_name': 'heatable', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'isHot', 'arguments': ['potato'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/3: PickupObject_970
Ground objects:
('Potato|-01.27|+00.82|+00.39',)
Successfully picked up the potato!
Successfully executed: PickupObject_970 with object_ids: ('Potato|-01.27|+00.82|+00.39',)
Now on policy: 1/3: HeatObject_134
Ground objects:
('Potato|-01.27|+00.82|+00.39', 'Microwave|-00.36|+00.91|+00.22')
Successfully opened the microwave!
Put the potato in the microwave: True
Closed the microwave: True
Turned on the microwave: True
Failed to execute the function defined in code.
Ground objects:
('Potato|-02.17|+00.95|+00.60', 'Microwave|-00.36|+00.91|+00.22')
Failure, not holding the potato.
Ground objects:
('Potato|-02.17|+00.95|+00.60', 'Microwave|-00.36|+00.91|+00.22')
Failure, not holding the potato.
Ground objects:
('Potato|-02.38|+00.93|+02.57', 'Microwave|-00.36|+00.91|+00.22')
Failure, not holding the potato.
Ground objects:
('Potato|-02.38|+00.93|+02.57', 'Microwave|-00.36|+00.91|+00.22')
Failure, not holding the potato.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 3.583s
  Failed at operator: 2 / 3 operators in task plan.
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 18 / 223 ID=train/pick_heat_then_place_in_recep-Potato-None-SinkBasin-26/trial_T20190909_095444_078134 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 3 operators in task plan.
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 18 / 223 ID=train/pick_heat_then_place_in_recep-Potato-None-SinkBasin-26/trial_T20190909_095444_078134 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 3 operators in task plan.
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 18 / 223 ID=train/pick_heat_then_place_in_recep-Potato-None-SinkBasin-26/trial_T20190909_095444_078134 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 3 operators in task plan.
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 18 / 223 ID=train/pick_heat_then_place_in_recep-Potato-None-SinkBasin-26/trial_T20190909_095444_078134 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 3 operators in task plan.
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  PickupObject_52 1.05 / 1.5 = 0.7000000000000001
  HeatObject_129 1.05 / 1.5 = 0.7000000000000001
  PickupObject_278 1.05 / 1.5 = 0.7000000000000001
  HeatObject_147 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_242 1.05 / 1.5 = 0.7000000000000001
  PickupObject_843 1.05 / 1.5 = 0.7000000000000001
  PickupObject_118 1.05 / 1.5 = 0.7000000000000001
  PickupObject_970 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_699 0.05 / 0.5 = 0.1
  SliceObject_229 0.05 / 0.5 = 0.1
  SliceObject_293 0.05 / 0.5 = 0.1
  ToggleObjectOn_30 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_282 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_124 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_280 0.05 / 0.5 = 0.1
  PickupObject_405 0.05 / 0.5 = 0.1
  SliceObject_82 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_843 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_812 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_335 0.05 / 1.5 = 0.03333333333333333
  PickupObject_231 0.05 / 1.5 = 0.03333333333333333
  PickupObject_656 0.05 / 1.5 = 0.03333333333333333
  CleanObject_22 0.05 / 1.5 = 0.03333333333333333
  PickupObject_202 0.05 / 1.5 = 0.03333333333333333
  CleanObject_19 0.05 / 1.5 = 0.03333333333333333
  HeatObject_134 0.05 / 1.5 = 0.03333333333333333

Logging scored operators: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_motion_plans.json

Experiment Summary
================================================================================
Iteration: 0
Evaluated successful motion plans: 2 / 19 problems so far.
Overall successful motion plans: 2 / 223 problems.
Total problems: 223
Current operators: 223

Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 19 / 223 ID=train/look_at_obj_in_light-Statue-None-DeskLamp-218/trial_T20190909_085327_810149 AttemptIdx=0
Motion planning for: train/look_at_obj_in_light-Statue-None-DeskLamp-218/trial_T20190909_085327_810149
Proposed goal is: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o StatueType)
                (holds ?a ?o)
            )
    ))))))
Ground truth oracle goal is: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot DeskLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o StatueType)
                (holds ?a ?o)
            )
    ))))))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'EnsureLightIsOn_0', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'desklamp'), 'body': '\n    # Preconditions: Light is toggleable and not currently toggled on.\n\n    # Check if light can be toggled\n    if env_state.toggleable(object_id) and not env_state.isToggled(object_id):\n        # Low-level actions: toggle the light on.\n        try:\n            action = ToggleObjectOn(args={\'object_id\':object_id})\n            success = act(env=env, action=action)\n            print("Successfully turned on the light!")\n        except:\n            print("Execution failure...")\n            return False\n\n        # Postconditions: The light is on.\n        final_env_state = perceive(env)\n        return (final_env_state.isToggled(object_id)), final_env_state\n    else:\n        # Light is already on or cannot be toggled.\n        return True, env_state\n'})

frozendict.frozendict({'action': 'TransportObject_0', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'statue', 'desklamp'), 'body': '\n    # Preconditions: we should not already be holding the object, and the light should be on.\n\n    if (not env_state.holds(object_id)) and env_state.isToggled(receptacle_object_id):\n        # Low-level actions: pick up the object.\n        try:\n            action = PickupObject(args={\'object_id\':object_id})\n            success = act(env=env, action=action)\n            print("Successfully picked up the statue!")\n        except:\n            print("Execution failure...")\n            return False, env_state\n\n        # Assuming the desklamp is near a surface where we want to place the statue.\n        # Low-level actions: put the object near the light.\n        try:\n            action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n            success = act(env=env, action=action)\n            print(f"Result of PutObject is: {success}")\n        except:\n            print("Failure, could not place near the light.")\n            return False, env_state\n\n        # Postconditions: The object is near the light, and the light is on.\n        final_env_state = perceive(env)\n        return (final_env_state.inReceptacle(object_id, receptacle_object_id)), final_env_state\n    else:\n        # Object is already being held or light is not on.\n        return False, env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation diningtable)
(PickupObject statue)
(GotoLocation desklamp)
(ToggleObject desklamp)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'toggleable', 'arguments': ['desklamp'], 'is_neg': False}

{'predicate_name': 'isToggled', 'arguments': ['desklamp'], 'is_neg': False}

{'predicate_name': 'holds', 'arguments': ['?a', 'statue'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/2: EnsureLightIsOn_0
Ground objects:
('DeskLamp|+00.89|+00.54|+06.82',)
Successfully turned on the light!
Successfully executed: EnsureLightIsOn_0 with object_ids: ('DeskLamp|+00.89|+00.54|+06.82',)
Now on policy: 1/2: TransportObject_0
Ground objects:
('Statue|-05.52|+00.80|+04.25', 'DeskLamp|+00.89|+00.54|+06.82')
Successfully picked up the statue!
Result of PutObject is: False
Ground objects:
('Statue|-05.89|+00.79|+05.58', 'DeskLamp|+00.89|+00.54|+06.82')
Successfully picked up the statue!
Result of PutObject is: False
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 2.646s
  Failed at operator: 2 / 2 operators in task plan.
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 19 / 223 ID=train/look_at_obj_in_light-Statue-None-DeskLamp-218/trial_T20190909_085327_810149 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 2 operators in task plan.
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 19 / 223 ID=train/look_at_obj_in_light-Statue-None-DeskLamp-218/trial_T20190909_085327_810149 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 2 operators in task plan.
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 19 / 223 ID=train/look_at_obj_in_light-Statue-None-DeskLamp-218/trial_T20190909_085327_810149 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 2 operators in task plan.
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 19 / 223 ID=train/look_at_obj_in_light-Statue-None-DeskLamp-218/trial_T20190909_085327_810149 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 2 operators in task plan.
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  PickupObject_52 1.05 / 1.5 = 0.7000000000000001
  HeatObject_129 1.05 / 1.5 = 0.7000000000000001
  PickupObject_278 1.05 / 1.5 = 0.7000000000000001
  HeatObject_147 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_242 1.05 / 1.5 = 0.7000000000000001
  PickupObject_843 1.05 / 1.5 = 0.7000000000000001
  PickupObject_118 1.05 / 1.5 = 0.7000000000000001
  PickupObject_970 1.05 / 1.5 = 0.7000000000000001
  EnsureLightIsOn_0 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_699 0.05 / 0.5 = 0.1
  SliceObject_229 0.05 / 0.5 = 0.1
  SliceObject_293 0.05 / 0.5 = 0.1
  ToggleObjectOn_30 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_282 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_124 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_280 0.05 / 0.5 = 0.1
  PickupObject_405 0.05 / 0.5 = 0.1
  SliceObject_82 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_843 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_812 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_335 0.05 / 1.5 = 0.03333333333333333
  PickupObject_231 0.05 / 1.5 = 0.03333333333333333
  PickupObject_656 0.05 / 1.5 = 0.03333333333333333
  CleanObject_22 0.05 / 1.5 = 0.03333333333333333
  PickupObject_202 0.05 / 1.5 = 0.03333333333333333
  CleanObject_19 0.05 / 1.5 = 0.03333333333333333
  HeatObject_134 0.05 / 1.5 = 0.03333333333333333
  TransportObject_0 0.05 / 1.5 = 0.03333333333333333
Evaluating [1/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 20 / 223 ID=train/look_at_obj_in_light-RemoteControl-None-FloorLamp-202/trial_T20190909_014548_223224 AttemptIdx=0
Motion planning for: train/look_at_obj_in_light-RemoteControl-None-FloorLamp-202/trial_T20190909_014548_223224
Proposed goal is: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RemoteControlType)
                (holds ?a ?o)
            )
    ))))))
Ground truth oracle goal is: 
(:goal
        (exists (?a - agent)
        (exists (?r - receptacle)
        (exists (?o - object)
        (exists (?ot - object)
        (exists (?l - location)
            (and 
                (objectType ?ot FloorLampType)
                (toggleable ?ot)
                (isToggled ?ot) 
                (objectAtLocation ?ot ?l)
                (atLocation ?a ?l)
                (objectType ?o RemoteControlType)
                (holds ?a ?o)
            )
    ))))))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'ToggleObjectOn_76', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'floorlamp'), 'body': '\n    # Preconditions: floorlamp should be off and toggleable.\n    if not (env_state.toggleable(object_id) and not env_state.isToggled(object_id)):\n        print("Failure, floorlamp not toggleable or already on.")\n        return False, env_state\n\n    # Low-level actions: turn on the floorlamp.\n    try:\n        action = ToggleObjectOn(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully turned on the floorlamp!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: floorlamp is on.\n    final_env_state = perceive(env)\n    return (final_env_state.isToggled(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PickupObject_254', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'remotecontrol'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the remote control.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the remote control!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: holding the remote control.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_179', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'remotecontrol', 'coffeetable'), 'body': '\n    # Preconditions: holding the remote control and floorlamp is on.\n    if (not env_state.holds(object_id)) or (not env_state.isToggled("floorlamp")):\n        print("Failure, not holding remote control or floorlamp is off.")\n        return False, env_state\n\n    # Low-level actions: put the remote control on the coffee table.\n    try:\n        print("Trying to put remote control near light.")\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Result of PutObject is: {success}")\n    except:\n        print("Failure, could not place remote control near light.")\n        return False, env_state\n\n    # Postconditions: not holding remote control and it is in the vicinity of the light.\n    final_env_state = perceive(env)\n    return (not final_env_state.holds(object_id)) and final_env_state.inReceptacle(object_id, receptacle_object_id), final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation remotecontrol)
(PickupObject remotecontrol)
(GotoLocation floorlamp)
(ToggleObject floorlamp)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'toggleable', 'arguments': ['floorlamp'], 'is_neg': False}

{'predicate_name': 'isToggled', 'arguments': ['floorlamp'], 'is_neg': False}

{'predicate_name': 'holds', 'arguments': ['?a', 'remotecontrol'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/3: ToggleObjectOn_76
Ground objects:
('FloorLamp|-03.69|+00.00|+04.01',)
Successfully turned on the floorlamp!
Successfully executed: ToggleObjectOn_76 with object_ids: ('FloorLamp|-03.69|+00.00|+04.01',)
Now on policy: 1/3: PickupObject_254
Ground objects:
('RemoteControl|-00.85|+00.55|+00.65',)
Successfully picked up the remote control!
Successfully executed: PickupObject_254 with object_ids: ('RemoteControl|-00.85|+00.55|+00.65',)
Now on policy: 2/3: PutObjectInReceptacle_179
Ground objects:
('RemoteControl|-00.85|+00.55|+00.65', 'CoffeeTable|-01.74|+00.00|+02.36')
Failed to execute the function defined in code.
Ground objects:
('RemoteControl|-00.85|+00.55|+00.65', 'CoffeeTable|-01.74|+00.00|+02.36')
Failed to execute the function defined in code.
Ground objects:
('RemoteControl|+00.88|+00.24|+00.55', 'CoffeeTable|-01.74|+00.00|+02.36')
Failure, not holding remote control or floorlamp is off.
Ground objects:
('RemoteControl|+00.88|+00.24|+00.55', 'CoffeeTable|-01.74|+00.00|+02.36')
Failure, not holding remote control or floorlamp is off.
Ground objects:
('RemoteControl|+00.88|+00.24|+00.55', 'CoffeeTable|-01.74|+00.00|+02.36')
Failure, not holding remote control or floorlamp is off.
Ground objects:
('RemoteControl|-01.65|+00.71|+03.76', 'CoffeeTable|-01.74|+00.00|+02.36')
Failure, not holding remote control or floorlamp is off.
Ground objects:
('RemoteControl|-01.65|+00.71|+03.76', 'CoffeeTable|-01.74|+00.00|+02.36')
Failure, not holding remote control or floorlamp is off.
Ground objects:
('RemoteControl|-01.65|+00.71|+03.76', 'CoffeeTable|-01.74|+00.00|+02.36')
Failure, not holding remote control or floorlamp is off.
Ground objects:
('RemoteControl|-00.60|+00.55|+00.56', 'CoffeeTable|-01.74|+00.00|+02.36')
Failure, not holding remote control or floorlamp is off.
Ground objects:
('RemoteControl|-00.60|+00.55|+00.56', 'CoffeeTable|-01.74|+00.00|+02.36')
Failure, not holding remote control or floorlamp is off.
Ground objects:
('RemoteControl|-00.60|+00.55|+00.56', 'CoffeeTable|-01.74|+00.00|+02.36')
Failure, not holding remote control or floorlamp is off.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 3.088s
  Failed at operator: 3 / 3 operators in task plan.
Evaluating [2/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 20 / 223 ID=train/look_at_obj_in_light-RemoteControl-None-FloorLamp-202/trial_T20190909_014548_223224 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 3 / 3 operators in task plan.
Evaluating [3/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 20 / 223 ID=train/look_at_obj_in_light-RemoteControl-None-FloorLamp-202/trial_T20190909_014548_223224 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 3 / 3 operators in task plan.
Evaluating [4/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 20 / 223 ID=train/look_at_obj_in_light-RemoteControl-None-FloorLamp-202/trial_T20190909_014548_223224 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 3 / 3 operators in task plan.
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  PickupObject_52 1.05 / 1.5 = 0.7000000000000001
  HeatObject_129 1.05 / 1.5 = 0.7000000000000001
  PickupObject_278 1.05 / 1.5 = 0.7000000000000001
  HeatObject_147 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_242 1.05 / 1.5 = 0.7000000000000001
  PickupObject_843 1.05 / 1.5 = 0.7000000000000001
  PickupObject_118 1.05 / 1.5 = 0.7000000000000001
  PickupObject_970 1.05 / 1.5 = 0.7000000000000001
  EnsureLightIsOn_0 1.05 / 1.5 = 0.7000000000000001
  ToggleObjectOn_76 1.05 / 1.5 = 0.7000000000000001
  PickupObject_254 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_699 0.05 / 0.5 = 0.1
  SliceObject_229 0.05 / 0.5 = 0.1
  SliceObject_293 0.05 / 0.5 = 0.1
  ToggleObjectOn_30 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_282 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_124 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_280 0.05 / 0.5 = 0.1
  PickupObject_405 0.05 / 0.5 = 0.1
  SliceObject_82 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_843 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_812 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_335 0.05 / 1.5 = 0.03333333333333333
  PickupObject_231 0.05 / 1.5 = 0.03333333333333333
  PickupObject_656 0.05 / 1.5 = 0.03333333333333333
  CleanObject_22 0.05 / 1.5 = 0.03333333333333333
  PickupObject_202 0.05 / 1.5 = 0.03333333333333333
  CleanObject_19 0.05 / 1.5 = 0.03333333333333333
  HeatObject_134 0.05 / 1.5 = 0.03333333333333333
  TransportObject_0 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_179 0.05 / 1.5 = 0.03333333333333333

Logging scored operators: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_motion_plans.json

Experiment Summary
================================================================================
Iteration: 0
Evaluated successful motion plans: 2 / 21 problems so far.
Overall successful motion plans: 2 / 223 problems.
Total problems: 223
Current operators: 223

Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 21 / 223 ID=train/pick_and_place_simple-Glassbottle-None-Fridge-16/trial_T20190908_045933_322597 AttemptIdx=0
Motion planning for: train/pick_and_place_simple-Glassbottle-None-Fridge-16/trial_T20190908_045933_322597
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o GlassbottleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o GlassbottleType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r) 
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_929', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'vase'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the object.\n    try:\n        action = PickupObject(args={\'object_id\': object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the vase!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: holding the vase.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'OpenReceptacle_0', 'argument_names': ('env_state', 'env', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'fridge'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: open the receptacle (fridge).\n    try:\n        action = OpenObject(args={\'object_id\': receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Successfully opened the fridge!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: the fridge is open.\n    final_env_state = perceive(env)\n    return final_env_state.opened(receptacle_object_id), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_350', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'vase', 'fridge'), 'body': '\n    # Preconditions: We should be holding the object and the fridge should be open.\n    if not (env_state.holds(object_id) and env_state.opened(receptacle_object_id)):\n        print("Failure, either not holding object or fridge is not open.")\n        return False, env_state\n\n    # Low-level actions: put the object in the receptacle (fridge).\n    try:\n        print("Trying to put the vase in the fridge.")\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Result of PutObject is: {success}")\n    except:\n        print("Failure, could not place the vase in the fridge.")\n        return False, env_state\n\n    # Postconditions: not holding the object and the object is in the receptacle.\n    final_env_state = perceive(env)\n    if not final_env_state.holds(object_id) and final_env_state.inReceptacle(object_id, receptacle_object_id):\n        return True, final_env_state\n'})

frozendict.frozendict({'action': 'CloseReceptacle_0', 'argument_names': ('env_state', 'env', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'fridge'), 'body': '\n    # Preconditions: The fridge should be open.\n    if not env_state.opened(receptacle_object_id):\n        print("Failure, the fridge is not open.")\n        return False, env_state\n\n    # Low-level actions: close the receptacle (fridge).\n    try:\n        action = CloseObject(args={\'object_id\': receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Successfully closed the fridge!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: the fridge is closed.\n    final_env_state = perceive(env)\n    return (not final_env_state.opened(receptacle_object_id)), final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject glassbottle)
(GotoLocation fridge)
(PutObject glassbottle fridge)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['glassbottle', 'fridge'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/4: PickupObject_929
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 3.054s
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 21 / 223 ID=train/pick_and_place_simple-Glassbottle-None-Fridge-16/trial_T20190908_045933_322597 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 21 / 223 ID=train/pick_and_place_simple-Glassbottle-None-Fridge-16/trial_T20190908_045933_322597 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 21 / 223 ID=train/pick_and_place_simple-Glassbottle-None-Fridge-16/trial_T20190908_045933_322597 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 21 / 223 ID=train/pick_and_place_simple-Glassbottle-None-Fridge-16/trial_T20190908_045933_322597 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  PickupObject_52 1.05 / 1.5 = 0.7000000000000001
  HeatObject_129 1.05 / 1.5 = 0.7000000000000001
  PickupObject_278 1.05 / 1.5 = 0.7000000000000001
  HeatObject_147 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_242 1.05 / 1.5 = 0.7000000000000001
  PickupObject_843 1.05 / 1.5 = 0.7000000000000001
  PickupObject_118 1.05 / 1.5 = 0.7000000000000001
  PickupObject_970 1.05 / 1.5 = 0.7000000000000001
  EnsureLightIsOn_0 1.05 / 1.5 = 0.7000000000000001
  ToggleObjectOn_76 1.05 / 1.5 = 0.7000000000000001
  PickupObject_254 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_699 0.05 / 0.5 = 0.1
  SliceObject_229 0.05 / 0.5 = 0.1
  SliceObject_293 0.05 / 0.5 = 0.1
  ToggleObjectOn_30 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_282 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_124 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_280 0.05 / 0.5 = 0.1
  PickupObject_405 0.05 / 0.5 = 0.1
  SliceObject_82 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_843 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_812 0.05 / 0.5 = 0.1
  OpenReceptacle_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_350 0.05 / 0.5 = 0.1
  CloseReceptacle_0 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_335 0.05 / 1.5 = 0.03333333333333333
  PickupObject_231 0.05 / 1.5 = 0.03333333333333333
  PickupObject_656 0.05 / 1.5 = 0.03333333333333333
  CleanObject_22 0.05 / 1.5 = 0.03333333333333333
  PickupObject_202 0.05 / 1.5 = 0.03333333333333333
  CleanObject_19 0.05 / 1.5 = 0.03333333333333333
  HeatObject_134 0.05 / 1.5 = 0.03333333333333333
  TransportObject_0 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_179 0.05 / 1.5 = 0.03333333333333333
  PickupObject_929 0.05 / 1.5 = 0.03333333333333333
Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 22 / 223 ID=train/pick_heat_then_place_in_recep-BreadSliced-None-Fridge-2/trial_T20190909_075013_874186 AttemptIdx=0
Motion planning for: train/pick_heat_then_place_in_recep-BreadSliced-None-Fridge-2/trial_T20190909_075013_874186
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o BreadType) 
                (receptacleType ?r FridgeType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_458', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'bread'), 'body': '\n# Preconditions: None.\n\n# Low-level actions: pick up the bread object.\ntry:\n    action = PickupObject(args={\'object_id\':object_id})\n    success = act(env=env, action=action)\n    print("Successfully picked up the bread.")\nexcept:\n    print("Execution failure when attempting to pick up the bread.")\n    return False\n\n# Postconditions: holding the bread.\nfinal_env_state = perceive(env)\nreturn (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'SliceObject_137', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'bread'), 'body': '\n# Preconditions: Must be holding the bread object.\nif (not env_state.holds(object_id)):\n    print("Failure: not holding the bread to slice.")\n    return False, env_state\n\n# If the bread isn\'t already sliced, slice it.\nif (not env_state.isSliced(object_id)):\n    try:\n        action = SliceObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully sliced the bread.")\n    except:\n        print("Execution failure when attempting to slice the bread.")\n        return False\nelse:\n    print("The bread is already sliced.")\n\n# Postconditions: Bread is sliced.\nfinal_env_state = perceive(env)\nreturn (final_env_state.isSliced(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_432', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'bread', 'fridge'), 'body': '\n# Preconditions: Bread should be warm and in hand.\nif (not env_state.isHot(object_id) or not env_state.holds(object_id)):\n    print("Failure: bread is not warm or not being held.")\n    return False, env_state\n\n# Low-level actions: open the fridge, then put the bread in the fridge.\ntry:\n    action = OpenObject(args={\'object_id\':\'fridge\'})\n    success = act(env=env, action=action)\n    print(f"Fridge opened: {success}")\n    action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':\'fridge\'})\n    success = act(env=env, action=action)\n    print(f"Put warm bread in fridge: {success}")\n    action = CloseObject(args={\'object_id\':\'fridge\'})\n    success = act(env=env, action=action)\n    print(f"Fridge closed: {success}")\nexcept:\n    print("Execution failure when attempting to put the warm bread in the fridge.")\n    return False, env_state\n\n# Postconditions: Bread is no longer in hand and is inside the fridge, fridge is closed.\nfinal_env_state = perceive(env)\nreturn (not final_env_state.holds(object_id) and final_env_state.inReceptacle(object_id, \'fridge\')), final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject knife)
(GotoLocation bread)
(SliceObject bread)
(GotoLocation drawer)
(PutObject knife drawer)
(GotoLocation countertop)
(PickupObject bread)
(GotoLocation microwave)
(HeatObject bread)
(GotoLocation fridge)
(PutObject bread fridge)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['bread', 'fridge'], 'is_neg': False}

{'predicate_name': 'heatable', 'arguments': ['bread'], 'is_neg': False}

{'predicate_name': 'isHot', 'arguments': ['bread'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['bread'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['bread'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/3: PickupObject_458
Ground objects:
('Bread|+00.32|+01.01|+00.97',)
Failed to execute the function defined in code.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 2.495s
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 22 / 223 ID=train/pick_heat_then_place_in_recep-BreadSliced-None-Fridge-2/trial_T20190909_075013_874186 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 22 / 223 ID=train/pick_heat_then_place_in_recep-BreadSliced-None-Fridge-2/trial_T20190909_075013_874186 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 22 / 223 ID=train/pick_heat_then_place_in_recep-BreadSliced-None-Fridge-2/trial_T20190909_075013_874186 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 22 / 223 ID=train/pick_heat_then_place_in_recep-BreadSliced-None-Fridge-2/trial_T20190909_075013_874186 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  PickupObject_52 1.05 / 1.5 = 0.7000000000000001
  HeatObject_129 1.05 / 1.5 = 0.7000000000000001
  PickupObject_278 1.05 / 1.5 = 0.7000000000000001
  HeatObject_147 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_242 1.05 / 1.5 = 0.7000000000000001
  PickupObject_843 1.05 / 1.5 = 0.7000000000000001
  PickupObject_118 1.05 / 1.5 = 0.7000000000000001
  PickupObject_970 1.05 / 1.5 = 0.7000000000000001
  EnsureLightIsOn_0 1.05 / 1.5 = 0.7000000000000001
  ToggleObjectOn_76 1.05 / 1.5 = 0.7000000000000001
  PickupObject_254 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_699 0.05 / 0.5 = 0.1
  SliceObject_229 0.05 / 0.5 = 0.1
  SliceObject_293 0.05 / 0.5 = 0.1
  ToggleObjectOn_30 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_282 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_124 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_280 0.05 / 0.5 = 0.1
  PickupObject_405 0.05 / 0.5 = 0.1
  SliceObject_82 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_843 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_812 0.05 / 0.5 = 0.1
  OpenReceptacle_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_350 0.05 / 0.5 = 0.1
  CloseReceptacle_0 0.05 / 0.5 = 0.1
  SliceObject_137 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_432 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_335 0.05 / 1.5 = 0.03333333333333333
  PickupObject_231 0.05 / 1.5 = 0.03333333333333333
  PickupObject_656 0.05 / 1.5 = 0.03333333333333333
  CleanObject_22 0.05 / 1.5 = 0.03333333333333333
  PickupObject_202 0.05 / 1.5 = 0.03333333333333333
  CleanObject_19 0.05 / 1.5 = 0.03333333333333333
  HeatObject_134 0.05 / 1.5 = 0.03333333333333333
  TransportObject_0 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_179 0.05 / 1.5 = 0.03333333333333333
  PickupObject_929 0.05 / 1.5 = 0.03333333333333333
  PickupObject_458 0.05 / 1.5 = 0.03333333333333333

Logging scored operators: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_motion_plans.json

Experiment Summary
================================================================================
Iteration: 0
Evaluated successful motion plans: 2 / 23 problems so far.
Overall successful motion plans: 2 / 223 problems.
Total problems: 223
Current operators: 223

Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 23 / 223 ID=train/pick_heat_then_place_in_recep-Egg-None-SinkBasin-8/trial_T20190907_001539_470934 AttemptIdx=0
Motion planning for: train/pick_heat_then_place_in_recep-Egg-None-SinkBasin-8/trial_T20190907_001539_470934
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o EggType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_723', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'egg'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the object.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up an object!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: holding the object.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'HeatObject_10', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'egg', 'stoveburner'), 'body': '\n    # Preconditions: we should be holding the object.\n    if (not env_state.holds(object_id)):\n        print("Failure, not holding object.")\n        return False, env_state\n\n    # Low-level actions: put the object on the stoveburner to heat it.\n    try:\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Put egg on stoveburner for heating.")\n    except:\n        print("Failed to put egg on stoveburner.")\n        return False, env_state\n\n    # Low-level actions: toggle the stoveburner on to cook the egg.\n    try:\n        action = ToggleObjectOn(args={\'object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Turned stoveburner on.")\n    except:\n        print("Could not turn stoveburner on.")\n        return False, env_state\n\n    # Assumption: Cooking takes some time, here simulated by rechecking the state after the assumed cooking duration.\n    # Postconditions: object is hot.\n    # This is a simplification, as we assume that the egg is cooked based on the stoveburner being toggled on.\n    final_env_state = perceive(env)\n    return (final_env_state.isHot(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PickupObject_819', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'egg'), 'body': '\n    # Preconditions: the object is hot and cooked.\n    if (not env_state.isHot(object_id)):\n        print("Failure, egg is not cooked.")\n        return False, env_state\n\n    # Low-level actions: pick up the cooked egg.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the cooked egg!")\n    except:\n        print("Execution failure, could not pick up the cooked egg...")\n        return False\n\n    # Postconditions: holding the cooked egg.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_235', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'egg', 'sinkbasin'), 'body': '\n    # Preconditions: we should be holding the cooked egg.\n    if (not env_state.holds(object_id)):\n        print("Failure, not holding the cooked egg.")\n        return False, env_state\n\n    # Low-level actions: put the cooked egg in the sink.\n    try:\n        print("Trying to drop the cooked egg in the sink.")\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Result of PutObject is: {success}")\n    except:\n        print("Failure, could not place the cooked egg in the sink.")\n        return False, env_state\n\n    # Postconditions: not holding the object and the object is in the receptacle.\n    final_env_state = perceive(env)\n    if (not final_env_state.holds(object_id)) and (final_env_state.inReceptacle(object_id, receptacle_object_id)):\n        return True, final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject egg)
(GotoLocation microwave)
(HeatObject egg)
(GotoLocation sinkbasin)
(PutObject egg sinkbasin)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['egg', 'sinkbasin'], 'is_neg': False}

{'predicate_name': 'heatable', 'arguments': ['egg'], 'is_neg': False}

{'predicate_name': 'isHot', 'arguments': ['egg'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/4: PickupObject_723
Ground objects:
('Egg|+01.26|+00.94|-01.33',)
Successfully picked up an object!
Successfully executed: PickupObject_723 with object_ids: ('Egg|+01.26|+00.94|-01.33',)
Now on policy: 1/4: HeatObject_10
Ground objects:
('Egg|+01.26|+00.94|-01.33', 'StoveBurner|-01.08|+00.94|-01.81')
Put egg on stoveburner for heating.
Turned stoveburner on.
Ground objects:
('Egg|+01.26|+00.94|-01.33', 'StoveBurner|-01.08|+00.94|-01.53')
Put egg on stoveburner for heating.
Turned stoveburner on.
Ground objects:
('Egg|+01.26|+00.94|-01.33', 'StoveBurner|-01.43|+00.94|-01.53')
Put egg on stoveburner for heating.
Turned stoveburner on.
Ground objects:
('Egg|+01.26|+00.94|-01.33', 'StoveBurner|-01.43|+00.94|-01.81')
Put egg on stoveburner for heating.
Turned stoveburner on.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 3.730s
  Failed at operator: 2 / 4 operators in task plan.
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 23 / 223 ID=train/pick_heat_then_place_in_recep-Egg-None-SinkBasin-8/trial_T20190907_001539_470934 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 4 operators in task plan.
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 23 / 223 ID=train/pick_heat_then_place_in_recep-Egg-None-SinkBasin-8/trial_T20190907_001539_470934 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 4 operators in task plan.
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 23 / 223 ID=train/pick_heat_then_place_in_recep-Egg-None-SinkBasin-8/trial_T20190907_001539_470934 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 4 operators in task plan.
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 23 / 223 ID=train/pick_heat_then_place_in_recep-Egg-None-SinkBasin-8/trial_T20190907_001539_470934 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 4 operators in task plan.
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  PickupObject_52 1.05 / 1.5 = 0.7000000000000001
  HeatObject_129 1.05 / 1.5 = 0.7000000000000001
  PickupObject_278 1.05 / 1.5 = 0.7000000000000001
  HeatObject_147 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_242 1.05 / 1.5 = 0.7000000000000001
  PickupObject_843 1.05 / 1.5 = 0.7000000000000001
  PickupObject_118 1.05 / 1.5 = 0.7000000000000001
  PickupObject_970 1.05 / 1.5 = 0.7000000000000001
  EnsureLightIsOn_0 1.05 / 1.5 = 0.7000000000000001
  ToggleObjectOn_76 1.05 / 1.5 = 0.7000000000000001
  PickupObject_254 1.05 / 1.5 = 0.7000000000000001
  PickupObject_723 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_699 0.05 / 0.5 = 0.1
  SliceObject_229 0.05 / 0.5 = 0.1
  SliceObject_293 0.05 / 0.5 = 0.1
  ToggleObjectOn_30 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_282 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_124 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_280 0.05 / 0.5 = 0.1
  PickupObject_405 0.05 / 0.5 = 0.1
  SliceObject_82 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_843 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_812 0.05 / 0.5 = 0.1
  OpenReceptacle_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_350 0.05 / 0.5 = 0.1
  CloseReceptacle_0 0.05 / 0.5 = 0.1
  SliceObject_137 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_432 0.05 / 0.5 = 0.1
  PickupObject_819 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_235 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_335 0.05 / 1.5 = 0.03333333333333333
  PickupObject_231 0.05 / 1.5 = 0.03333333333333333
  PickupObject_656 0.05 / 1.5 = 0.03333333333333333
  CleanObject_22 0.05 / 1.5 = 0.03333333333333333
  PickupObject_202 0.05 / 1.5 = 0.03333333333333333
  CleanObject_19 0.05 / 1.5 = 0.03333333333333333
  HeatObject_134 0.05 / 1.5 = 0.03333333333333333
  TransportObject_0 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_179 0.05 / 1.5 = 0.03333333333333333
  PickupObject_929 0.05 / 1.5 = 0.03333333333333333
  PickupObject_458 0.05 / 1.5 = 0.03333333333333333
  HeatObject_10 0.05 / 1.5 = 0.03333333333333333
Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 24 / 223 ID=train/pick_and_place_simple-LettuceSliced-None-DiningTable-24/trial_T20190906_220047_928975 AttemptIdx=0
Motion planning for: train/pick_and_place_simple-LettuceSliced-None-DiningTable-24/trial_T20190906_220047_928975
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o LettuceType) 
                (receptacleType ?r DiningTableType)
                (inReceptacle ?o ?r) 
                (sliceable ?o)
                (isSliced ?o) 
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_452', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'lettuce'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the object.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up lettuce!")\n    except Exception as e:\n        print(f"Execution failure: {e}")\n        return False\n\n    # Postconditions: holding the lettuce.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(\'lettuce\')), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_167', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'lettuce', 'diningtable'), 'body': '\n    # Preconditions: we should be holding the lettuce.\n    if (not env_state.holds(\'lettuce\')):\n        print("Failure, not holding lettuce.")\n        return False, env_state\n\n    # Low-level actions: put the lettuce on the table.\n    try:\n        print("Trying to put lettuce on the table.")\n        action = PutObject(args={\'object_id\': \'lettuce\', \'receptacle_object_id\': \'diningtable\'})\n        success = act(env=env, action=action)\n        print("Lettuce is now on the table!")\n    except Exception as e:\n        print(f"Failure, could not place lettuce on the table: {e}")\n        return False, env_state\n\n    # Postconditions: lettuce is on the table.\n    final_env_state = perceive(env)\n    return (final_env_state.inReceptacle(\'lettuce\', \'diningtable\')), final_env_state\n'})

frozendict.frozendict({'action': 'PickupObject_1105', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'knife'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the knife.\n    try:\n        action = PickupObject(args={\'object_id\': \'knife\'})\n        success = act(env=env, action=action)\n        print("Successfully picked up knife!")\n    except Exception as e:\n        print(f"Execution failure: {e}")\n        return False\n\n    # Postconditions: holding the knife.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(\'knife\')), final_env_state\n'})

frozendict.frozendict({'action': 'SliceObject_307', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'lettuce'), 'body': '\n    # Preconditions: we should be holding the knife and the lettuce should be on the table.\n    if (not env_state.holds(\'knife\')) or (not env_state.inReceptacle(\'lettuce\', \'diningtable\')):\n        print("Failure, not holding knife or lettuce is not on the table.")\n        return False, env_state\n\n    # Low-level actions: slice the lettuce with the knife.\n    try:\n        print("Trying to slice the lettuce.")\n        action = SliceObject(args={\'object_id\': \'lettuce\'})\n        success = act(env=env, action=action)\n        print("Lettuce has been sliced!")\n    except Exception as e:\n        print(f"Failure, could not slice the lettuce: {e}")\n        return False, env_state\n\n    # Postconditions: lettuce should be sliced.\n    final_env_state = perceive(env)\n    return (final_env_state.isSliced(\'lettuce\')), final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation diningtable)
(PickupObject knife)
(GotoLocation lettuce)
(SliceObject lettuce)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['lettuce', 'diningtable'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['lettuce'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['lettuce'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/4: PickupObject_452
Ground objects:
('Lettuce|-01.19|+00.98|+01.56',)
Successfully picked up lettuce!
Failed to execute the function defined in code.
Ground objects:
('Lettuce|+00.73|+00.90|+02.37',)
Successfully picked up lettuce!
Failed to execute the function defined in code.
Ground objects:
('Lettuce|-02.69|+01.27|+02.22',)
Successfully picked up lettuce!
Failed to execute the function defined in code.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 2.571s
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 24 / 223 ID=train/pick_and_place_simple-LettuceSliced-None-DiningTable-24/trial_T20190906_220047_928975 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 24 / 223 ID=train/pick_and_place_simple-LettuceSliced-None-DiningTable-24/trial_T20190906_220047_928975 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 24 / 223 ID=train/pick_and_place_simple-LettuceSliced-None-DiningTable-24/trial_T20190906_220047_928975 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 24 / 223 ID=train/pick_and_place_simple-LettuceSliced-None-DiningTable-24/trial_T20190906_220047_928975 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  PickupObject_52 1.05 / 1.5 = 0.7000000000000001
  HeatObject_129 1.05 / 1.5 = 0.7000000000000001
  PickupObject_278 1.05 / 1.5 = 0.7000000000000001
  HeatObject_147 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_242 1.05 / 1.5 = 0.7000000000000001
  PickupObject_843 1.05 / 1.5 = 0.7000000000000001
  PickupObject_118 1.05 / 1.5 = 0.7000000000000001
  PickupObject_970 1.05 / 1.5 = 0.7000000000000001
  EnsureLightIsOn_0 1.05 / 1.5 = 0.7000000000000001
  ToggleObjectOn_76 1.05 / 1.5 = 0.7000000000000001
  PickupObject_254 1.05 / 1.5 = 0.7000000000000001
  PickupObject_723 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_699 0.05 / 0.5 = 0.1
  SliceObject_229 0.05 / 0.5 = 0.1
  SliceObject_293 0.05 / 0.5 = 0.1
  ToggleObjectOn_30 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_282 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_124 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_280 0.05 / 0.5 = 0.1
  PickupObject_405 0.05 / 0.5 = 0.1
  SliceObject_82 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_843 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_812 0.05 / 0.5 = 0.1
  OpenReceptacle_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_350 0.05 / 0.5 = 0.1
  CloseReceptacle_0 0.05 / 0.5 = 0.1
  SliceObject_137 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_432 0.05 / 0.5 = 0.1
  PickupObject_819 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_235 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_167 0.05 / 0.5 = 0.1
  PickupObject_1105 0.05 / 0.5 = 0.1
  SliceObject_307 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_335 0.05 / 1.5 = 0.03333333333333333
  PickupObject_231 0.05 / 1.5 = 0.03333333333333333
  PickupObject_656 0.05 / 1.5 = 0.03333333333333333
  CleanObject_22 0.05 / 1.5 = 0.03333333333333333
  PickupObject_202 0.05 / 1.5 = 0.03333333333333333
  CleanObject_19 0.05 / 1.5 = 0.03333333333333333
  HeatObject_134 0.05 / 1.5 = 0.03333333333333333
  TransportObject_0 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_179 0.05 / 1.5 = 0.03333333333333333
  PickupObject_929 0.05 / 1.5 = 0.03333333333333333
  PickupObject_458 0.05 / 1.5 = 0.03333333333333333
  HeatObject_10 0.05 / 1.5 = 0.03333333333333333
  PickupObject_452 0.05 / 1.5 = 0.03333333333333333

Logging scored operators: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_motion_plans.json

Experiment Summary
================================================================================
Iteration: 0
Evaluated successful motion plans: 2 / 25 problems so far.
Overall successful motion plans: 2 / 223 problems.
Total problems: 223
Current operators: 223

Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 25 / 223 ID=train/pick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin-13/trial_T20190919_030951_364977 AttemptIdx=0
Motion planning for: train/pick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin-13/trial_T20190919_030951_364977
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'SliceObject_228', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'potato'), 'body': '\n    # Preconditions: The object must be sliceable.\n    if not env_state.sliceable(object_id):\n        print("Failure, object not sliceable.")\n        return False\n\n    # Low-level actions: slice the object.\n    try:\n        action = SliceObject(args={\'object_id\': object_id})\n        success = act(env=env, action=action)\n        if not success:\n            print("Failure, could not slice object.")\n            return False\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: the object is sliced.\n    final_env_state = perceive(env)\n    return (final_env_state.isSliced(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'CoolObject_94', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'potato', 'fridge'), 'body': '\n    # Preconditions: We need to check if the potato slice is cool already, or if it is coolable.\n    if not (env_state.isCool(object_id) or env_state.coolable(object_id)):\n        print("Failure, object not cool and not coolable.")\n        return False, env_state\n\n    # Preconditions: If the object isn\'t already cool, the object should be placed in the fridge to cool.\n    if not env_state.isCool(object_id):\n        # Open the fridge if it\'s not open.\n        if not env_state.opened(\'fridge\'):\n            try:\n                action = OpenObject(args={\'object_id\': \'fridge\'})\n                success = act(env=env, action=action)\n                if not success:\n                    print("Failure, could not open fridge.")\n                    return False\n            except:\n                print("Execution failure...")\n                return False\n\n        # Put the potato slice into the fridge.\n        try:\n            action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':\'fridge\'})\n            success = act(env=env, action=action)\n            if not success:\n                print("Failure, could not place object in fridge.")\n                return False\n        except:\n            print("Execution failure...")\n            return False\n\n        # Assuming there\'s a wait for the object to cool down. This is simplified as immediate.\n\n        # Take the potato slice out of the fridge.\n        try:\n            action = PickupObject(args={\'object_id\': object_id})\n            success = act(env=env, action=action)\n            if not success:\n                print("Failure, could not pick up object from fridge.")\n                return False\n        except:\n            print("Execution failure...")\n            return False\n\n        # Close the fridge.\n        try:\n            action = CloseObject(args={\'object_id\': \'fridge\'})\n            success = act(env=env, action=action)\n        except:\n            print("Execution failure...")\n\n    # Postconditions: the potato slice is cool.\n    final_env_state = perceive(env)\n    return (final_env_state.isCool(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_259', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'potato', 'sinkbasin'), 'body': '\n    # Preconditions: The object must be a cool potato slice, and we should be holding the object.\n    if not (env_state.isSliced(object_id) and env_state.isCool(object_id) and env_state.holds(object_id)):\n        print("Failure, preconditions not met: object must be a sliced, cool potato, and must be held.")\n        return False, env_state\n\n    # Low-level actions: put the object in the sinkbasin.\n    try:\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        if not success:\n            print("Failure, could not place object in sinkbasin.")\n            return False\n    except:\n        print("Execution failure...")\n        return False, env_state\n\n    # Postconditions: the object is in the sinkbasin.\n    final_env_state = perceive(env)\n    return (final_env_state.inReceptacle(object_id, receptacle_object_id)), final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject butterknife)
(GotoLocation potato)
(SliceObject potato)
(GotoLocation sinkbasin)
(PutObject butterknife sinkbasin)
(GotoLocation countertop)
(PickupObject potato)
(GotoLocation fridge)
(CoolObject potato)
(GotoLocation sinkbasin)
(PutObject potato sinkbasin)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['potato', 'sinkbasin'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['potato'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/3: SliceObject_228
Ground objects:
('Potato|-00.26|+00.96|+05.93',)
Failure, could not slice object.
Failed to execute the function defined in code.
Ground objects:
('Potato|-03.75|+00.10|+06.29',)
Failure, could not slice object.
Failed to execute the function defined in code.
Ground objects:
('Potato|-00.33|+00.96|+05.60',)
Failure, could not slice object.
Failed to execute the function defined in code.
Ground objects:
('Potato|-04.41|+00.96|+03.86',)
Failure, could not slice object.
Failed to execute the function defined in code.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 2.806s
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 25 / 223 ID=train/pick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin-13/trial_T20190919_030951_364977 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 25 / 223 ID=train/pick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin-13/trial_T20190919_030951_364977 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 25 / 223 ID=train/pick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin-13/trial_T20190919_030951_364977 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 25 / 223 ID=train/pick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin-13/trial_T20190919_030951_364977 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  PickupObject_52 1.05 / 1.5 = 0.7000000000000001
  HeatObject_129 1.05 / 1.5 = 0.7000000000000001
  PickupObject_278 1.05 / 1.5 = 0.7000000000000001
  HeatObject_147 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_242 1.05 / 1.5 = 0.7000000000000001
  PickupObject_843 1.05 / 1.5 = 0.7000000000000001
  PickupObject_118 1.05 / 1.5 = 0.7000000000000001
  PickupObject_970 1.05 / 1.5 = 0.7000000000000001
  EnsureLightIsOn_0 1.05 / 1.5 = 0.7000000000000001
  ToggleObjectOn_76 1.05 / 1.5 = 0.7000000000000001
  PickupObject_254 1.05 / 1.5 = 0.7000000000000001
  PickupObject_723 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_699 0.05 / 0.5 = 0.1
  SliceObject_229 0.05 / 0.5 = 0.1
  SliceObject_293 0.05 / 0.5 = 0.1
  ToggleObjectOn_30 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_282 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_124 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_280 0.05 / 0.5 = 0.1
  PickupObject_405 0.05 / 0.5 = 0.1
  SliceObject_82 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_843 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_812 0.05 / 0.5 = 0.1
  OpenReceptacle_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_350 0.05 / 0.5 = 0.1
  CloseReceptacle_0 0.05 / 0.5 = 0.1
  SliceObject_137 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_432 0.05 / 0.5 = 0.1
  PickupObject_819 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_235 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_167 0.05 / 0.5 = 0.1
  PickupObject_1105 0.05 / 0.5 = 0.1
  SliceObject_307 0.05 / 0.5 = 0.1
  CoolObject_94 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_259 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_335 0.05 / 1.5 = 0.03333333333333333
  PickupObject_231 0.05 / 1.5 = 0.03333333333333333
  PickupObject_656 0.05 / 1.5 = 0.03333333333333333
  CleanObject_22 0.05 / 1.5 = 0.03333333333333333
  PickupObject_202 0.05 / 1.5 = 0.03333333333333333
  CleanObject_19 0.05 / 1.5 = 0.03333333333333333
  HeatObject_134 0.05 / 1.5 = 0.03333333333333333
  TransportObject_0 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_179 0.05 / 1.5 = 0.03333333333333333
  PickupObject_929 0.05 / 1.5 = 0.03333333333333333
  PickupObject_458 0.05 / 1.5 = 0.03333333333333333
  HeatObject_10 0.05 / 1.5 = 0.03333333333333333
  PickupObject_452 0.05 / 1.5 = 0.03333333333333333
  SliceObject_228 0.05 / 1.5 = 0.03333333333333333
Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 26 / 223 ID=train/pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin-4/trial_T20190909_064937_166184 AttemptIdx=0
Motion planning for: train/pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin-4/trial_T20190909_064937_166184
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o TomatoType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o)
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_777', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'tomato'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the object.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the tomato!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: holding the object.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'SliceObject_120', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'tomato'), 'body': '\n    # Preconditions: we should be holding the object.\n    if not env_state.holds(object_id):\n        print("Failure, not holding the tomato.")\n        return False, env_state\n\n    # Low-level actions: slice the object.\n    try:\n        action = SliceObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Tomato sliced successfully!")\n    except:\n        print("Failure, could not slice the tomato.")\n        return False, env_state\n\n    # Postconditions: object is sliced.\n    final_env_state = perceive(env)\n    return (final_env_state.isSliced(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'ToggleObjectOn_64', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'stoveburner'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: turn on the stove burner.\n    try:\n        action = ToggleObjectOn(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Stove burner turned on successfully!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: stove burner is on.\n    final_env_state = perceive(env)\n    return (final_env_state.isToggled(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PutObject_18', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'tomato', 'stoveburner'), 'body': '\n    # Preconditions: holding the sliced tomato.\n    if not env_state.holds(object_id):\n        print("Failure, not holding the sliced tomato.")\n        return False, env_state\n\n    # Low-level actions: put the sliced tomato on the stove burner.\n    try:\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Put sliced tomato on the stove burner successfully!")\n    except:\n        print("Failure, could not place the sliced tomato on the stove burner.")\n        return False, env_state\n\n    # Postconditions: sliced tomato is being heated on the stove burner.\n    final_env_state = perceive(env)\n    return (env_state.isHot(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PickupObject_27', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'tomato'), 'body': '\n    # Preconditions: The tomato slice has been heated.\n\n    # Low-level actions: pick up the heated tomato slice.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the heated tomato slice!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: holding the heated tomato slice.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PutObject_100', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'tomato', 'sinkbasin'), 'body': '\n    # Preconditions: holding the heated tomato slice.\n    if not env_state.holds(object_id):\n        print("Failure, not holding the heated tomato slice.")\n        return False, env_state\n\n    # Low-level actions: put the heated tomato slice in the sink.\n    try:\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Placed the heated tomato slice in the sink successfully!")\n    except:\n        print("Failure, could not place the heated tomato slice in the sink.")\n        return False, env_state\n\n    # Postconditions: heated tomato slice is in the sink.\n    final_env_state = perceive(env)\n    return (final_env_state.inReceptacle(object_id, receptacle_object_id)), final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation diningtable)
(PickupObject knife)
(SliceObject tomato)
(GotoLocation sinkbasin)
(PutObject knife sinkbasin)
(GotoLocation diningtable)
(PickupObject tomato)
(GotoLocation microwave)
(HeatObject tomato)
(GotoLocation sinkbasin)
(PutObject tomato sinkbasin)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['tomato', 'sinkbasin'], 'is_neg': False}

{'predicate_name': 'heatable', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'isHot', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['tomato'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['tomato'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/6: PickupObject_777
Ground objects:
('Tomato|-00.79|+01.09|+03.27',)
Successfully picked up the tomato!
Successfully executed: PickupObject_777 with object_ids: ('Tomato|-00.79|+01.09|+03.27',)
Now on policy: 1/6: SliceObject_120
Ground objects:
('Tomato|-00.79|+01.09|+03.27',)
Tomato sliced successfully!
Ground objects:
('Tomato|-02.39|+01.17|+00.47',)
Failure, not holding the tomato.
Ground objects:
('Tomato|-02.39|+01.17|+00.47',)
Failure, not holding the tomato.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 3.176s
  Failed at operator: 2 / 6 operators in task plan.
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 26 / 223 ID=train/pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin-4/trial_T20190909_064937_166184 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 6 operators in task plan.
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 26 / 223 ID=train/pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin-4/trial_T20190909_064937_166184 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 6 operators in task plan.
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 26 / 223 ID=train/pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin-4/trial_T20190909_064937_166184 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 6 operators in task plan.
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 26 / 223 ID=train/pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin-4/trial_T20190909_064937_166184 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 6 operators in task plan.
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  PickupObject_52 1.05 / 1.5 = 0.7000000000000001
  HeatObject_129 1.05 / 1.5 = 0.7000000000000001
  PickupObject_278 1.05 / 1.5 = 0.7000000000000001
  HeatObject_147 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_242 1.05 / 1.5 = 0.7000000000000001
  PickupObject_843 1.05 / 1.5 = 0.7000000000000001
  PickupObject_118 1.05 / 1.5 = 0.7000000000000001
  PickupObject_970 1.05 / 1.5 = 0.7000000000000001
  EnsureLightIsOn_0 1.05 / 1.5 = 0.7000000000000001
  ToggleObjectOn_76 1.05 / 1.5 = 0.7000000000000001
  PickupObject_254 1.05 / 1.5 = 0.7000000000000001
  PickupObject_723 1.05 / 1.5 = 0.7000000000000001
  PickupObject_777 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_699 0.05 / 0.5 = 0.1
  SliceObject_229 0.05 / 0.5 = 0.1
  SliceObject_293 0.05 / 0.5 = 0.1
  ToggleObjectOn_30 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_282 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_124 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_280 0.05 / 0.5 = 0.1
  PickupObject_405 0.05 / 0.5 = 0.1
  SliceObject_82 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_843 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_812 0.05 / 0.5 = 0.1
  OpenReceptacle_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_350 0.05 / 0.5 = 0.1
  CloseReceptacle_0 0.05 / 0.5 = 0.1
  SliceObject_137 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_432 0.05 / 0.5 = 0.1
  PickupObject_819 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_235 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_167 0.05 / 0.5 = 0.1
  PickupObject_1105 0.05 / 0.5 = 0.1
  SliceObject_307 0.05 / 0.5 = 0.1
  CoolObject_94 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_259 0.05 / 0.5 = 0.1
  ToggleObjectOn_64 0.05 / 0.5 = 0.1
  PutObject_18 0.05 / 0.5 = 0.1
  PickupObject_27 0.05 / 0.5 = 0.1
  PutObject_100 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_335 0.05 / 1.5 = 0.03333333333333333
  PickupObject_231 0.05 / 1.5 = 0.03333333333333333
  PickupObject_656 0.05 / 1.5 = 0.03333333333333333
  CleanObject_22 0.05 / 1.5 = 0.03333333333333333
  PickupObject_202 0.05 / 1.5 = 0.03333333333333333
  CleanObject_19 0.05 / 1.5 = 0.03333333333333333
  HeatObject_134 0.05 / 1.5 = 0.03333333333333333
  TransportObject_0 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_179 0.05 / 1.5 = 0.03333333333333333
  PickupObject_929 0.05 / 1.5 = 0.03333333333333333
  PickupObject_458 0.05 / 1.5 = 0.03333333333333333
  HeatObject_10 0.05 / 1.5 = 0.03333333333333333
  PickupObject_452 0.05 / 1.5 = 0.03333333333333333
  SliceObject_228 0.05 / 1.5 = 0.03333333333333333
  SliceObject_120 0.05 / 1.5 = 0.03333333333333333

Logging scored operators: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_motion_plans.json

Experiment Summary
================================================================================
Iteration: 0
Evaluated successful motion plans: 2 / 27 problems so far.
Overall successful motion plans: 2 / 223 problems.
Total problems: 223
Current operators: 223

Evaluating [1/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 27 / 223 ID=train/pick_clean_then_place_in_recep-ButterKnife-None-CounterTop-25/trial_T20190907_212022_934468 AttemptIdx=0
Motion planning for: train/pick_clean_then_place_in_recep-ButterKnife-None-CounterTop-25/trial_T20190907_212022_934468
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ButterKnifeType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ButterKnifeType) 
                (receptacleType ?r CounterTopType)
                (inReceptacle ?o ?r)
                (cleanable ?o)
                (isClean ?o) 
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_85', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'knife'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the object.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up a knife!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: holding the object.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'EnsureObjectIsClean_2', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'knife'), 'body': '\n    # Preconditions: None.\n\n    # Check if object is clean already.\n    if final_env_state.isClean(object_id):\n        print("The knife is already clean.")\n    else:\n        # Low-level actions: if object is not clean, we need to clean it.\n        # Since there is no direct clean action, we could simulate cleaning by putting it under a receptacle like \'sinkbasin\'\n        try:\n            print("Trying to clean the knife.")\n            action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':\'sinkbasin\'})\n            success = act(env=env, action=action)\n            print("The knife has been placed in the sink to clean.")\n        except:\n            print("Execution failure while trying to clean the knife...")\n            return False\n\n        # Assuming here that putting it under the sink cleans it, which may be a limitation of the action set provided.\n        # In a real environment, we might need additional interactions for cleaning, such as using soap or scrubbing.\n\n    # Postconditions: object is clean.\n    final_env_state = perceive(env)\n    return (final_env_state.isClean(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_116', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'knife', 'sinkbasin'), 'body': '\n    # Preconditions: the knife must be clean.\n    if (not env_state.isClean(object_id)):\n        print("Failure, the knife is not clean.")\n        return False, env_state\n\n    # Low-level actions: pick up the knife if not already holding it.\n    if (not env_state.holds(object_id)):\n        try:\n            action = PickupObject(args={\'object_id\':object_id})\n            success = act(env=env, action=action)\n            print("Successfully picked up a knife!")\n        except:\n            print("Failure, could not pick up the knife.")\n            return False, env_state\n\n    # Low-level actions: put the clean knife in the receptacle \'large sink\' or \'sinkbasin\'.\n    try:\n        print("Trying to place the clean knife in the sink.")\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Result of PutObject is: {success}")\n    except:\n        print("Failure, could not place the knife in the sink.")\n        return False, env_state\n\n    # Postconditions: not holding the object and the object is in the receptacle.\n    final_env_state = perceive(env)\n    return (not final_env_state.holds(object_id)) and (final_env_state.inReceptacle(object_id, receptacle_object_id)), final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject butterknife)
(GotoLocation sinkbasin)
(CleanObject butterknife)
(GotoLocation countertop)
(PutObject butterknife countertop)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['butterknife', 'countertop'], 'is_neg': False}

{'predicate_name': 'cleanable', 'arguments': ['butterknife'], 'is_neg': False}

{'predicate_name': 'isClean', 'arguments': ['butterknife'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/3: PickupObject_85
Ground objects:
('Knife|-02.66|+00.82|+00.56',)
Successfully picked up a knife!
Successfully executed: PickupObject_85 with object_ids: ('Knife|-02.66|+00.82|+00.56',)
Now on policy: 1/3: EnsureObjectIsClean_2
Ground objects:
('Knife|-02.66|+00.82|+00.56',)
Failed to execute the function defined in code.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 2.734s
  Failed at operator: 2 / 3 operators in task plan.
Evaluating [2/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 27 / 223 ID=train/pick_clean_then_place_in_recep-ButterKnife-None-CounterTop-25/trial_T20190907_212022_934468 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 3 operators in task plan.
Evaluating [3/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 27 / 223 ID=train/pick_clean_then_place_in_recep-ButterKnife-None-CounterTop-25/trial_T20190907_212022_934468 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 3 operators in task plan.
Evaluating [4/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 27 / 223 ID=train/pick_clean_then_place_in_recep-ButterKnife-None-CounterTop-25/trial_T20190907_212022_934468 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 3 operators in task plan.
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  PickupObject_52 1.05 / 1.5 = 0.7000000000000001
  HeatObject_129 1.05 / 1.5 = 0.7000000000000001
  PickupObject_278 1.05 / 1.5 = 0.7000000000000001
  HeatObject_147 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_242 1.05 / 1.5 = 0.7000000000000001
  PickupObject_843 1.05 / 1.5 = 0.7000000000000001
  PickupObject_118 1.05 / 1.5 = 0.7000000000000001
  PickupObject_970 1.05 / 1.5 = 0.7000000000000001
  EnsureLightIsOn_0 1.05 / 1.5 = 0.7000000000000001
  ToggleObjectOn_76 1.05 / 1.5 = 0.7000000000000001
  PickupObject_254 1.05 / 1.5 = 0.7000000000000001
  PickupObject_723 1.05 / 1.5 = 0.7000000000000001
  PickupObject_777 1.05 / 1.5 = 0.7000000000000001
  PickupObject_85 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_699 0.05 / 0.5 = 0.1
  SliceObject_229 0.05 / 0.5 = 0.1
  SliceObject_293 0.05 / 0.5 = 0.1
  ToggleObjectOn_30 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_282 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_124 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_280 0.05 / 0.5 = 0.1
  PickupObject_405 0.05 / 0.5 = 0.1
  SliceObject_82 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_843 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_812 0.05 / 0.5 = 0.1
  OpenReceptacle_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_350 0.05 / 0.5 = 0.1
  CloseReceptacle_0 0.05 / 0.5 = 0.1
  SliceObject_137 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_432 0.05 / 0.5 = 0.1
  PickupObject_819 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_235 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_167 0.05 / 0.5 = 0.1
  PickupObject_1105 0.05 / 0.5 = 0.1
  SliceObject_307 0.05 / 0.5 = 0.1
  CoolObject_94 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_259 0.05 / 0.5 = 0.1
  ToggleObjectOn_64 0.05 / 0.5 = 0.1
  PutObject_18 0.05 / 0.5 = 0.1
  PickupObject_27 0.05 / 0.5 = 0.1
  PutObject_100 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_116 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_335 0.05 / 1.5 = 0.03333333333333333
  PickupObject_231 0.05 / 1.5 = 0.03333333333333333
  PickupObject_656 0.05 / 1.5 = 0.03333333333333333
  CleanObject_22 0.05 / 1.5 = 0.03333333333333333
  PickupObject_202 0.05 / 1.5 = 0.03333333333333333
  CleanObject_19 0.05 / 1.5 = 0.03333333333333333
  HeatObject_134 0.05 / 1.5 = 0.03333333333333333
  TransportObject_0 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_179 0.05 / 1.5 = 0.03333333333333333
  PickupObject_929 0.05 / 1.5 = 0.03333333333333333
  PickupObject_458 0.05 / 1.5 = 0.03333333333333333
  HeatObject_10 0.05 / 1.5 = 0.03333333333333333
  PickupObject_452 0.05 / 1.5 = 0.03333333333333333
  SliceObject_228 0.05 / 1.5 = 0.03333333333333333
  SliceObject_120 0.05 / 1.5 = 0.03333333333333333
  EnsureObjectIsClean_2 0.05 / 1.5 = 0.03333333333333333
Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 28 / 223 ID=train/pick_heat_then_place_in_recep-Mug-None-Cabinet-30/trial_T20190909_044538_375844 AttemptIdx=0
Motion planning for: train/pick_heat_then_place_in_recep-Mug-None-Cabinet-30/trial_T20190909_044538_375844
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o MugType) 
                (receptacleType ?r CabinetType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_984', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'mug'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the mug.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up a mug!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: holding the mug.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'HeatObject_135', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'mug', 'microwave'), 'body': '\n    # Preconditions: we should be holding the mug.\n    if (not env_state.holds(object_id)):\n        print("Failure, not holding mug.")\n        return False, env_state\n\n    # Low-level actions: open the microwave.\n    try:\n        action = OpenObject(args={\'object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Successfully opened the microwave!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Low-level actions: put the mug in the microwave.\n    try:\n        print("Trying to put the mug in the microwave.")\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print(f"Result of PutObject is: {success}")\n    except:\n        print("Failure, could not place mug in the microwave.")\n        return False, env_state\n\n    # Low-level actions: close the microwave.\n    try:\n        action = CloseObject(args={\'object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print(f"Result of CloseObject is: {success}")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Low-level actions: toggle the microwave on to heat up the mug.\n    try:\n        action = ToggleObjectOn(args={\'object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print(f"Result of ToggleObjectOn is: {success}")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Simulate heating time (in actual implementation, this would be a wait for a certain time period)\n    print("Waiting for the mug to be heated up...")\n    \n    # Low-level actions: toggle the microwave off after heating the mug.\n    try:\n        action = ToggleObjectOff(args={\'object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print(f"Result of ToggleObjectOff is: {success}")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: mug is hot.\n    final_env_state = perceive(env)\n    return (final_env_state.isHot(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PickupObject_1069', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'mug'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the mug from the microwave.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the heated mug!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: holding the heated mug.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_698', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'mug', 'cabinet'), 'body': '\n    # Preconditions: we should be holding the hot mug.\n    if (not env_state.holds(object_id)):\n        print("Failure, not holding the heated mug.")\n        return False, env_state\n\n    # Low-level actions: put the heated mug in the cabinet.\n    try:\n        print("Trying to put the heated mug in the cabinet.")\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Result of PutObject is: {success}")\n    except:\n        print("Failure, could not place the heated mug in the cabinet.")\n        return False, env_state\n\n    # Postconditions: not holding the mug and the mug is in the cabinet.\n    final_env_state = perceive(env)\n    if (not final_env_state.holds(object_id)) and (final_env_state.inReceptacle(object_id, receptacle_object_id)):\n        print("Heated mug successfully placed inside the cabinet.")\n        return True, final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject mug)
(GotoLocation microwave)
(HeatObject mug)
(GotoLocation cabinet)
(PutObject mug cabinet)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['mug', 'cabinet'], 'is_neg': False}

{'predicate_name': 'heatable', 'arguments': ['mug'], 'is_neg': False}

{'predicate_name': 'isHot', 'arguments': ['mug'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/4: PickupObject_984
Ground objects:
('Mug|+02.89|+00.90|+00.64',)
Successfully picked up a mug!
Successfully executed: PickupObject_984 with object_ids: ('Mug|+02.89|+00.90|+00.64',)
Now on policy: 1/4: HeatObject_135
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Microwave|-01.03|+00.89|+01.43')
Successfully opened the microwave!
Trying to put the mug in the microwave.
Result of PutObject is: True
Result of CloseObject is: True
Result of ToggleObjectOn is: True
Waiting for the mug to be heated up...
Result of ToggleObjectOff is: True
Successfully executed: HeatObject_135 with object_ids: ('Mug|+02.89|+00.90|+00.64', 'Microwave|-01.03|+00.89|+01.43')
Now on policy: 2/4: PickupObject_1069
Ground objects:
('Mug|+02.89|+00.90|+00.64',)
Successfully picked up the heated mug!
Ground objects:
('Mug|+02.89|+00.90|+00.64',)
Successfully picked up the heated mug!
Ground objects:
('Mug|+01.01|+01.24|-01.45',)
Successfully picked up the heated mug!
Ground objects:
('Mug|+01.01|+01.24|-01.45',)
Successfully picked up the heated mug!
Ground objects:
('Mug|+01.01|+01.24|-01.45',)
Successfully picked up the heated mug!
Ground objects:
('Mug|-00.66|+00.90|-00.57',)
Successfully picked up the heated mug!
Successfully executed: PickupObject_1069 with object_ids: ('Mug|-00.66|+00.90|-00.57',)
Now on policy: 3/4: PutObjectInReceptacle_698
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+01.40|+01.87|-01.26')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+01.40|+01.87|-01.26')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+01.40|+01.87|-01.26')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|-00.20|+01.96|-01.33')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|-00.20|+01.96|-01.33')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|-00.20|+01.96|-01.33')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+02.82|+01.77|-01.85')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+02.82|+01.77|-01.85')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+02.82|+01.77|-01.85')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+02.85|+00.42|+00.41')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+02.85|+00.42|+00.41')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+02.85|+00.42|+00.41')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+02.85|+00.42|-00.61')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+02.85|+00.42|-00.61')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+02.85|+00.42|-00.61')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+02.85|+00.42|-00.96')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+02.85|+00.42|-00.96')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+02.85|+00.42|-00.96')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+03.07|+01.67|-00.71')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+03.07|+01.67|-00.71')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+03.07|+01.67|-00.71')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+02.82|+01.77|-01.05')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+02.82|+01.77|-01.05')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+02.82|+01.77|-01.05')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+00.62|+01.87|-01.26')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+00.62|+01.87|-01.26')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+00.62|+01.87|-01.26')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+00.14|+01.67|-01.56')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+00.14|+01.67|-01.56')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|+00.14|+01.67|-01.56')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|-00.19|+01.67|-01.34')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|-00.19|+01.67|-01.34')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|-00.19|+01.67|-01.34')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|-00.71|+01.96|-00.82')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|-00.71|+01.96|-00.82')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|-00.71|+01.96|-00.82')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|-00.92|+01.67|-00.62')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|-00.92|+01.67|-00.62')
Failure, not holding the heated mug.
Ground objects:
('Mug|+02.89|+00.90|+00.64', 'Cabinet|-00.92|+01.67|-00.62')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+01.40|+01.87|-01.26')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+01.40|+01.87|-01.26')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+01.40|+01.87|-01.26')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+01.40|+01.87|-01.26')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|-00.20|+01.96|-01.33')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|-00.20|+01.96|-01.33')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|-00.20|+01.96|-01.33')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|-00.20|+01.96|-01.33')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+02.82|+01.77|-01.85')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+02.82|+01.77|-01.85')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+02.82|+01.77|-01.85')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+02.82|+01.77|-01.85')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+02.85|+00.42|+00.41')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+02.85|+00.42|+00.41')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+02.85|+00.42|+00.41')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+02.85|+00.42|+00.41')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+02.85|+00.42|-00.61')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+02.85|+00.42|-00.61')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+02.85|+00.42|-00.61')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+02.85|+00.42|-00.61')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+02.85|+00.42|-00.96')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+02.85|+00.42|-00.96')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+02.85|+00.42|-00.96')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+02.85|+00.42|-00.96')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+03.07|+01.67|-00.71')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+03.07|+01.67|-00.71')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+03.07|+01.67|-00.71')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+03.07|+01.67|-00.71')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+02.82|+01.77|-01.05')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+02.82|+01.77|-01.05')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+02.82|+01.77|-01.05')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+02.82|+01.77|-01.05')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+00.62|+01.87|-01.26')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+00.62|+01.87|-01.26')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+00.62|+01.87|-01.26')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+00.62|+01.87|-01.26')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+00.14|+01.67|-01.56')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+00.14|+01.67|-01.56')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+00.14|+01.67|-01.56')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|+00.14|+01.67|-01.56')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|-00.19|+01.67|-01.34')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|-00.19|+01.67|-01.34')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|-00.19|+01.67|-01.34')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|-00.19|+01.67|-01.34')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|-00.71|+01.96|-00.82')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|-00.71|+01.96|-00.82')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|-00.71|+01.96|-00.82')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|-00.71|+01.96|-00.82')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|-00.92|+01.67|-00.62')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|-00.92|+01.67|-00.62')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|-00.92|+01.67|-00.62')
Failure, not holding the heated mug.
Ground objects:
('Mug|+01.01|+01.24|-01.45', 'Cabinet|-00.92|+01.67|-00.62')
Failure, not holding the heated mug.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+01.40|+01.87|-01.26')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+01.40|+01.87|-01.26')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+01.40|+01.87|-01.26')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|-00.20|+01.96|-01.33')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|-00.20|+01.96|-01.33')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|-00.20|+01.96|-01.33')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+02.82|+01.77|-01.85')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+02.82|+01.77|-01.85')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+02.82|+01.77|-01.85')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+02.85|+00.42|+00.41')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+02.85|+00.42|+00.41')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+02.85|+00.42|+00.41')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+02.85|+00.42|-00.61')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+02.85|+00.42|-00.61')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+02.85|+00.42|-00.61')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+02.85|+00.42|-00.96')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+02.85|+00.42|-00.96')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+02.85|+00.42|-00.96')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+03.07|+01.67|-00.71')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+03.07|+01.67|-00.71')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+03.07|+01.67|-00.71')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+02.82|+01.77|-01.05')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+02.82|+01.77|-01.05')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+02.82|+01.77|-01.05')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+00.62|+01.87|-01.26')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+00.62|+01.87|-01.26')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+00.62|+01.87|-01.26')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+00.14|+01.67|-01.56')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+00.14|+01.67|-01.56')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|+00.14|+01.67|-01.56')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|-00.19|+01.67|-01.34')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|-00.19|+01.67|-01.34')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|-00.19|+01.67|-01.34')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|-00.71|+01.96|-00.82')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|-00.71|+01.96|-00.82')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|-00.71|+01.96|-00.82')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|-00.92|+01.67|-00.62')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|-00.92|+01.67|-00.62')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|-00.66|+00.90|-00.57', 'Cabinet|-00.92|+01.67|-00.62')
Trying to put the heated mug in the cabinet.
Result of PutObject is: {success}
Failed to execute the function defined in code.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+01.40|+01.87|-01.26')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+01.40|+01.87|-01.26')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+01.40|+01.87|-01.26')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+01.40|+01.87|-01.26')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|-00.20|+01.96|-01.33')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|-00.20|+01.96|-01.33')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|-00.20|+01.96|-01.33')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|-00.20|+01.96|-01.33')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+02.82|+01.77|-01.85')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+02.82|+01.77|-01.85')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+02.82|+01.77|-01.85')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+02.82|+01.77|-01.85')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+02.85|+00.42|+00.41')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+02.85|+00.42|+00.41')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+02.85|+00.42|+00.41')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+02.85|+00.42|+00.41')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+02.85|+00.42|-00.61')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+02.85|+00.42|-00.61')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+02.85|+00.42|-00.61')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+02.85|+00.42|-00.61')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+02.85|+00.42|-00.96')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+02.85|+00.42|-00.96')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+02.85|+00.42|-00.96')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+02.85|+00.42|-00.96')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+03.07|+01.67|-00.71')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+03.07|+01.67|-00.71')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+03.07|+01.67|-00.71')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+03.07|+01.67|-00.71')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+02.82|+01.77|-01.05')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+02.82|+01.77|-01.05')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+02.82|+01.77|-01.05')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+02.82|+01.77|-01.05')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+00.62|+01.87|-01.26')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+00.62|+01.87|-01.26')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+00.62|+01.87|-01.26')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+00.62|+01.87|-01.26')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+00.14|+01.67|-01.56')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+00.14|+01.67|-01.56')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+00.14|+01.67|-01.56')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|+00.14|+01.67|-01.56')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|-00.19|+01.67|-01.34')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|-00.19|+01.67|-01.34')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|-00.19|+01.67|-01.34')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|-00.19|+01.67|-01.34')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|-00.71|+01.96|-00.82')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|-00.71|+01.96|-00.82')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|-00.71|+01.96|-00.82')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|-00.71|+01.96|-00.82')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|-00.92|+01.67|-00.62')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|-00.92|+01.67|-00.62')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|-00.92|+01.67|-00.62')
Failure, not holding the heated mug.
Ground objects:
('Mug|+03.32|+01.46|-01.50', 'Cabinet|-00.92|+01.67|-00.62')
Failure, not holding the heated mug.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 6.990s
  Failed at operator: 4 / 4 operators in task plan.
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 28 / 223 ID=train/pick_heat_then_place_in_recep-Mug-None-Cabinet-30/trial_T20190909_044538_375844 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 4 / 4 operators in task plan.
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 28 / 223 ID=train/pick_heat_then_place_in_recep-Mug-None-Cabinet-30/trial_T20190909_044538_375844 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 4 / 4 operators in task plan.
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 28 / 223 ID=train/pick_heat_then_place_in_recep-Mug-None-Cabinet-30/trial_T20190909_044538_375844 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 4 / 4 operators in task plan.
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 28 / 223 ID=train/pick_heat_then_place_in_recep-Mug-None-Cabinet-30/trial_T20190909_044538_375844 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 4 / 4 operators in task plan.
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  PickupObject_52 1.05 / 1.5 = 0.7000000000000001
  HeatObject_129 1.05 / 1.5 = 0.7000000000000001
  PickupObject_278 1.05 / 1.5 = 0.7000000000000001
  HeatObject_147 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_242 1.05 / 1.5 = 0.7000000000000001
  PickupObject_843 1.05 / 1.5 = 0.7000000000000001
  PickupObject_118 1.05 / 1.5 = 0.7000000000000001
  PickupObject_970 1.05 / 1.5 = 0.7000000000000001
  EnsureLightIsOn_0 1.05 / 1.5 = 0.7000000000000001
  ToggleObjectOn_76 1.05 / 1.5 = 0.7000000000000001
  PickupObject_254 1.05 / 1.5 = 0.7000000000000001
  PickupObject_723 1.05 / 1.5 = 0.7000000000000001
  PickupObject_777 1.05 / 1.5 = 0.7000000000000001
  PickupObject_85 1.05 / 1.5 = 0.7000000000000001
  PickupObject_984 1.05 / 1.5 = 0.7000000000000001
  HeatObject_135 1.05 / 1.5 = 0.7000000000000001
  PickupObject_1069 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_699 0.05 / 0.5 = 0.1
  SliceObject_229 0.05 / 0.5 = 0.1
  SliceObject_293 0.05 / 0.5 = 0.1
  ToggleObjectOn_30 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_282 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_124 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_280 0.05 / 0.5 = 0.1
  PickupObject_405 0.05 / 0.5 = 0.1
  SliceObject_82 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_843 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_812 0.05 / 0.5 = 0.1
  OpenReceptacle_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_350 0.05 / 0.5 = 0.1
  CloseReceptacle_0 0.05 / 0.5 = 0.1
  SliceObject_137 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_432 0.05 / 0.5 = 0.1
  PickupObject_819 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_235 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_167 0.05 / 0.5 = 0.1
  PickupObject_1105 0.05 / 0.5 = 0.1
  SliceObject_307 0.05 / 0.5 = 0.1
  CoolObject_94 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_259 0.05 / 0.5 = 0.1
  ToggleObjectOn_64 0.05 / 0.5 = 0.1
  PutObject_18 0.05 / 0.5 = 0.1
  PickupObject_27 0.05 / 0.5 = 0.1
  PutObject_100 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_116 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_335 0.05 / 1.5 = 0.03333333333333333
  PickupObject_231 0.05 / 1.5 = 0.03333333333333333
  PickupObject_656 0.05 / 1.5 = 0.03333333333333333
  CleanObject_22 0.05 / 1.5 = 0.03333333333333333
  PickupObject_202 0.05 / 1.5 = 0.03333333333333333
  CleanObject_19 0.05 / 1.5 = 0.03333333333333333
  HeatObject_134 0.05 / 1.5 = 0.03333333333333333
  TransportObject_0 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_179 0.05 / 1.5 = 0.03333333333333333
  PickupObject_929 0.05 / 1.5 = 0.03333333333333333
  PickupObject_458 0.05 / 1.5 = 0.03333333333333333
  HeatObject_10 0.05 / 1.5 = 0.03333333333333333
  PickupObject_452 0.05 / 1.5 = 0.03333333333333333
  SliceObject_228 0.05 / 1.5 = 0.03333333333333333
  SliceObject_120 0.05 / 1.5 = 0.03333333333333333
  EnsureObjectIsClean_2 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_698 0.05 / 1.5 = 0.03333333333333333

Logging scored operators: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_motion_plans.json

Experiment Summary
================================================================================
Iteration: 0
Evaluated successful motion plans: 2 / 29 problems so far.
Overall successful motion plans: 2 / 223 problems.
Total problems: 223
Current operators: 223

Evaluating [1/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 29 / 223 ID=train/pick_and_place_simple-SprayBottle-None-Toilet-418/trial_T20190906_190917_905379 AttemptIdx=0
Motion planning for: train/pick_and_place_simple-SprayBottle-None-Toilet-418/trial_T20190906_190917_905379
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SprayBottleType) 
                (receptacleType ?r ToiletType)
                (inReceptacle ?o ?r) 
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o SprayBottleType) 
                (receptacleType ?r ToiletType)
                (inReceptacle ?o ?r) 
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_1029', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'spraybottle'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the object.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the spray bottle!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: holding the object.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectOnReceptacle_17', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'spraybottle', 'toilet'), 'body': '\n    # Preconditions: we should be holding the object.\n    if (not env_state.holds(object_id)):\n        print("Failure, not holding the spray bottle.")\n        return False, env_state\n\n    # Low-level actions: put the object on the receptacle.\n    try:\n        print("Trying to put the spray bottle on the toilet.")\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Result of PutObject is: {success}")\n    except:\n        print("Failure, could not place the spray bottle on the toilet.")\n        return False, env_state\n\n    # Postconditions: not holding the object and the object is on the receptacle.\n    final_env_state = perceive(env)\n    if (not final_env_state.holds(object_id)) and (final_env_state.inReceptacle(object_id, receptacle_object_id)):\n        return True, final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject spraybottle)
(GotoLocation toilet)
(PutObject spraybottle toilet)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['spraybottle', 'toilet'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/2: PickupObject_1029
Ground objects:
('SprayBottle|-02.62|+00.81|-03.77',)
Successfully picked up the spray bottle!
Successfully executed: PickupObject_1029 with object_ids: ('SprayBottle|-02.62|+00.81|-03.77',)
Now on policy: 1/2: PutObjectOnReceptacle_17
Ground objects:
('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')
Trying to put the spray bottle on the toilet.
Result of PutObject is: {success}
Successfully executed: PutObjectOnReceptacle_17 with object_ids: ('SprayBottle|-02.62|+00.81|-03.77', 'Toilet|-00.45|+00.00|-03.05')

Motion plan operator success!: frozendict.frozendict({'action': 'PutObjectOnReceptacle_17', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'spraybottle', 'toilet'), 'body': '\n    # Preconditions: we should be holding the object.\n    if (not env_state.holds(object_id)):\n        print("Failure, not holding the spray bottle.")\n        return False, env_state\n\n    # Low-level actions: put the object on the receptacle.\n    try:\n        print("Trying to put the spray bottle on the toilet.")\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Result of PutObject is: {success}")\n    except:\n        print("Failure, could not place the spray bottle on the toilet.")\n        return False, env_state\n\n    # Postconditions: not holding the object and the object is on the receptacle.\n    final_env_state = perceive(env)\n    if (not final_env_state.holds(object_id)) and (final_env_state.inReceptacle(object_id, receptacle_object_id)):\n        return True, final_env_state\n'})
  Motion plan result: task_success: True
  Total Actions Taken: None
  Total Time Taken: 3.174s
Evaluating [2/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 29 / 223 ID=train/pick_and_place_simple-SprayBottle-None-Toilet-418/trial_T20190906_190917_905379 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: True
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [3/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 29 / 223 ID=train/pick_and_place_simple-SprayBottle-None-Toilet-418/trial_T20190906_190917_905379 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: True
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [4/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 29 / 223 ID=train/pick_and_place_simple-SprayBottle-None-Toilet-418/trial_T20190906_190917_905379 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: True
  Total Actions Taken: None
  Total Time Taken: 0.000s
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  PickupObject_52 1.05 / 1.5 = 0.7000000000000001
  HeatObject_129 1.05 / 1.5 = 0.7000000000000001
  PickupObject_278 1.05 / 1.5 = 0.7000000000000001
  HeatObject_147 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_242 1.05 / 1.5 = 0.7000000000000001
  PickupObject_843 1.05 / 1.5 = 0.7000000000000001
  PickupObject_118 1.05 / 1.5 = 0.7000000000000001
  PickupObject_970 1.05 / 1.5 = 0.7000000000000001
  EnsureLightIsOn_0 1.05 / 1.5 = 0.7000000000000001
  ToggleObjectOn_76 1.05 / 1.5 = 0.7000000000000001
  PickupObject_254 1.05 / 1.5 = 0.7000000000000001
  PickupObject_723 1.05 / 1.5 = 0.7000000000000001
  PickupObject_777 1.05 / 1.5 = 0.7000000000000001
  PickupObject_85 1.05 / 1.5 = 0.7000000000000001
  PickupObject_984 1.05 / 1.5 = 0.7000000000000001
  HeatObject_135 1.05 / 1.5 = 0.7000000000000001
  PickupObject_1069 1.05 / 1.5 = 0.7000000000000001
  PickupObject_1029 1.05 / 1.5 = 0.7000000000000001
  PutObjectOnReceptacle_17 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_699 0.05 / 0.5 = 0.1
  SliceObject_229 0.05 / 0.5 = 0.1
  SliceObject_293 0.05 / 0.5 = 0.1
  ToggleObjectOn_30 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_282 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_124 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_280 0.05 / 0.5 = 0.1
  PickupObject_405 0.05 / 0.5 = 0.1
  SliceObject_82 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_843 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_812 0.05 / 0.5 = 0.1
  OpenReceptacle_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_350 0.05 / 0.5 = 0.1
  CloseReceptacle_0 0.05 / 0.5 = 0.1
  SliceObject_137 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_432 0.05 / 0.5 = 0.1
  PickupObject_819 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_235 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_167 0.05 / 0.5 = 0.1
  PickupObject_1105 0.05 / 0.5 = 0.1
  SliceObject_307 0.05 / 0.5 = 0.1
  CoolObject_94 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_259 0.05 / 0.5 = 0.1
  ToggleObjectOn_64 0.05 / 0.5 = 0.1
  PutObject_18 0.05 / 0.5 = 0.1
  PickupObject_27 0.05 / 0.5 = 0.1
  PutObject_100 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_116 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_335 0.05 / 1.5 = 0.03333333333333333
  PickupObject_231 0.05 / 1.5 = 0.03333333333333333
  PickupObject_656 0.05 / 1.5 = 0.03333333333333333
  CleanObject_22 0.05 / 1.5 = 0.03333333333333333
  PickupObject_202 0.05 / 1.5 = 0.03333333333333333
  CleanObject_19 0.05 / 1.5 = 0.03333333333333333
  HeatObject_134 0.05 / 1.5 = 0.03333333333333333
  TransportObject_0 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_179 0.05 / 1.5 = 0.03333333333333333
  PickupObject_929 0.05 / 1.5 = 0.03333333333333333
  PickupObject_458 0.05 / 1.5 = 0.03333333333333333
  HeatObject_10 0.05 / 1.5 = 0.03333333333333333
  PickupObject_452 0.05 / 1.5 = 0.03333333333333333
  SliceObject_228 0.05 / 1.5 = 0.03333333333333333
  SliceObject_120 0.05 / 1.5 = 0.03333333333333333
  EnsureObjectIsClean_2 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_698 0.05 / 1.5 = 0.03333333333333333
Evaluating [1/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 30 / 223 ID=train/pick_cool_then_place_in_recep-PotatoSliced-None-Microwave-2/trial_T20190909_094553_729319 AttemptIdx=0
Motion planning for: train/pick_cool_then_place_in_recep-PotatoSliced-None-Microwave-2/trial_T20190909_094553_729319
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Attempting to execute the following motion plan:
Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject knife)
(GotoLocation potato)
(SliceObject potato)
(GotoLocation sinkbasin)
(PutObject knife sinkbasin)
(GotoLocation sinkbasin)
(PickupObject potato)
(GotoLocation fridge)
(CoolObject potato)
(GotoLocation microwave)
(PutObject potato microwave)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['potato', 'microwave'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['potato'], 'is_neg': False}

ThorEnv started.
	 Fluent(predicate='inReceptacle', objects=('Potato|+02.07|+00.94|+01.18', 'Microwave|+01.93|+00.90|-00.77')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Potato|+02.07|+00.94|+01.18',)) True
	 State: False
	 Fluent(predicate='isSliced', objects=('Potato|+02.07|+00.94|+01.18',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Potato|-01.46|+00.94|-01.71', 'Microwave|+01.93|+00.90|-00.77')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Potato|-01.46|+00.94|-01.71',)) True
	 State: False
	 Fluent(predicate='isSliced', objects=('Potato|-01.46|+00.94|-01.71',)) True
	 State: False

	 Fluent(predicate='inReceptacle', objects=('Potato|-00.18|+00.78|-01.55', 'Microwave|+01.93|+00.90|-00.77')) True
	 State: False
	 Fluent(predicate='isCool', objects=('Potato|-00.18|+00.78|-01.55',)) True
	 State: False
	 Fluent(predicate='isSliced', objects=('Potato|-00.18|+00.78|-01.55',)) True
	 State: False

  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 3.125s
Evaluating [2/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 30 / 223 ID=train/pick_cool_then_place_in_recep-PotatoSliced-None-Microwave-2/trial_T20190909_094553_729319 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [3/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 30 / 223 ID=train/pick_cool_then_place_in_recep-PotatoSliced-None-Microwave-2/trial_T20190909_094553_729319 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [4/4] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 30 / 223 ID=train/pick_cool_then_place_in_recep-PotatoSliced-None-Microwave-2/trial_T20190909_094553_729319 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  PickupObject_52 1.05 / 1.5 = 0.7000000000000001
  HeatObject_129 1.05 / 1.5 = 0.7000000000000001
  PickupObject_278 1.05 / 1.5 = 0.7000000000000001
  HeatObject_147 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_242 1.05 / 1.5 = 0.7000000000000001
  PickupObject_843 1.05 / 1.5 = 0.7000000000000001
  PickupObject_118 1.05 / 1.5 = 0.7000000000000001
  PickupObject_970 1.05 / 1.5 = 0.7000000000000001
  EnsureLightIsOn_0 1.05 / 1.5 = 0.7000000000000001
  ToggleObjectOn_76 1.05 / 1.5 = 0.7000000000000001
  PickupObject_254 1.05 / 1.5 = 0.7000000000000001
  PickupObject_723 1.05 / 1.5 = 0.7000000000000001
  PickupObject_777 1.05 / 1.5 = 0.7000000000000001
  PickupObject_85 1.05 / 1.5 = 0.7000000000000001
  PickupObject_984 1.05 / 1.5 = 0.7000000000000001
  HeatObject_135 1.05 / 1.5 = 0.7000000000000001
  PickupObject_1069 1.05 / 1.5 = 0.7000000000000001
  PickupObject_1029 1.05 / 1.5 = 0.7000000000000001
  PutObjectOnReceptacle_17 1.05 / 1.5 = 0.7000000000000001
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_699 0.05 / 0.5 = 0.1
  SliceObject_229 0.05 / 0.5 = 0.1
  SliceObject_293 0.05 / 0.5 = 0.1
  ToggleObjectOn_30 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_282 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_124 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_280 0.05 / 0.5 = 0.1
  PickupObject_405 0.05 / 0.5 = 0.1
  SliceObject_82 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_843 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_812 0.05 / 0.5 = 0.1
  OpenReceptacle_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_350 0.05 / 0.5 = 0.1
  CloseReceptacle_0 0.05 / 0.5 = 0.1
  SliceObject_137 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_432 0.05 / 0.5 = 0.1
  PickupObject_819 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_235 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_167 0.05 / 0.5 = 0.1
  PickupObject_1105 0.05 / 0.5 = 0.1
  SliceObject_307 0.05 / 0.5 = 0.1
  CoolObject_94 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_259 0.05 / 0.5 = 0.1
  ToggleObjectOn_64 0.05 / 0.5 = 0.1
  PutObject_18 0.05 / 0.5 = 0.1
  PickupObject_27 0.05 / 0.5 = 0.1
  PutObject_100 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_116 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_335 0.05 / 1.5 = 0.03333333333333333
  PickupObject_231 0.05 / 1.5 = 0.03333333333333333
  PickupObject_656 0.05 / 1.5 = 0.03333333333333333
  CleanObject_22 0.05 / 1.5 = 0.03333333333333333
  PickupObject_202 0.05 / 1.5 = 0.03333333333333333
  CleanObject_19 0.05 / 1.5 = 0.03333333333333333
  HeatObject_134 0.05 / 1.5 = 0.03333333333333333
  TransportObject_0 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_179 0.05 / 1.5 = 0.03333333333333333
  PickupObject_929 0.05 / 1.5 = 0.03333333333333333
  PickupObject_458 0.05 / 1.5 = 0.03333333333333333
  HeatObject_10 0.05 / 1.5 = 0.03333333333333333
  PickupObject_452 0.05 / 1.5 = 0.03333333333333333
  SliceObject_228 0.05 / 1.5 = 0.03333333333333333
  SliceObject_120 0.05 / 1.5 = 0.03333333333333333
  EnsureObjectIsClean_2 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_698 0.05 / 1.5 = 0.03333333333333333

Logging scored operators: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_motion_plans.json

Experiment Summary
================================================================================
Iteration: 0
Evaluated successful motion plans: 3 / 31 problems so far.
Overall successful motion plans: 3 / 223 problems.
Total problems: 223
Current operators: 223

Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 31 / 223 ID=train/pick_and_place_simple-ToiletPaper-None-ToiletPaperHanger-426/trial_T20190909_044756_658872 AttemptIdx=0
Motion planning for: train/pick_and_place_simple-ToiletPaper-None-ToiletPaperHanger-426/trial_T20190909_044756_658872
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ToiletPaperType) 
                (receptacleType ?r ToiletPaperHangerType)
                (inReceptacle ?o ?r) 
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o ToiletPaperType) 
                (receptacleType ?r ToiletPaperHangerType)
                (inReceptacle ?o ?r) 
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_723', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'toiletpaperroll'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the object.\n    try:\n        action = PickupObject(args={\'object_id\':object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up an object!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: holding the object.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_158', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'toiletpaperroll', 'toiletpaperhanger'), 'body': '\n    # Preconditions: we should be holding the object, and the object should be identified as an empty roll.\n    if (not env_state.holds(object_id)):\n        print("Failure, not holding object.")\n        return False, env_state\n\n    # Assuming an empty roll means that the toilet paper roll is not slicable (i.e., has no more toilet paper on it),\n    # and thus is an empty core.\n    if (env_state.sliceable(object_id)):\n        print("Failure, the roll is not empty.")\n        return False, env_state\n\n    # Low-level actions: put the object in the receptacle.\n    try:\n        print("Trying to put in receptacle.")\n        action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Result of PutObject is: {success}")\n    except:\n        print("Failure, could not place in receptacle.")\n        return False, env_state\n\n    # Postconditions: not holding the object and the object is in the receptacle.\n    final_env_state = perceive(env)\n    if (not final_env_state.holds(object_id)) and (final_env_state.inReceptacle(object_id, receptacle_object_id)):\n        return True, final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject toiletpaper)
(GotoLocation toiletpaperhanger)
(PutObject toiletpaper toiletpaperhanger)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['toiletpaper', 'toiletpaperhanger'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/2: PickupObject_723
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 3.451s
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 31 / 223 ID=train/pick_and_place_simple-ToiletPaper-None-ToiletPaperHanger-426/trial_T20190909_044756_658872 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 31 / 223 ID=train/pick_and_place_simple-ToiletPaper-None-ToiletPaperHanger-426/trial_T20190909_044756_658872 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 31 / 223 ID=train/pick_and_place_simple-ToiletPaper-None-ToiletPaperHanger-426/trial_T20190909_044756_658872 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 31 / 223 ID=train/pick_and_place_simple-ToiletPaper-None-ToiletPaperHanger-426/trial_T20190909_044756_658872 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  PickupObject_52 1.05 / 1.5 = 0.7000000000000001
  HeatObject_129 1.05 / 1.5 = 0.7000000000000001
  PickupObject_278 1.05 / 1.5 = 0.7000000000000001
  HeatObject_147 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_242 1.05 / 1.5 = 0.7000000000000001
  PickupObject_843 1.05 / 1.5 = 0.7000000000000001
  PickupObject_118 1.05 / 1.5 = 0.7000000000000001
  PickupObject_970 1.05 / 1.5 = 0.7000000000000001
  EnsureLightIsOn_0 1.05 / 1.5 = 0.7000000000000001
  ToggleObjectOn_76 1.05 / 1.5 = 0.7000000000000001
  PickupObject_254 1.05 / 1.5 = 0.7000000000000001
  PickupObject_777 1.05 / 1.5 = 0.7000000000000001
  PickupObject_85 1.05 / 1.5 = 0.7000000000000001
  PickupObject_984 1.05 / 1.5 = 0.7000000000000001
  HeatObject_135 1.05 / 1.5 = 0.7000000000000001
  PickupObject_1069 1.05 / 1.5 = 0.7000000000000001
  PickupObject_1029 1.05 / 1.5 = 0.7000000000000001
  PutObjectOnReceptacle_17 1.05 / 1.5 = 0.7000000000000001
  PickupObject_723 1.05 / 2.5 = 0.42000000000000004
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_699 0.05 / 0.5 = 0.1
  SliceObject_229 0.05 / 0.5 = 0.1
  SliceObject_293 0.05 / 0.5 = 0.1
  ToggleObjectOn_30 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_282 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_124 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_280 0.05 / 0.5 = 0.1
  PickupObject_405 0.05 / 0.5 = 0.1
  SliceObject_82 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_843 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_812 0.05 / 0.5 = 0.1
  OpenReceptacle_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_350 0.05 / 0.5 = 0.1
  CloseReceptacle_0 0.05 / 0.5 = 0.1
  SliceObject_137 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_432 0.05 / 0.5 = 0.1
  PickupObject_819 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_235 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_167 0.05 / 0.5 = 0.1
  PickupObject_1105 0.05 / 0.5 = 0.1
  SliceObject_307 0.05 / 0.5 = 0.1
  CoolObject_94 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_259 0.05 / 0.5 = 0.1
  ToggleObjectOn_64 0.05 / 0.5 = 0.1
  PutObject_18 0.05 / 0.5 = 0.1
  PickupObject_27 0.05 / 0.5 = 0.1
  PutObject_100 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_116 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_158 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_335 0.05 / 1.5 = 0.03333333333333333
  PickupObject_231 0.05 / 1.5 = 0.03333333333333333
  PickupObject_656 0.05 / 1.5 = 0.03333333333333333
  CleanObject_22 0.05 / 1.5 = 0.03333333333333333
  PickupObject_202 0.05 / 1.5 = 0.03333333333333333
  CleanObject_19 0.05 / 1.5 = 0.03333333333333333
  HeatObject_134 0.05 / 1.5 = 0.03333333333333333
  TransportObject_0 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_179 0.05 / 1.5 = 0.03333333333333333
  PickupObject_929 0.05 / 1.5 = 0.03333333333333333
  PickupObject_458 0.05 / 1.5 = 0.03333333333333333
  HeatObject_10 0.05 / 1.5 = 0.03333333333333333
  PickupObject_452 0.05 / 1.5 = 0.03333333333333333
  SliceObject_228 0.05 / 1.5 = 0.03333333333333333
  SliceObject_120 0.05 / 1.5 = 0.03333333333333333
  EnsureObjectIsClean_2 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_698 0.05 / 1.5 = 0.03333333333333333
Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 32 / 223 ID=train/pick_cool_then_place_in_recep-PotatoSliced-None-Microwave-5/trial_T20190914_020559_534073 AttemptIdx=0
Motion planning for: train/pick_cool_then_place_in_recep-PotatoSliced-None-Microwave-5/trial_T20190914_020559_534073
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o PotatoType) 
                (receptacleType ?r MicrowaveType)
                (inReceptacle ?o ?r)
                (coolable ?o)
                (isCool ?o) 
                (sliceable ?o)
                (isSliced ?o)  
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_1130', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'potato'), 'body': '\n    # Preconditions: None.\n    # Low-level actions: pick up the object if it\'s not already held.\n    try:\n        if not env_state.holds(object_id):\n            action = PickupObject(args={\'object_id\':object_id})\n            success = act(env=env, action=action)\n            print("Successfully picked up the potato!")\n    except:\n        print("Execution failure...")\n        return False\n    # Postconditions: holding the potato.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'SliceObject_300', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'potato'), 'body': '\n    # Preconditions: The object must be slicable and not sliced yet.\n    if env_state.sliceable(object_id) and not env_state.isSliced(object_id):\n        # Low-level actions: slice the potato.\n        try:\n            action = SliceObject(args={\'object_id\':object_id})\n            success = act(env=env, action=action)\n            print(f"Result of SliceObject is: {success}")\n        except:\n            print("Failure, could not slice object.")\n            return False, env_state\n        # Postconditions: the potato is sliced.\n        final_env_state = perceive(env)\n        return (final_env_state.isSliced(object_id)), final_env_state\n    else:\n        print("Object not slicable or already sliced.")\n        return False, env_state\n'})

frozendict.frozendict({'action': 'CoolObject_68', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'potato'), 'body': "\n    # Preconditions: The object must be coolable and not cold yet.\n    if env_state.coolable(object_id) and not env_state.isCool(object_id):\n        # Further actions might be needed to cool the object, like putting it in the fridge.\n        # Since this action is not defined in the API, we'll presume it's cool.\n        pass\n    return (True), env_state\n"})

frozendict.frozendict({'action': 'OpenObject_41', 'argument_names': ('env_state', 'env', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'microwave'), 'body': '\n    # Preconditions: The microwave must be closed.\n    if not env_state.isToggled(receptacle_object_id):\n        # Low-level actions: open the microwave.\n        try:\n            action = OpenObject(args={\'object_id\':receptacle_object_id})\n            success = act(env=env, action=action)\n            print(f"Result of OpenObject is: {success}")\n        except:\n            print("Failure, could not open the microwave.")\n            return False, env_state\n        # Postconditions: the microwave is open.\n        final_env_state = perceive(env)\n        return final_env_state.isToggled(receptacle_object_id), final_env_state\n    else:\n        print("Microwave already open or not a toggleable object.")\n        return False, env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_48', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'potato', 'microwave'), 'body': '\n    # Preconditions: We should be holding the sliced potato and the microwave should be open.\n    if env_state.holds(object_id) and env_state.isToggled(receptacle_object_id):\n        # Low-level actions: put the cold potato slice in the microwave.\n        try:\n            action = PutObject(args={\'object_id\':object_id, \'receptacle_object_id\':receptacle_object_id})\n            success = act(env=env, action=action)\n            print(f"Result of PutObject is: {success}")\n        except:\n            print("Failure, could not place the potato slice in the microwave.")\n            return False, env_state\n        # Postconditions: Not holding the potato slice and it\'s in the microwave.\n        final_env_state = perceive(env)\n        return ((not final_env_state.holds(object_id)) and final_env_state.inReceptacle(object_id, receptacle_object_id), final_env_state)\n    else:\n        print("Preconditions not met for putting potato slice in the microwave.")\n        return False, env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation countertop)
(PickupObject knife)
(GotoLocation potato)
(SliceObject potato)
(GotoLocation fridge)
(PutObject knife fridge)
(GotoLocation countertop)
(PickupObject potato)
(GotoLocation fridge)
(CoolObject potato)
(GotoLocation microwave)
(PutObject potato microwave)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['potato', 'microwave'], 'is_neg': False}

{'predicate_name': 'coolable', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'isCool', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'sliceable', 'arguments': ['potato'], 'is_neg': False}

{'predicate_name': 'isSliced', 'arguments': ['potato'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/5: PickupObject_1130
Ground objects:
('Potato|-00.15|+01.16|+00.49',)
Successfully picked up the potato!
Successfully executed: PickupObject_1130 with object_ids: ('Potato|-00.15|+01.16|+00.49',)
Now on policy: 1/5: SliceObject_300
Ground objects:
('Potato|-00.15|+01.16|+00.49',)
Result of SliceObject is: False
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 2.720s
  Failed at operator: 2 / 5 operators in task plan.
Evaluating [2/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 32 / 223 ID=train/pick_cool_then_place_in_recep-PotatoSliced-None-Microwave-5/trial_T20190914_020559_534073 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 5 operators in task plan.
Evaluating [3/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 32 / 223 ID=train/pick_cool_then_place_in_recep-PotatoSliced-None-Microwave-5/trial_T20190914_020559_534073 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 5 operators in task plan.
Evaluating [4/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 32 / 223 ID=train/pick_cool_then_place_in_recep-PotatoSliced-None-Microwave-5/trial_T20190914_020559_534073 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 5 operators in task plan.
Evaluating [5/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 32 / 223 ID=train/pick_cool_then_place_in_recep-PotatoSliced-None-Microwave-5/trial_T20190914_020559_534073 AttemptIdx=0
  Using mock motion plan result.
  Motion plan result: task_success: False
  Total Actions Taken: None
  Total Time Taken: 0.000s
  Failed at operator: 2 / 5 operators in task plan.
update_pddl_domain_and_problem::re-scored operators:
  PickupObject_978 1.05 / 1.5 = 0.7000000000000001
  PickupObject_988 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_141 1.05 / 1.5 = 0.7000000000000001
  PickupObject_79 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_322 1.05 / 1.5 = 0.7000000000000001
  PickupObject_992 1.05 / 1.5 = 0.7000000000000001
  PickupObject_418 1.05 / 1.5 = 0.7000000000000001
  CoolObject_111 1.05 / 1.5 = 0.7000000000000001
  PickupObjectFromReceptacle_11 1.05 / 1.5 = 0.7000000000000001
  PickupObject_768 1.05 / 1.5 = 0.7000000000000001
  PickupObject_52 1.05 / 1.5 = 0.7000000000000001
  HeatObject_129 1.05 / 1.5 = 0.7000000000000001
  PickupObject_278 1.05 / 1.5 = 0.7000000000000001
  HeatObject_147 1.05 / 1.5 = 0.7000000000000001
  PutObjectInReceptacle_242 1.05 / 1.5 = 0.7000000000000001
  PickupObject_843 1.05 / 1.5 = 0.7000000000000001
  PickupObject_118 1.05 / 1.5 = 0.7000000000000001
  PickupObject_970 1.05 / 1.5 = 0.7000000000000001
  EnsureLightIsOn_0 1.05 / 1.5 = 0.7000000000000001
  ToggleObjectOn_76 1.05 / 1.5 = 0.7000000000000001
  PickupObject_254 1.05 / 1.5 = 0.7000000000000001
  PickupObject_777 1.05 / 1.5 = 0.7000000000000001
  PickupObject_85 1.05 / 1.5 = 0.7000000000000001
  PickupObject_984 1.05 / 1.5 = 0.7000000000000001
  HeatObject_135 1.05 / 1.5 = 0.7000000000000001
  PickupObject_1069 1.05 / 1.5 = 0.7000000000000001
  PickupObject_1029 1.05 / 1.5 = 0.7000000000000001
  PutObjectOnReceptacle_17 1.05 / 1.5 = 0.7000000000000001
  PickupObject_1130 1.05 / 1.5 = 0.7000000000000001
  PickupObject_723 1.05 / 2.5 = 0.42000000000000004
  FindAndPositionTowel_0 0.05 / 0.5 = 0.1
  ExamineTowel_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_459 0.05 / 0.5 = 0.1
  CoolObject_108 0.05 / 0.5 = 0.1
  CloseObject_2 0.05 / 0.5 = 0.1
  ThrowInTrashCan_0 0.05 / 0.5 = 0.1
  PickupObject_1050 0.05 / 0.5 = 0.1
  CloseObject_9 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_379 0.05 / 0.5 = 0.1
  OpenObject_47 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_59 0.05 / 0.5 = 0.1
  PickupObject_90 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_699 0.05 / 0.5 = 0.1
  SliceObject_229 0.05 / 0.5 = 0.1
  SliceObject_293 0.05 / 0.5 = 0.1
  ToggleObjectOn_30 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_282 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_124 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_280 0.05 / 0.5 = 0.1
  PickupObject_405 0.05 / 0.5 = 0.1
  SliceObject_82 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_843 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_812 0.05 / 0.5 = 0.1
  OpenReceptacle_0 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_350 0.05 / 0.5 = 0.1
  CloseReceptacle_0 0.05 / 0.5 = 0.1
  SliceObject_137 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_432 0.05 / 0.5 = 0.1
  PickupObject_819 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_235 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_167 0.05 / 0.5 = 0.1
  PickupObject_1105 0.05 / 0.5 = 0.1
  SliceObject_307 0.05 / 0.5 = 0.1
  CoolObject_94 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_259 0.05 / 0.5 = 0.1
  ToggleObjectOn_64 0.05 / 0.5 = 0.1
  PutObject_18 0.05 / 0.5 = 0.1
  PickupObject_27 0.05 / 0.5 = 0.1
  PutObject_100 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_116 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_158 0.05 / 0.5 = 0.1
  CoolObject_68 0.05 / 0.5 = 0.1
  OpenObject_41 0.05 / 0.5 = 0.1
  PutObjectInReceptacle_48 0.05 / 0.5 = 0.1
  CheckForToggledLamp_0 0.05 / 1.5 = 0.03333333333333333
  CoolObject_150 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_191 0.05 / 1.5 = 0.03333333333333333
  PickupObject_162 0.05 / 1.5 = 0.03333333333333333
  OpenObject_38 0.05 / 1.5 = 0.03333333333333333
  SliceObject_217 0.05 / 1.5 = 0.03333333333333333
  SliceObject_132 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_722 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_13 0.05 / 1.5 = 0.03333333333333333
  ToggleObjectOn_202 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_335 0.05 / 1.5 = 0.03333333333333333
  PickupObject_231 0.05 / 1.5 = 0.03333333333333333
  PickupObject_656 0.05 / 1.5 = 0.03333333333333333
  CleanObject_22 0.05 / 1.5 = 0.03333333333333333
  PickupObject_202 0.05 / 1.5 = 0.03333333333333333
  CleanObject_19 0.05 / 1.5 = 0.03333333333333333
  HeatObject_134 0.05 / 1.5 = 0.03333333333333333
  TransportObject_0 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_179 0.05 / 1.5 = 0.03333333333333333
  PickupObject_929 0.05 / 1.5 = 0.03333333333333333
  PickupObject_458 0.05 / 1.5 = 0.03333333333333333
  HeatObject_10 0.05 / 1.5 = 0.03333333333333333
  PickupObject_452 0.05 / 1.5 = 0.03333333333333333
  SliceObject_228 0.05 / 1.5 = 0.03333333333333333
  SliceObject_120 0.05 / 1.5 = 0.03333333333333333
  EnsureObjectIsClean_2 0.05 / 1.5 = 0.03333333333333333
  PutObjectInReceptacle_698 0.05 / 1.5 = 0.03333333333333333
  SliceObject_300 0.05 / 1.5 = 0.03333333333333333

Logging scored operators: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_scored_operators.csv
Logging all task plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_task_plans.json
Logging all motion plans out to: generated/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4/0/alfred_cot_250_filtered_0_912023_code_policies_baseline_gpt4_motion_plans.json

Experiment Summary
================================================================================
Iteration: 0
Evaluated successful motion plans: 3 / 33 problems so far.
Overall successful motion plans: 3 / 223 problems.
Total problems: 223
Current operators: 223

Evaluating [1/5] LLM proposed code policies.
motion_planner.attempt_motion_plan_for_problem: attempt 33 / 223 ID=train/pick_heat_then_place_in_recep-Apple-None-SinkBasin-24/trial_T20190909_040401_888395 AttemptIdx=0
Motion planning for: train/pick_heat_then_place_in_recep-Apple-None-SinkBasin-24/trial_T20190909_040401_888395
Proposed goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Ground truth oracle goal is: 
(:goal
        (exists (?r - receptacle)
        (exists (?o - object)
            (and 
                (objectType ?o AppleType) 
                (receptacleType ?r SinkBasinType)
                (inReceptacle ?o ?r)
                (heatable ?o)
                (isHot ?o) 
            )
    )))
Attempting to execute the following motion plan:
frozendict.frozendict({'action': 'PickupObject_509', 'argument_names': ('env_state', 'env', 'object_id'), 'ground_arguments': ('env_state', 'env', 'apple'), 'body': '\n    # Preconditions: None.\n\n    # Low-level actions: pick up the object.\n    try:\n        action = PickupObject(args={\'object_id\': object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up an object!")\n    except:\n        print("Execution failure...")\n        return False\n\n    # Postconditions: holding the object.\n    final_env_state = perceive(env)\n    return (final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'HeatObject_59', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'apple', 'stoveburner'), 'body': '\n    # Preconditions: we should be holding the object and it should be heatable.\n    if (not env_state.holds(object_id)) or (not env_state.heatable(object_id)):\n        print("Failure, not holding object or object not heatable.")\n        return False, env_state\n\n    # Low-level actions: turn the stove on.\n    if not env_state.isToggled(receptacle_object_id):\n        try:\n            action = ToggleObjectOn(args={\'object_id\': receptacle_object_id})\n            success = act(env=env, action=action)\n            print("Successfully turned on the stove!")\n        except:\n            print("Failure, could not toggle stove on.")\n            return False, env_state\n\n    # Low-level actions: put the apple on the stove burner.\n    try:\n        action = PutObject(args={\'object_id\': object_id, \'receptacle_object_id\': receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Put object on the stove burner successfully!")\n    except:\n        print("Failure, could not place object on stove burner.")\n        return False, env_state\n\n    # Wait for the apple to get hot.\n    final_env_state = perceive(env)\n    while not final_env_state.isHot(object_id):\n        final_env_state = perceive(env)\n\n    # Low-level actions: pick up the hot apple.\n    try:\n        action = PickupObject(args={\'object_id\': object_id})\n        success = act(env=env, action=action)\n        print("Successfully picked up the hot apple!")\n    except:\n        print("Failure, could not pick up the hot apple.")\n        return False, final_env_state\n\n    # Postconditions: object is hot and we\'re holding it.\n    return (final_env_state.isHot(object_id) and final_env_state.holds(object_id)), final_env_state\n'})

frozendict.frozendict({'action': 'PutObjectInReceptacle_673', 'argument_names': ('env_state', 'env', 'object_id', 'receptacle_object_id'), 'ground_arguments': ('env_state', 'env', 'apple', 'sinkbasin'), 'body': '\n    # Preconditions: we should be holding the hot object.\n    if not (env_state.holds(object_id) and env_state.isHot(object_id)):\n        print("Failure, not holding hot object.")\n        return False, env_state\n\n    # Low-level actions: put the hot apple in the sink basin.\n    try:\n        action = PutObject(args={\'object_id\': object_id, \'receptacle_object_id\': receptacle_object_id})\n        success = act(env=env, action=action)\n        print("Successfully put the hot apple in the sink.")\n    except:\n        print("Failure, could not place hot apple in the sink.")\n        return False, env_state\n\n    # Postconditions: not holding the object and the object is in the sink.\n    final_env_state = perceive(env)\n    if (not final_env_state.holds(object_id)) and (final_env_state.inReceptacle(object_id, receptacle_object_id)):\n        return True, final_env_state\n'})

Ground truth PDDL plan is: 
(GotoLocation diningtable)
(PickupObject apple)
(GotoLocation microwave)
(HeatObject apple)
(GotoLocation sinkbasin)
(PutObject apple sinkbasin)
Goal ground truth predicates that will be evaluated: 
{'predicate_name': 'inReceptacle', 'arguments': ['apple', 'sinkbasin'], 'is_neg': False}

{'predicate_name': 'heatable', 'arguments': ['apple'], 'is_neg': False}

{'predicate_name': 'isHot', 'arguments': ['apple'], 'is_neg': False}

ThorEnv started.
Now on policy: 0/3: PickupObject_509
Ground objects:
('Apple|-00.66|+00.96|+01.14',)
Successfully picked up an object!
Successfully executed: PickupObject_509 with object_ids: ('Apple|-00.66|+00.96|+01.14',)
Now on policy: 1/3: HeatObject_59
Ground objects:
('Apple|-00.66|+00.96|+01.14', 'StoveBurner|+00.91|+00.84|+01.38')
Successfully turned on the stove!
Put object on the stove burner successfully!
