{"ToggleObject_0": "(:action ToggleObject_0\n        :parameters (?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(toggleable ?o)\n\t\t(not (holdsAny ?a))\n\t\t)\n        :effect (and \n\t\t(toggleable ?o)\n\t\t(not (isToggled ?o))\n\t\t(holds ?a ?o)\n\t\t)\n)", "ToggleObject_1": "(:action ToggleObject_1\n        :parameters (?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(toggleable ?o)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(not (isToggled ?o))\n\t\t(isOn ?o)\n\t\t)\n)", "ToggleObject_2": "(:action ToggleObject_2\n        :parameters (?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(toggleable ?o)\n\t\t(isOn ?o)\n\t\t)\n        :effect (and \n\t\t(not (isOn ?o))\n\t\t(isToggled ?o)\n\t\t)\n)", "ToggleObject_3": "(:action ToggleObject_3\n        :parameters (?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(toggleable ?o)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isToggled ?o)\n\t\t)\n)", "ToggleObject_4": "(:action ToggleObject_4\n        :parameters (?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(toggleable ?o)\n\t\t(holds ?a ?o)\n\t\t(isToggled ?o)\n\t\t)\n        :effect (and \n\t\t(not (isToggled ?o))\n\t\t)\n)", "SliceObject_0": "(:action SliceObject_0\n        :parameters (?o - object ?l - location ?a - agent ?t - object)\n\n        :precondition (and \n\t\t(objectAtLocation ?o ?l)\n\t\t(holds ?a ?t)\n\t\t(sliceable ?o)\n\t\t(not (isSliced ?o))\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)", "SliceObject_1": "(:action SliceObject_1\n        :parameters (?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(objectAtLocation ?o ?l)\n\t\t(sliceable ?o)\n\t\t(holds ?a ?o)\n\t\t(not (isSliced ?o))\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)", "SliceObject_2": "(:action SliceObject_2\n        :parameters (?t - object ?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(objectType ?t KnifeType)\n\t\t(atLocation ?a ?l)\n\t\t(holds ?a ?t)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)", "SliceObject_3": "(:action SliceObject_3\n        :parameters (?o - object ?st - otype ?a - agent ?l - location)\n\n        :precondition (and \n\t\t(objectType ?o ?st)\n\t\t(atLocation ?a ?l)\n\t\t(holds ?a ?o)\n\t\t(sliceable ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)", "SliceObject_4": "(:action SliceObject_4\n        :parameters (?o - object ?a - agent ?l - location)\n\n        :precondition (and \n\t\t(sliceable ?o)\n\t\t(atLocation ?a ?l)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)", "CoolObject_0": "(:action CoolObject_0\n        :parameters (?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(objectAtLocation ?o ?l)\n\t\t(heatable ?o)\n\t\t(not (isCool ?o))\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)", "CoolObject_1": "(:action CoolObject_1\n        :parameters (?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(objectAtLocation ?o ?l)\n\t\t(heatable ?o)\n\t\t(not (isCool ?o))\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)", "CoolObject_2": "(:action CoolObject_2\n        :parameters (?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(objectAtLocation ?o ?l)\n\t\t(heatable ?o)\n\t\t(not (isCool ?o))\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)", "CoolObject_3": "(:action CoolObject_3\n        :parameters (?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(heatable ?o)\n\t\t(isHot ?o)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)", "CoolObject_4": "(:action CoolObject_4\n        :parameters (?a - agent ?l - location ?o - object ?ot - otype)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(objectAtLocation ?o ?l)\n\t\t(objectType ?o ?ot)\n\t\t(heatable ?o)\n\t\t(not (isCool ?o))\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)", "HeatObject_0": "(:action HeatObject_0\n        :parameters (?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(heatable ?o)\n\t\t(holds ?a ?o)\n\t\t(not (isHot ?o))\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t)\n)", "HeatObject_1": "(:action HeatObject_1\n        :parameters (?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(not (isHot ?o))\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t)\n)", "HeatObject_2": "(:action HeatObject_2\n        :parameters (?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(not (isHot ?o))\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (coolable ?o))\n\t\t)\n)", "HeatObject_3": "(:action HeatObject_3\n        :parameters (?r - receptacle ?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(receptacleType ?r MicrowaveType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(heatable ?o)\n\t\t(inReceptacle ?o ?r)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t)\n)", "HeatObject_4": "(:action HeatObject_4\n        :parameters (?o - object ?a - agent ?l - location ?r - receptacle)\n\n        :precondition (and \n\t\t(heatable ?o)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(inReceptacle ?o ?r)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t)\n)", "CutObject_2": "(:action CutObject_2\n        :parameters (?a - agent ?l - location ?o - object ?t - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(objectAtLocation ?o ?l)\n\t\t(objectType ?o TomatoType)\n\t\t(objectType ?t KnifeType)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t(not (holds ?a ?o))\n\t\t(holds ?a ?t)\n\t\t)\n)", "CutObject_3": "(:action CutObject_3\n        :parameters (?a - agent ?l - location ?o - object ?t - otype)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(objectAtLocation ?o ?l)\n\t\t(objectType ?o ?t)\n\t\t(sliceable ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)", "CookObject_3": "(:action CookObject_3\n        :parameters (?r - object ?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(receptacleType ?r StoveBurnerType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(heatable ?o)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isHot ?r)\n\t\t)\n)", "CookObject_4": "(:action CookObject_4\n        :parameters (?r - receptacle ?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(receptacleType ?r StoveBurnerType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(not (isHot ?o))\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t)\n)", "TurnOnObject_0": "(:action TurnOnObject_0\n        :parameters (?o - object ?a - agent ?l - location)\n\n        :precondition (and \n\t\t(toggleable ?o)\n\t\t(atLocation ?a ?l)\n\t\t(objectAtLocation ?o ?l)\n\t\t(not (isOn ?o))\n\t\t)\n        :effect (and \n\t\t(isOn ?o)\n\t\t)\n)", "TurnOnObject_1": "(:action TurnOnObject_1\n        :parameters (?o - object ?a - agent ?l - location)\n\n        :precondition (and \n\t\t(toggleable ?o)\n\t\t(atLocation ?a ?l)\n\t\t(objectAtLocation ?o ?l)\n\t\t(not (isOn ?o))\n\t\t(not (isToggled ?o))\n\t\t)\n        :effect (and \n\t\t(isOn ?o)\n\t\t(isToggled ?o)\n\t\t)\n)", "TurnOnObject_2": "(:action TurnOnObject_2\n        :parameters (?o - object ?a - agent ?l - location)\n\n        :precondition (and \n\t\t(toggleable ?o)\n\t\t(atLocation ?a ?l)\n\t\t(objectAtLocation ?o ?l)\n\t\t(not (isOn ?o))\n\t\t)\n        :effect (and \n\t\t(isOn ?o)\n\t\t)\n)", "TurnOnObject_3": "(:action TurnOnObject_3\n        :parameters (?o - object ?a - agent ?l - location)\n\n        :precondition (and \n\t\t(toggleable ?o)\n\t\t(atLocation ?a ?l)\n\t\t(objectAtLocation ?o ?l)\n\t\t(not (isOn ?o))\n\t\t)\n        :effect (and \n\t\t(isOn ?o)\n\t\t(isToggled ?o)\n\t\t)\n)", "TurnOnObject_4": "(:action TurnOnObject_4\n        :parameters (?o - object ?a - agent ?l - location)\n\n        :precondition (and \n\t\t(toggleable ?o)\n\t\t(atLocation ?a ?l)\n\t\t(objectAtLocation ?o ?l)\n\t\t(not (isOn ?o))\n\t\t)\n        :effect (and \n\t\t(isOn ?o)\n\t\t(isToggled ?o)\n\t\t)\n)", "GoToLocation_0": "(:action GoToLocation_0\n        :parameters (?a - agent ?lStart - location ?o - object ?lEnd - location)\n\n        :precondition (and \n\t\t(atLocation ?a ?lStart)\n\t\t(objectAtLocation ?o ?lEnd)\n\t\t)\n        :effect (and \n\t\t(atLocation ?a ?lEnd)\n\t\t(not (atLocation ?a ?lStart))\n\t\t)\n)", "GoToLocation_1": "(:action GoToLocation_1\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n\n        :precondition (and \n\t\t(atLocation ?a ?lStart)\n\t\t)\n        :effect (and \n\t\t(atLocation ?a ?lEnd)\n\t\t(not (atLocation ?a ?lStart))\n\t\t)\n)", "GoToLocation_2": "(:action GoToLocation_2\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n\n        :precondition (and \n\t\t(atLocation ?a ?lStart)\n\t\t)\n        :effect (and \n\t\t(atLocation ?a ?lEnd)\n\t\t(not (atLocation ?a ?lStart))\n\t\t)\n)", "GoToLocation_3": "(:action GoToLocation_3\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n\n        :precondition (and \n\t\t(atLocation ?a ?lStart)\n\t\t)\n        :effect (and \n\t\t(atLocation ?a ?lEnd)\n\t\t(not (atLocation ?a ?lStart))\n\t\t)\n)", "GoToLocation_4": "(:action GoToLocation_4\n        :parameters (?a - agent ?l - location)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t)\n        :effect (and \n\t\t(atLocation ?a ?l)\n\t\t)\n)", "WashObject_0": "(:action WashObject_0\n        :parameters (?r - receptacle ?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(receptacleType ?r SinkBasinType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(objectAtLocation ?o ?l)\n\t\t(not (isClean ?o))\n\t\t)\n        :effect (and \n\t\t(isClean ?o)\n\t\t)\n)", "WashObject_1": "(:action WashObject_1\n        :parameters (?r - receptacle ?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(receptacleType ?r SinkBasinType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(objectAtLocation ?o ?l)\n\t\t(not (isClean ?o))\n\t\t)\n        :effect (and \n\t\t(isClean ?o)\n\t\t)\n)", "WashObject_2": "(:action WashObject_2\n        :parameters (?r - receptacle ?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(receptacleType ?r SinkBasinType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(objectAtLocation ?o ?l)\n\t\t)\n        :effect (and \n\t\t(isClean ?o)\n\t\t)\n)", "WashObject_4": "(:action WashObject_4\n        :parameters (?r - receptacle ?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(receptacleType ?r SinkBasinType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t(cleanable ?o)\n\t\t)\n        :effect (and \n\t\t(isClean ?o)\n\t\t)\n)"}